[
  {
    "title": "Activator Rail",
    "url": "https://minecraft.fandom.com/wiki/Activator_Rail",
    "content": "This article is about the activator rail.\n\nFor other types of rails, see Rail (disambiguation).\n\nActivator Rail Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No An activator rail is a type of powerable rail that can eject players and mobs from regular minecarts, lock and unlock hopper minecarts and ignite TNT minecarts.\n\nAn activator rail can be broken by hand or using any tool, dropping itself as an item, but a pickaxe is fastest.\n\nTo break an activator rail, mine it: \u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAn activator rail also drops as an item when the block beneath it is removed or a piston moves it into a space with no floor below it.\n\nAn activator rail can be used as a rail and as a redstone component.\n\nTo place an activator rail, use an activator rail item while pointing at a surface facing the space the activator rail should occupy.\n\nAn activator rail can be placed on: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, upside-down slab, or upside-down stairs.\n\nthe top of any transparent block (glass, etc.) An activator rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the activator rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach an activator rail to the side of the fence causes the activator rail to be attached to the top of the ground next to the fence instead.\n\nWhen placed, an activator rail configures itself to line up with any adjacent rails (including detector rails, powered rails, and other activator rails), as well as adjacent rails one block up.\n\nThe behaviors in Java and Bedrock editions diverge in the following ways.\n\nIn Java Edition: If there are two adjacent rails on non-opposite sides, or three or more adjacent rails, or no adjacent rails at all, an activator rail aligns itself in the direction the player is facing.\n\nIf an existing activator rail is connected to only one other rail or none at all, and a new rail is placed perpendicular to the activator rail, then the activator rail aligns itself in the east-west direction (if it isn't already facing that way).\n\nIf a rail it would align with is one block up, an activator rail slants upward toward it (with multiple options to slant upward to, an activator rail \"prefers\" west or south).\n\nOther configurations can be created by placing and removing various rails.\n\n[needs in-game testing ] In Bedrock Edition: [needs in-game testing ] If there are two adjacent rails on non-opposite sides, or three or more adjacent rails, an activator rail aligns itself in the east-west direction.\n\nIf there are no adjacent rails, an activator rail aligns itself in the north-south direction (but if a rail is later placed to the east or west, the activator rail re-orients itself in the east-west direction even if it is already connected to another rail to the north or south).\n\nIf a rail it would align with is one block up, an activator rail slants upward toward it (with multiple options to slant upward to, an activator rail \"prefers\", in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nIt cannot be placed suspended in midair, even with commands.\n\n[1] Main article: Rail Activator rails (and other rails) can be used as \"roads\" for minecarts.\n\nA minecart that enters an activator rail's space from either end of the activator rail continues to move, losing only a little velocity (which can then be increased again with powered rails).\n\nA minecart that enters an activator rail's space from the side turns east or south (depending on the activator rail's orientation), or in the downward direction for a slanted activator rail.\n\nSee also: Redstone circuit Activator rails can be used to affect minecarts that travel over them.\n\nActivation An activator rail is a redstone mechanism and can be activated by: an adjacent active power component (for example, a redstone torch, a block of redstone, a daylight sensor, etc.) an adjacent powered block (strongly-powered or weakly-powered) a powered redstone comparator or redstone repeater facing the activator rail powered redstone dust configured to point at the activator rail, or configured as a plus sign. An activator rail is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nAn activated activator rail also activates any adjacent activator rails it is connected to, up to eight away from the original activation source.\n\nThus a single activation source can activate up to 17 rails (one original in the middle and eight on either side).\n\nAn activated activator rail does not activate adjacent rails not connected to it.\n\nBehavior An activator rail affects minecarts above it with varying effects that occur as soon as any part of the minecart is on the activator rail.\n\nAn active activator rail: starts shaking, and ejects mobs (including players) from minecarts \u2014 the destination location is picked the same way as when dismounting a minecart repeatedly activates command block minecarts \u2014 a command block minecart executes its command every four game ticks until the command block minecart is no longer on the activator rail disables hopper minecarts \u2014 a disabled hopper minecart cannot pick up items it travels through until it is enabled by an inactive activator rail (or until it is broken and re-placed) primes TNT minecarts \u2014 primed TNT minecarts explode after four seconds with an explosive power proportional to their speed over the activator rail.\n\nAn inactive activator rail enables hopper minecarts \u2014 an enabled hopper minecart picks up items it travels through until it is disabled by an active activator rail.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Activator Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nA minecart is shaking on an active activator rail Rail Powered Rail Detector Rail \u2191 MC-182709 \u2014 resolved as \"Invalid\".\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Anvil mechanics",
    "url": "https://minecraft.fandom.com/wiki/Anvil_mechanics",
    "content": "This article is about the current mechanics.\n\nFor anvil mechanics prior to 1.8, see Anvil mechanics/Before 1.8.\n\nExample showing a repair of two diamond pickaxes.\n\nThis page explains the mechanics of the anvil.\n\nThe anvil is primarily used to repair tools, armor, and weapons, which it can do without stripping their enchantments, unlike the grindstone and crafting table.\n\nIt can also be used to combine the enchantments of two items, to give an item a custom name, or to crush enemies, mobs or other players that walk beneath it while it is falling, with more damage inflicted upon the target from each block fallen.\n\nAll its functions, except for damaging mobs and players, cost experience levels, and some have material costs.\n\nThe anvil has five basic functions: Renaming any item, including normal blocks.\n\nAny changed name appears as italic and is not colored by rarity.\n\nMost blocks lose the rename when placed, except some containers, which shows the name if opened (naming a chest \"My Custom Named Chest\" causes the chest name to turn into \"My Custom Named Chest\" if placed and opened).\n\nRepairing any gear with units of its material.\n\nFor example, iron ingots can be used to repair iron tools and armor.\n\nAcceptable items for repair have the material to use in their default name, except for chainmail (repaired with iron ingots), turtle shells (repaired with scutes), and elytra (repaired with phantom membranes).\n\nGolden, wooden, diamond, netherite, leather and iron tools/weapons/armor can be repaired using an anvil, but fishing rods, bows, and crossbows cannot be repaired using sticks, despite being made from sticks.\n\nCombining two items of the same kind and material that have durability, e.g.\n\niron pickaxes, bows, shears, etc.\n\nThe durabilities combine similar to using a crafting table, and the enchantments are combined following rules detailed below.\n\nCombining a tool with an enchanted book to add the book's enchantment to the tool.\n\nThis costs much less than combining enchantments from two similar items, and can give enchantments to items that they could not get at an enchanting table.\n\nDamaging any players or mobs who happen to walk under or be under the anvil while it is falling.\n\nThis causes the anvil to degrade one level and deal 2 HP damage for each block fallen after the first block to the mob/player who were crushed.\n\nA maximum of 40 HP damage can be dealt by a falling anvil, no matter how high the anvil falls.\n\nOther than crushing mobs/players, falling anvils can also crush any dropped items and destroy them.\n\nRenaming items can be done in the same work step as repairing or combining, provided the experience cost is not too high.\n\nIn survival mode and adventure mode, the anvil can apply only 39 levels worth of work in a single operation.\n\nIf the job would cost 40 or more levels, it is rejected as \"Too Expensive!\" This does not apply in creative mode.\n\nEach time something is repaired, enchanted, or renamed using an anvil, the anvil has a 12% chance to degrade.\n\nThere are three degradation levels: Anvil, Chipped Anvil, and Damaged Anvil in ' Java Edition ', and Anvil, Slightly Damaged Anvil, and Very Damaged Anvil in Bedrock Edition.\n\nAnvil uses are the number of times an item has been used in an anvil.\n\nEvery time an item is used in an anvil, except for being renamed, it gets one anvil use.\n\nIf the player adds an enchanted book that has never been used in an anvil with a sword that has never been used in an anvil, then the sword gains 1 anvil use.\n\nAs an item gets more anvil uses, the experience required to use the item in the anvil increases to the point where it says \"Too expensive!\" From there the player must use creative mode to repair/enchant/rename items using an anvil.\n\nCombining items of the same or different number of anvil uses takes the greater number and adds 1 for the final product.\n\nFor example, two items with 2 anvil uses are combined into one with 3 anvil uses.\n\nFor another example, an item with 3 anvil uses and an item with 2 anvil uses yields one with 4 anvil uses.\n\nUsing an enchantment table on an item does not affect anvil uses.\n\nThe formula for prior use penalty is: (prior use penalty) = 2^(Anvil use count) - 1 Item repair on a crafting grid removes all prior work penalties, enchantments, and custom names.\n\nIf a grindstone is used, the item instead keeps its custom name while losing all its prior work penalties and enchantments (except for curses), returning some XP from enchantments in the process.\n\nAny item or stack of items can be renamed.\n\nIf only renaming an item or stack of items (instead of enchanting or repairing), renaming costs a single level in addition to any prior work penalty.\n\nThere is no extra cost to renaming a stack of items as opposed to renaming a single item.\n\nThe maximum level cost is 39 levels even if the prior work penalty is higher.\n\nRenaming does not increase the prior work penalty.\n\nHowever, if the penalty reaches or exceeds 2147483647, further renames become impossible.\n\nAn item can be renamed at the same time it is repaired or enchanted.\n\nIn those cases, renaming adds 1 level of cost to the total enchanting or repair cost.\n\nIf the item name field is left blank, or is only whitespace or non-breaking spaces (or a combination of both), the default name for that item is used instead.\n\nAlso, if the item name is unchanged from its current name (which can occur when renaming an item for the first time and using any of the aforementioned blank parameters), a red \"X\" will appear on top of the arrow in the GUI.\n\nRenamed items can stack only with renamed items that share exactly the same name and work penalty.\n\nRenaming an item that doesn't have a work penalty gives it a work penalty of 0, making it stackable only with renamed items, even if it's custom name is reset.\n\nThe custom name of a renamed item can be reset by renaming it to a name that consists of spaces.\n\nHowever, that item's repair cost is not reset.\n\nTherefore, it cannot be stacked with other items of the same type with different repair costs or with items that have never been renamed.\n\nBecause prior work penalty is charged for any rename, it is most economical to rename a weapon either before or while repairing or enchanting it, minimizing the penalty the player must pay for the rename.\n\nRenamed blocks that do not normally store block entity data lose their name and repair cost when placed.\n\nBlocks such as chests and shulker boxes, which do have associated block entity data, retain their custom names (but do not retain their repair cost).\n\nSome items are \" tiered \" and can be repaired using units of its repair material, each unit restores up to 25% total durability of the item (rounded down) and costs 1 level per unit of material used in addition to any applicable prior work penalties.\n\nThe material to use is specific for each item (see the table below).\n\nFor many items, this is determined by its tier or armor material.\n\nDue to the rapid increase in prior work penalty for each repair, it is generally most effective to use an item almost to the breaking point and then repair using four units of raw material at once (or by combining with a newly crafted instance of the item).\n\nIf enchantments are added to raw materials (for example, using commands to give Sharpness to an iron ingot), these enchantments are ignored when doing unit repair.\n\nRepairable items Anything not listed below does not have a unit repair item, and can be repaired only by consuming another instance of itself.\n\nAnvils cannot be repaired by any iron item or block.\n\nThe anvil can be used to combine two items of the same type and material, or an item with an enchanted book.\n\nThis applies only to items with durability: weapons, shields, tools, and armor, as well as enchanted books.\n\nThe first (left) item is the target item, the second (right) item is the sacrifice item.\n\nThe sacrifice item is destroyed upon combination of the two items.\n\nCombining two similar items does either or both of two things; each of which cost levels, though part of the cost is shared if they're both done at once: If the target item is damaged it is repaired, adding the durability of the sacrifice item plus a bonus of 12% of the maximum durability.\n\nThis will only repair up to the item's maximum durability.\n\nThe cost for this repair is 2 levels.\n\nIf the sacrifice item has enchantments, it also tries to combine the sacrifice item's enchantments onto the target item.\n\nRegardless of whether any enchantments on the target item are actually changed, the cost is based on the total enchantments on the target item and the sacrifice item.\n\nFor each enchantment on the sacrifice item: If the target item has the enchantment: and the level of the enchantment on the sacrifice item is greater, the enchantment level on the target item is raised to match it.\n\nand the level of the enchantment on the sacrifice item is equal AND the enchantment is not already at the maximum level, the enchantment on the target item gains one level.\n\nand the level of the enchantment on the sacrifice item is less, the enchantment level on the target item is unaffected.\n\nIf the target does not have the enchantment, it gains all levels of that enchantment, unless it already has an incompatible enchantment (as well as no other compatible ones), resulting in the anvil refusing to combine the items and a red \"X\" displaying on top of the arrow in the anvil GUI.\n\nEnchantments are incompatible if both are in one of the following groups: Sword: Sharpness, Smite, and Bane of Arthropods Tool: Fortune and Silk Touch (as of Java version 1.12.2 you can combine these; the sacrifice item's enchantment is lost) Armor: Protection, Fire Protection, Blast Protection, Projectile Protection Boots: Depth Strider and Frost Walker Bow: Infinity and Mending Crossbow: Multishot and Piercing Trident: Loyalty and Riptide or Channeling and Riptide Books: Silk Touch and Looting or Silk Touch and Luck of the Sea [2] (and all of the above).\n\nThe total cost for combining two similar items is the sum of: Prior Work penalties of both target and sacrifice.\n\nIf renaming, the renaming cost of 1 level.\n\nIf the target item is not at full durability, the repair cost of 2 levels.\n\nIf the sacrifice has enchantments, the enchantment cost.\n\nIf the sacrifice is a book, there is no repair, but the anvil tries to combine the book's enchantments onto the target.\n\nThe item can also be renamed at the same time.\n\nThe enchantment cost is generally less than for combining two similar items.\n\nIf the target item is at full durability and the sacrifice does not have any enchantments, the anvil will also refuse to combine the items, unless if renaming the item to a valid name.\n\n(This is just the enchanting cost.\n\nThe total cost outline is in Combining items.) For each enchantment on the sacrifice: Ignore any enchantment that cannot be applied to the target (e.g.\n\nProtection on a sword).\n\nAdd one level for every incompatible enchantment on the target (In Java Edition).\n\nIf the enchantment is compatible with the existing enchantments on the target: For Java Edition, add the final level of the enchantment on the resulting item multiplied by the multiplier from the table below.\n\nFor Bedrock Edition, add the difference between the final level and the initial level on the target item multiplied by the multiplier from the table below.\n\nExamples Dealing with equal enchantments: In the first slot, the target is a sword with Sharpness III, Knockback II, and Looting III.\n\nIn the second slot, the sacrifice is a sword with Sharpness III and Looting III.\n\nFor the Sharpness III enchantment on the sacrifice: Since the target has an equal level, add one to the target's Sharpness level giving Sharpness IV.\n\nIn Java, Add 4 (multiplier 1 times 4 levels) and in Bedrock, add 1 (multiplier 1 times the increase in levels 1) to the level cost for Sharpness IV.\n\nFor the Looting III enchantment on the sacrifice: Since the maximum level for Looting is III, the target remains at Looting III.\n\nIn Java 12 (multiplier 4 times 3 levels) is still added to the level cost while in Bedrock, 0 is added since the level did not change.\n\nThus, the enchanting cost is 16 in Java and 1 in Bedrock.\n\nThe total cost for the work includes any prior work penalties, repair costs, and rename costs.\n\nIf combined in the other order (the sword having three enchantments as the sacrifice), there would also be a cost of 4 (level 2 times multiplier 2) for the Knockback II enchantment for both Java and Bedrock (since the target has zero levels in Knockback), giving a total enchantment cost of 20 levels in Java and 5 levels in Bedrock.\n\nDealing with unequal enchantments: In the first slot, the target is a sword with Sharpness III, Knockback II, and Looting I.\n\nIn the second slot, the sacrifice is a sword with Sharpness I and Looting III.\n\nFor the Sharpness I enchantment on the sacrifice: Since the target has a higher level, the target keeps Sharpness III.\n\nBut in Java, 3 (multiplier 1 times 3 levels) is still added to the level cost.\n\nIn Bedrock, since the level on the target is unchanged, the cost added is 0.\n\nFor the Looting III enchantment on the sacrifice: Since the target has a lower level, it is upgraded to Looting III.\n\nIn Java, add 12 (multiplier 4 times 3 levels) to the level cost.\n\nIn Bedrock, add 8 (multiplier 4 times the increase in levels 2) Thus, the enchanting cost is 15 in Java and 8 in Bedrock.\n\nThe total cost for the work includes any prior work penalties, repair costs, and rename costs.\n\nIf combined in the other order (the sword having three enchantments as the sacrifice), there would also be a cost of 4 (multiplier 2 times 2 levels) for adding the Knockback II enchantment, giving a total enchantment cost of 19 levels in Java.\n\nIn Bedrock, the looting level would be unchanged, the sharpness cost would be 2 (multiplier 1 times the increase in levels 2) plus the Knockback cost gives a total enchantment cost of 6 levels.\n\nDealing with conflicting enchantments: In the first slot, the target is a sword with Sharpness II and Looting II.\n\nIn the second slot, the sacrifice is a sword with Smite V and Looting II.\n\nFor the Smite V enchantment on the sacrifice: Since Smite is incompatible with Sharpness, add 1 level in Java, nothing for Bedrock.\n\nThe target keeps Sharpness II.\n\nFor the Looting II enchantment on the sacrifice: Since the target has an equal level, add one to the target's Looting level giving Looting III.\n\nIn Java, add 12 (multiplier 4 times 3 levels) to the level cost for Looting III.\n\nIn Bedrock, add 4 (multiplier 4 times the increase in levels 1) to the level cost for Looting.\n\nThus, the enchanting cost is 13 in Java and 4 for Bedrock.\n\nThe total cost for the work includes any prior work penalties, repair costs, and rename costs.\n\nIf combined in the other order (the Sharpness sword as the sacrifice), the cost would again be 13 in Java and 4 in Bedrock with the result having Smite V and Looting III.\n\nUsing books: In the first slot, the target is a sword with Looting II.\n\nIn the second slot, the sacrifice is a book with Protection III, Sharpness I, and Looting II.\n\nFor the Protection III enchantment on the sacrifice: Since Protection is incompatible with swords, ignore it.\n\nFor the Sharpness I enchantment on the sacrifice: Since the target has no Sharpness, it gets Sharpness I.\n\nAdd 1 level (multiplier 1 times 1 level) for Sharpness I.\n\nFor the Looting II enchantment on the sacrifice: Since the target has an equal level, add one to the target's Looting level giving Looting III.\n\nIn Java, add 6 (multiplier 2 times 3 levels) to the level cost for Looting III.\n\nIn Bedrock, add 2 (multiplier 2 times the increase in levels 1) to the level cost for Looting.\n\nThus, the enchanting cost is 7 in Java and 3 in Bedrock.\n\nThe total cost for the work includes any prior work penalties and rename costs.\n\nThere are two important things to notice about the anvil mechanics when planning the order of multiple enchantments to the same item: When combining two items with prior work penalties, while the penalties for both items apply to the cost, only the higher of the penalties of the two items is considered when determining the penalty of the resulting item.\n\nFor example, when combining two items with 2 workings each, the resulting item has only 3 workings with the fourth consumed by the penalty.\n\nThe choice of which item to use as the sacrifice matters.\n\nFor example having a Soul Speed III book in the first slot and a Mending book in the second slot has a cost of 2 levels, but reversing the order of the books results in a cost of 12, even though the resulting book is the same in the two cases.\n\nMinimal prior work penalty enchantment order.\n\nPrior work penalties are minimized by combining two items with equal penalties if possible.\n\nFor example, it is possible to have 7 different enchantments on a single pair of boots.\n\nStarting with an unenchanted pair of boots and the 7 enchantments on individual books, the limit on the cost permitted by the anvil is exceeded if trying to combine the books one at a time with the boots.\n\nHowever, it is possible to avoid this by properly pairing up the items.\n\nFirst combine the boots with one of the books, plus the remaining 6 books in 3 pairs.\n\nThen combine the boots with one of the books and the other two books that have 2 enchantments each.\n\nFinally combine the boots with the book that has 4 enchantments.\n\nThis results in a pair of boots with 3 workings on it, although in practice 7 workings have taken place.\n\nIt is also possible to minimize the cost of combining by carefully pairing up the items for combination.\n\nThe enchantment with the highest cost should be in the sacrifice slot the least amount of times.\n\nFor example.\n\nThe 7 enchantments can be combined using the pairing method in the following order: Soul Speed III (12), Thorns III (12), Feather Falling IV (4), Depth Strider III (6), Protection IV (4), Unbreaking III (3), Mending (2) Combining the items pairwise (with the boots in the first slot) the cost is 12+4+4+2=22.\n\nThe resulting items are: Boots (Soul Speed III), Thorns III+Feather Falling IV (16), Depth Strider III+Protection IV (10), Unbreaking III+Mending (5).\n\nThe cost of the second round of combination is 16+5=21, plus 4 for the penalties, totalling 25.\n\nThe resulting items are: Boots (Soul Speed III+Thorns III+Feather Falling IV), Depth Strider III+Protection IV+Unbreaking III+Mending (15).\n\nThe cost of the last step is 15 plus the two penalties of 3 each, totalling 21.\n\nThe overall cost is 22+25+21=68 levels.\n\nMinimal XP cost enchantment order.\n\nHowever, at times it's better to avoid a pairing so as to avoid paying the enchantment cost multiple times.\n\nFor example, in the above we pay the costs of Protection IV, Feather Falling IV, and Unbreaking III twice, and Mending three times.\n\nIf we combine the items this way instead, we spend an extra 4 levels on prior work penalties but pay for Protection IV only once and Mending only twice, saving 6 levels, for a net savings of 2 levels: Soul Speed III (12), Thorns III (12), Mending (2), Depth Strider III (6), Feather Falling IV (4), Protection IV (4), Unbreaking III (3) Combining the items pairwise (with the boots in the first slot) the cost is 12+2+4+3=21.\n\nThe resulting items are: Boots (Soul Speed III), Thorns III+Mending (14), Depth Strider III+Feather Falling IV (10), Protection IV+Unbreaking III (7).\n\nIf we then combine the remaining books onto the boots in order, we pay For the Thorns III+Mending book: 14, plus 2 for the penalties, totalling 16.\n\nFor the Depth Strider III+Feather Falling IV book: 10, plus 4 for the penalties, totalling 14.\n\nFor the Protection IV+Unbreaking III book: 7, plus 8 for the penalties, totalling 15.\n\nThe overall cost is 21+16+14+15=66 levels.\n\nThe equation to calculate an enchantment is as follows: Experience cost = [Value of sacrificed (right placed) item] + [Work Penalty of target (left placed) item] + [Work Penalty of sacrificed (right placed) item] + [Renaming Cost] + [Refilling Durability] + [Incompatible Enchantments (Java Edition)] The equation to calculate the new value of an item to be enchanted: New value = [Value of target (left placed) item] + [Value of sacrificed (right placed) item].\n\nUsing the 7 enchantment pairing method shown, and looking at just the first enchantment (Diamond Boots + Soul Speed III) as an example: Experience Cost = [Value of Sacrificed item - Soul Speed III (12)] + [Work Penalty of Diamond Boots (0)] + [Work Penalty of Soul Speed III (0)] = 12 Levels.\n\nNew Value of resulting item = [Value of Diamond Boots (0)] + [Value of Soul Speed III (12)] = 12 Value.\n\nGoing to the next level of enchanting with Diamond Boots (Soul Speed III) and Thorns III + Feather Falling IV book: Experience Cost = [Value of Sacrificed item - Thorns III + Feather Falling IV (16)] + [Work Penalty of Diamond Boots (Soul Speed III) (1)] + [Work Penalty of Thorns III + Feather Falling IV book (1)] = 18 Levels.\n\nNew Value of resulting item = [Value of Diamond Boots (Soul Speed III) (12)] + [Value of Thorns III + Feather Falling IV book (16)] = 28 Value.\n\nRemember that the Work Penalty for each item here is a value of 1 because each has been used only once on the anvil previously.\n\n\u2191 Numeral IDs are Bedrock Edition only \u2191 a b c d The different kinds of Protection are not compatible \u2191 a b Depth Strider and Frost Walker are not compatible \u2191 a b c Sharpness, Smite, and Bane of Arthropods are not compatible \u2191 a b Silk Touch and Fortune are not compatible \u2191 a b Infinity and Mending are not compatible \u2191 a b c Riptide is not compatible with Loyalty or Channeling, although Loyalty and Channeling are compatible \u2191 a b Multishot and Piercing are not compatible \u2191 Sweeping Edge has no numeral ID since it is not in Bedrock Edition https://trollyloki.net/anvil_calculator - provides a tool that can be used to determine the cheapest way to combine enchanted items (in Java Edition).\n\nhttps://aviettran.github.io/minecraft-anvil-calc - optimizes combining enchanted items (both editions).\n\nhttps://iamcal.github.io/enchant-order/ - uses a guess-and-check method to find the most optimal solution.\n\n\u2191 MCPE-71859 \u2191 MC-116643",
    "category": "Mechanics"
  },
  {
    "title": "Anvil mechanics/Before 1.8",
    "url": "https://minecraft.fandom.com/wiki/Anvil_mechanics/Before_1.8",
    "content": "This page describes content that exists only in outdated versions of Minecraft.\n\nThis feature used to be in the game, but has ever since been removed.It may or may not return in a future update.\n\nThe anvil before 1.14 This page explains the mechanics of the anvil.\n\nThe anvil is primarily used to repair tools, armor, and weapons, which it can do without stripping their enchantments.\n\nIt can also be used to combine the enchantments of two items, to give an item an individual name, or to crush other players that walk beneath it while it is falling.\n\nAll its functions, except for crushing players, cost experience levels, and some have material costs.\n\nThe anvil has five basic functions: Renaming any item, including normal blocks.\n\nBesides entertainment value, this can save on the costs of repeated repairs.\n\nBlocks lose the rename when placed.\n\nRepairing a \"tiered\" item with units of its material (for example, iron ingots can be used to repair iron tools and armor).\n\nAcceptable items for repair have the material to use in their default name, except for chainmail, which is repaired with iron ingots.\n\nCombining two items of the same kind that have durability (for example, bows, shears, etc).\n\nThe durabilities will combine similar to using a crafting table, and the enchantments are combined following rules detailed below.\n\nCombining a tool with an enchanted book to add the book's enchantment to the tool.\n\nThis costs much less than combining two similar items, and can give enchantments to items that they could not get at an enchanting table.\n\nCrushing any players who happen to walk under or be under the anvil while it is falling.\n\nRenaming items can be done in the same work step as repairing or combining, provided the experience cost is not too high.\n\nIn Survival mode, the anvil can only apply 39 levels worth of work in a single operation.\n\nIf the job would cost 40 or more levels, it will be rejected as \"Too Expensive!\".\n\nThis does not apply when the player is in Creative mode.\n\nSuch jobs can often be done piecewise: rename first, then repair, then combine.\n\nNote that it is possible to produce items so heavily enchanted that they cannot be worked on at all.\n\nThe most important concept for using an anvil is the Base Value of an item, figured in experience levels.\n\nOther than combining with enchanted books, any change made to an item will cost its Base Value plus costs for the change.\n\nAn item's Base Value is the sum of the costs of its enchantments, plus a charge for the number of its enchantments.\n\nNote that the item's material does not affect its base cost, nor does the order of its enchantments.\n\nAn unenchanted or unenchantable item has Base Value of 0.\n\nAs formulas: For each Enchantment, ECost = Cost per level \u00d7 level For the item, BaseValue = ECost1 (+ Ecost2 +...) + NumEnchantCost Finally, an extra value (NumEnchantCost) needs to be added based on how many enchantments the item has, which can be found from the table below.\n\nNotes: Enchantments marked with an asterisk (*) are ones that cannot be produced at level V by an enchanting table, but can be produced by combining two level IV items in an anvil.\n\nEnchantments marked with a dagger (\u2020) are incompatible with each other.\n\nFor example, only one kind of \"Protection\" can be on a piece of armor at a time.\n\nExample: Take a sword with Sharpness 3, Knockback 2, and Looting 2.\n\nReferring to the table we see that the Enchantments will cost 3\u00d71=3, 2\u00d72=4, and 2\u00d74=8 respectively, and another 6 levels for having three of them.\n\n3+4+8+6=21.\n\nIn the anvil for the first time, this sword will cost at least 21 levels to work on, even before considering what to do with it.\n\nRegardless of the work being done, be it rename, repair, or combine, there will be an extra cost, the \"prior work penalty\", to work on an item which has previously been altered in an anvil.\n\nIf the item has been renamed at any point, the penalty is always 2 levels, regardless of further alterations.\n\nFor an un-renamed item, the prior-work penalty is 2 levels for each repair or combination an item has been through, not including this one.\n\nWhen combining two items, you pay both their penalties.\n\nRenaming something with durability costs (Base Value + Prior Work Penalty) + 7 the first time, later renames cost (Base Value + Prior Work Penalty) + 10.\n\nSimultaneously renaming and repairing an object costs both charges, but you only pay for Base Value and the (current) penalty once.\n\nFor example, consider an item with Base Value of 5 never renamed before, with two prior works (penalty of 4).\n\nThen this item is altered a third time, for a repair costing 3 (over Base+Penalty).\n\nRepairing and renaming it simultaneously would cost (5+4)+3+7=19, as opposed to 5+4+3=12 for a repair alone or 5+4+7=16 for a rename alone.\n\nAn item which has been renamed has its prior-work penalty set to 2, remaining so regardless of later work.\n\nRenaming the item back to its default name (e.g.\n\n\"Iron Sword\") does not revert prior-work to full cost.\n\n[note 1] As a consequence of the above, and using the same example, if you then damage that item slightly so that the next (fourth) repair cost would be 3 levels (over BV+Penalty), the renamed item will cost (5+2)+3=10 levels to repair, while if the item was not renamed before it would cost (5+6)+3=14 levels (4 more).\n\nRenaming an item without durability costs 5 the first time, then stays 9 for all later renames.\n\nThis includes the implicit prior-work penalty, and everything without durability except enchanted books has a Base Value of 0.\n\nStackable items can be renamed as a stack; you do pay for each item, but the total cost is capped at 39 levels, for which you can rename a full stack.\n\nNote that renamed items in general will not stack with normal items, and renamed blocks lose their name when placed.\n\nRepairing a \"tiered\" target item using units of its material restores up to 25% total durability per unit and costs the sum of the unit costs of each unit (In addition to the Base Value and Prior Work Penalty).\n\nThe unit cost is normally 1 plus the number of enchantments on the target item.\n\nFor diamond tools, the unit cost is up to 3 plus the number of enchantments on the target item, depending on how much durability the unit is repairing.\n\nAll but the last unit take the full cost for a full repair of 390 durability.\n\nThe last unit costs 1 less for restoring less than 300, and another less for restoring less than 200.\n\nThe material to use is in the original name of the item, except for chainmail, which uses iron ingots.\n\nMaterials include leather, wood planks, cobblestone, iron ingot, gold ingot, and diamond.\n\nCommon tools you cannot repair in this way include bow, flint and steel, shears, fishing rod, and carrot on a stick.\n\nRepairing many units at once incurs one cost of (Base Value + Prior Work Penalty) as well as only adding 2 to the future Prior Work Penalty (provided the item is not renamed).\n\nThe anvil can be used to combine two items of the same type, or an item with an enchanted book.\n\nThis applies only to items with durability: swords, tools, and armor.\n\nThe first/left item is the target item, the second/right item is the sacrifice item, which will be destroyed.\n\nCombining two similar items does either or both of two things.\n\nEach of these costs levels, but if they're both done at once, part of the cost will be shared: The target will be repaired, adding the durability of the sacrifice plus a bonus, up to the item's maximum durability.\n\nIf the target item is undamaged, there will be no charge for repair.\n\nIt also tries to combine the sacrifice's enchantments onto the target.\n\nIf the sacrifice has no enchantments, or only weaker versions of the target's enchantments, then there will be no charge.\n\nOtherwise, you will pay for enchantments added, and for some cases where the transfer fails (see below).\n\nFor each enchantment on the sacrifice: If the target has the enchantment as well...\n\nand the sacrifice level is greater, the target will be raised to the sacrifice's level.\n\nand the sacrifice level is equal, the target gains one level, unless it is already at the maximum level for that enchantment.\n\nand the sacrifice level is less, nothing changes on the target.\n\nIf the target does not have the enchantment, it will gain all levels of that enchantment, unless it already has an incompatible enchantment.\n\nEnchantments are incompatible if both are in one of the following groups: Sword: Sharpness, Smite, and Bane of Arthropods Tool: Fortune and Silk Touch Armor: Protection, Fire Protection, Projectile Protection, and Blast Protection The total cost for combining two similar items is the sum of: Base Value of the target.\n\nPrior Work Penalties of both target and sacrifice.\n\nIf renaming, the extra cost of renaming.\n\nIf the target item is not at full durability, the repair cost depending on the sacrifice.\n\nIf the sacrifice has enchantments, the enchantment cost.\n\nIf the sacrifice is a book, there will be no repair, but the anvil will try to combine the book's enchantment onto the target.\n\nThe item can also be renamed at the same time.\n\nThe cost will be much less than for combining two similar items.\n\nThe target item will end up with the sum of both items durabilities, plus a bonus (12% of the items' maximum durability, rounded down) up to the maximum.\n\nTo make the best use of the bonus, repair when the total item durability of the pair is no more than 88% of the maximum.\n\nFor swords and tools, the 12% bonus is 3 durability for gold, 7 for wood, 15 for stone, 30 for iron, and 187 for diamond.\n\nYou may want to use F3 + H to show the numeric durability of your items (in the inventory tooltips).\n\nThe cost for the repair depends only on the sacrifice's current durability and (slightly) the type of item: S is the sacrifice durability, and MaxD is the maximum durability for it's type.\n\nN is an offset for the item type, equal to 100-floor(0.12*MaxD) (this is negative for diamond tools).\n\nThe cost is 1+floor((S-N)/100) For each item type and sacrifice durability, the repair cost is: Example A maxed out fishing rod (Lure 3, Luck 3, Unbreaking 3) which has been renamed is barely repairable.\n\nIt has base value 36 (12 for luck, 12 for lure, 6 for unbreaking, 6 for three enchantments).\n\nAssuming it's been renamed, repairing it will cost that plus 2 for prior work, and 1 for the repair itself, for a total of exactly 39.\n\nIf it has not been renamed, then its second combination or repair will make it too expensive to repair (it might be rescued from this state by combining it with an incompatible book, which will allow simultaneously renaming it.\n\nSee below for details).\n\n(This is just the enchanting cost.\n\nThe total cost outline is in Combining Items.) For each enchantment on the sacrifice: If the enchantment is incompatible with the target, add 1 per level of enchantment.\n\nIf the enchantment is compatible, for each level the target will gain, add twice the cost-per-level from the Base Value tables.\n\nIf the enchantment is compatible, but both target and sacrifice are at max level, add the cost-per-level once.\n\nIf new enchantments are added, add (number of new enchantments)\u00d7(number of final enchantments - 1) + 1.\n\nExamples: Dealing with equal enchantments: In the first slot, the target is a sword named \"Pointy\" with Sharpness III, Knockback II, and Looting III.\n\nIn the second slot, the sacrifice is a sword with Sharpness III and Looting III from two prior jobs.\n\nThe Base Value of the target is 25.\n\nThe total Prior Work Penalty is 2 + 4 = 6.\n\nThe cost so far is 31.\n\nSharpness III is equal to the target, so the result will have Sharpness IV at a cost of twice 1.\n\nLooting III is equal to the target but maxed out, so the result will have Looting III, with the cost of 4.\n\nThe result costs 31 + 2 + 4 = 37 levels for a sword named \"Pointy\" with Sharpness IV, Knockback II, and Looting III.\n\nThe result's Base Value is 26.\n\nSwapping the target and sacrifice here gives a lower target Base Value but higher enchanting cost.\n\nThe resulting sword would have the same enchantments, but with three prior jobs instead of the name \"Pointy\".\n\nUnfortunately, the enchantment cost goes up to 41 levels, which is above the anvil limit.\n\nDealing with conflicting enchantments: The target is a sword with Sharpness III and Looting II, Base Value 14, two prior jobs.\n\nThe sacrifice is a sword with Smite II and Looting II, Base Value 15, two prior jobs.\n\nThe cost so far is 14 + 4 + 4 = 22 for Base Value of target and total Prior Work Penalty.\n\nSmite II is incompatible with Sharpness III, so the result will not have Smite at all, but there will still be a cost of 2 levels for trying.\n\nLooting II is equal to the target, so the result will have Looting III at a cost of twice 4.\n\nThe result costs 22 + 2 + 8 = 32 levels for a sword with Sharpness III and Looting III, Base Value 18, three prior jobs.\n\nSwapping the target and sacrifice costs 34 levels for a sword with Smite II and Looting III, Base Value 19, three prior jobs.\n\nDealing with new enchantments: The target is a sword with Sharpness IV, BV 5, with one prior job.\n\nThe sacrifice is a sword with Looting II, one prior job.\n\nAdding Looting costs twice 4 per level gained, which totals 16.\n\nAdding an enchantment for a result with two enchantments costs 1\u00d7(2 - 1) + 1 = 2.\n\nThe result costs 9 + 16 + 2 = 27 levels for a sword with Sharpness IV, Looting II, BV 15, two prior jobs.\n\nThe costs for enchanting with books expose more of the internals of the anvil system, but while this makes them more complex, they also include some major discounts compared to item combination.\n\nNaturally, repair costs do not apply.\n\nNormally, enchanted books only have one enchantment, but books with multiple enchantments can be produced by combining two books on an anvil.\n\nSuch books will have their own prior-work penalty.\n\nFirst, the following costs are added together: Start with the target's modified Base Value, where cost-per-level is halved to a minimum of 1 per level.\n\nAdd the prior-work penalty for the target (and possibly the book).\n\nIf the target is gaining any new enchantments, add a cost of (number of new enchantments)\u00d7(final number of enchantments - 1) + 1.\n\nFor each enchantment level the target will gain, add the cost-per-level halved to a minimum of 1 per level (save this number).\n\nFor each enchantment both target and book already have at max level, add the enchantment cost-per-level once.\n\nIf the item was already renamed, and is being renamed again, add 3 (This is half the basic rename cost, rounded down.\n\nIf you are somehow enchanting an item without durability, only pay 2).\n\nThe above sum is then halved and rounded down.\n\nIt can round down to 0.\n\nFor each book enchantment that's incompatible with the target, add 1 per enchantment level.\n\nFor each enchantment level the target will gain, add (again) the cost-per-level halved to a minimum of 1 per level.\n\nIf the target is being renamed, add the basic rename cost, that is 7 for items with durability, 5 for other items.\n\nNotes: An approximation for the cost breakdown without renaming or other complications, is: (BaseValue/4) + (PriorWork/2) + (NewEnchantmentCost/2) + levels gained \u00d7 (cost-per-level \u00d7 3/4).\n\nIf each part in parentheses needs no rounding, then the answer is exact.\n\nWhen the sacrifice is a book, costs are significantly cheaper than sacrificing a matching item with same enchantment.\n\nThis allows enchantment combinations that wouldn't be possible otherwise, but it also makes it easier to produce an item that can't even be repaired.\n\nSometimes it is good to rename an item while combining it with a book with an incompatible (or duplicate, maxed-out) enchantment to lower the cost, especially if you had no use for the book anyway.\n\nExamples: Enchanting a newly crafted Bow with an Infinity I Book: the only cost is 1 * cost-per-level * 3/4 = 8 * 3/4 = 6.\n\nNo rounding was needed in any steps, so that result is exact.\n\nAdding Infinity I to a Bow already enchanted with Power III and Flame I, with Prior Work = 6: Original Base Value is 3*1 + 1*4 + (3*2/2) = 10, and the Modified Base Value is 3*1 + 1*(4/2) + (3*2/2) = 8, 2 enchants, and halved cost-per-level is 1*8/2 = 4.\n\nSo (8+6+2+4)/2 + 4 = 14 levels.\n\nIf Infinity I was obtained from another bow instead of a book it would cost 35 levels, 21 more.\n\nA Sharpness 4 sword (BV 5, MBV also 5) for the target, and a Looting 2 Book for the sacrifice.\n\nLooting costs 4 (per level) \u00d7 2 (levels) / 2 (half cost) = 4\u00d72/2\u21924, and target already has 1 enchantment, so (5+1+4)/2 + 4 = 9 (rather than 23 from item+item sacrifice).\n\nEnchanted books can produce any enchantment available to the enchanting table, and some that the enchanting table can't match: Enchantments can be raised to their maximum power, which can be above the table's range.\n\nShears can receive Silk Touch, allowing them to gather cobwebs.\n\nAxes can receive some of the sword enchantments: Sharpness, Smite, or Bane of Arthropods.\n\nEven before version 1.7.2, a book can be used to apply Unbreaking to almost any item with durability.\n\nAs of version 1.7.2, the enchanting table can apply Unbreaking to more items, but a few of the minor tools still require use of a book.\n\nEnchanted books can also be combined with each other to produce higher-level or multi-enchantment books.\n\n\u2191 Prior to 1.4.4 it was possible to revert the prior-work cost to its full value if the custom name was somehow stripped from the object.",
    "category": "Mechanics"
  },
  {
    "title": "Anvil mechanics/Repairable items",
    "url": "https://minecraft.fandom.com/wiki/Anvil_mechanics/Repairable_items",
    "content": "This list might be incomplete.\n\nIf you find any missing information, feel free to add it here.\n\nAnything not listed below does not have a unit repair item, and can be repaired only by consuming another instance of itself.\n\n\u2191 MCPE-71859",
    "category": "Mechanics"
  },
  {
    "title": "Bell",
    "url": "https://minecraft.fandom.com/wiki/Bell",
    "content": "This article is about the block.\n\nFor the note block instrument, see Note Block \u00a7 Instruments.\n\nBell Bell Ceiling Wall Double Wall Bedrock Edition Renewable Yes Stackable Yes (64) Tool Blast resistance 5 Hardness 5 Luminous No Transparent Yes Flammable No Catches fire from lava No A bell is a transparent, animated block entity that produces a sound when used.\n\nUnlike most utility blocks, bells cannot be crafted.\n\nBells can generate naturally in all village variants, usually near the center of the village in the meeting point.\n\nA bell can be mined by hand or with any tool, but using a pickaxe is fastest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nIn Java Edition, apprentice-level armorer villagers have a 50% chance to sell a bell for 36 emeralds.\n\nApprentice-level toolsmith and weaponsmith villagers always offer to sell a bell for 36 emeralds.\n\nIn Bedrock Edition, apprentice-level armorer villagers have a 1 \u2044 3 chance to sell a bell for 36 emeralds.\n\nApprentice-level toolsmith villagers sell bells for 36 emeralds.\n\nJourneyman-level weaponsmith villagers sell bells for 36 emeralds.\n\nWhen a bell is placed near a claimed bed, the bell is claimed, which is displayed by green particles appearing above the bell.\n\nA claimed bell defines a gathering site of a village.\n\nIf the bell is broken, angry particles will appear above the village leader's head.\n\nWhen the side of a bell is used, it produces a sound as well as a \"swaying\" animation.\n\nA bell can be rung using a redstone signal, by any projectile, by right clicking, or by dropping an item on it.\n\nBells can be anchored to the side of blocks, ceilings, and floors.\n\nAlso, if the player uses the bell while villagers are sleeping, all of the villagers wake up.\n\nBells can be rung only from certain angles; trying from an incorrect angle does not cause the bell to ring.\n\nIf a player rings a bell, the villagers run to their houses even if there is no raid.\n\nSee also: Tutorials/Defeating a village raid When the bell is rung, villagers within a distance of 32 blocks run into their houses immediately.\n\nWhen a raid 's first wave appears, in Java Edition, at least one villager rushes to ring the bell in the center of the village (if they are close enough) to warn the other villagers of an incoming raid before going into their house.\n\nIn Bedrock Edition, bells in the corresponding village ring automatically at the start of a raid, warning villagers to return to their houses.\n\nAdditionally, in Java Edition, if a bell is rung and there is a raid mob within a 32 block spherical range, the Glowing effect is applied to all raid mobs within 48 blocks, and particles appear.\n\nIt produces a resonating sound once this process is complete.\n\nThe raid mobs don't have to be actively participating in a raid to receive the Glowing effect: the effect applies to illagers in woodland mansions, or witches that naturally spawns in the Overworld.\n\nPiglins admire bells as golden items.\n\nHowever, breaking a bell does not aggravate them.\n\n[1] When a bell is rung (either by a player or villager), it produces a Sculk Sensor vibration with a frequency of 11.\n\nWith the use of a Calibrated Sculk Sensor, it is possible to make a device which automatically detects when a raid starts by having a villager ring a bell.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: [sound 1] \u2191 MCPE-140091 \u2014 Bell makes incorrect sounds when placed Java Edition: \u2191 Can be 0.93, 0.95, or 0.97 for each sound \u2191 Can be 0.85, 0.9, or 1.0 for each sound Bedrock Edition: \u2191 Can be 0.93, 0.95, or 0.97 for each sound Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A bell has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nFor a history of changes to textures and models for each block state, see /Asset history Issues relating to \"Bell\" are maintained on the bug tracker.\n\nReport issues there.\n\nIn Bedrock Edition, bells deflect any projectile that does not disappear when hitting a surface (arrows or tridents).\n\nIn Bedrock Edition, when holding down right-click while looking at a bell and holding an item with a right-click action, the bell rings once and then the player uses the item.\n\n[3] If a villager tries to give another villager food near a bell, there is a chance it might hit the bell with the food and cause all the villagers to run, thrower included. [Bedrock Edition only ] LadyAgnes tweets a screenshot of an updated savanna village, which features a bell.\n\n[4] A close up of the bell in the previous image.\n\nAlso uses the old bell texture.\n\nA bell between two market stalls in a superflat village.\n\nAn animation of a bell gong.\n\nVillagers ringing a bell during a raid.\n\nA bell placed on the underside of a block.\n\nBells placed on a cozy cabin.\n\n\u2191 MC-179104 \u2014 \"Piglins don't mind players mining bells near them\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-169683 \u2191 MCPE-56968 \u2191 \"Me and the amazing @ProfMobius are working on the updated looks of villages, here is a savanna village!\" \u2013 @_LadyAgnes (Agnes Larsson) on X, November 23, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Big Dripleaf",
    "url": "https://minecraft.fandom.com/wiki/Big_Dripleaf",
    "content": "This article is about the plant used for platforming.\n\nFor the plant used to grow big dripleaves, see Small Dripleaf.\n\nFor the generated feature, see Dripleaf (feature).\n\nBig Dripleaf Rarity color Common Renewable Yes Stackable Yes (64) Tool Blast resistance 0.1 Hardness 0.1 Luminous No Transparent Yes Flammable Yes Catches fire from lava No A big dripleaf is a plant that generates within lush caves.\n\nIts leaf is a temporary platform; when stood on it will tilt down and drop its burden, resetting a few seconds later.\n\nBig dripleaves naturally generate within lush caves biomes.\n\nBone meal can be used on a small dripleaf plant to turn it into a big dripleaf up to 5 blocks tall, as long as there is enough open space above it.\n\nUsing bone meal on a big dripleaf plant makes it one block taller, creating an extra stem block (see #Growth).\n\nBig dripleaves can be obtained with any tool, but an axe is the most efficient.\n\nIt also breaks when pushed with a piston or sticky piston.\n\nBreaking it at any spot on the plant causes the entire plant to collapse.\n\nDestroying a big dripleaf plant drops one big dripleaf for each stem block and the leaf.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nBig dripleaves consist of any number of non-solid stem blocks atop of each other and a single leaf as the uppermost block, which can be stood on by any entity like a normal block for 1 second (20 game ticks).\n\nAfter this time, it tilts down, becoming lower than a block and giving a player warning that it is about to collapse.\n\nAfter a few ticks, it tilts down and becomes temporarily non-solid.\n\nWhen the leaf is powered by redstone, it does not tilt or collapse, however.\n\nPowering the stem has no effect.\n\nOne-block tall big dripleaves can be used to make the player crawl. [Java Edition only ] If a player is standing inside a big dripleaf when it is fully tilted, and the dripleaf returns to the untilted position, the player is left crawling underneath the leaf.\n\nWhen directly hit with any projectile, the leaf immediately becomes temporarily non-solid.\n\nThis cannot be prevented by powering it with redstone.\n\nFrogs enjoy jumping on big dripleaves, but will still cause them to tilt down and drop the frog.\n\nBig dripleaves can only be placed on top of clay, coarse dirt, dirt, farmland, grass blocks, moss blocks, mycelium, podzol, rooted dirt, and mud.\n\nIt is always one block tall when placed.\n\nUsing bone meal on a big dripleaf makes it grow 1 block taller.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 MCPE-123488 Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Leaf: Stem: Bedrock Edition: Issues relating to \"Big Dripleaf\" are maintained on the bug tracker.\n\nReport issues there.\n\nWhen tilted, the stem of the dripleaf intersects with the top part.\n\n[3] Concept art for the lush caves and vegetation including big dripleaves.\n\nA view of the lush caves with big dripleaves from Minecraft Live 2020.\n\nA view of the lush caves with big dripleaves.\n\nA view of the lush caves with big dripleaves in broken generation.\n\nA render of a two block tall big dripleaf.\n\nA render of a big dripleaf with the top slightly tilted.\n\nA render of a big dripleaf with the top fully tilted.\n\nA render of a big dripleaf stem.\n\n\u2191 MC-214346 \u2191 MC-250104 \u2014 resolved as \"Fixed\".\n\n\u2191 MC-213797 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Block of Redstone",
    "url": "https://minecraft.fandom.com/wiki/Block_of_Redstone",
    "content": "This article is about the mineral block.\n\nFor the Minecraft Dungeons mob, see Redstone Cube.\n\nFor other uses, see Redstone (disambiguation).\n\nBlock of Redstone Renewable Yes Stackable Yes (64) Tool Blast resistance 6 Hardness 5 Luminous No Transparent Partial (blocks light, mob spawning possible) Flammable No Catches fire from lava No A block of redstone is a mineral block equivalent to nine redstone dust.\n\nIt acts as a permanently powered redstone power source that can be pushed by pistons.\n\nIn each ancient city, 2 blocks of redstone can be found integrated into circuitry within a secret room at the city center.\n\nA block of redstone can be mined using any pickaxe (unlike redstone ore, which requires an iron pickaxe or better).\n\n[1] If mined without a pickaxe, a block of redstone drops nothing.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA block of redstone can be used as a redstone power source and can be crafted back into redstone dust.\n\nIt can also be used as storage if the player's inventory is full of redstone dust from mining.\n\nBlocks of redstone can be crafted back into redstone dust, and thus provide compact storage for redstone, like other blocks of materials (block of iron, block of gold, etc.).\n\nA block of redstone powers dust and repeaters, deactivates attached torches, and activate mechanisms (left) \u2013 but does not power adjacent opaque blocks (right).\n\nSee also: Redstone circuit To place a block of redstone, use the Place Block control.\n\nBlocks of redstone are always active and cannot be turned off.\n\nA block of redstone: powers any adjacent redstone dust, including above or below, to power level 15 powers any adjacent redstone comparators or redstone repeaters facing away from the block of redstone to power level 15 activates any adjacent mechanism components (doors, redstone lamps, etc.), including above or below, with the exception of pistons, which cannot be activated by any power source directly in front of them Adjacent opaque blocks are not powered.\n\nIf a redstone torch is attached to a block of redstone, it deactivates after 1 redstone tick and does not reactivate (which is normal behavior for a redstone torch attached to a powered block).\n\nA block of redstone can be moved by a piston.\n\nWater and lava flow around a block of redstone without affecting it.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nIssues relating to \"Block of Redstone\" are maintained on the bug tracker.\n\nReport issues there.\n\nAs the block of redstone is not fully opaque, chests can be opened when covered by one and so can shulker boxes.\n\nBlock of redstone as a circuit component.\n\nExample of how blocks of redstone can be used to power rails (from beneath).\n\n\u2191 MC-44417 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-146824 Block of the Week: Redstone \u2013 Minecraft.net on March 2, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Button",
    "url": "https://minecraft.fandom.com/wiki/Button",
    "content": "Button View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0.5 Hardness 0.5 Luminous No Transparent Yes Flammable No Catches fire from lava No A button is a non-solid block that produces a temporary redstone signal when pressed, with two variants.\n\nStone buttons can only be pressed by players.\n\nWooden buttons remain pressed for longer, and can also be pressed by arrows and tridents.\n\nA wooden button is easily broken with an axe, but drops itself as an item if broken using any tool.\n\nA stone button must be mined with a pickaxe to drop as an item.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nIn Java, you don't need to have a pickaxe to mine a stone/polished blackstone button.\n\nBut in Bedrock, you need to have a pickaxe to mine a stone/polished blackstone button A button is removed and drops as an item if: its attachment block is moved, removed, or destroyed.\n\nwater or lava flows into its space. [Java Edition only ] a piston tries to push it or moves a block into its space.\n\nStone buttons are naturally generated in strongholds, next to iron doors. [JE only ] Stone buttons also generate in desert armorer houses attached to granite.\n\nJungle buttons generate naturally on house walls in desert villages.\n\nButtons can be crafted from planks for a matching wood-type button, or stone for a stone button.\n\nSee also: Redstone circuit A button can be used as a monostable power source (albeit it automatically deactivates shortly after being activated).\n\nPlacement Buttons can be placed by using it on a surface.\n\nThey can be attached to the side, bottom and top of any full opaque block.\n\nIf placed on the top or bottom of a block, the button can face any direction. [Java Edition only ] It can also be attached to the top of a fence in Bedrock Edition.\n\nMore information about placement on transparent blocks can be found at Opacity/Placement.\n\nActivation Buttons are usually in an inactive state, but can be temporarily activated by players.\n\nA button can be activated by using it.\n\nA wooden button can also be activated by a fired arrow or a thrown trident if its collision box touched the button.\n\nMobs cannot activate buttons directly, but arrows fired by skeletons or dispensers can activate wooden buttons.\n\nBehavior When activated, a wooden button remains active for 15 redstone ticks (1.5 seconds, barring lag), while a stone button remains active for 10 redstone ticks (1 second, barring lag).\n\nA wooden button activated by a fired arrow or a thrown trident remains active until the arrow or trident despawns (after one minute) or is picked up by a player.\n\nWhile active, a button: powers any adjacent redstone dust to power level 15, including beneath the button powers any adjacent redstone comparators or redstone repeaters facing away from the button to power level 15 strongly powers its attachment block to power level 15 activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nWhen a button changes state it provides a redstone update to all redstone components adjacent to itself (including above and below), and to all redstone components adjacent to its attachment block.\n\nWooden buttons can be used as a fuel source in furnaces, smelting 0.5 items per button.\n\nButtons can be used to prevent mobs from spawning on blocks (ie on ice paths).\n\nSee: Tutorials/Spawn-proofing.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k l m Available with / give command.\n\n\u2191 a b c d e f g h i j k l m The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: This section needs expansion.\n\nYou can help by expanding it.\n\nInstructions: when the pitch of the sound of the button being pressed in was changed in Java Edition This section is missing information about MC-8522.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nFirst image of a button on a ceiling.\n\nOak Button Spruce Button Birch Button Jungle Button Acacia Button Dark Oak Button Mangrove Button Cherry Button Bamboo Button Crimson Button Warped Button Stone Button Polished Blackstone Button Issues relating to \"Button\" are maintained on the bug tracker.\n\nReport issues there.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Calibrated Sculk Sensor",
    "url": "https://minecraft.fandom.com/wiki/Calibrated_Sculk_Sensor",
    "content": "For the normal version of the sculk sensor, see Sculk Sensor.\n\nCalibrated Sculk Sensor Renewable Yes Stackable Yes (64) Tool Blast resistance 1.5 Hardness 1.5 Luminous Yes (1) Transparent Yes Flammable No Catches fire from lava No A calibrated sculk sensor is a craftable variant of sculk sensor.\n\nSimilarly to its counterpart it detects vibrations, but with twice the range, and can detect multiple vibrations in quicker succession.\n\nIt outputs a signal on all sides except for its input, which can receive power to make the sensor only listen to specific vibrations, depending on the input signal strength.\n\nCalibrated sculk sensors can be broken with any tool, but can be broken faster with a hoe.\n\nThey drop experience when broken.\n\nWhen broken by an item that is enchanted with Silk Touch, a calibrated sculk sensor drops itself.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nUnlike regular sculk sensors, there are a few differences: Calibrated sculk sensors can detect vibrations up to 16 blocks away.\n\nCalibrated sculk sensors have a cooldown of 1 second instead of 2 seconds.\n\nCalibrated sculk sensors' \"Sensor\" could be disabled by a redstone signal onto its crystallized side.\n\nThe same with the sculk sensor, one side of the calibrated sculk sensor can receive a redstone signal as an input, and the strength of that redstone signal is the only vibration frequency the sculk sensor will listen to.\n\nThe following list showcases (in order) a list of frequencies that the calibrated sculk sensor can listen for.\n\nMovement in any medium (land, water and air) Landing on any surface (land or water) Using an item (casting a fishing pole, throwing a snowball, etc.) Gliding with an elytra or unique mob actions (Ravager roar, Wolf shaking, etc) Dismounting a mob or equipping gear Mounting a mob or interacting with a mob Mobs and players getting damaged Consuming items (drinking and eating) Blocks 'deactivating' (door close, chest close, button unpress, etc) Blocks 'activating' (door open, chest open, button press, etc) Blocks changing (adding food to campfire, etc) Non-wool blocks being destroyed Non-wool blocks being placed Mobs and players teleporting or spawning Mobs and players dying or an explosion Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 Picks number from 0, 0, 2, 4, 6, 7, 9, 10, 12, 14, 15, 18, 19, 21, 22, or 24 using the vibration's signal strength, and applies 2 n \u2212 12 12 {\\displaystyle 2^\\frac{n-12}{12}}.\n\nIt uses the same equation that note blocks do.\n\nBedrock Edition: \u2191 Uses the same system as Java Edition.\n\n[verify ] Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A calibrated sculk sensor has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Calibrated Sculk Sensor/BE Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nOne interpretation of how the old texture could have looked.\n\nAnother interpretation.\n\nIssues relating to \"Calibrated Sculk Sensor\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-208551 \u2191 MC-252389 \u2014 \"When landing (or jumping) on wool with your hitbox over the edge, it produces a vibration\" \u2014 resolved as \"Fixed\".\n\n\u2191 MC-207290 \u2014 \"Calibrated sculk sensors don't detect vibrations while walking on the edge of a block\" \u2014 resolved as \"Fixed\".\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Chiseled Bookshelf",
    "url": "https://minecraft.fandom.com/wiki/Chiseled_Bookshelf",
    "content": "This article is about the bookshelf that can hold books.\n\nFor the bookshelf used with an enchanting table, see Bookshelf.\n\nChiseled Bookshelf Empty Full View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 1.5 Hardness 1.5 Luminous No Transparent No Flammable No Catches fire from lava No Chiseled bookshelves are blocks that can hold books, books and quills, written books, enchanted books and knowledge books.\n\nChiseled bookshelves can be destroyed with any tool, but an axe mines it the fastest.\n\nWhen broken, all contained books are dropped as items.\n\nThe block itself drops only when broken using a tool enchanted with Silk Touch.\n\n[1] \u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAll of the chiseled bookshelf textures before Java Edition 22w46a.\n\nChiseled bookshelves can hold up to six books, books and quills, written books, enchanted books, and/or knowledge books.\n\nThere is no GUI; books are instead added into the bookshelf by using on a slot with a book.\n\nDoing so will place a book in that slot.\n\nUsing on an occupied slot will remove the book from that slot.\n\nChiseled bookshelves do not increase the power of enchanting tables.\n\nThe correspondences between slot and signal power.\n\nA redstone comparator sends a signal (1\u20136) indicating the last slot interacted with.\n\nWhen no slot has been interacted with yet, it outputs 0.\n\nAn observer can detect when a book is added or removed from the bookshelf.\n\nHoppers and minecart with hoppers can insert and remove books from the bookshelf.\n\nAs with any other container, items are taken from the first slot that has an item that can fit in the hopper and are inserted into the first empty slot.\n\nDroppers behave similarly when inserting books into the bookshelf.\n\nWhen a hopper that is not already 100% full fails to remove a book from a non-empty bookshelf because there is no room for the book in the hopper's inventory, that is still counted as an \"interaction\" with the slot.\n\nThus, a hopper that cannot remove any of the books will effectively set the last-interacted slot to the last non-empty slot in the bookshelf.\n\n[2] Chiseled bookshelves can be used as fuel in furnaces to smelt 1.5 items.\n\nChiseled bookshelves can be placed under note blocks to produce a \"bass\" sound.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b Can be 1.0, 0.85, or 1.1 for each sound \u2191 a b Can be 1.0, 0.8, or 1.1 for each sound Bedrock Edition: \u2191 a b Can be 1.0, 0.85, or 1.1 for each sound \u2191 a b Can be 1.0, 0.8, or 1.1 for each sound Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A chiseled bookshelf has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Items: List of books in the bookshelf.: An item, including the slot tag.\n\nThe valid slot numbers are 0-5.\n\nTags common to all items last_interacted_slot: Last interacted slot (0\u20135), or -1 if no slot has been interacted with yet.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Chiseled Bookshelf\" are maintained on the bug tracker.\n\nReport issues there.\n\nThere are 11 9 (2,357,947,691) different ways to craft a chiseled bookshelf, as each of the nine slots in the crafting grid can contain planks or slabs of any of the eleven wood types.\n\nBooks arranged in a heart pattern.\n\nChiseled bookshelves and wool.\n\nChiseled bookshelves and wool.\n\nSunny in front of a chiseled bookshelf door.\n\nEfe looking at chiseled bookshelves.\n\nRedstone behind the chiseled bookshelves.\n\nEfe putting a book inside the chiseled bookshelf.\n\nEfe looking at an enchanting table.\n\nAnother wallpaper, showing Efe spooking Makena using a zombie mob head, with chiseled bookshelves above them.\n\n\u2191 MC-261722 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-257178 \u2014 Chiseled Bookshelf redstone behavior is inconsistent Block of the Month: Chiseled Bookshelf \u2013 Minecraft.net on June 29, 2023",
    "category": "Mechanics"
  },
  {
    "title": "Command Block",
    "url": "https://minecraft.fandom.com/wiki/Command_Block",
    "content": "Command Block Impulse Chain Repeat Rarity color Epic Renewable No Stackable Yes (64) Tool None Blast resistance \u221e Hardness \u221e Luminous No Transparent No Flammable No Catches fire from lava No A command block is a block that can execute commands.\n\nBecause it cannot be obtained or edited in Survival mode without cheats, it is primarily used on multiplayer servers, in Creative worlds, and custom maps.\n\nAn impulse command block is the default block type; it executes only once when activated.\n\nA chain command block executes every time when triggered.\n\nA repeating command block executes every game tick as long as it is activated.\n\nIn Java Edition, command blocks are available in the Creative inventory under the \"Operator Utilities\" tab, if the \"Operator Items Tab\" setting in the \"Controls\" Options tab is set to \"ON\".\n\nAcross both Java and Bedrock editions, they can either be obtained by using the pick block control, or by using various commands, such as / give @s minecraft:command_block, or / setblock ~ ~ ~ command_block.\n\nJust like other blocks that can store NBT data, using pick block + CTRL copies the command and options inside the command block.\n\nThis allows it to be placed elsewhere without having to re-enter the data inside.\n\nCommand blocks are not flammable, and have the same blast resistance as bedrock.\n\nCommand blocks, as well as structure blocks and jigsaw blocks cannot be mined in Survival.\n\nCommand blocks cannot be placed by a non-operator player.\n\nSee also: Commands and Tutorials/Command blocks and functions A command block can execute commands when activated by redstone power.\n\nIt always has permissions of 2 level [Java Edition only ] /1 level [Bedrock Edition only ], so it can be used to allow a specific use of a command by players who can't use that command in general (for example, allowing anyone to obtain a specific item with / give without allowing everyone to /give themselves whatever they want).\n\nA command block has an orientation that determines the chain command block to activate, and the blocks to be checked to see if a command block in \"Conditional\" mode executes.\n\nTo execute the command, in Java Edition in multiplayer enable-command-block in the server.properties file must be set to true (default is false); in Bedrock Edition \"Command Blocks Enabled\" in options must be enabled.\n\nJava Edition command block GUI To enter command or modify the command block, use the Use Item control on the command block to open the command block GUI (graphical user interface).\n\nThe GUI opens only if the player is in Creative mode, and has the proper permissions.\n\nThat means, in singleplayer, \"Allow Cheats\" [JE only ] or \"Activate Cheats\" [BE only ] in options must be enabled.\n\nIn multiplayer, Gui can be opened only by operators in Creative mode, and in Java Edition op-permission-level in the server.properties file must be set to 2 or above (default is 4).\n\nIn Java Edition to enter command or modify the command block, enable-command-block in the server.properties file must be set to true (default is false).\n\nBedrock edition command block GUI In Java Edition, opening the GUI in singleplayer pauses the game.\n\nConsole Command [JE only ] /Command Input [BE only ] Commands can be entered in the top text pane.\n\nThe text limit for commands in a command block is 32,500 characters, but the text pane can show only a small portion of this amount at a time.\n\nCommands in a command block do not need to be prefixed with the forward-slash (/) as they do in the chat window, but doing so still works.\n\nPress Tab \u21b9 to complete words or cycle through options.\n\nIn Bedrock Edition, below the console command text pane are some reminder tips about how to use target selectors.\n\nPrevious Output The bottom text pane displays the output message (success or failure) of the last executed command (it is blank [JE only ] or \" - \" [BE only ] initially).\n\nIts text is not editable.\n\nA button to the right of the Previous Output text pane [JE only ] or the left of the \"Previous Output\" [BE only ] specifies whether the last output should be stored and displayed.\n\nIt is O  [JE only ] /enabled [BE only ] when the output text should be stored and X  [JE only ] /disabled [BE only ] when the output text should not be stored.\n\nFor worlds with many command blocks, especially command blocks running on fast clocks, not storing the output text can reduce memory and storage requirements.\n\nIf gamerule sendCommandFeedback is true (the default), default to O  [JE only ] /enabled [BE only ].\n\nOtherwise defaults to X  [JE only ] /disabled [BE only ].\n\nBlock Type Left: \"Impulse\" block type.\n\nMiddle: \"Chain\" block type.\n\nRight: \"Repeating\" block type.\n\nTop: \"Unconditional\" mode.\n\nBottom: \"Conditional\" mode.\n\nClick the \"Impulse/Chain/Repeat\" [JE only ] /\"Block Type\" [BE only ] button to change the command block's type.\n\nThe default state is \"Impulse\", but non-default command blocks can be obtained and placed.\n\nThe command block also changes color when changing its command block type: \"Impulse\" command blocks are orange.\n\nThey execute once every time they are activated.\n\n\"Chain\" command blocks are green.\n\nThey execute once every time they are triggered if they have been activated.\n\n\"Repeat\" command blocks are purple.\n\nThey execute their commands once every one game tick (or more [BE only ]) as long as they are activated.\n\nCondition Click the \"Conditional/Unconditional\" [JE only ] /\"Condition\" [BE only ] button to change the command block's conditional behavior: \"Conditional\": A command block in conditional mode executes its command only when the command block behind it has executed successfully (\"Success count\" is greater than 0).\n\n\"Unconditional\" (default): A command block in unconditional mode executes its command even if there's a command block behind it that didn't execute its command successfully.\n\n\"Behind it\" in the sense of opposite to the direction the command block is facing, regardless of chain direction or even if chaining is occurring.\n\nRedstone Click the \"Always Active/Needs Redstone\" [JE only ] /\"Redstone\" [BE only ] button to change the command block's activation requirements: \"Needs Redstone\" (the default for impulse and repeat command blocks): A command block in the \"Needs Redstone\" setting can be activated only with redstone.\n\n\"Always Active\" (the default for chain command blocks): The command block is activated when set to \"Always Active\".\n\nThen it is always active even without redstone activation.\n\nExecute on First Tick [BE only ] Specifies whether a repeat command block executes its command as soon as it is activated.\n\nIf it's disabled, executes the first time after the delay from the time when it is activated.\n\nDelay in Ticks [BE only ] For impulse or chain command block, specifies how many game ticks it delays before executing a command after it is activated or triggered.\n\nFor repeat command block, specifies how many game ticks it delays to execute again.\n\nNote that for impulse or repeat command block, 0 and 1 work the same; the game takes 0 as 1.\n\nHowever, For chain command block, 0 and 1 are different.\n\nHover Note [BE only ] Specifies the name of the command block, which can be seen when you point to the block.\n\nIt is also used for message commands.\n\nIf the command block had been named in an anvil before placement, that name is used as well.\n\nIf it is empty, defaults to!.\n\nDone In Java Edition, click the \"Done\" button or \u21b5 Enter to save the command and leave the command block GUI.\n\nIn Bedrock Edition, close the GUI to save the command and changes.\n\nCancel Click the \"Cancel\" button or Esc  [JE only ] to leave the command block GUI without saving any changes.\n\nCommand blocks are redstone mechanisms and can be activated by: An adjacent active power component: for example, a lever, a block of redstone, a daylight sensor, a button etc.\n\nAn adjacent powered block (for example, an opaque block with an active redstone torch under it) A powered redstone comparator or redstone repeater facing the mechanism component Powered redstone dust configured to point at the command block (or on top of it) or directionless; a command block is not activated by adjacent powered redstone dust that is configured to point away from it.\n\nA command block can also be activated by setting it to \"Always Active\" mode.\n\nWhen activated, a command block executes its command, depending on the command block's type: An impulse command block executes its command once.\n\nA chain command block does not execute its command until it is triggered.\n\nA repeat command block executes its command once every one game tick (or more [BE only ]) until no longer activated.\n\nAn impulse command block, when it is activated, checks whether the command block behind it has executed successfully (if in conditional mode).\n\nAfter the delay of 1 game tick (or more [BE only ]), if the condition is met before the delay (if in \"Conditional\" mode), it executes its command once and triggers the chain command block it is pointing to.\n\nA repeat command block, when it is activated, after 1 game tick (always 1 no matter how many \"Delay in Ticks\" is), checks whether the command block behind it has executed successfully (if in conditional mode).\n\nIf the condition is met, and if \"Execute on First Tick\" is enabled in Bedrock Edition, it executes its command once and triggers the chain command block it is pointing to.\n\nIf it is still activated, it then checks, executes, and triggers the chain command block again after 1 game tick (or more [BE only ]).\n\nWhen executing a command, it also updates its success count: If in \"Conditional\" mode, if the command block behind it didn't execute successfully, it sets its success count to 0.\n\nOtherwise, it sets it to the success count of the command.\n\nAlso: When an impulse or repeat command block in \"Needs Redstone\" mode with a command is placed or is cloned by a command to a powered location, the new command block executes its command only if it hasn't been activated with redstone.\n\nIn Java Edition, it also needs a block update to execute its command.\n\nWhen an impulse or repeat command block in \"Always Active\" mode with a command is placed or is cloned by a command to a powered location, the new command block executes its command only if it hasn't been activated with redstone.\n\nWhen an impulse or chain command block is set to \"Repeat\", if it has been activated, checks whether the command block behind it has executed successfully (if in conditional mode).\n\nAfter 1 game tick (always 1 no matter how many \"Delay in Ticks\" is), if the condition is met, it executes its command once and triggers the chain command block it is pointing to.\n\nThen it checks, executes, and triggers the chain command block again after 1 game tick (or more [BE only ]).\n\nIf any command block having executed its command (whether successfully or unsuccessfully) faces a chain command block, it triggers the chain command block to also attempt execution.\n\nWhen a chain command block is triggered, If it has been activated, It checks whether it is in \"Conditional\" mode and the command block behind it hasn't executed successfully (Behind in the sense of the direction it is facing, not in the sense of which command block chained to it), If true, it triggers another chain command block it is facing, without executing the command.\n\nIf false, it checks whether it has been already executed in this game tick.\n\nIf false, it executes the command and triggers another chain command block it is facing.\n\nIf true, it does nothing.\n\nThat means that chained execution cannot be passed to a command block that has already executed in that game tick (loops execute only once).\n\nIf it has not been activated, it triggers the chain command block it is facing to attempt execution.\n\nChained command blocks execute simultaneously in the same game tick in the order they are chained.\n\nIn Bedrock Edition, it can also delay before executing commands if \"Delay in Ticks\" is not 0: When it is triggered, If it has been activated, the chain command block checks whether the command block behind it has executed successfully (if in conditional mode), then it delays.\n\nAfter a delay, if the condition is met before the delay (if in \"Conditional\" mode), it executes its command once and triggers the chain command block it is pointing to no matter whether the condition met.\n\nIf it has not been activated, it triggers (without delay) the chain command block it is facing to attempt execution.\n\nIn Java Edition, it can execute multiple times in the same game tick if \"UpdateLastExecution\" is set to false.\n\nIn this case, it does not check whether it has already executed in this game tick.\n\nIf the chain command block has been activated when triggered, it also updates its success count: If in \"Conditional\" mode, if the command block behind it didn't execute successfully, it sets its success count to 0.\n\nOtherwise, it sets it to the success count of the command.\n\nWhen activated, a command block can produce multiple types of output: A command block can power a redstone comparator facing away from it (possibly separated by a block) with signal strength specific to the success count.\n\nSuccess count is an integer between 0 to 2,147,483,647 (inclusive).\n\nThe signal strength always reflects the last command executed, even after the command block is deactivated.\n\nIn Java Edition, success count is usually 0 or 1, except for / function and / execute.\n\nIn Bedrock Edition, success count is an integer related to the command (e.g., the number of players affected by the command, the number of blocks that were altered, the value returned by the command, etc.) In Java Edition, leaving the command block GUI by clicking \"Done\" or pressing \u21b5 Enter resets the success count to 0, regardless of whether changes were made in the GUI.\n\nIn Bedrock Edition, leaving the GUI with changes resets the success count to 0.\n\nThe output message describes the success or failure of the executed command, and may be written to multiple destinations: Previous Output: The output message is always written to the \"Previous Output\" text pane of the command block GUI.\n\nChat: The output message is written to the chat text in singleplayer mode, or broadcast to all other ops in multiplayer mode, unless it has been suppressed with / gamerule commandBlockOutput false.\n\nSome commands may write additional text to the chat as their normal function, which won't be suppressed (for example, the / say command writes a message to the chat of all players), separate from the output message.\n\nChat messages that would usually be prefaced by a player's name (such as from the / me, / say and / tell commands) use @  [Java Edition only ] /!\n\n [Bedrock Edition only ] as the player name.\n\nIf the command block had been named in an anvil before placement, that name is used instead.\n\nIn Bedrock Edition, it can also modified in the GUI.\n\nLogs: The output message is written to multiplayer server logs unless it has been suppressed with / gamerule logAdminCommands false.\n\nCommand blocks execute commands with OP level 2.\n\nThe following commands cannot be used in a command block: / ban, / banlist, / ban-ip, / debug, / deop, / kick  [JE only ], / op, / pardon, / pardon-ip, / publish, / reload  [BE only ], / save-all, / save-off, / save-on, / stop, and / whitelist (i.e., / debug, / publish, and all of the multiplayer-only commands except / list).\n\nMain article: Easter eggs \u00a7 Command blocks Running \" Searge \" (case insensitive) as the command in the command block without a preceding \" / \" will set the previous output to \"#itzlipofutzli\".\n\nIts success count is 1.\n\nCommand blocks cannot be pushed by pistons.\n\nThey also cannot be pushed or pulled by sticky pistons.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c Available with / give command.\n\n\u2191 a b c The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A command block has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities auto: 1 or 0 (true/false) - Allows to activate the command without the requirement of a redstone signal.\n\nCommand: The command to issue to the server.\n\nconditionMet: 1 or 0 (true/false) - Indicates whether a conditional command block had its condition met when last activated.\n\nTrue if not a conditional command block.\n\nCustomName: Optional.\n\nThe name JSON text component of this command block, replacing the usual '@' when using commands such as / say and / tell.\n\nLastExecution: stores the tick a chain command block was last executed in.\n\nLastOutput: The last line of output generated by the command block.\n\nStill stored even if the game rule commandBlockOutput is false.\n\nAppears in the GUI of the block when right-clicked, and includes a timestamp of when the output was produced.\n\npowered: 1 or 0 (true/false) - States whether or not the command block is powered by redstone or not.\n\nSuccessCount: Represents the strength of the analog signal output by redstone comparators attached to this command block.\n\nTrackOutput: 1 or 0 (true/false) - Determines whether the LastOutput is stored.\n\nCan be toggled in the GUI by clicking a button near the \"Previous Output\" textbox.\n\nCaption on the button indicates current state: \"O\" if true, \"X\" if false.\n\nUpdateLastExecution: 1 or 0 (true/false) - Defaults to true.\n\nIf set to false, loops can be created where the same command block can run multiple times in one tick.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nSee also: Commands \u00a7 History Issues relating to \"Command Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe command block GUI in Bedrock Edition pre 1.12.0 The first image released by jeb_ of the command block.\n\nThe second image released by jeb_ showing the block giving glass to the player.\n\nCommand blocks creating more command blocks.\n\nA command block summoning block breaking particles.\n\nCommand blocks in a terracotta cube.\n\nThe new command block texture as revealed by Searge on twitter.\n\nTeaser image from Searge showing new command blocks.\n\nThe sides of each command block type.\n\nEach command block type placed in a wall.\n\nA bunch of eggs being summoned with a command block.\n\nEach of the command block types in each mode of operation.\n\nSearge holding a command block in front of a command block.\n\n\u2191 https://bugs.mojang.com/browse/MC-80671?focusedCommentId=228546&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-228546 \u2191 MC-140646 \u2014 resolved as \"Fixed\".\n\nBlock of the Week: Command Block \u2013 Minecraft.net on April 27, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Conductivity",
    "url": "https://minecraft.fandom.com/wiki/Conductivity",
    "content": "This article is about blocks that can conduct redstone.\n\nFor blocks that have collision boxes you cannot move through, see solid block.\n\nFor see-through block textures, models, and lighting, see Opacity.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nConductivity is a property of blocks that determines whether redstone signals can be conducted through them, meaning that redstone components are able to power other components touching another side of this block, though it also has a wide range of other effects on the game world.\n\nConductivity is usually determined by whether a block has a solid-blocking material and a collision box that takes up a full cube, with 5 exceptions: Mud and Soul Sand are conductive, despite having non-full collision boxes.\n\nRedstone Blocks, Observers and Pistons are all non-conductive.\n\nA lot of the effects of conductivity are non-obvious.\n\nMinecraft does not have a \"solid\" property for blocks, so conductivity is tested when a test for \"solidity\" would normally occur.\n\nRedstone behavior (see also: Redstone circuit and its subpages): Only conductive blocks can be powered by power components or transmission components (see list of redstone components).\n\nConductive blocks overhead can prevent redstone wires from connecting to other redstone wire diagonally upwards (and vice-versa for the wire connecting downwards).\n\nIf a non-conductive block can support redstone wire, it acts as a diode, carrying power upward but not downward.\n\nMobs cannot spawn inside conductive blocks.\n\nConductive blocks also play a part in the pack spawning algorithm [Java Edition only ].\n\nChests cannot be opened if there is an conductive block on top of them.\n\nThey are not affected by non-conductive blocks.\n\nGhast fireball explosions start fires only on conductive blocks.\n\nBats cannot hang on non-conductive blocks.\n\nIssues relating to \"Conductive\" are maintained on the bug tracker.\n\nReport issues there.\n\nSolid block Opacity Environment View at: Template:Environment/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Daylight Detector",
    "url": "https://minecraft.fandom.com/wiki/Daylight_Detector",
    "content": "Daylight Detector Daylight detector Inverted daylight detector Renewable Yes Stackable Yes (64) Tool Blast resistance 0.2 Hardness 0.2 Luminous No Transparent Yes Flammable No Catches fire from lava Yes A daylight detector [a] is a block that outputs a redstone signal based on sunlight.\n\nUsing it inverts it, causing it instead to output a redstone signal based on the darkness of the sky.\n\nDaylight detectors can be broken fairly easily by hand, but can be broken faster by using an axe.\n\nInverted daylight detectors cannot be collected directly; they drop a regular daylight detector.\n\nIn Bedrock Edition, the inverted sensor may be obtained via inventory editing or add-ons.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nGraphed daylight detector output in clear weather.\n\nSee also: Redstone circuit A daylight detector can be used to produce redstone power in proportion to the daylight cycle.\n\nA daylight detector is 0.375 blocks high (3/8ths of a block).\n\nDaylight detectors can be moved by pistons. [Bedrock Edition only ] Water and lava flow around daylight detectors without affecting them.\n\nPlacement To place a daylight detector, use the \"Use Item/Place Block\" control.\n\nA daylight detector can be \"inverted\", which reverses the power levels produced by the daylight detector.\n\nTo invert a daylight detector, aim at the placed daylight detector and use the \"Use Item/Place Block\" control.\n\nActivation A daylight detector activates when exposed to sufficient daylight (daylight detector mode) or when exposure to daylight is low enough (inverted daylight detector mode).\n\nSources of block light (torches, glowstone, etc.) cannot activate a daylight detector.\n\nBehavior An active daylight detector: powers adjacent redstone dust, including below it, and redstone comparators facing away from the daylight detector, to a power level that depends on the time of day, the weather, and the internal sky light level (see tables below) powers adjacent redstone repeaters facing away from the daylight detector to power level 15 activates adjacent redstone mechanisms, including above and below, such as pistons, redstone lamps, etc.\n\nA daylight detector has no effect on other adjacent blocks (for example, it cannot power a block the way a repeater can).\n\nThe output signal of daylight detectors in the loaded chunk is updated every 20 gametime [JE only ] /daytime [BE only ].\n\nBlock update have no effect on daylight detectors.\n\nThe daylight detector power level depends on the time of day, the weather, and the internal sky light level.\n\nUsing a daylight detector inverts it.\n\nHowever, the output of the inverted detector is not a simple inversion of the daylight detector's output; it uses a much simpler algorithm that depends only on the internal sky light level.\n\nSpecifically, it outputs a signal strength of 15 minus the current internal sky light level, where values over 15 or below 0 are taken as 15 or 0 respectively.\n\nThis means that an inverted daylight detector actually outputs a strength of 11 at midnight when it's clear weather, if it has line of sight with the sky.\n\nThe effects of shade are applied before inverting, so shade increases the signal strength when it isn't already full, and prevents it from reaching zero.\n\nDaylight detectors can be used as a fuel in furnaces, smelting 1.5 items per block.\n\nDaylight detectors can be placed under note blocks to produce \"bass\" sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Bedrock Edition: A daylight detector has a block entity associated with it which stores only its entity ID and position (the minimum data for a block entity).\n\nAlthough the daylight detector's block entity stores no additional data, the block entity ensures that the daylight detector is updated every game tick.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nFirst image of a daylight detector.\n\nThe 13w01a snapshot image released by Mojang.\n\nA graph visualising the states of a Daylight Detector under different weather conditions (ends rounded to the nearest quarter of a thousand Game-ticks) Issues relating to \"Daylight Sensor\" or \"Daylight Detector\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 Known as Daylight Detector in Java Edition and Daylight Sensor in Bedrock Edition.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Detector Rail",
    "url": "https://minecraft.fandom.com/wiki/Detector_Rail",
    "content": "This article is about the detector rail.\n\nFor other types of rails, see Rail (disambiguation).\n\nDetector Rail Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No A detector rail is a type of rail that produces a redstone signal when a minecart is on it.\n\nA detector rail can be broken fairly easily by hand, dropping itself as an item.\n\nIt can be broken faster by using a pickaxe.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA detector rail also drops as an item if: the block beneath it is removed water or lava flows over it [Java Edition only ] a piston moves it into a space with no floor below it.\n\nA detector rail can be used as a rail that can detect when minecarts are on it or how full container minecarts on it are.\n\nTo place a detector rail, use the Place Block control on the face of a block adjacent to the destination space.\n\nA detector rail can be attached to: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, upside-down slab, or upside-down stairs.\n\nA detector rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the detector rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a detector rail to the side of the fence causes the detector rail to be attached to the top of the ground next to the fence instead.\n\nIf updated while on an opened trapdoor, a detector rail (or other rails) breaks drops as an item.\n\nPlacing a minecart on a detector rail on top of a closed and unpowered trapdoor opens the trapdoor and updates it, causing the detector rail to break.\n\nIf the trapdoor is powered while the minecart is placed, the trapdoor does not open and the rail does not break.\n\nThe minecart on the detector rail powers the trapdoor and keeps it closed even if the external power source is removed, allowing the detector rail to stay on.\n\nWhen placed, a detector rail configures itself to line up with any adjacent rails (including activator rails, powered rails, and other detector rails), as well as adjacent rails one block up.\n\nIf there are two adjacent rails on non-opposite sides, or three or more adjacent rails, a detector rail lines up in the east-west direction.\n\nIf there are no adjacent rails, a detector rail lines up in the north-south direction (but if a rail is later placed to the east or west, the detector rail re-orients itself in the east-west direction even if it is already connected to another rail to the north or south).\n\nIf a rail it would line up with is one block up, a detector rail slants upward toward it (with multiple options to slant upward to, a detector rail \"prefers\", in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nMobs avoid walking across a detector rail (or other rails), but can be pushed onto them.\n\nIt cannot be placed suspended in midair, even with commands.\n\n[1] Main article: Rail Detector rails (and other rails) act as \"roads\" for minecarts.\n\nA minecart that enters a detector rail's space from either end of the detector rail continues to move, losing only a little velocity (which can then be increased again with powered rails).\n\nA minecart that enters a detector rail's space from the side turns east or south (depending on the detector rail's orientation), or in the downward direction for a slanted detector rail.\n\nExample for signal strength of a full minecart (right) and a half-full one (left) See also: Redstone circuit A detector rail activates when any minecart is on it (even if only a portion of the minecart is on it), and deactivates when no minecarts are on it.\n\nThe duration of the signal is always a multiple of 10 redstone ticks (although lag or unloading/reloading a chunk might affect this).\n\nWhile active, a detector rail: powers adjacent redstone dust and adjacent redstone repeaters facing away from the detector rail, to power level 15 powers adjacent redstone comparators facing away from the detector rail to a level corresponding to the fullness of the minecart if it is a Minecart with Chest or a Minecart with Hopper.\n\nstrongly powers any full solid opaque block beneath the detector rail to power level 15 activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, powered rails, hoppers, etc.\n\nComparators give a signal for a minecart with chest or a minecart with hopper If the minecart on the detector rail is a minecart with chest or minecart with hopper, an adjacent redstone comparator facing away from the detector rail outputs a power level proportional to the container's fullness, possibly power level 0.\n\nFor any other type of minecart (including a regular minecart with a mob riding it) the comparator's output is zero.\n\nA comparator can read the contents of a minecart with hopper or with chest on a detector rail through a solid opaque block, as it can with other container blocks.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Detector Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nImage from Notch\u2019s twitter teasing detector rails.\n\nRail Activator Rail Powered Rail Redstone View at: Template:Redstone/content [edit ] \u2191 MC-182709 \u2014 resolved as \"Invalid\".",
    "category": "Mechanics"
  },
  {
    "title": "Dispenser",
    "url": "https://minecraft.fandom.com/wiki/Dispenser",
    "content": "This article is about the block that can fire arrows and other items.\n\nFor the block that would drop arrows and others as an item, see Dropper.\n\nDispenser South West North East Up Down South West North East Up Down Renewable Yes Stackable Yes (64) Tool Blast resistance 3.5 Hardness 3.5 Luminous No Transparent No Flammable No Catches fire from lava No A dispenser is a low-capacity storage block that can fire projectiles, use certain items or tools or place certain blocks, fluids or entities when given a redstone signal.\n\nItems that do not have unique dispenser functions are instead ejected into the world.\n\nDispensers can be mined using a pickaxe, in which case it drops itself and its contents.\n\nIf mined without a pickaxe, the dispenser drops only its contents.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nTwo dispensers are naturally generated in every jungle temple, and many generate throughout trial chambers.\n\nA dispenser can be used as a container and as a redstone component that dispenses items when activated, with results varying based on the item dispensed.\n\nFor example, the trap in a jungle pyramid incorporates arrows inside a dispenser, which shoots the arrows when activated.\n\nTo place a dispenser, use it while pointing at a surface adjacent to the space it should occupy.\n\nA dispenser can be placed so that its output faces in any direction, including up or down.\n\nWhen placed, a dispenser faces the location of the player placing it.\n\nA dispenser cannot be moved by pistons. [Java Edition only ] The GUI of the dispenser.\n\nA dispenser has 9 slots of inventory space.\n\nTo open the dispenser GUI, use the Use Item control.\n\nTo move items between the dispenser inventory and the player inventory or hotbar while the dispenser GUI is open, drag or shift-click the items.\n\nTo exit the dispenser GUI, use the Esc control.\n\nBy default, the GUI of a dispenser is labeled \"Dispenser\".\n\nA dispenser's GUI label can be changed by naming the dispenser in an anvil before placing it, or by using the data command [Java Edition only ].\n\nFor example, to label a dispenser at (0,64,0) \"My Dispenser\", use data merge block 0 64 0 {CustomName:'\"My Dispenser\"'}.\n\nA dispenser can be \"locked\" by setting the dispenser's Lock tag.\n\nIf a dispenser's Lock tag is not blank, the dispenser cannot be accessed except by players holding an item with the same name as the Lock tag's text.\n\nA dispenser's Lock tag can be set or unset with the data command.\n\nFor example, to lock a dispenser at (0,64,0) so that only players holding an item named \"My Key\" can access the dispenser, use data merge block 0 64 0 {Lock:\"My Key\"}.\n\nSee also: Redstone circuit A dispenser can be used to dispense its contents randomly.\n\nActivation A dispenser is a redstone mechanism and can be activated by: an adjacent active power component: for example, a redstone torch (except that a redstone torch does not activate a dispenser it is attached to), a block of redstone, a daylight sensor, etc.\n\nan adjacent powered opaque block (for example, a block with an active redstone torch under it) a powered redstone repeater or redstone comparator facing the dispenser powered redstone dust configured to point at the dispenser, or on top of it, or a directionless \"cross\" next to it; a dispenser is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nSome of these methods can activate a dispenser (in the sense of triggering an action) without powering the dispenser (in the sense of whether the dispenser can power adjacent redstone dust, etc.).\n\nIn addition to the methods above, a dispenser can also be activated by quasi-connectivity. [Java Edition only ] A dispenser becomes activated if one of the methods above would activate a mechanism component in the block above the dispenser, even if there is no mechanism component there (even if the block above the dispenser is air or a transparent block), but only when the dispenser receives a block update (including a redstone update within two blocks of the dispenser).\n\nA dispenser does not activate if it has been less than 1 redstone tick (2 game ticks, or 0.1 seconds barring lag) since its last activation ended.\n\nBehavior When activated, a dispenser waits for 2 redstone ticks (4 game ticks, or 0.2 seconds barring lag) and then ejects one item.\n\nThe dispenser does not continue to eject items while activated; ejection occurs only on the initial activation (the rising edge of an input signal).\n\nTo eject multiple items, repeatedly activate the dispenser with a clock circuit.\n\nIf the clock runs at faster than 5 Hz (more than 5 redstone pulses a second), the dispenser fires once and then locks in the \"on\" position.\n\nIf multiple slots are occupied by items, a random occupied slot is chosen for ejection.\n\nThe slot is chosen when an item is ejected, not when the dispenser is initially activated; thus it is possible to move items into or out of a dispenser between its activation and item dispensing.\n\nThe effects of being activated vary with the type of ejected item.\n\nMost items are thrown in the direction the dispenser is facing as if a player had used the Drop Item control.\n\n(Unlike a dropper, a dispenser can't feed another container.) Other items behave differently when dispensed, as described in the table below.\n\nIn general, a dispenser cannot place blocks into the world; the exceptions are shulker boxes, powder snow, [Java Edition only ] and certain cases where the placed block would do something unusual.\n\nThere are also a couple of special cases where an empty bottle or bucket can collect liquids from the world.\n\nWhen dispensing an item that has durability would cause the item to be used, such as with flint and steel and shears, the item's durability decreases.\n\nWhen a dispenser dispenses an item, it emits a clicking sound (unless the item is a projectile or a spawn egg) and a smoke particle.\n\nIf it is empty when activated, it emits a slightly higher-pitched click.\n\nThe noise of a dispenser can be heard up to 16 blocks away.\n\nA dispenser is a full solid opaque block, so powering it directly can cause adjacent mechanism components (including other dispensers) to activate as well.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c d e MC-98316 \u2014 Wrong subtitles caused by missing distinction Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A dispenser has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nDispenser slots are numbered 0-8 with 0 in the top left corner.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the dispenser when it is next opened, or the items are otherwise interacted with.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted causes a random seed to be used.\n\n[note 1] \u2191 a b Both loot table tags are removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nFrame from first video of dispensers.\n\nThe first image released by Mojang showing the new vertical placement of Dispensers and Droppers.\n\nThe Dispenser can be seen on the top.\n\nNotes \u2191 Supposed time when fragment was filmed.\n\nBased on modified date of client.jar/gui/trap.png in Beta 1.2.\n\nIssues relating to \"Dispenser\" are maintained on the bug tracker.\n\nReport issues there.\n\nA dispenser was shown inside a minecart in one of the 1.5 teaser images, although this was never added to the game.\n\nDispensers resemble a face when not facing up or down.\n\nDispensers can be placed facing up and down, as well as the side orientation.\n\nA distribution of arrows shot straight up by a dispenser.\n\nSome other blocks can also be used to move items: Droppers can throw items or push them into adjacent containers.\n\nHoppers can push items into adjacent containers.\n\nIce and packed ice have reduced friction to the item entity movement.\n\nSlime blocks can impart velocity to item entities when pushed by a piston.\n\nWater can push item entities.\n\nQuasi-connectivity Applies to Dispensers.\n\n\u2191 MCPE-80145 \u2191 a b c d e MC-114111 \u2191 MC-165196 \u2014 resolved as \"Invalid\".\n\n\u2191 \"Minecraft Snapshot 19w42a\" \u2013 Minecraft.net \u2191 MC-50259 \u2191 https://bugs.mojang.com/browse/MC-80671?focusedCommentId=228546&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-228546 \u2191 MC-122844 resolved as \"Works As Intended\" Block of the Week: Dispenser \u2013 Minecraft.net on March 16, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Door",
    "url": "https://minecraft.fandom.com/wiki/Door",
    "content": "This article is about the block.\n\nFor the music track, see Minecraft - Volume Alpha.\n\nSee also: Trapdoor Door Java Edition Bedrock Edition View all renders Renewable Yes Stackable Yes (64) Tools Blast resistance 3 (Wood) 5 (Iron)?\n\n(Copper) Hardness 3 (Wood and copper) 5 (Iron) Luminous No Transparent Partial Flammable No Catches fire from lava Overworld wood: Yes Nether wood, iron, copper: No A door is a block that can be used as a barrier that can be opened by hand or with redstone.\n\nDoors can be found in any Overworld biome, and can also be crafted from any type of wood as well as materials found in the Nether.\n\nSome have built-in openings that are useful for determining the time of day.\n\nWooden doors can be broken with anything, but axes are fastest.\n\nAn iron door can only be broken with any pickaxes, otherwise it will drop nothing.\n\nCopper doors can only be broken with a stone pickaxe or higher, once again, they will drop nothing if broken with anything else.\n\nAll doors drop themselves if they no longer have a block beneath them that can support them.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA door is removed and drops itself as an item: if the block beneath the door is moved, removed, or destroyed if a piston tries to push the door (trying to pull a door does nothing) or moves a block into its space Doors generate in some generated structures, forming the entrances to the majority of buildings.\n\nDoors do not generate in zombie villages.\n\nOak Oak doors generate as part of: Plains villages Strongholds Right-side-up shipwrecks Spruce Spruce doors generate as part of: Taiga, snowy tundra and snowy taiga villages Right-side-up shipwrecks Jungle Jungle doors generate as part of: Desert villages Right-side-up shipwrecks Acacia Acacia doors generate as part of: Savanna villages Dark oak Dark oak doors generate as part of: Master bedroom closets in woodland mansions Right-side-up shipwrecks Iron Iron doors generate as part of: Prison rooms in woodland mansions Strongholds with a stone button to open [Java Edition only ] Copper doors can be turned into the respective waxed copper doors by using a honeycomb item on them.\n\nWaxed copper doors do not oxidize and are identical to the non-waxed version.\n\nUsing an axe on a waxed copper door turns it into the respective non-waxed copper door.\n\nIn addition, using an axe on an exposed, weathered, or oxidized copper door reverts it one stage to a regular, exposed, or weathered copper door respectively.\n\nNon-waxed copper doors are completely deoxidized when struck by lightning, and other non-waxed copper doors nearby are deoxidized randomly.\n\nWooden doors and copper doors can be opened and closed by players, villagers, wandering traders  [BE only ], vindicators  [JE only ], and piglins.\n\nWooden doors can be broken by all variants of zombies (except drowned) and vindicators in Hard difficulty.\n\nIron doors can be opened only with redstone power.\n\nDoors must be \"attached\" to a block beneath them.\n\nTo place a door, use a door item while pointing at the top of the block it should be attached to.\n\nA door can be attached to: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.) the top of an upside-down slab or upside-down stairs the top of a slime block or downward-facing piston More information about placement on transparent blocks can be found at Opacity/Placement.\n\nWhen placed, a door occupies the side of the block facing the player, or behind a player if placed in the player's own space.\n\nBy default, a door's \"hinge\" appears on the side of the half of the block that the player pointed at when placing and its \"handle\" on the opposite side [Java Edition only ], but the hinge is forced to other side by: Placing a door besides another door (creating a double door where both doors open away from each other) Placing a door between a full solid and any opaque block (top or bottom), making the hinge appear to attach to the solid block.\n\nWater and lava flow around doors.\n\nLava can create fire in air blocks next to wooden doors as if the wooden doors were flammable, but the doors do not burn (and cannot be burned by other methods either, except throwing them into lava).\n\nMobs can spawn in a space occupied by a door.\n\nThe sound of opening and closing of a door can be heard up to 16 blocks away, like most mob sounds.\n\nWhen placed using the / setblock command, only one half of a door is placed, because doors are actually two separate blocks.\n\nThe lower half still works, but with graphical bugs, and the upper half does not.\n\nRedstone cannot be used because it updates the half, breaking it.\n\nThe upper half does not drop anything when broken, the lower half drops a normal door.\n\nThis implies that the upper half is dependent on the lower.\n\nA door can be used as a switchable barrier to entity movement.\n\nAlthough primarily used to block movement by mobs and players, a door can also be used to control the movement of boats (for example, a door placed in a two-wide water flow stops a boat when perpendicular to the flow, but allow it to move again when parallel), items and minecarts (a door can stop a falling item or minecart, then allow it to drop again when the door moves), etc.\n\nIn Java Edition, doors provide a breathable space if placed underwater.\n\nIn Bedrock Edition, doors in water source blocks are waterlogged and do not displace water source blocks.\n\nDoors are 0.1875 (3 \u2044 16) blocks thick (0.1825 in Bedrock Edition).\n\nThe rest of a door's space can be moved through freely.\n\nA door occupies two block spaces and both halves normally act as a single barrier, although doors can be opened or closed with a player or mob occupying the bottom block of the door, [1] in which case the player can jump up to land on the bottom half of the door and then again to land on top of the door.\n\nTo open or close a wooden door, use the Use Item/Place Block control.\n\nWhen a door opens or closes, it immediately changes its orientation without affecting anything in the space it \"swings through\".\n\nMoving doors do not push entities the way that pistons do.\n\nVillagers, wandering traders, [BE only ] vindicators  [JE only ], piglins and piglin brutes can open and close wooden doors when pathfinding.\n\nSome zombies can break wooden doors in Hard difficulty.\n\nZombies have a 5% chance to spawn with the ability to break doors.\n\nVindicators spawned from a raid in Normal and Hard difficulty can also break wooden doors, but they do so only to reach targeted players, villagers, or wandering traders.\n\nSome vindicators may sometimes open a wooden door instead of breaking it. [Java Edition only ] Both zombies and vindicators attempt to break wooden doors only when in their \"closed\" state, even if a door is placed so that its \"open\" state blocks access (for example, by facing sideways when placing a door so that it allows passage when closed and blocks passage when open).\n\nIron doors can be opened only with redstone power (a button, a redstone circuit, etc.).\n\nAny mob can activate an iron door by stepping on a pressure plate or by triggering a tripwire.\n\nSee also: Redstone circuit Both wood and iron doors can be controlled with redstone power.\n\nA door is a redstone mechanism component and can be activated by: an adjacent active power component, including above or below: for example, a redstone torch, a block of redstone, a daylight sensor, etc.\n\nan adjacent powered block (for example, a block with an active redstone torch under it), including above or below a powered redstone comparator or redstone repeater facing the door powered redstone dust configured to point at the door or a directionless \"dot\" next to it; a door is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nAll methods of activating a door can be applied to either the top or bottom parts of a door.\n\nWhen activated, a door immediately rotates around its hinge side to its open state.\n\nWhen deactivated, a door immediately returns to its closed state.\n\nAn activated wood door can still be closed by a player or villager and does not re-open until it receives a new activation signal (if a door has been closed \"by hand\", it still needs to be deactivated and then reactivated to open by redstone).\n\nOverworld wooden doors can be used as a fuel in furnaces, smelting 1 item per door.\n\nWooden doors can be placed under note blocks to produce \"bass\" sound.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-226770 \u2191 MC-218122 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j Unavailable with / give command \u2191 a b Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Lower Door Block: Upper Door Block: Note: The videos do not mention or state Crimson, Warped, Bamboo, or Cherry doors, since the videos were uploaded before 1.16.\n\nFor a history of changes to textures and models for each block state, see /Asset history From Java Edition Beta 1.7 to Beta 1.7.2, doors produced placeholder texture particles when broken or punched on some sides.\n\nHistorical sounds: The following content is transcluded from Technical blocks/Doors.\n\nThis section is missing information about Stacking.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\n' Java Edition ' Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Wooden Door (As block name, item does not exist) 13w37a -?: Wooden Door (As block name, item does not exist)?\n\nand onwards: Oak Door Java Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Iron Door Issues relating to \"Door\" are maintained on the bug tracker.\n\nReport issues there.\n\nDoor models have an extra hinge on the opposite side of the actual functional hinge.\n\n[5] Oak Door Spruce Door Birch Door Jungle Door Acacia Door Dark Oak Door Mangrove Door Cherry Door Bamboo Door Crimson Door Warped Door Iron Door Copper Door Exposed Copper Door Weathered Copper Door Oxidized Copper Door Oak Door (item) Spruce Door (item) Birch Door (item) Jungle Door (item) Acacia Door (item) Dark Oak Door (item) Mangrove Door (item) Cherry Door (item) Bamboo Door (item) Crimson Door (item) Warped Door (item) Iron Door (item) Copper Door (item) Exposed Copper Door (item) Weathered Copper Door (item) Oxidized Copper Door (item) Naturally occurring iron door in a stronghold.\n\nFirst picture of brand-new 1.8 variants of doors.\n\nA creeper behind some dark oak doors.\n\nAll types of doors with their respective trapdoors.\n\nArrows shot into a door that was opened, causing a floating bug.\n\nFirst image of three doors being crafted at once.\n\nA closet made from oak doors.\n\nBamboo door concept art.\n\nBamboo door prototype textures.\n\n\u2191 MC-54255 \u2013 \"You can stand on the bottom block of a door, allowing you to climb it like a ladder\" resolved as \"Won't Fix\" \u2191 MC-2844 \u2013 \"Doors have no placement sound.\" resolved as \"Fixed\" \u2191 MCPE-10079 \u2013 \"Doors don't have a placement sound\" resolved as \"Fixed\" \u2191 MCPE-43725 \u2191 MC-106697 \u2014 resolved as \"Works As Intended\".\n\nTaking Inventory: Door \u2013 Minecraft.net on September 29, 2022 Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Dropper",
    "url": "https://minecraft.fandom.com/wiki/Dropper",
    "content": "This article needs to be updated.\n\nPlease update this page to reflect recent updates or newly available information.\n\nReason: Add info about droppers being able to put books into chiseled bookshelves and put discs into jukeboxes.\n\nThis article is about the block that drops arrows as an item.\n\nFor the block that can fire arrows, see Dispenser.\n\nDropper South West North East Up Down South West North East Up Down Renewable Yes Stackable Yes (64) Tool Blast resistance 3.5 Hardness 3.5 Luminous No Transparent No Flammable No Catches fire from lava No A dropper is a low-capacity storage block that can eject its contents into the world or into other containers when given a redstone signal.\n\nA dropper can be mined with a pickaxe, in which case it drops itself and its contents.\n\nIf mined without a pickaxe, the dropper drops only its contents.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA dropper can be used as a container or as a redstone component to move objects.\n\nA dropper can be placed so that its output faces in any direction, including up or down.\n\nWhen placed, the dropper's output faces toward the player.\n\nWith default textures, the droppers output side looks like a face when positioned for horizontal output.\n\nOtherwise, the output side has a square hole.\n\nA dropper cannot be moved by pistons in Java Edition.\n\nGUI of the dropper.\n\nA dropper has 9 slots of inventory space.\n\nTo open the dropper GUI, use the Use Item control.\n\nTo move items between the dropper inventory and the player inventory or hotbar while the dropper GUI is open, drag or shift-click the items.\n\nTo exit the dropper GUI, use the Esc control.\n\nBy default, the GUI of a dropper is labeled \"Dropper\".\n\nA dropper's GUI label can be changed by naming the dropper in an anvil before placing it, or by using the / data command [Java Edition only ] (for example, to label a dropper at (0,64,0) \"Alice's Dropper\", use / data merge block 0 64 0 {CustomName:'\"Alice's Dropper\"'}).\n\nA dropper can be \"locked\" (or subsequently unlocked) by setting the dropper's Lock tag with the / data command.\n\nIf a dropper's Lock tag is not blank, the dropper cannot be accessed except by players holding an item with the same name as the Lock tag's text.\n\nFor example, to lock a dropper at (0,64,0) so that only players holding an item named \"Alice's Key\" can access the dropper, use / data merge block 0 64 0 {Lock:\"Alice's Key\"}. [Java Edition only ] See also: Redstone circuit A dropper can be used to eject items, or push items into another container.\n\nActivation A dropper can be activated by: an adjacent active power component (Exceptions: a redstone torch does not turn ON a dropper it is attached to) an adjacent powered opaque block (strongly-powered or weakly-powered) a powered redstone repeater or redstone comparator facing the dropper powered redstone dust configured to point at the dropper, or on top of it, or a directionless \"dot\" next to it; a dropper is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nIn addition to the methods above, droppers can also be activated by quasi-connectivity. [Java Edition only ] A dropper activates if one of the methods above would activate a mechanism component in the block above the dropper, even if there is no mechanism component there (even if the block above the dropper is air or a transparent block), but only when the dropper receives a block update (including a redstone update within two blocks of the dropper).\n\nA dropper has a 2 redstone tick (4 game ticks, or 0.2 seconds barring lag) delay between activation and a response.\n\nDuring this time, additional inputs are ignored.\n\nBehavior See also: Tutorials/Item elevator \u00a7 Dropper When activated, a dropper waits 2 redstone ticks (4 game ticks, or 0.2 seconds barring lag) and then ejects one item from its inventory.\n\nThe dropper does not continue to eject items while activated \u2014 ejection occurs only on the initial activation (the rising edge of an input signal).\n\nTo eject multiple items, repeatedly activate the dropper with a clock circuit.\n\nIf multiple slots are occupied by items, a random occupied slot is chosen for ejection.\n\nThe slot is chosen when an item is ejected, not when the dropper is initially activated, thus it is possible to move items into or out of a dropper between its activation and item dispensing.\n\nIf the dropper is facing a container, the ejected item is transferred into the container.\n\nIf the container it is facing is full the dropper does not activate.\n\nOtherwise, the item is ejected in the direction the dropper is facing, as if a player had used the Drop control.\n\nEven items that would be treated differently by a dispenser (such as arrows) are simply ejected by a dropper.\n\nDispensers and droppers that are powered directly (or \"strongly powered\") are treated as full containers.\n\nThat is, a dropper will not activate to transfer its ejected item into a container if that container is a strongly powered dropper or dispenser.\n\nA dropper makes a clicking noise (the random.click sound event) when activated empty, when ejecting items into air, or when ejecting items into any block other than a chest type container or barrel or another dropper.\n\nIt is silent when it successfully transfers an item into any kind of chest or barrel, or another dropper.\n\nA dropper is an opaque block, so powering it directly can cause adjacent mechanism components (including other droppers) to activate as well.\n\nA line of droppers, each pushing items into the next dropper, is known as a dropper pipe.\n\nA dropper pipe must be clocked to move items, but can be clocked to move items faster than a hopper pipe's transfer rate.\n\nWhen a dropper pipe pushes items upward, it is known as a droppervator (short for \"dropper elevator\").\n\nEvery dropper activated by the same redstone signal will process its activity during the same game tick.\n\nHowever, the dropper that is directly powered will eject its item first, and then the adjacent droppers will eject their items.\n\nThe result is that, in a dropper pipe or droppervator, the item in the dropper that gets directly powered by redstone will move 2 spaces down the pipe.\n\nThis item will first get ejected by the directly powered dropper and then, on the same game tick, it will get ejected by the adjacent dropper.\n\nDroppers can be placed under note blocks to produce \"bass drum\" sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c d e f g h i The dropper reuses other containers' sound events instead of having its own, see MC-98316.\n\nBedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A dropper has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nDropper slots are numbered 0-8 with 0 in the top left corner.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the dropper when it is next opened, or the items are otherwise interacted with.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted uses a random seed.\n\n[note 1] Lunar: Exists only in the april fools snapshot 23w13a_or_b.\n\nOptional.\n\nWhen set to any full number from -128 to 127, turns it to a lunar base dropper, and placing light or heavy pressure plate on top of it will create the lunar base structure.\n\n\u2191 a b Both loot table tags get removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nThe first image of droppers (bottom) released by Mojang.\n\nThe 13w03a banner featuring a dropper and a minecart with hopper.\n\nA dropper in action.\n\nIssues relating to \"Dropper\" are maintained on the bug tracker.\n\nReport issues there.\n\nDispenser Hopper Block of the Week: Dropper \u2013 Minecraft.net on October 8, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Enchanting mechanics",
    "url": "https://minecraft.fandom.com/wiki/Enchanting_mechanics",
    "content": "This article is about the mechanics of enchanting.\n\nWhenever the player places an eligible item on the enchanting table, the enchantment levels available are randomly generated for each slot using the formula below.\n\nThe enchantment level is dependent upon the number of nearby bookshelves (capped at 15) and which slot position it is in.\n\nBase enchantment level available (base) = (randomInt(1,8) + floor(b / 2) + randomInt(0, b)), where b is the number of nearby bookshelves (maximum of 15) and x..\n\ny generates a uniformly distributed random integer between x and y, inclusive.\n\nThis is then modified according to the slot position: Top slot enchantment level = floor(max(base / 3, 1)) Middle slot enchantment level = floor((base \u00d7 2) / 3 + 1) Bottom slot enchantment level = floor(max(base, b \u00d7 2)) where max(x, y) returns the greater of two values x and y.\n\nNote that a higher experience cost for a specific slot does not necessarily mean that the enchantments from that slot are better than the others with less cost.\n\nIn Creative mode, no levels of experience are necessary for enchantments.\n\nNearby bookshelves raise the available enchantment levels; without any bookshelves, the experience level requirement never exceeds 8.\n\nIn order to have an effect, a bookshelf must be placed exactly 2 blocks, laterally, off the enchanting table and be on the same level or one block height above the table.\n\nAdditionally, the bookshelf must not be blocked.\n\nThe meaning of \"blocked\" differs on Java Edition and Bedrock Edition.\n\nThe 2-high space between the bookshelf and table must be air (even a torch, snow cover or carpet blocks the effect), where \"between\" is as shown in the following diagrams (the white spaces are air, and the do not matter): Like this from the top: or and like this from the side: or The space between the bookshelf and table, at the height of the bookshelf must be air or a replaceable block like snow or grass.\n\nFor corner bookshelves, the space between is 1 block diagonal from the enchanting table; for all other bookshelves, the gap must be to the side of the enchanting table.\n\nThis is illustrated in the following diagrams (the white spaces are air, and the do not matter): Like this from the top: or and like this from the side: or The glyph particles, which fly from bookshelves, follow different rules and may appear even if the bookshelves are not enhancing the table.\n\nThere are many possible bookshelf arrangements that can reach the enchantment limit.\n\nA simple method is to surround the enchanting table with a 1-block high square of bookshelves with an empty space anywhere on the perimeter: Another alternative that is now available is to build a 'library corner' where each bookshelf is two blocks high, as in the plan below.\n\nThis arrangement gives space for 16 shelves, which is one more than needed, so if the corner bookshelf column cannot be seen, removing one of the two bookshelves in that does not have any effect, either technically or visually.\n\nAs enchantments offered depend on the enchantment level and the enchantment level depends on the number of active bookshelves, an easy way to change the enchantments offered is to disable bookshelves by placing torches between them and the enchanting table.\n\nThat way one can still have the entire 'ring' of bookshelves around the table but get lower-level enchantments.\n\nBreaking the torches restores the effect of the bookshelves.\n\nWith the layout shown here, enchantments with any number of bookshelves from 0 to 15 may be easily obtained: With the layout shown here, enchantments with any number of bookshelves from 0 to 15 may be easily obtained: \"Enchantment level\" is the required experience level (the green number on the bottom-right).\n\n\"Enchantment power\" is the strength of the particular enchantment.\n\nFor example, \"Sharpness IV\" has a power of 4.\n\nThe enchantment algorithm uses a three-step process.\n\nThe first thing that Minecraft does is apply two modifiers to the base enchantment level.\n\nEach modifier is restricted to a certain range, with numbers close to the middle of the range more common than those near the ends.\n\nThe first modifier is based on the item's \"enchantability,\" which depends on the material and the type of the item (see the table below).\n\nOther enchantable items such as books, bows, crossbows, tridents, and fishing rods have an enchantability of 1 for this purpose.\n\nMinecraft picks a number between 0 and half the enchantability, then adds that number plus one to the enchantment level.\n\nThis random value follows a triangular distribution (like rolling a pair of dice and adding) so results close to a quarter of the enchantability are much more likely than results at the extremes.\n\nThe modified enchantment level is calculated with the following formula: Modified enchantment level = B + R 1 + R 2 + 1 Where: R 1 and R 2 are two individual randomly generated integers: R 1 = randomInt(0, floor(E / 4)) R 2 = randomInt(0, floor(E / 4)) B is the base enchantment level.\n\nE is the enchantability of the item.\n\nNext, Minecraft picks a value between 0.85 and 1.15, again with a triangular distribution.\n\nThe modified enchantment level is multiplied by this value (so it could increase or decrease by up to 15%) and then rounded to the nearest integer.\n\n// Returns a uniformly distributed random integer between 0 and n\u20131, inclusive function randomInt(n); // Returns a uniformly distributed random real (fractional) number between 0 (inclusive) and 1 (exclusive) function randomFloat(); // Returns the real number n rounded to the nearest integer.\n\nfunction round(n); // Generate a random number between 1 and 1+(enchantability/2), with a triangular distribution int rand_enchantability = 1 + randomInt(enchantability / 4 + 1) + randomInt(enchantability / 4 + 1); // Choose the enchantment level int k = chosen_enchantment_level + rand_enchantability; // A random bonus, between.85 and 1.15 float rand_bonus_percent = 1 + (randomFloat() + randomFloat() - 1) * 0.15; // Finally, we calculate the level int final_level = round(k * rand_bonus_percent); if (final_level < 1) final_level = 1 The source is Minecraft 1.8 source code.\n\nA sword with several enchantments.\n\nNow, based on the modified level, Minecraft makes a list of all enchantment types that can be applied to the target item along with the power that each enchantment has.\n\nThe power of each enchantment type is determined by the level and the values in the enchantments levels table.\n\nFor each power value of an enchantment type, there is a minimum and maximum modified level that can produce the enchantment at that power.\n\nIf the modified enchantment level (calculated at the first step) is within the range of an enchantment's possible power values, then the enchantment is assigned the modified enchantment level as power.\n\nIf the modified level is within two overlapping ranges for the same enchantment type, the higher power value is used.\n\nSome enchantments are \"treasure enchantments\" (shown in the table below), meaning they can never be created by an enchanting table, and can be discovered only in certain situations: when generating chest loot (equipment and books), when fishing, when generating enchanted book trades, when bartering, and when an enchanted book is dropped by a raiding illager. [Bedrock Edition only ] Now that it has a list of the possible enchantments for the item, Minecraft must pick some of them to apply.\n\nEach enchantment has a statistical \"weight\".\n\nEnchantments with higher weights have a higher chance of being selected.\n\nMinecraft uses the following weighted random selection algorithm: Calculate the total weight of all enchantments in the list (T).\n\nThe total of every enchantment is 136.\n\nPick a random integer from 0 to T \u2013 1 as a number w.\n\nIterate through each enchantment in the list, subtracting its weight from w.\n\nIf w is now negative, select the current enchantment.\n\nThis algorithm produces the same results as listing each enchantment the number of times given by its weight, then choosing a random entry from the combined list.\n\nSo, for each enchantment in the list, the probability of it being selected is: P = w / T Where: w is the enchantment's weight.\n\nT is the total weight of all enchantments in the list.\n\nShields can be given the enchantments Unbreaking, Mending, Curse of Vanishing, and Curse of Binding by using Enchanted Books.\n\nThe player always gets at least one enchantment on an item, and there is a chance of receiving more.\n\nAdditional enchantments are chosen by this algorithm: With probability (modified level + 1) / 50, keep going.\n\nOtherwise, stop picking bonus enchantments.\n\nRemove from the list of possible enchantments anything that conflicts with previously-chosen enchantments.\n\nPick one enchantment from the remaining possible enchantments (based on the weights, as before) and apply it to the item.\n\nDivide the modified level in half, rounded down (this does not affect the possible enchantments themselves, because they were all pre-calculated in Step Two).\n\nRepeat from the beginning.\n\nWhen enchanting books using an enchanting table, if multiple enchantments were generated, then one selected at random is removed from the final list.\n\nThis does not apply to other sources of enchanted books that use enchantment mechanics, such as fishing or chests in generated structures.\n\nSome enchantments conflict with other enchantments and thus both can't be enchanted into the same item, effectively taking down the possibility for one to get an overpowered weapon.\n\nThe rules for enchantment conflicts are: Every enchantment conflicts with itself.\n\n(The player can't get a tool with two copies of the Efficiency enchantment.) All damage enchantments (Sharpness, Smite, and Bane of Arthropods) conflict with each other.\n\nAll protection enchantments (Protection, Blast Protection, Fire Protection, Projectile Protection) conflict with each other.\n\nSilk Touch conflicts with Fortune, Looting, and Luck of the Sea.\n\nDepth Strider and Frost Walker conflict with each other.\n\nMending and Infinity conflict with each other.\n\nRiptide conflicts with Loyalty and Channeling.\n\nMultishot and Piercing conflict with each other.\n\nConflicting enchantments may appear on an item with specially-crafted / give commands.\n\nThe behavior of such items should not be relied upon, but in general: An item with multiple copies of the same enchantment uses the level of the first copy of that enchantment in the list.\n\nFor armor with conflicting protection enchantments, all enchantments take effect individually.\n\nFor weapons with conflicting damage enchantments, all enchantments take effect individually.\n\nFor tools with both Silk Touch and Fortune, Silk Touch takes priority over Fortune on blocks affected by both enchantments.\n\nFortune still applies to blocks such as crops that are not affected by Silk Touch.\n\nFor bows with both Mending and Infinity, both enchantments work individually.\n\nFor tridents with both Loyalty and Riptide, Riptide still functions normally but the trident can no longer be thrown by the player.\n\nHowever, tridents can still be thrown using dispensers [Bedrock Edition only ].\n\nFor crossbows with both Multishot and Piercing, both enchantments work individually.\n\nA chart showing all possible enchantments on diamond tools.\n\n[needs updating ] There was a Web page for testing enchantments.\n\nWhile it no longer exists, it is still available on the WayBack Machine This site provides some ability to test enchantments, although its interface is significantly less verbose on the specifics",
    "category": "Mechanics"
  },
  {
    "title": "Enchanting/Levels",
    "url": "https://minecraft.fandom.com/wiki/Enchanting/Levels",
    "content": "Please note that these are modified enchantment levels, not normal ones.\n\nThis was taken directly from the code, do not modify this list.\n\nThese are not the levels you need to pay for an enchantment.\n\nNote also that this is not just the base enchanting level provided by bookshelves; you must also take into account the modification of levels that occur in step one.\n\nThe minimum values are all calculated using a linear function y = kx+m where y is the calculated minimum value, x is the current enchantment power level and k and m varies between different enchantments.\n\nThe maximum values can either be: the enchantment's minimum value plus a constant, the default minimum value of a generic enchantment plus a constant, or a constant level.\n\nAll values obtained from 1.14.4 source code.\n\nVery low modified enchantment levels can fall outside the ranges of all valid enchantments for certain items.\n\nIf this happens, the item is left unenchanted, but the player is not charged any experience levels and can try enchanting it again.",
    "category": "Mechanics"
  },
  {
    "title": "Etho Slab",
    "url": "https://minecraft.fandom.com/wiki/Etho_Slab",
    "content": "This article documents an April Fools' joke.\n\nThis feature was exclusively part of a joke version and is not currently planned for addition to regular Minecraft.\n\nIt is documented here on the wiki due to being officially-released content by Mojang Studios, even if not present in a final version.\n\nEtho Slab Slab Double Slab Renewable No Stackable Yes (64) Tool Any tool Blast resistance?\n\nHardness?\n\nLuminous None Transparent No Flammable Yes (15) Catches fire from lava Yes The etho slab is a joke slab introduced exclusively in Java Edition 2.0.\n\nIt is a reference to the YouTube channel EthosLab.\n\nPunching the block breaks it instantly and drops in the item form.\n\nEtho slabs are crafted using 3 TNT blocks.\n\nEtho slabs behave like TNT although there is a 25% chance to spawn a falling anvil one block above the nearest player up to 20 blocks away.\n\n\u2191 a b MC-177082 [verify ] Blocks with data value 1 are called \"Etho Slab (Lit??)\" and explode on punch.\n\n\"Etho Slab\" is an April Fools feature, and as such issues related to it cannot be fixed.\n\nRedstone View at: Template:Redstone/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Explosion",
    "url": "https://minecraft.fandom.com/wiki/Explosion",
    "content": "\"Exploding\" redirects here.\n\nFor the enchantment, see MCD:Exploding.\n\nA TNT explosion.\n\nAn explosion is a physical event, generally destructive, that can be caused by several different circumstances.\n\nIt can destroy nearby blocks, propel and damage nearby players, entities, and their armor, and cause one or more fires under correct circumstances.\n\nExplosions produce a \"shockwave\" particle effect.\n\nMultiple close explosions may propel objects further, but have no cumulative effect on the destruction of a block - for example, no amount of TNT will destroy a block of obsidian, even if it all explodes at once.\n\nThis is because explosion damage to blocks is evaluated individually (per explosion), and blocks' blast resistance do not become \"weakened\" from previous explosions.\n\nThe propulsion effect of explosions is often used for TNT cannons, and can also be used to shoot out gravity affected blocks.\n\nDespite doing damage to entities, fireworks and wind charges do not destroy terrain and as such are not counted as conventional explosions.\n\nLab tables sometimes perform a non-terrain-damaging explosion when creating garbage item. [Bedrock Edition and Minecraft Education only ] Comparison of explosion craters, from a charged creeper (left), TNT (center), and regular creeper (right).\n\nThe rays from the explosion center to points that are uniformly distributed on the surface of a cube centered at the explosion with an edge length of 2.\n\n(However, this defines only their directions, not their length).\n\nThe roughly spherical pattern of blocks destroyed can be seen here.\n\nAn explosion can destroy nearby blocks.\n\nIts blast effect is evaluated independently on many explosion rays originating from the explosion center, as shown in the right figure.\n\nAn explosion must be powerful (power ~1542860 [verify ]) to destroy a bedrock block.\n\nA cube around the explosion is divided into a 16\u00d716\u00d716 grid, and rays are created from the center to each outer point of this grid, meaning that there are a total of 1352 rays.\n\nEach ray is given an intensity, calculated as (0.7 + [a random value from 0 to 0.6]) \u00d7 [power ].\n\nFor every attenuation step (0.3 blocks along the ray), the intensity of the ray is reduced by 0.225 (0.3\u00d70.75).\n\nIf the block passed through is anything other than air, it is further reduced by (blast resistance + 0.3) \u00d7 0.3.\n\nThe ray destroys any blocks that could not reduce the ray intensity to zero at any checkpoint.\n\nFrom the above process, the following results can be deduced (where \u230a x \u230b {\\displaystyle \\lfloor x \\rfloor} is the floor function): The maximum blast radius (assuming no block absorption) is \u230a 1.3 \u00d7 power 0.225 \u230b \u00d7 0.3 {\\displaystyle \\left\\lfloor 1.3\\times\\frac{\\text{power}}{0.225}\\right\\rfloor\\times 0.3} = 10.4 (charged creepers), 6.9 (TNT), 5.2 (creepers), 1.7 (fireballs).\n\nFor example, a TNT explosion can destroy a torch 7 blocks away.\n\nHowever, how many blocks an explosion can destroy is non-deterministic and also dependent on the specific location of the explosion.\n\nThe minimum block resistance required to absorb maximum blast force of an explosion happening in nearby air = 1.3 \u00d7 p o w e r \u2212 0.75 \u00d7 a t t e n u a t i o n s t e p s \u00d7 s t e p l e n g t h s t e p l e n g t h \u2212 0.3 {\\displaystyle \\frac{1.3\\times \\mathsf{power}-0.75\\times \\mathsf{attenuation\\ steps} \\times \\mathsf{step\\ length}}{\\mathsf{step\\ length}} - 0.3}.\n\nTo not be destroyed, a block has to absorb all blast force at the first checkpoint in it.\n\nThe attenuation steps is subject to collision restrictions.\n\nFor explosion in air, there is at least one attenuation step.\n\nTNT and creeper explosions are always 0.49 and 0.5 blocks away from nearest block (2 attenuation steps), but fireball explosions can happen anywhere (1 attenuation step).\n\nThus, the block resistances are 24.2 (charged creepers), 15.534 (TNT), 11.2 (creepers), 3.284 (fireballs).\n\nSo water, lava (the stationary block), obsidian, and bedrock are always indestructible, and fences and less blast-resistant blocks can be destroyed by fireballs.\n\nThese are theoretical values, and in reality less resistant blocks are not always destroyed; there is no such mechanic.\n\nDestroyed blocks have a 1 \u2044 p chance of dropping as collectible resources, where p is the explosion power.\n\nSo, blocks destroyed by an (uncharged) creeper 's explosion have a 1 \u2044 3 chance of dropping.\n\nHowever, dragon eggs, beacons, conduits, heads, shulker boxes and decorated pots always drop from explosions, though the items may be destroyed by subsequent explosions.\n\nIn addition, explosions from TNT and minecarts with TNT cause a 100% drop rate.\n\nIn Java Edition, the drop chance of blocks in explosions can be customized via three game rules: blockExplosionDropDecay controls whether block-based explosions (e.g.\n\na bed explosion) cause only some blocks to drop.\n\nIt is set to true by default.\n\nAn end crystal explosion is controlled by this game rule, despite the end crystal being an entity.\n\nmobExplosionDropDecay controls whether mob-based explosions (e.g.\n\na creeper explosion) cause only some blocks to drop.\n\nIt is set to true by default.\n\ntntExplosionDropDecay controls whether TNT explosions cause only some blocks to drop.\n\nIt is set to false by default.\n\nThe precious blocks listed above always drop from explosions, regardless of the values of these game rules.\n\nAn explosion has different effects on entities than blocks.\n\nEntities are damaged and propelled by an explosion if within its damage radius of 2 \u00d7 power.\n\nNote that the \"damage radius\" is different from the blast radius of explosion effect on blocks.\n\nFor every entity within a 2\u00d7[power ] block sphere of the explosion center, the impact is (1-[distance from explosion/damage radius])\u00d7[exposure ] (see section below on exposure).\n\nThe entity is damaged by ((impact \u00d7 impact + impact)\u00d77\u00d7 power +1) rounded down (armor enchantments for damage are handled separately).\n\nThis is scaled by difficulty.\n\nAfter damage, exposure is reduced by (exposure \u00d7[max Blast Protection from all armor]\u00d70.15).\n\nThe entity's eyes are propelled along the ray from the explosion center by the new exposure.\n\nFrom the above process, the following results can be deduced: Entities always get at least 1 point of damage if they are within the radius, regardless of their explosion exposure.\n\nThe maximum damage that entities can take (at the explosion center with 100% exposure and normal difficulty) = (1 \u00d7 1 + 1) \u00d7 7 \u00d7 power + 1 point of damage = 99, (Wither newly spawned by the player), 85 (charged creepers), 71 (Beds when using in the Nether or in the End), 57 (TNT), 43 (creepers), 15 (fireballs).\n\nWhen entities are away or covered by blocks from the explosion center, they take less damage.\n\nThe maximum velocity gain that an entity can obtain from a single explosion is 1, at the explosion center with 100% exposure.\n\nA primed TNT AABB has directionally asymmetrical sample points (1/2.96 spacing) because of rounding.\n\nThe entity's bounding box is divided into a [2\u00d7 width +1] by [2\u00d7 height +1] by [2\u00d7 depth +1] grid of unequally spaced points.\n\nA ray is drawn from the explosion center to each point.\n\nThe exposure of the entity is the percentage of these rays that are unobstructed by solid blocks.\n\nThe approximation algorithm has sampling error that results in directional asymmetry of propulsion.\n\nFor example, a typical TNT cannon has maximum range in the west direction partly because the primed TNT has largest sampled exposure in that direction.\n\n[verify ] If the explosion has the ability, it randomly starts fires in \u2153 of all destroyed air blocks that are above opaque blocks.\n\nIn addition to the initial lag from processing the explosion, which subsides once the explosion has occurred, there can also be a prolonged fallout from an explosion, that consists of dropped items, liquid physics, and increased render-complexity of the crater.\n\nTechnically, the dropped items disappear after 5 minutes, however those 5 in-game minutes may take a long time to process during extreme lag.\n\nCertain rules and commands can be used to avoid this prolonged lag: setting the game rule doTileDrops to false, for instance with / gamerule doTileDrops false, prevent dropped items from being generated by explosions.\n\nAlso, the command / kill @e[type=item] destroys all dropped items.\n\n\"Blast resistance\" redirects here.\n\nFor the enchantment, see Blast Protection.\n\nNot to be confused with Hardness.\n\nThe following table shows blast resistance values for blocks as shown in Minecraft's code.\n\nIn Add-ons for Bedrock Edition, these values are multiplied by 5 when used for the \"explosion_resistance\" value in the \"minecraft:descructible_by_explosion\" component.\n\n[edit values ] Block name Blast resistance Allow?\n\nBoard?\n\nBorder?\n\nDeny?\n\nPoster?\n\nSlate?\n\nBarrier 3,600,000.8 Light Block 3,600,000.8 Bedrock 3,600,000 Command Blocks 3,600,000 End Gateway 3,600,000 End Portal 3,600,000 End Portal Frame 3,600,000 Jigsaw Block 3,600,000 Structure Block 3,600,000 Ancient Debris 1,200 Anvil 1,200 Block of Netherite 1,200 Crying Obsidian 1,200 Respawn Anchor 1,200 Enchanting Table 1,200 Obsidian 1,200 Reinforced Deepslate 1,200 Ender Chest 600 Bubble Column 100 Lava 100 Water 100 Dragon Egg 9 End Stone 9 End Stone Bricks 9 End Stone Brick Wall 9 Andesite 6 Blackstone 6 Block of Coal 6 Block of Copper 6 Block of Diamond 6 Block of Emerald 6 Block of Gold 6 Block of Iron 6 Block of Raw Copper 6 Block of Raw Gold 6 Block of Raw Iron 6 Block of Redstone 6 Bricks 6 Brick Stairs 6 Chain 6 Chiseled Deepslate 6 Cobbled Deepslate 6 Cobblestone 6 Cobblestone Stairs 6 Coral Blocks 6 Deepslate 6 Deepslate Bricks 6 Deepslate Tiles 6 Diorite 6 Gilded Blackstone 6 Granite 6 Grindstone 6 Iron Bars 6 Jukebox 6 Lightning Rod 6 Mossy Cobblestone 6 Nether Bricks 6 Nether Brick Fence 6 Nether Brick Stairs 6 Polished Deepslate 6 Prismarine 6 Purpur Block 6 Purpur Pillar 6 Purpur Slab 6 Purpur Stairs 6 Red Nether Bricks 6 Smooth Quartz Block 6 Smooth Quartz Slab 6 Smooth Quartz Stairs 6 Smooth Stone 6 Stone 6 Stone Bricks 6 Stone Brick Stairs 6 Stone Slabs 6 Stone Walls (except End, Sandstone) 6 Tuff 6 Bell 5 Iron Door 5 Iron Trapdoor 5 Monster Spawner 5 Hopper 4.8 Basalt 4.2 Polished Basalt 4.2 Smooth Basalt 4.2 Terracotta 4.2 Cobweb 4 Lodestone 3.5 Blast Furnace 3.5 Dispenser 3.5 Dropper 3.5 Furnace 3.5 Lantern 3.5 Soul Lantern 3.5 Smoker 3.5 Stonecutter 3.5 Block name Blast resistance Observer 3 Beacon 3 Block of Lapis Lazuli 3 Coal Ore 3 Cocoa 3 Conduit 3 Copper Ore 3 Deepslate Coal Ore 3 Deepslate Copper Ore 3 Deepslate Diamond Ore 3 Deepslate Emerald Ore 3 Deepslate Gold Ore 3 Deepslate Iron Ore 3 Deepslate Lapis Lazuli Ore 3 Deepslate Redstone Ore 3 Diamond Ore 3 Emerald Ore 3 Gold Ore 3 Iron Ore 3 Lab Table 3 Lapis Lazuli Ore 3 Mud Bricks 3 Nether Quartz Ore 3 Packed Mud 3 Planks 3 Pointed Dripstone 3 Redstone Ore 3 Sculk Catalyst 3 Sculk Shrieker 3 Wooden Fences 3 Wooden Fence Gates 3 Wooden Doors 3 Wooden Slabs 3 Wooden Stairs 3 Wooden Trapdoors 3 Blue Ice 2.8 Barrel 2.5 Cartography Table 2.5 Chest 2.5 Crafting Table 2.5 Dried Kelp Block 2.5 Fletching Table 2.5 Lectern 2.5 Loom 2.5 Smithing Table 2.5 Trapped Chest 2.5 Bone Block 2 Campfire 2 Soul Campfire 2 Cauldron 2 Compound Creator 2 Shulker Box 2 Wood 2 Concrete 1.8 Amethyst Bud 1.5 Amethyst Cluster 1.5 Block of Amethyst 1.5 Bookshelf 1.5 Budding Amethyst 1.5 Sculk Sensor 1.5 Glazed Terracotta 1.4 Bamboo 1 Banners 1 Dripstone Block 1 Jack o'Lantern 1 Heads 1 Nether Wart Block 1 Pumpkin 1 Shroomlight 1 Signs 1 Warped Wart Block 1 Block of Quartz 0.8 Note Block 0.8 Quartz Stairs 0.8 Red Sandstone 0.8 Red Sandstone Stairs 0.8 Sandstone 0.8 Sandstone Stairs 0.8 Sandstone Walls 0.8 Wool 0.8 Calcite 0.75 Infested Blocks 0.75 Activator Rail 0.7 Detector Rail 0.7 Powered Rail 0.7 Rail 0.7 Mangrove Roots 0.7 Muddy Mangrove Roots 0.7 Dirt Path 0.65 Beehive 0.6 Clay 0.6 Composter 0.6 Farmland 0.6 Grass Block 0.6 Gravel 0.6 Honeycomb Block 0.6 Sponge 0.6 Wet Sponge 0.6 Mycelium 0.6 Block name Blast resistance Brewing Stand 0.5 Buttons 0.5 Cake 0.5 Coarse Dirt 0.5 Concrete Powder 0.5 Dirt 0.5 Frosted Ice 0.5 Hay Bale 0.5 Ice 0.5 Lever 0.5 Magma Block 0.5 Mud 0.5 Packed Ice 0.5 Piston 0.5 Piston Head 0.5 Podzol 0.5 Pressure Plates 0.5 Rooted Dirt 0.1 Sand 0.5 Soul Sand 0.5 Soul Soil 0.5 Sticky Piston 0.5 Target 0.5 Turtle Egg 0.5 Weighted Pressure Plates 0.5 Cactus 0.4 Chorus Flower 0.4 Chorus Plant 0.4 Ladder 0.4 Netherrack 0.4 Nylium 0.4 Bee Nest 0.3 Froglight 0.3 Glowstone 0.3 Glass 0.3 Glass Pane 0.3 Glowstone 0.3 Redstone Lamp 0.3 Sea Lantern 0.3 Stained Glass 0.3 Stained Glass Panes 0.3 Tinted Glass 0.3 Powder Snow 0.25 Beds 0.2 Daylight Detector 0.2 Glow Lichen 0.2 Leaves 0.2 Mushroom Blocks 0.2 Sculk 0.2 Sculk Vein 0.2 Snow Block 0.2 Vines 0.2 Candle 0.1 Carpets 0.1 Big Dripleaf 0.1 Moss Block 0.1 Moss Carpet 0.1 Snow 0.1 Air 0 Azalea 0 Beetroots 0 Carrots 0 Cave vines 0 Colored Torches 0 Corals 0 Coral Fans 0 Dead Bush 0 Element 0 End Rod 0 Fire 0 Flowers 0 Flower Pot 0 Frogspawn 0 Fungus 0 Grass 0 Hanging Roots 0 Honey Block 0 Kelp 0 Lily Pad 0 Locked chest 0 Melon Stem 0 Moving Piston 0 Mushrooms 0 Nether Portal 0 Nether Sprouts 0 Nether Wart 0 Potatoes 0 Pumpkin Stem 0 Redstone Dust 0 Redstone Comparator 0 Redstone Repeater 0 Redstone Torch 0 Roots 0 Saplings 0 Scaffolding 0 Seagrass 0 Sea Pickle 0 Slime Block 0 Small Dripleaf 0 Soul Fire 0 Spore Blossom 0 Structure Void 0 [JE only ] Sugar Cane 0 Sweet Berry Bush 0 TNT 0 Torch 0 Soul Torch 0 Tripwire 0 Tripwire Hook 0 Twisting Vines 0 Underwater Torch 0 Underwater TNT 0 Weeping Vines 0 Wheat 0 The player receives damage, if within these radii of a 100% exposure ground 1 block, 2 blocks, or 4 blocks of TNT explosion, with the amount of damage labeled on each circle in the figures below.\n\nJava Edition: Bedrock Edition: This section is missing information about Legacy Console Edition.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nExplosions with a power greater than 100 look mostly the same from the outside, as only certain lines are used to determine if a block breaks.\n\nHowever, some of those lines continue underground.\n\nExplosions that occur in flowing water or lava apply propulsion to entities, but don't affect any blocks, regardless of the blocks' blast resistance.\n\nUnderwater explosions don't emit smoke particles.\n\nExplosions can redirect projectiles, including ender pearls.\n\nAn explosion just after a mob's death can propel the mob 's body.\n\nIf primed TNT explodes in a large, solid cube of stone blocks, it creates an exact 3\u00d73\u00d73 cube inside.\n\nExperimentation confirms that a TNT detonation causes a 3\u00d73 hole in a solid block of anything with a blast resistance less than that of water, but more than 2.5 (e.g.\n\ncrafting tables).\n\nThis implies that 3\u00d73 is the minimum possible result of a TNT detonation without the blast being resisted altogether.\n\nIf a falling sand entity falls into primed TNT when in water, it deals block damage.\n\nEvery block that has a higher blast resistance than cobwebs can block a ghast 's fireball and remain intact.\n\n\u2191 MC-165991 \u2191 MC-147255 Gameplay View at: Template:Gameplay/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Fence Gate",
    "url": "https://minecraft.fandom.com/wiki/Fence_Gate",
    "content": "\"Gate\" redirects here.\n\nFor other uses, see Gate (disambiguation).\n\nFence Gate Closed Opened Renewable Yes Stackable Yes (64) Tool Blast resistance 3 Hardness 2 Luminous No Transparent Yes Flammable Overworld: Yes (5) Nether: No Catches fire from lava Overworld: Yes Nether: No A fence gate is a block that shares the functions of both the door and the fence.\n\nA fence gate can be broken with anything, but an axe is fastest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nOak Oak fence gates generate as part of: Plains villages Spruce Spruce fence gates generate as part of: Taiga, snowy tundra and snowy taiga [BE only ] villages Jungle Jungle fence gates generate as part of: Desert villages Acacia Acacia fence gates generate as part of: Savanna villages Dark oak Dark oak fence gates generate as part of: Woodland mansions A fence gate can provide access to a fenced-in area.\n\nA fence gate can be used as a switchable barrier that can be opened and closed by hand or by redstone power.\n\nTo place a fence gate, use the Place Block control while pointing at a block facing the space the fence gate should occupy.\n\nWhen placed, a fence gate automatically faces toward the player who placed it, regardless of any other fences around it.\n\nA fence gate can be placed whether there is a solid block beneath it or not.\n\nFences, nether brick fences and walls connect to fence gates, but glass panes and iron bars do not.\n\nA fence gate floats in mid-air when placed with no connection to anything else.\n\nA fence gate can be used as a switchable barrier.\n\nTo open or close a fence gate, use the Use Item control.\n\nWhen a fence gate opens or closes, it immediately changes its orientation without affecting anything in the space it \"passes through\"\u2014moving fence gates don't push entities the way that pistons do.\n\nWhen opened by hand, a fence gate always opens away from the player.\n\nAlthough a fence gate appears to be only one block tall, a closed fence gate is a barrier one and a half blocks high.\n\nMost mobs cannot jump over a fence gate, and entities on top of the fence gate stand half a block above it.\n\nAn open fence gate is completely non-solid, similar to a sign or a torch.\n\n[1] Multiple open fence gates next to each other can be passed through as if the entire space is open.\n\nHostile mobs recognize closed fence gates as a block and cannot detect players through it unless they were already detected.\n\nThe sound of opening and closing of a fence gate can be heard up to 16 blocks away, like most mob sounds.\n\nSee also: Redstone circuit A fence gate can be controlled with redstone power.\n\nA fence gate is a redstone mechanism and can be activated by: an adjacent active power component, including above or below: for example, a redstone torch, a block of redstone, a daylight sensor, etc.\n\nan adjacent powered block (for example, a block with an active redstone torch under it), including above or below a powered redstone comparator or redstone repeater facing the fence gate powered redstone dust configured to point at the fence gate or a directionless \"dot\" next to it; a fence gate is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nWhen activated, a fence gate opens immediately.\n\nWhen deactivated, a fence gate closes immediately.\n\nAn activated fence gate can still be closed by a player, and won't re-open until it receives a new activation signal (if a fence gate has been closed \"by hand\", it still needs to be deactivated and then reactivated to open by redstone).\n\nFence gates can be moved by pistons.\n\nWhen an activated fence gate is moved by a piston to a position where it shouldn't be activated, it doesn't change its state until it receives a redstone update.\n\nOverworld wooden fence gates can be used as a fuel in furnaces, smelting 1.5 items per fence gate.\n\nFence gates can be placed under note blocks to produce \"bass\" sounds.\n\nWhile a fence gate cannot be equipped in the head slot in Survival mode, equipping it using commands causes it to appear as eyeglasses.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 a b Due to MCPE-168021, this sound plays less often than it should Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k Available with / give command.\n\n\u2191 a b c d e f g h i j k The block's direct item form has the same id as the block.\n\nMain article: Block states Java Edition: Bedrock Edition: For a more in-depth breakdown of changes to textures and models, including a set of renders for each state combination, see /Asset history Issues relating to \"Fence Gate\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-252813 \u2014 \"Open fence gates don't have any collision\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 http://web.archive.org/web/20111231204100/http://getsatisfaction.com/mojang/topics/gates_for_fences \u2191 \"As the question was brought up, yes there are fence gates in 1.8.\n\nNot 100% satisfied with their looks though.\n\nYou'll see at PAX Prime\" \u2013 @jeb_ (Jens Bergensten) on X, August 19, 2011 \u2191 MCPE-44296 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Honey Block",
    "url": "https://minecraft.fandom.com/wiki/Honey_Block",
    "content": "Not to be confused with Honeycomb Block.\n\nHoney Block Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Partial [a] Flammable No Catches fire from lava No Honey blocks are storage blocks equivalent to four honey bottles.\n\nHoney blocks are sticky and can be used in conjunction with pistons to move blocks and adhered entities.\n\nHoney blocks can be broken instantly, and always drop as an item, regardless of what is used to mine them.\n\nThe 2\u00d72 inventory crafting grid is sufficient to craft a honey block.\n\nUnlike the slime block, the honey block does not carry a redstone signal because it is a transparent block. [Java Edition only ] When being moved by a piston, entities on a honey block's top surface move with it.\n\nThey are not launched in the direction of the push, as a slime block would do.\n\nWhen a honey block is moved by a piston, it attempts to move all adjacent blocks in the same direction.\n\nA honey block can move any block a sticky piston can pull, except for glazed terracotta and slime blocks.\n\nThe blocks that are moved may, in turn, push other blocks, as if they were being pushed by a piston.\n\nFor example, a honey block sitting on the ground attempts to move the ground block underneath itself, which pushes additional ground blocks in the direction of motion.\n\nWhen the adjacent block that is moved is also a honey block, that block also attempts to move all its adjacent blocks.\n\nFor example, a 2\u00d72\u00d72 cube of honey blocks may be pushed or pulled as a unit by a single piston acting on any of the blocks in the cube.\n\nA honey block adjacent to a block that cannot be moved by pistons ignores the immobile block.\n\nHowever, if an adjacent block could be moved but is prevented by the presence of an immobile block, the honey block is also prevented from moving.\n\nLiquids are an exception: they are not moved, but neither do they stop a piston from pushing or pulling blocks into their space (usually destroying the liquid, and in a rare case displacing it through the piston).\n\nHoney blocks, unlike slime blocks, cannot have a redstone signal sent through them via a repeater or an observer, etc.\n\nHoney blocks are not pulled by a non-sticky piston, nor are they moved if an adjacent (non-honey) block is moved by a piston.\n\nThe maximum of 12 blocks moved by a piston still applies.\n\nFor example, a 2\u00d72\u00d73 of honey blocks may be pushed or pulled by a sticky piston as long as no other movable blocks are adjacent to it.\n\nHowever, the platform in which a honey block shifts is entirely dependent on the placement of the sticky piston, as well as placement of blocks too.\n\nIn Java Edition honey blocks moved by pistons do not move entities that are touching the side or bottom of the block.\n\n[1] In Bedrock Edition honey blocks moved by pistons do move entities that are touching the side of the block.\n\n[more information needed for Bedrock Edition ] Honey blocks slow down entities walking on top of them and prevent them from jumping.\n\nPlayers walking on honey blocks move 2.508 m/s, about a 60% reduction from the normal walking speed.\n\nIn Bedrock Edition, players also slow down slightly if walking up against the side of it.\n\nPlayers, who can normally jump about 1 1 \u2044 4 blocks high, can jump about 3 \u2044 16 blocks high on honey; this is an 85% reduction.\n\nThey can more easily step up onto other blocks than jump up onto them.\n\nThis effect applies even through other blocks on top of honey blocks, as long as they are half-block or less in height - so the player cannot jump on carpets, bottom slabs or daylight detectors that are placed on honey blocks.\n\nThis effect also applies regardless of a player's mode of movement, such as gliding with elytra or swimming.\n\nEntities pressed against the sides of a honey block slide down at a slow speed and do not take fall damage, similar to going down a ladder but with a gradually decreasing horizontal momentum. [Java Edition only ] This allows players to jump 2 blocks further by holding on to the walls.\n\nThe slowdown induced by honey blocks also stacks with the Slow Falling status effect.\n\nAs with hay bales, falling onto a honey block reduces fall damage by 80%.\n\nFor example, if a player or mob falls from a height that would normally cause 10 fall damage, the fall causes 2 damage instead.\n\nWhen a honey block is near bees and a beehive or bee nest, bees occasionally fly close and attach to it for a few seconds, resembling an action of eating honey.\n\nWhen doing this, the bee stops fluttering its wings, and firmly attaches its face to the honey block regardless of whether flowers are nearby.\n\nAlthough the 2\u00d72 inventory crafting grid is sufficient to craft a honey block, a 3\u00d73 crafting table grid is required to convert a honey block back into four honey bottles.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 Can be 1.0 or 0.8 for each sound, except slide1, which can be 1.0 or 0.9 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nIssues relating to \"Honey Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nHoney blocks are not full blocks: despite taking up 16 3 pixels, the collision box is only 14\u00d714\u00d715 pixels.\n\nThe bottom face of the honey block is the same depth as a full block, though it is only 14\u00d714 pixels.\n\nSmall entities such as arrows are free to move through the gap between honey blocks as they are under 2 pixels wide.\n\nOnly when entities are partially \"in\" the honey block (i.e., they are touching the 14 3 -pixel hitbox) can they slide down against it.\n\nIn real life, bees eat honey when the temperature is low and flowers are difficult to find.\n\nOtherwise, pollen and nectar are their primary food sources.\n\nThe bottom surface of the honey block does not slow down entities.\n\nIt takes 1 minute and 14 seconds to slide down 256 honey blocks.\n\nThe player cannot place some blocks on the honey block such as vines, ladders and torches. [Java Edition only ] [3] A bee \"eating\" from a honey block.\n\nA pollen-loaded bee stopping by, having some honey.\n\nA player sliding down a stack of honey blocks, as seen in the reveal.\n\nEarly honey block with lack of cube inside.\n\n\u2191 Like leaves, this block diffuses sky light only from directly above.\n\n\u2191 MC-163122 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-1133 \u2014 \"Whether or not a player experiences some effect is calculated based on the block under the center of the player\" \u2014 resolved as \"Fixed\".\n\n\u2191 MC-131115 Block of the Week: Honey \u2013 Minecraft.net on May 21, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Hopper",
    "url": "https://minecraft.fandom.com/wiki/Hopper",
    "content": "This article is about the block.\n\nFor the crash utility, see Hopper (crash utility).\n\nHopper Java Bedrock View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 4.8 Hardness 3 Luminous No Transparent Yes Flammable No Catches fire from lava No A hopper is a low-capacity storage block that can be used to collect item entities directly above it, as well as to transfer items into and out of other containers.\n\nA hopper can be locked with redstone power to stop it from moving items into or out of itself.\n\nTo obtain a hopper, mine it with a pickaxe.\n\nUsing any other item to mine a hopper drops only its contents.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA hopper can be crafted from 5 iron ingots and a chest.\n\nSee also: Tutorials/Hopper Hoppers can face down or sideways.\n\nA hopper can be used as a container, as a crafting ingredient, and as a redstone component.\n\nA hopper has an \"output\" tube at its bottom that can face down or sideways and provides a visual indication of which block the hopper is set up to drop its items into, if that block has an inventory.\n\nTo place a hopper, use the Place Block control while aiming at the surface to which its output should face (Hoppers do not orient themselves automatically).\n\nTo place a hopper directly on the face of an already interactable block, the player can sneak while placing the hopper.\n\nAttempting to place a hopper aimed on the bottom face of a block instead faces downward.\n\nWith some blocks, such as the furnace and brewing stand, the hopper has multiple uses.\n\nA hopper does not change direction after placement, and it is not attached to the container it faces; the container can be removed or replaced, and the hopper remains unchanged.\n\nHoppers cannot be moved by pistons. [Java Edition only ] Despite not being a solid block, attached blocks such as rails, levers, tripwire and redstone dust can be placed on top of hoppers, but not on their sides.\n\nHopper GUI showing the hopper's five slots of inventory at the top and the player's inventory below.\n\nA hopper can be used as a container and has 5 slots of inventory space.\n\nTo open the hopper GUI, use the Use Item/Place Block control.\n\nTo move items between the hopper inventory and the player inventory or hotbar while the hopper GUI is open, drag or shift-click the items.\n\nTo exit the hopper GUI, use the Esc key, B button or circle button, depending on the device.\n\nBy default, the GUI of a hopper is labeled \"Item Hopper\".\n\nA hopper's GUI label can be changed by naming the hopper in an anvil before placing it, or, in Java Edition, by using the data command (for example, to label a hopper at (0,64,0) \"Steve's Hopper\", use /data merge block 0 64 0 {CustomName:'\"Steve's Hopper\"'}).\n\nIn Java Edition, a hopper's GUI can be \"locked\" (or subsequently unlocked) by setting the hopper's Lock tag with the data command.\n\nIf a hopper's Lock tag is not blank, the hopper cannot be accessed except by players holding an item with the same name as the Lock tag's text.\n\nFor example, to lock a hopper at (0,64,0) so that only players holding an item named \"Steve's Key\" can access the hopper, use /data merge block 0 64 0 {Lock:\"Steve's Key\"}.\n\nA hopper can be used to craft a minecart with hopper.\n\nSee also: Redstone circuit and Redstone components \u00a7 Hopper Flowchart of hopper logic While a hopper is not powered by redstone signals, it operates with three functions: Collect item entities (free-floating items in the world) into its inventory from the space above it Pull a single item into its inventory from a container above it Push a single item from its own inventory into a container it faces A hopper first attempts to push any items inside it.\n\nAfterward, it checks if the block above it is a type of container.\n\nIf so, it attempts to pull from it.\n\nOtherwise, the hopper attempts to collect item entities.\n\nNotably, hoppers can push to and pull from other hoppers, forming hopper pipes or hopper chains, which allow transporting items across several blocks and are further discussed below.\n\nWhen a hopper receives a redstone signal (and is considered to be \"activated\"), all three functions stop.\n\nTo avoid confusion over the terms \"activated\" and \"deactivated\", powered hoppers are often described as being locked and unpowered hoppers described as being unlocked.\n\nHoppers can be powered by soft powered blocks, meaning a redstone dust trail pointing into a block touching the hopper locks it just as effectively as a redstone block or any other power component touching the hopper.\n\nWhen the hopper is unlocked during a redstone tick, it does not push or pull/collect during the same tick, but has a delay of 1 redstone tick instead.\n\nWhile a locked hopper does not push or pull/collect items, it may still receive items from dispensers, droppers and other hoppers, and may have its items pulled out by another hopper beneath it.\n\nHence, the item flow in a horizontal hopper pipe may be stopped by locking just one of the hoppers, but stopping a vertical hopper pipe requires locking two adjacent hoppers at the same time, such that both the pushing of the top one and the pulling of the bottom one are stopped.\n\nA hopper does not output any redstone signals by itself, but its fullness can be read using a redstone comparator, which needs to be placed next to it and facing away from it.\n\nAn empty hopper outputs a signal strength of 0 and a completely full hopper outputs a signal strength of 15.\n\nNotably, a single stackable item (16 or 64) outputs a signal strength of 1 and a single non-stackable item outputs a signal strength of 3.\n\nIn Java Edition, if the hopper being read is part of a horizontal hopper pipe, the comparator can individually read each item passing through the chain, because items are pushed through the hoppers one by one at a speed that is manageable by the comparator.\n\nIf there is an uninterrupted stream of items, the comparator does not switch off in between items.\n\nOn the other hand, in a vertical hopper pipe, some of the hoppers may never produce a reading above 0, even with a continuous stream of items, because pushes and pulls both occur in the same game tick: The hoppers' items get pulled out a single game tick after they're pushed in and this isn't measurable by a comparator, because comparators need measurements lasting at least 1.5 redstone ticks to produce a reading.\n\nA hopper collects items dropped on top of it if the space above the hopper not occupied by a storage block.\n\nItems are gathered from the entire 1 block space above the hopper, meaning that items sitting on partial blocks such as soul sand directly above a hopper can be collected.\n\n[1] It is also possible for a hopper to collect items from inside a full, solid block, a situation that might come from items rising up through solid blocks or being summoned.\n\nItem entities are not collected when they are outside of the collection area however; for example, items on top of a stone block directly above a hopper are not collected.\n\nCollected items are placed in the leftmost empty slot of a hopper's inventory.\n\nIn Java Edition, if there is no container above the hopper, then the hopper collects dropped items in the order in which they landed on the hopper.\n\nThis order is remembered even while a hopper is locked.\n\nFor instance, if a hopper is locked under a carpet while a fully equipped armor stand is broken above it, then it always collects items in this order when it is unlocked: armor stand, boots, leggings, chestplates, helmets.\n\nThis is due to the order in which these items land.\n\n[verify ] In Bedrock Edition, hoppers do not remember the order in which items land on the hopper.\n\nInstead, hoppers with multiple dropped items above them collect the items in the order in which they entered the chunk in which the hopper is located.\n\nItems that drop from a broken armor stand are collected in a random order.\n\n[2] Hoppers usually check for dropped items every game tick and they can collect items even before they are picked up by a player [verify ] or destroyed by lava.\n\nHowever, in Bedrock Edition hoppers have a \"collection cooldown\" time.\n\nAfter collecting an item (or stack of items), a hopper waits 4 redstone ticks (0.4 seconds, barring lag) before attempting to collect again.\n\nHoppers collect groups of items all at once rather than collecting them as single items one at a time.\n\nAs a result, hoppers can collect item entities much faster than they can pull items from a container.\n\nPulling from a moving minecart with chest or minecart with hopper is even slower, since the minecart is not always above the hopper.\n\nA hopper with a storage container above it (such as a furnace, chest, dropper, composter, or another hopper) attempts to pull from the container instead of checking for floating items above it, and hence can not collect items.\n\nA hopper always tries to push or pull items using the leftmost available slot.\n\nWhen a hopper is removing items from a chest, the items disappear from left to right.\n\nSimilarly, when filling up a chest, the chest fills up from left to right.\n\nHoppers prioritize pulling from the first slot of a container over pulling into the first hopper slot.\n\nIf a hopper has stone in its first slot and nothing in its second while the container it is pulling from has chicken in its first slot but stone in the second, the hopper pulls the chicken from the first slot of the container into its empty second slot.\n\nHowever, if the hopper is unable to pull the chicken, such as if all slots are filled with stone, the hopper pulls the stone from the second slot of the container instead.\n\nSimilarly, hoppers prioritize pushing from their first slot over pushing into the first slot of a container.\n\nIf a hopper has stone in its first slot and chicken in its second while the container it is pushing to has chicken it its first slot but stone in the second, the hopper pushes stone from its first slot into the second slot of the container.\n\nIn Java Edition the checks done by a hopper while pulling generally require less processing than the checks done by a hopper attempting collection.\n\nTherefore, a chain of hoppers topped with storage containers rather than air/solid blocks has better performance (measured as milliseconds of processing per tick) and lower potential for processing lag.\n\n[3] The performance improvement achieved is correlated with the number of storage slots the container has.\n\nPlacing composters (with no storage slots but still with custom output logic) on top of hoppers provide the greatest efficiency, while double chests actually degrade performance, even when sharing each double chest across two hoppers.\n\n[3] In Bedrock Edition a chain of hoppers with air or non-container blocks on top has better performance than a chain of hoppers topped by container blocks.\n\n[4] This may be because, even though hoppers with containers on top do not check for items, they do check for hopper-minecarts and chest-minecarts to pull from, and that involves scanning the chunk entity list.\n\n[5] A B Push then Pull Chest A is full of items while the hopper and Chest B are empty.\n\nItem pushes and pulls are processed in the same game tick, but pushes are processed before pulls.\n\nIn the schematic, the empty hopper first pulls an item from chest A as it cannot push anything into chest B.\n\nAfter the cooldown, the hopper first pushes its item into chest B before pulling another item from chest A, both pushing and pulling in the same tick, and the process repeats.\n\nThe hopper stops pulling when A is empty, and stops pushing when B becomes full.\n\nHoppers also have a \"transfer cooldown\" time.\n\nAfter pulling and/or pushing items, a hopper waits 4 redstone ticks (0.4 seconds, barring lag) before pulling or pushing again (a transfer rate of 2.5 items per second, barring lag).\n\nA hopper that has an item pushed into it from another hopper also starts a 4 tick cooldown period, regardless of whether it pushed or pulled items itself.\n\nItem entities can be collected at any time without affecting the transfer cooldown time.\n\nThe transfer cooldown and the Bedrock Edition collection cooldown are independent of each other.\n\nSome containers interact with hoppers in specific ways: Composter Hoppers above composters can push compostable items into the composter's top face with a chance of increasing the level of the composter as if the player used the item on the composter.\n\nItems that are not compostable cannot be pushed into the composter.\n\nHoppers below the composter can pull bone meal when the composter is in stage 8, emptying the composter and resetting it to stage 0.\n\nHoppers to the side of a composter do not interact with it.\n\nBrewing Stand A working hopper on the top face of a brewing stand deposits only into the ingredient slot and it can push only valid brewing ingredients.\n\nA hopper on side face of a brewing stand can deposit only blaze powder or filled bottles into the three brew slots.\n\nA hopper underneath a brewing stand always extracts from the three brew slots, whether brewing is finished or not\u2014The hopper must be locked to allow potions to finish brewing.\n\nChest Trapped Chest Large chests and large trapped chests are treated as a single container: A hopper depositing into a large chest fills up the entire chest and a hopper underneath a large chest empties the entire chest.\n\nTrapped chests being accessed by a player lock any adjacent hoppers, per the standard behavior of a hopper next to an active power source.\n\nFurnace Blast Furnace Smoker A working hopper pointing into top of a furnace deposits only into the ingredient slot.\n\nIt can push any item, including items that can't be smelted by the furnace.\n\nA hopper pointing into the side of a furnace deposits into the fuel slot, and only items that are usable as fuel.\n\nA hopper below a furnace pulls everything from the output slot and empty buckets from the fuel slot left over from using lava buckets as fuel.\n\nWhen a hopper removes items from a furnace, the experience points are 'stored' in the furnace until a player removes at least one smelted item, or the furnace block is broken.\n\nHopper A sequence of three or more hoppers, each pushing items into the next, is called a hopper pipe.\n\nWorking horizontal hopper pipes simply push items into each other at the expected rate of 2.5 items per second, but vertical hopper pipes are more complicated, as the hoppers are trying both to pull and to push.\n\nWhen a vertical pipe pulls from a single container, it simply transfers items at 2.5 items per second because the transfer rate is limited by the first hopper pulling items from the container.\n\nIf a stack of items is in a vertical pipe, the items can be transferred twice as fast, because the hopper with the item stack is pushing items down while the hopper below it is also pulling items down.\n\nMinecart with Chest Minecart with Hopper Unlocked hoppers fill chest minecarts and hopper minecarts if any part of the entity's hitbox is within the hopper's target block-space.\n\nHopper minecarts try to pull items from the hopper at high speed.\n\nHoppers can pull items from minecarts above them so rails can be placed directly on the top faces of a hoppers.\n\nIf a detector rail is in the right position, it could lock the hopper per standard redstone-hopper behavior.\n\nJukebox Hoppers can insert music discs into jukeboxes, and extract the music discs after they finish playing.\n\nShulker Box Hoppers cannot put shulker boxes into other shulker boxes.\n\nThis allows for the creation of certain item filters.\n\nOtherwise, hoppers interact with shulker boxes normally.\n\nLectern Hoppers cannot remove or place books on lecterns.\n\nThe redstone pulse emitted from a lectern when a page is turned can temporarily lock hoppers.\n\nEnder Chest Hoppers cannot interact with ender chests in any way.\n\nBarrel Dispenser Dropper Boat with Chest Hoppers interact normally with barrels, dispensers, droppers, and boats with chests.\n\nChiseled Bookshelf Hoppers and minecart with hoppers can insert and remove books from the bookshelf.\n\nAs with any other container, items are taken from the first slot that has an item that can fit in the hopper and are inserted into the first empty slot.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c MC-98316 \u2014 Wrong subtitles caused by missing distinction Bedrock Edition: None Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Bedrock Edition: A hopper has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the hopper when it is next opened, or the items are otherwise interacted with.\n\nNote that the loot table is used when the hopper tries to push items, when it's enabled.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted uses a random seed.\n\n[note 1] TransferCooldown: Time until the next transfer in game ticks, naturally between 1 and 8 or 0 if there is no transfer.\n\n\u2191 a b Both loot table tags are removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Hopper\" are maintained on the bug tracker.\n\nReport issues there.\n\nA real-world hopper is a large, pyramidal or cone-shaped container used in industrial processes to hold particulate matter, like dust, gravel, nuts, seeds, etc., and can then dispense them from the bottom.\n\nA hopper can transfer 9000 items per hour, or 150 items per minute.\n\nIn snapshot 13w01a, the hopper item uses a 'WIP' sprite, though the item still read \"Hopper\".\n\nThe 13w02a Banner includes a minecart with TNT and a hopper.\n\n\u2191 https://bugs.mojang.com/browse/MCPE-55824 \u2191 https://bugs.mojang.com/browse/MCPE-120586 \u2191 a b https://www.youtube.com/watch?v=LC3ZOOI1Rf0 \u2191 https://cdn.discordapp.com/attachments/715523208530362389/890030941282631741/Redstone_MSPT_measure.xlsx \u2191 MCPE-109449 \u2191 MC-6737 \u2191 MC-5991 Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Item repair",
    "url": "https://minecraft.fandom.com/wiki/Item_repair",
    "content": "This article is about repairing via grindstones or crafting.\n\nFor repair via anvils, see Anvil \u00a7 Repairing.\n\nFor repair via the Mending enchantment, see Mending.\n\nAn example of item repair.\n\nItem repair is a feature that allows players to repair damaged tools, armor, or other items with durability by combining them in the crafting grid or a grindstone.\n\nTwo items of the same type and material can be placed anywhere on the crafting grid or grindstone, which results in a single repaired item.\n\nThe durability of the repaired item equals the sum of the old items' durability plus a 'repair bonus' of 5% of the item's maximum uses, up to a limit of the maximum durability for that item.\n\nRepairing gives a slight benefit in conserving inventory space, as it combines two non-stackable objects into one.\n\n[1] The repaired object is never enchanted even if both items were to have the exact same enchantments, with the exception of curse enchantments, which are transferred to the repaired item.\n\nTherefore, using a \"junk\" item in a repair may sometimes be useful for removing an unwanted enchantment from an item prior to enchanting it again.\n\nTools made of different materials (for example, a wood and a stone pickaxe) cannot be combined.\n\nThe formula for determining how many uses a repaired item can have restored to it in the crafting box, is as follows: min (Item A uses + Item B uses + floor (Max uses / 20), Max uses) where \"floor\" means round down to the smaller integer, and \"min(x,y)\" means the smallest of x or y.\n\nExample: Two stone axes have 10 and 45 uses.\n\nA newly crafted stone axe would have 61 uses.\n\n10 + 45 + 132 / 20 = 55 + 6.6 = 61 Or, in terms of percentage (approximated): 7.5% + 34% + 5% = 46.5% The greatest benefit is gained when the two items have a combined durability of at most approximately 95%, in any combination, such as 47.5% + 47.5%, 94% + 1%, 85% + 10% or any other values that total 95% or less.\n\nThe order in which items are combined does not matter; one sequence of repairs gives exactly the same durability as any other.\n\nIn the example, repairing a stone tool restores a bonus of 6 durability, which is actually only 6/132 = 4.5%.\n\nThe precise combined durability for efficient repairs is shown in the following table.\n\nA perfect repair is theoretically possible, but unlikely in practice.\n\nCombining items whose combined durability is more than 100% actually wastes more resources than simply using tools until they break.\n\nThe precise combined durability for efficient repairs for all types of armor is shown in the following table.\n\nMain article: Mechanics/Anvil An anvil can also repair items in two different ways.\n\nThis costs experience levels, but unlike the grindstone, the anvil preserves or can even enhance the target's enchantments.\n\nThe anvil can combine the enchantments on two similar items, or rename any item (not just the ones it can repair).\n\nThe costs are complex, so a summary is given here.\n\nThe repair cost is stored in a repairCost value.\n\nTwo items of the same type are put into the input slots; the first one is the item to be repaired and the second one is to be merged into the first.\n\nThe second item's durability is added to the first, and if applicable, some or all enchantments from the second item are added.\n\nSome items can be repaired by \"covering\" the damage with a specific material.\n\nThe item to be repaired is put into the first input slot, and the corresponding material is put into the second slot.\n\nEach material item (unit) heals the item's durability by 25% its maximum durability, rounded down.\n\nAnything not listed below does not have a unit repair item, and can be repaired only by consuming another instance of itself.\n\nWorking on an anvil doesn\u2019t remove enchantments to items, but they can be removed by repairing them on a crafting grid or grindstone.\n\nA series of screenshots showing the new item repair interface.\n\n[7] Attempting to combine two enchanted items in a crafting table always results in an unenchanted item, even if the two items have the same enchantments.\n\nCrafting Tiers \u2191 \"@CymonsGames If item 1 has 10 uses left, and item 2 has 10 uses left, you'll end up with something like 25 uses in the final product.\" \u2013 @notch (Markus Persson) on X, September 27, 2011 \u2191 MCPE-71859 \u2191 https://twitter.com/notch/status/118711323029811200 \u2191 https://twitter.com/notch/status/118712950377820161 \u2191 https://twitter.com/notch/status/118726317247172609 \u2191 https://twitter.com/notch/status/118726804675637248 \u2191 https://twitter.com/Dinnerbone/status/254689806309797888 Gameplay View at: Template:Gameplay/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "User:Joabroyt/sandbox/Conductive",
    "url": "https://minecraft.fandom.com/wiki/User:Joabroyt/sandbox/Conductive",
    "content": "This user page is about blocks that can conduct redstone.\n\nFor blocks that have collision boxes you cannot move through, see solid block.\n\nFor see-through block textures, models, and lighting, see Opacity.\n\nThis user page is a work in progress.\n\nPlease help in the expansion or creation of this user page by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nConductivity is a property of blocks that determines whether redstone signals can be conducted through them, meaning that redstone components are able to power other components touching another side of this block, though it also has a wide range of other effects on the game world.\n\nConductivity is usually determined by whether a block has a solid-blocking material and a collision box that takes up a full cube, with 5 exceptions: Mud and Soul Sand are conductive, despite having non-full collision boxes.\n\nRedstone Blocks, Observers and Pistons are all non-conductive.\n\nA lot of the effects of conductivity are non-obvious.\n\nMinecraft does not have a \"solid\" property for blocks, so conductivity is tested when a test for \"solidity\" would normally occur.\n\nRedstone behavior (see also: Redstone circuit and its subpages): Only conductive blocks can be powered by power components or transmission components (see list of redstone components).\n\nConductive blocks overhead can prevent redstone wires from connecting to other redstone wire diagonally upwards (and vice-versa for the wire connecting downwards).\n\nIf a non-conductive block can support redstone wire, it acts as a diode, carrying power upward but not downward.\n\nMobs cannot spawn inside conductive blocks.\n\nConductive blocks also play a part in the pack spawning algorithm [Java Edition only ].\n\nChests cannot be opened if there is an conductive block on top of them.\n\nThey are not affected by non-conductive blocks.\n\nGhast fireball explosions start fires only on conductive blocks.\n\nBats cannot hang on non-conductive blocks.\n\nIssues relating to \"Conductive\" are maintained on the bug tracker.\n\nReport issues there.\n\nSolid block Opacity Environment View at: Template:Environment/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "User:Joabroyt/sandbox/Opacity",
    "url": "https://minecraft.fandom.com/wiki/User:Joabroyt/sandbox/Opacity",
    "content": "When leaves are opaque (in \"fast\" graphics), they completely obstruct rendering.\n\nWhen leaves are transparent (in \"fancy\" graphics), the world behind them is also rendered.\n\nThis user page is about see-through block textures, models, and lighting.\n\nFor blocks that can conduct redstone, see User:Joabroyt/sandbox/Conductive.\n\nFor blocks that have collision boxes you cannot move through, see solid block.\n\nFor partially see-through textures, see Translucency.\n\nThis user page is a work in progress.\n\nPlease help in the expansion or creation of this user page by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nNote: The term \"transparency\" has way, way, way too many different meanings, many of which are counterintuitive, especially to new players; this wip page is an attempt at correcting this.\n\nOpacity (and its inverse, transparency) are properties of blocks which affect how the game renders it and other nearby blocks, as well as how occlusion culling is handled.\n\nThe primary purpose of opacity is to tell the game engine if it needs to render other blocks behind that block; an opaque block completely obscures the view behind it, while a transparent block does not.\n\nThus, transparency applies not only to solid blocks like ice and glass, but also to blocks like cacti, stairs, chests, and single slabs, which are not considered full blocks.\n\nBy this definition, transparency does not imply that a block is actually see-through, which is a quality of the item texture specified by the game or resource pack.\n\nWater that is completely surrounded by water or opaque blocks does not have a current.\n\nHowever, if one of the surrounding blocks is transparent, the water shows a downward current on its side, like a waterfall, although swim speed through that water remains unchanged.\n\nOpacity also affects how light propagates through the world.\n\nOpaque blocks completely prevent light from traveling through them, while transparent blocks generally diminish the light by one light level per block (these value can be overridden however, and there are several exceptions).\n\nThe growth of grass blocks is linked to the amount of light in the blocks directly above them.\n\nA grass block can be killed by placing an opaque or partially transparent block above it.\n\nSome transparent blocks can reduce or block light, according to type: Glass and carpets do not reduce the light passing through them, i.e.\n\nthere is no additional modifier.\n\nIn other words, light passes through them as if it were air.\n\nLava is set to completely block light propagation.\n\nThis is often unnoticeable since lava has the maximum light level of 15, but can be observed in cases where lava blocks skylight propagation.\n\nWater, ice, leaves, slime block s, honey block s, and cobweb s do not have any extra effect on block light, but they do diffuse sky light.\n\nIn Bedrock Edition, water and ice have a -1 modifier to light propagation, on top of the normal decrease of 1 per block.\n\nThe light level from sunlight or moonlight is the same in each block of air in the column of air above the highest obstruction in the column.\n\nWhen placed, water, ice, leaves, slime blocks, honey blocks, and cobwebs obstruct that light column so that the lowest air block above the leaves acts as other light sources do.\n\nSunlight is attenuated by leaves and each vertical layer of leaf blocks attenuates the light further.\n\nIssues relating to \"Opacity\" or \"Transparency\" are maintained on the bug tracker.\n\nReport issues there.\n\nIn the Nether, the spawn point is always on top of an opaque block.\n\nThis can be seen if the player used a respawn anchor to set their spawn in the Nether.\n\nIf an opaque block is given transparent pixels in an edited texture, then instead of showing the block behind it through the transparent part, it simply fills in the area with white.\n\n[verify ] However, currently X-ray texture packs could be created using the blocks custom models feature.\n\n[1] Liquid \u2191 MC-172659 Environment View at: Template:Environment/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "User:Joabroyt/sandbox/Randomness",
    "url": "https://minecraft.fandom.com/wiki/User:Joabroyt/sandbox/Randomness",
    "content": "This user page is a work in progress.\n\nPlease help in the expansion or creation of this user page by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nRandomness in Minecraft generally refers to events or outcomes which are not supposed to ever be predictable.\n\nMinecraft uses pseudorandom number generators, which means any random event is determined by an internal state that changes after every random number call, but due to the large number of possible states and a lack of human-perceptible patterns this appears as if it was truly random.\n\nMinecraft uses different types of randomness distributions for different things.\n\nA randomness distribution describes what the odds are of picking a random value in different parts of the randomness range.\n\nArguably the simplest distribution to understand: once you've specified a range, you will have an equal probability of picking any value anywhere within that range.\n\nOne implementation of this could look like: public double uniform(double min, double max) {return min + randomDouble() * (max-min); } A triangular distribution is where the distribution graph is shaped like a triangle: values at the center of the range are most likely to occur, while values at the edge of the range (\u00b1variance) are the least likely to occur, and the odds of any value in between is linearly distributed.\n\nThe implementation of the triangular distribution in Minecraft is a Symmetric probability distribution.\n\npublic double triangle(double center, double variance) {return center + variance * (randomDouble() - randomDouble()); } Also called a Normal distribution or a bell curve, the gaussian distribution has a higher probability of generating values around its center, but has a smoothed shape.\n\nA gaussian distribution has no theoretical limits for how big or small of a value it can return, but the implementation of MarsagliaPolarGaussian that is used in Minecraft has a practical limit of \u00b18 [1].\n\npublic double nextGaussian() {double v1, v2, s; if (this.haveNextNextGaussian) {this.haveNextNextGaussian = false; return this.nextNextGaussian; } do {v1 = 2.0 * randomDouble() - 1.0; v2 = 2.0 * randomDouble() - 1.0; } while ((s = Mth.square(v1) + Mth.square(v2)) >= 1.0 || s == 0.0); double g = Math.sqrt(-2.0 * Math.log(s) / s); this.nextNextGaussian = v2 * g; this.haveNextNextGaussian = true; return v1 * g; } Issues relating to \"Randomness\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 https://stackoverflow.com/questions/54712600/what-is-the-true-maximum-and-minimum-value-of-random-nextgaussian Environment View at: Template:Environment/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Lectern",
    "url": "https://minecraft.fandom.com/wiki/Lectern",
    "content": "Lectern View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 2.5 Hardness 2.5 Luminous No Transparent No Flammable Yes (30) Catches fire from lava Yes A lectern is a block used to display and read written books from.\n\nIt also serves as a librarian 's job site block.\n\nEmpty lecterns can generate naturally in village libraries, up to two for some library variants.\n\nOne lectern generates as part of each ancient city, in the secret room at the city center.\n\nLecterns can be broken with any tool, but an axe is the fastest.\n\nLecterns drop themselves and the book they are holding.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nLecterns can only be crafted using a normal bookshelf, not a chiseled bookshelf, and proper wooden slabs, not petrified oak slabs.\n\nLecterns are the job site block of librarian villagers.\n\nLibrarian villagers do not place books into lecterns.\n\nThey only stare at the lectern from less than a block away as \"working\".\n\nThe UI when reading a book on a lectern.\n\nLecterns can also hold a single book and quill or written book that other players can read at the same time.\n\nRight-clicking an empty one with a book and quill or written book places it.\n\nRight-clicking a lectern with a book already occupied opens an interface to read the book.\n\nBooks occupying a lectern can be retrieved through the interface, [Java Edition only ] punching the lectern [Bedrock Edition only ] or by destroying the lectern, even when / gamerule doTileDrops is false.\n\nLecterns cannot hold enchanted books or normal books.\n\nInstead, right clicking the lectern with an enchanted book or a normal book does nothing and the book won't be placed.\n\nIf a village has a lectern that has not been claimed by a villager, any villager has a chance to change their profession into librarian if that villager has not already chosen a job site block.\n\nLecterns holding a book emit a full-strength redstone pulse that is one game tick long (0.5 redstone ticks) when a page is turned.\n\nA redstone comparator also records book reading and sends a signal, depending on what page the player is currently on.\n\nBecause Bedrock Edition displays two pages of the book at once, the same signal strength increments require double the number of pages.\n\nFor Java Edition a book with only 1 page gives maximum signal strength, however page 1 always gives 1 signal strength if the book contains at least 2 pages.\n\nDue to this, to calculate the signal strength S {\\displaystyle S} of books with more than 1 page, use the following formula: S = \u230a 1 + 14 (P \u2212 1) M \u2212 1 \u230b {\\displaystyle S = \\left\\lfloor 1 + \\frac{14(P-1)}{M-1} \\right\\rfloor} Where \u230a \u230b {\\displaystyle \\lfloor \\, \\rfloor} is the \"floor\" operation (round down), M {\\displaystyle M} is the maximum number of pages the book on the lectern has, and P {\\displaystyle P} is the current page number the lectern is turned to.\n\nThis is most noticeable when a book has 2 pages where the signal strength is either 1 on page 1 or 15 on page 2.\n\nA book that would step up or down in increments of 1 per page would be 15 pages long.\n\nFor Bedrock Edition the formula is slightly different.\n\nDue to Bedrock Edition showing 2 pages at once and counting a change to the book's output only if the highest even numbered page contains information, a redstone comparator treats books with 3 pages the same as those with 1 or 2 pages of information, the same as how Java Edition would treat a book with just 1 page.\n\nFor 4 or more pages of information use the following formula to calculate signal strength.\n\nS = \u230a 1 + 14 (P \u2032 \u2212 1) M \u2032 \u2212 1 \u230b {\\displaystyle S = \\left\\lfloor 1 + \\frac{14(P'-1)}{M'-1} \\right\\rfloor} In this case M \u2032 {\\displaystyle M'} is half of the maximum page number rounded down, and P \u2032 {\\displaystyle P'} is half of the current highest page number containing data displayed on the book interface, rounded down.\n\nRounding down is required to eliminate the discrepancy caused by books containing an odd number of pages.\n\nFor example, a book with 8 pages gives a signal strength of 15 when looking at pages 7-8.\n\nA book with 9 pages has a signal strength of 15 when looking at either pages 7-8 and 9-10.\n\nIn Bedrock Edition, a book that steps up or down in increments of 1 per page turned must be exactly 30 pages long, with information left on page 30.\n\nLecterns can be used as fuel in furnaces to smelt 1.5 items.\n\nLecterns can be placed under note blocks to produce \"bass\" sound.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A lectern has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Book: The book item, without the slot tag, currently on the lectern, may not exist.\n\nTags common to all items Page: The page the book is currently on, starting from 0, does not exist if there's no book.\n\nIf higher than the total amount of pages in the book, gets set to -1.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Lectern\" are maintained on the bug tracker.\n\nReport issues there.\n\nOne of the two first images of the lectern.\n\nThe second of the first images of the lectern.\n\nThe first image of a modern lectern.\n\n[2] A lectern holding a book and quill.\n\nSunny using a lectern.\n\n\u2191 MC-141991 \u2191 \"sup\" \u2013 @Dinnerbone (Nathan Adams) on X, October 18, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Lever",
    "url": "https://minecraft.fandom.com/wiki/Lever",
    "content": "Lever Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0.5 Hardness 0.5 Luminous No Transparent Yes Flammable No Catches fire from lava No A lever is a non- solid block that can provide switchable redstone power.\n\nA lever can be mined using any tool, or without a tool, and always drops itself as an item.\n\nA lever is also removed and drops as an item if: its attachment block is moved, removed, or destroyed water or lava flows into its space, in Java Edition a piston tries to push it or moves a block into its space Three levers are generated naturally in each jungle temple.\n\nThey also generate in woodland mansions and ancient cities.\n\nFive of the eight possible orientations, levers off.\n\nSee also: Redstone circuits A lever can be used as a player-switchable redstone power source.\n\nA lever can be attached to the top, side, or bottom of any full solid opaque block (stone, dirt, blocks of gold, etc.), or to the top of an upside-down slab or upside-down stairs (but not to the bottom of a right-side-up slab or stairs).\n\nWhen placed on the top or bottom of a block, the lever orients itself in-line with the placing player.\n\nIn Bedrock Edition, it can additionally be placed on the top of a fence, stone wall or hopper, and can be placed underwater.\n\nWhen placed on the side of blocks, down is on and up is off.\n\nOn the top or bottom of blocks, off is north or west, on is south or east.\n\nTo activate or deactivate a lever, use the \"Use Item/Place Block\" control (right-click, by default).\n\nA lever can be turned on and off as fast as it can be clicked.\n\nMobs cannot turn a lever on or off.\n\nWhile active, a lever: powers any adjacent redstone dust (including beneath the lever) to power level 15 powers any adjacent redstone comparator or redstone repeater facing away from the lever to power level 15 strongly powers its attachment block to power level 15 (only if the attachment block is a full solid opaque block) activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nemits redstone particles to indicate that it is active.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b The lever uses the same sound event for both turning on and off.\n\nThis has been reported on mojira: MC-177454.\n\nBedrock Edition Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: For a more in-depth breakdown of changes to textures and models, including a set of renders for each state combination, see /Asset history Issues relating to \"Lever\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-217628 \u2014 \"Levers use wood sounds rather than stone\" \u2014 resolved as \"Fixed\".\n\nTaking Inventory: Lever \u2013 Minecraft.net on November 29, 2019 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Light",
    "url": "https://minecraft.fandom.com/wiki/Light",
    "content": "Not to be confused with Lightning.\n\nThis article is about the game mechanic.\n\nFor the block called \"Light\" in Java Edition and \"Light Block\" in Bedrock Edition, see Light Block.\n\nThis article needs to be updated.\n\nPlease update this page to reflect recent updates or newly available information.\n\nReason: Changes were made to mob spawning requirements.\n\nLight (or lighting) in Minecraft affects visibility, mob spawning, and plant growth.\n\nThere are three aspects of Minecraft 's lighting system: light level, internal light level, and rendered brightness.\n\nLight levels can be found on the debug screen in Java Edition.\n\nLight may come from two sources: the sky and certain blocks.\n\nThere are 16 light levels, specified by an integer from 0 (the minimum) through 15 (the maximum).\n\nBlock light comes from light-emitting blocks, and spreads using a flood fill algorithm.\n\nThe block light level decreases by one for each meter (block) of taxicab distance from the light source.\n\nThis applies to each of the 3 coordinate axes.\n\nIn other words, the light level decreases diagonally by the sum of the distances along each axis.\n\nFor example: If a torch with light level 14 is placed on the floor, the light level of the adjacent floor blocks in all four directions is 13, while the diagonal blocks in all four directions have a light level of 12 (14 minus 1 south, minus 1 east).\n\nIf a torch with light level 14 is placed on a wall one block above the floor, then the block on the floor that is one block southeast of and below the torch has a light level of 11 (14 - 1 (south) - 1 (east) - 1 (down)).\n\nIn Bedrock Edition, light-filtering blocks can reduce more than 1 level of block light.\n\nOn a surface, this effect produces a diamond-shaped pattern of illumination around the light source.\n\nIn Java Edition, when calculating lighting, the shapes of some blocks are detected: pistons, daylight detectors, enchanting tables, farmland, lecterns, stonecutters, dirt paths, snow, end portal frames, slabs and stairs, so that the light passing through them can spread only in specific directions.\n\nFor example, dirt paths prevents the light from propagating downward, but the light can propagate in other directions.\n\nThe sky light level for blocks exposed to broad daylight is 15.\n\nSky light cast onto blocks can spread to darker areas using a flood fill algorithm.\n\nSky light is not reduced at night; rather, the spawning of mobs is determined by internal light values.\n\nOpaque blocks can prevent the spread of sky light.\n\nBy contrast, transparent blocks such as glass and iron bars have no effect on the sky light level.\n\nAll light-filtering blocks, however, reduce the spread of sky light.\n\nWhen sky light of a level of 15 spreads down through a transparent block, the level remains unchanged.\n\nWhen it spreads horizontally or upward, it reduces 1 light level.\n\nHowever, when it spreads through a light-filtering block, it does not follow the above two rules and attenuates specific light levels.\n\nSky light with a level less than 15 spreads as block light - when it propagates to adjacent (including top and bottom, six blocks in total) blocks, it is attenuated until it is 0.\n\nIn Java Edition, when calculating lighting, the shapes of some blocks are detected: piston, daylight detectors, enchanting table, farmland, lectern, stonecutter, grass path, snow, end portal frame, slabs, and stairs.\n\nThey have directional opacity, so that the light passing through them can spread only in specific directions.\n\nFor example, the grass path prevents the light from propagating downward, but the light can propagate in other directions.\n\nIn Java Edition, all of the following light-filtering blocks decrease sky light by 1 level (but do not affect block light).\n\nIn Bedrock Edition, light-filtering blocks can reduce more levels of block or sky light.\n\nThe following values are the amounts by which each block decreases the light level.\n\nThe following values are the brightness of the blocks themselves.\n\nComparison of the different light levels that blocks emit.\n\nInternal sky light versus time and sky light The internal light level is used for calculations within the game.\n\nThe game uses the internal light level of one block to compute aspects of the game, which include mob spawning, plant growth, and daylight detector outputs.\n\nThe game uses sky light, time, and weather to calculate an internal sky light value (also known as darkening sky light), then uses the maximum level of the block light and the internal sky light to calculate the internal light (formula: (max(internal sky light,block light))).\n\nThis value is an integer with a maximum level of 15; it can also be negative.\n\nHere are the levels of internal sky light at a sky light of level 15: To obtain an internal sky light for a sky light level s less than 15, take the internal level L at 15 and subtract from it the difference between 15 and s: L \u2212(15\u2212 s).\n\n\u2191 During thunderstorms, hostile mobs are allowed to spawn as if the internal sky light level were actually 5.\n\nKeep in mind that the internal light level is only one of the considerations that apply to mob spawning and plant growth.\n\nMobs may ignore the light level they are supposed to spawn in after using / fill.\n\n[1] \u2191 a b Sunlight does not affect snow or ice melting.\n\n\u2191 \"[MC-217420] Snow neither forms nor melts at block light level 11 - Jira\" \u2013 Mojira, March 1, 2021.\n\n\u2191 \"[MC-217424] Ice neither forms nor melts at block light level 10 - Jira\" \u2013 Mojira, March 1, 2021.\n\n\u2191 For growth, the relevant light level is that in the block above the plant.\n\nThe growth of pumpkins or melons from a stem checks the light above the stem, not the block where the pumpkin or melon grows.\n\n\u2191 For growth, the relevant light level is that in the block above the plant.\n\nFor uprooting, the relevant light level is the plant block itself.\n\n\u2191 a b The relevant light level is that in the air block above it.\n\nExamples of the internal lightmap texture (the game's brightness setting is at the default of 50).\n\nHorizontal axis is block light, vertical is sky light.\n\nThe game uses the light level (instead of internal light level), time, and weather to compute the rendered brightness of a given block or an entity.\n\nLight is completely monochromatic and cannot be truly colored.\n\nAs mentioned above, sky light is not reduced at night, instead, the brightness curve itself changes based on the time.\n\nEntities cast circular [Java Edition only ] or tridecagonal [Bedrock Edition only ] shadows; however, these are unrelated to the rendering of blocks.\n\nIn general, lighting due to blocks results in a higher brightness, which is balanced by the fact that light due to blocks effectively starts at 14 (solid light source blocks emit a level of 15, but that applies to the light source block itself) while sky light brightness is 15 outdoors.\n\nLight due to blocks also tends toward orange in the middle ranges, while sky light in the Overworld daytime is white.\n\nIn the Overworld with the \"Moody\" brightness setting, full daylight reaches 98% brightness, [luma 1] while at night brightness is reduced to about 17% [luma 1] and is shaded blue.\n\nFull darkness is about 5% brightness.\n\n[luma 1] In the Nether, sky lighting doesn't play a role since there is no source of sky light (although if there were, it would reach about 99% brightness.\n\n[luma 1]) Full darkness with the \"Moody\" brightness setting is at about 25% brightness, [luma 1] slightly darker than a block light level of 7 and no sky light in the Overworld, and is shaded orange like block light.\n\nIn the End, sky lighting wouldn't play a role even if there were a source of sky light; this can also be seen if lightning is summoned in the End (there is no flash of brightness like there is in other dimensions).\n\nFull darkness in the End with the \"Moody\" brightness setting is about 28% brightness, [luma 1] and is shaded toward a bluish-green rather than the orange of the Nether and of block lighting.\n\nIn Java Edition 20w14\u221e, most unique dimensions have unique lighting system.\n\nHowever, most of the Easter egg dimensions do not have darkness at all.\n\nInstead, they are fully bright, but in an Easter egg dimension called gallery has the blue lighting nearly identical to the Overworld at night (only significantly brighter).\n\nEaster egg dimensions that resembles the Overworld with just world generation modifications (namely busy, chess, decay, holes, pillars, rooms, slime, and zone) have the same lighting as in the Overworld.\n\nblacklight has the inverted lighting system derived from the Overworld.\n\ncolors, red, green, and blue dimensions resembles the Overworld with lighting mixed with dimensional tinting, and darkness is blended with darkness at higher distances far away from the origin.\n\nIts darkness cannot be fixed with Night Vision effect.\n\n\u2191 a b c d e f Brightness here refers to ITU-R BT.601 luminance value (luma) The difference between Smooth Lighting on and off.\n\nSmooth lighting is a lighting engine that blends light levels across block faces and darkens corners using ambient occlusion to add semi-realistic shadows and glowing from light sources.\n\nIt affects only rendered brightness, not the light level, so it has no effect on mob spawning or crop growth.\n\nIt is set on by default.\n\nPaintings, item frames [2] and water surfaces [3] are unaffected. [Java Edition only ] Smooth lighting can be turned on or off in the video settings.\n\nThis section needs cleanup to comply with the style guide.\n\n[discuss ] Please help improve this page.\n\nThe talk page may contain suggestions.\n\nIn many newer games, ambient occlusion is mainly generated dynamically by the GPU.\n\nBut Minecraft calculates ambient occlusion in the code based on voxel placement and brightness levels.\n\nAmbient occlusion is responsible for adding shading to an ordinary texture.\n\nIt is a layer of translucent textures, on top of the normal textures.\n\nOverlaying these AO textures onto a texture is called AO mapping.\n\nThere are about five AO texture patterns used in Minecraft' s smooth lighting, excluding flips and rotations, and only three patterns algorithmically.\n\nStrictly speaking, it's probably more than that.\n\nThat's when the intensity changes with the brightness level.\n\nBut they are solved by tint.\n\nThis section needs cleanup to comply with the style guide.\n\n[discuss ] Please help improve this page.\n\nThe talk page may contain suggestions.\n\nIf AO mapping is selected only to the northwest of the voxel, the following pattern is possible.\n\nThese classifications allow one the ability to deduce a pattern from the placement of each voxel.\n\nThe following function can then be used to compute the opacity of the voxels' vertices, depending on the presence of the side and corner voxels.\n\nfunction vertexAO(side1, side2, corner) {return 3 - (side1 + side2 + corner) } This generates a 2x2 pixel image using the values of each vertex.\n\nThe pixels are small, but when zoomed in using anti-aliasing, it gradates.\n\nIssues relating to \"Light\" are maintained on the bug tracker.\n\nReport issues there.\n\nIn Minecraft's source code, the luminescences are defined using the floating point values in the third column.\n\nThese floating point numbers are fractions of 16, but are multiplied by 15 to get the integer light value.\n\nThis means that both 0/16 and 1/16 (0.0 and 0.0625) correspond to the integer light value 0.\n\nLighting, the wool block is exposed to sunlight (\"Moody\" brightness setting).\n\nLighting, the wool block is exposed to sunlight (\"Bright\" brightness setting).\n\nLighting in the Void.\n\nParticles and entities are illuminated based on the light level at level 0.\n\nLight being emitted from sea pickles, a sea lantern, and to a lesser extent, magma blocks.\n\nOnly the flowing water is lighted by a magma block.\n\nA teaser from Notch showing the new lighting system for the Adventure Update.\n\nLighting during the day.\n\nLighting during the night.\n\nBugged light from a torch.\n\nBugged light creating stripes similar to the stripe lands.\n\nLight underground.\n\nLight underground.\n\n\u2191 \"[MC-156880] Mobs spawn where they should not be able to after using /fill - Jira\" \u2013 Mojira, July 16, 2019.\n\n\u2191 \"[MC-1531] No smooth lighting on item frames and paintings - Jira\" \u2013 Mojira, October 31, 2012.\n\n\u2191 \"[MC-227302] Smooth lighting doesn't work properly on the water surface - Jira\" \u2013 Mojira, June 3, 2021.\n\n\u2191 https://web.archive.org/web/0/http://notch.tumblr.com/post/3446675806/minecraft-beta-1-3 \u2191 \"Remember that silly lighting bug where world would generate with big black patches?\n\nWell you may not remember it in the future; it's fixed.\" \u2013 @Dinnerbone (Nathan Adams) on X, September 26, 2012 \u2191 \"It's such a small thing to look at, but this required unbelievable amounts of code changing:D\" \u2013 @Dinnerbone (Nathan Adams) on X, September 26, 2012 \u2191 http://www.reddit.com/r/Minecraft/comments/10g4mi/dinnerbone_at_this_point_i_think_its_almost/ \u2191 \"Finally!\n\nMuch fewer \"black spots\" in the terrain generator, such a relief =)\" \u2013 @jeb_ (Jens Bergensten) on X, July 31, 2013 \u2191 \"[MC-68129] Smooth lighting doesn't work properly underwater - Jira\" \u2013 Mojira, August 18, 2014.\n\n\u2191 MC-58668 \u2014 \"Smooth Lighting Minimum and Maximum levels no longer differ\" \u2014 resolved as \"Fixed\".\n\nEnvironment View at: Template:Environment/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Lightning Rod",
    "url": "https://minecraft.fandom.com/wiki/Lightning_Rod",
    "content": "For the artifact in Minecraft Dungeons, see MCD:Lightning Rod.\n\nLightning Rod Java Bedrock Powered View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 6 Hardness 3 Luminous No Transparent Yes Flammable No Catches fire from lava No A lightning rod is a block used to divert lightning strikes.\n\nA lightning rod must be mined with a stone pickaxe or better, or else it drops nothing.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nLightning rods can be oriented in different directions.\n\nLightning rods that are the highest block in the column redirect lightning strikes within a radius of 128 blocks in Java Edition and 64 blocks in Bedrock Edition.\n\nThis distance includes vertical distance, so the protected area is a sphere centered on the lightning rod.\n\nThe block emits particles during thunderstorms as an indicator.\n\nIf multiple lightning rods are in range, the closest to the original location of the strike is chosen.\n\nLightning can also strike a lightning rod hit by a trident enchanted with Channeling during a thunderstorm or even a normal rainstorm [Bedrock Edition only ], even if there are solid blocks above it blocking rainfall, as long as all the blocks are fully transparent (sky light level 15 at rod position).\n\nLightning rods do not divert the lightning created by a Channeling trident thrown at an entity, or the lightning summoned by commands.\n\nUnlike in real life, a lightning rod doesn't require a direct connection to ground in order to work.\n\nLightning strikes on lightning rods cannot summon skeleton trap horses.\n\nA lightning rod and the block it's attached to emit a redstone signal for 8 game ticks when struck by lightning.\n\nLightning diverted by a lightning rod can still start fires nearby (quickly extinguished on non-flammable blocks or by rain) and inflicts lightning damage on mobs within a 6\u00d712\u00d76 box centered 4 blocks above the bottom center of the lightning rod block (that is extending 2 below and 9 above).\n\nAdjacent blocks can ignite even if the lightning rod is mounted on a non-flammable block.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: None [1] Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Lightning Rod\" are maintained on the bug tracker.\n\nReport issues there.\n\nAccording to Minecraft Live 2020, Ulraf had the idea of lightning rods when a lightning strike burned down his wooden house.\n\n[3] In Minecraft Dungeons, there are lightning rod blocks as well.\n\nThese generate on the roof of the Woodland Mansion Ancient Hunt to charge creepers.\n\nIf / item replace is used to place a lightning rod on a player's head, the item appears upside-down and to the right of their head, somewhat resembling a robot's antenna. [Java Edition only ] In china edtion,lightning strikes are the only way to set your defaulted pet on fire, this doesn't kill them because they are immortal.\n\nLightning rods turn white upon being struck, which causes release of end rod particles and redstone power.\n\nRange testing in Java 1.17.1.\n\nGlowstone marks where lightning struck.\n\nRange testing in Bedrock 1.17.34, simulation distance 12.\n\nSea lanterns mark lightning strikes.\n\nLightning hitting a lightning rod and sending a redstone signal.\n\nA lightning-struck lightning rod decreasing the oxidizing level of nearby copper blocks.\n\n\u2191 MCPE-173931 \u2014 Tridents don't make channeling sounds when striking a lightning rod \u2191 MC-204446 - fixed in 21w05a despite that being an affects version; see comments \u2191 \"Minecraft Live: Caves & Cliffs - First Look @ 29:53\" \u2013 Minecraft on YouTube, October 3, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "MCRedstoneSim schematics",
    "url": "https://minecraft.fandom.com/wiki/MCRedstoneSim_schematics",
    "content": "This article uses MCRedstoneSim schematics.\n\nThese should be converted to use {{schematic }} if possible.\n\nMCRedstoneSim (from this point MCRS), uses a basic symbolism to represent redstone circuits.\n\nThis same symbolism is used on the circuits page.\n\nThe symbols used in MCRS are shown below: Symbol Description Screenshot Air over air (blank space).\n\nAir over block.\n\nBlock over block.\n\nAir over wire.\n\nAir over torch.\n\nAir over torch (attached to adjacent block).\n\nWire over block.\n\nTorch over block.\n\nTorch (attached to adjacent block) over block.\n\nBlock over wire.\n\nBlock over torch.\n\nBlock over torch (attached to adjacent block).* Torch (attached to adjacent block) over wire.\n\nWire over wire.\n\nAir over lever.\n\nAir over lever (attached to adjacent block).\n\nAir over button.\n\nDoor (unpowered).\n\nDoor (powered).\n\nShadow (used for visual effect).\n\nn/a *Glass blocks do not interact with redstone.\n\nThey are used in screenshots purely for visibility and must be replaced with opaque blocks in actual circuits.",
    "category": "Mechanics"
  },
  {
    "title": "Minecart",
    "url": "https://minecraft.fandom.com/wiki/Minecart",
    "content": "This article is about the rideable minecart in Minecraft.\n\nFor other uses, see Minecart (disambiguation).\n\nNot to be confused with Minecraft.\n\nMinecart Rarity color Common Health 6 Stackable No Renewable Yes Size Height: 0.7 Blocks Width: 0.98 Blocks Drops Minecart (1) Network ID JE: 10 A minecart is a train-like vehicle entity that runs on rails.\n\nMinecarts can be retrieved by attacking them for some time.\n\nMinecarts can also be retrieved with one attack from a pickaxe provided the player's attack cooldown is reset.\n\nA minecart is also destroyed if it makes contact with a cactus, or if shot with a bow and arrow.\n\nMinecart with command blocks can be given to the player with the / give command or through the Creative inventory under certain conditions [Java Edition only ]; minecart with monster spawners  [Java Edition only ] are available only via the / summon command.\n\nEach drop 1 minecart when broken.\n\nA rideable minecart on rails surrounded by wood slabs A minecart can be placed in the same manner as most blocks but can be placed only on top of a rail.\n\nOnce placed, it may be derailed by pushing it off the end of the track.\n\nAfter this, it can be railed again by placing a rail directly below it or pushing it onto a track.\n\nSteve riding a minecart See also: Transportation and Riding Minecarts can be ridden by pressing the \"use\" control on them.\n\nOnce inside, an external impulse may be needed to make the minecart start moving.\n\nThe player can slowly move the minecart forward while riding it, by pressing forward.\n\nIf a mob walks in front of an empty minecart, it is pulled into the cart.\n\nAfter rolling off of the end of a track, a minecart can be pushed around on open blocks.\n\nIf a minecart is pushed onto or falls onto tracks, it \"snaps\" to those tracks.\n\nWhen riding a minecart, if the minecart lands on a rail, the player does not take any fall damage.\n\nUnlike with beds, there is no message above the hotbar for attempting to enter a fully occupied minecart.\n\n[1] Players can exit the minecart by pressing sneak.\n\nWhen a player or mob dismounts a minecart, either by choice, by breaking the minecart, or by passing over an activator rail, the minecart tries to find a safe ejection destination one block away.\n\nFirst it checks the eight horizontally adjacent blocks in the following order of priority relative to direction of travel: right, left, rear right, rear left, front right, front left, rear, front.\n\nA valid destination has a block underneath with a solid (not necessarily full) top surface and a space with enough headroom and width for the passenger to fit in when standing at the center.\n\nThe space can even contain liquid or have open trapdoors if the mob is slim enough, and presence of other mobs doesn't matter.\n\nIf no valid destination exists on same horizontal level, the minecart then checks the blocks one above, then one below.\n\nFor a player, the minecart also checks for crawlable destinations.\n\nIf still none, the minecart chooses its own location.\n\nOnce the minecart picks a destination, it actually ejects the passenger one block up in the air and the passenger settles down on its own.\n\nUnder a low ceiling this may cause one tick of suffocation damage.\n\nThe air drop exists to allow passengers to land on carpet or bottom slabs.\n\nMinecarts have a predefined speed limit of exactly 8 blocks per second.\n\nHowever, this speed limit does not change the minecart's speed value but instead limits how far a minecart can travel each tick to 0.4 blocks.\n\nTherefore, a minecart moving from powered rail to normal rail will move at constant speed for some time until decelerating because its internal speed value is over its speed limit of 8.\n\nHowever, the maximum speed can be changed by the minecartMaxSpeed game rule.\n\nPowered rails powered by redstone give minecarts a boost of speed.\n\nSpeed is gradually decreased (due to drag) if there are no powered rails to assist its movement, and an unpowered powered rail slows down a minecart rapidly.\n\nThe speed decreases at a faster rate when going uphill, compared to when moving horizontally.\n\nA minecart does not need powered rails to assist its movement down a hill.\n\nAnything in the way of the minecart brings it to a stop.\n\nOnce a minecart has left the track, it rapidly decelerates within one or two blocks.\n\nWhen mobs touch a minecart, they affect it in the same way a player would, i.e.\n\nmobs that move up against a still cart set it in motion.\n\nIf a minecart is moving fast enough, it can skip across one block without a track and reattach to track on the other side, at significantly reduced energy and speed.\n\nA minecart's hitbox can skip turns if the minecart is boosted using enough powered rails.\n\n[2] The speed and momentum of a minecart can differ depending on whether or not it is empty, and in the case where a minecart has a container, the speed can differ depending on the quantity and type of items inside.\n\nIn Java Edition, two or more minecarts can be merged by pushing them into each other so that they overlap.\n\nMerged minecarts move as a collective, like a train, and can be useful for long-distance transport because while moving in a straight line, they do not need powered rails to keep their speed.\n\nTo summarize: Minecarts can also be merged by dropping a minecart on another minecart.\n\nMerged minecarts do not lose speed while traveling on straight rails Corners in the rails might cause merged minecarts to unmerge.\n\nMinecarts with chest (even fully filled) can also be merged and also do not require powered rails.\n\nThis table shows the distance traveled by an unoccupied minecart on a downward slope, with a boost (or no boost).\n\nThe most efficient way is to use only 1 boost at the bottom of the incline on the flat surface.\n\nUsing 2 increases distance by about 20% or 1.5 blocks.\n\nAll distance trends based on the height seem to be logarithmic.\n\nThe carts started from rest, on a slope Height blocks up.\n\nMinecarts are about the same size as a block (1\u00d71).\n\nBecause of this, a ladder, door, or trapdoor prevents it from falling down a 1\u00d71 hole.\n\nCarts on rails also ignore collision in certain situations.\n\nA cart traveling uphill, downhill, or on a curve with a block placed in front of it, goes through the block.\n\n[3] A minecart that reaches the end of a rail up against an opaque solid block bounces back, but if the block is transparent then it stops.\n\nThe minecart can even bounce against an opaque block from a standstill if the rail underneath is powered.\n\nA player or mob riding in a minecart does not collide with or suffocate in any transparent blocks but suffocates inside opaque blocks.\n\nMinecarts are completely unaffected by ice, packed ice, and blue ice [4]; they can also be destroyed by coming in contact with lava or fire.\n\nMinecarts can even be pushed by flowing water.\n\nThis section is missing information about some other mobs that cannot be picked up by minecarts.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nMinecart shaking due to being on top of an activator rail.\n\nMobs can ride minecarts, but cannot control them.\n\nMobs cannot exit the minecart unless the minecart is destroyed or moves onto an active activator rail.\n\n[5] However, in Bedrock Edition, endermen are able to teleport out of minecarts.\n\n[6] A mob can ride a minecart when pushing by a moving minecart on rails in Java Edition or when colliding with a minecart in Bedrock Edition.\n\nIt is easier to pick up a mob when a minecart is turning.\n\nIn Bedrock Edition, armor stands can also be picked up.\n\nMost mobs can be picked up by minecarts, except ender dragons, wardens, and withers.\n\nIn Java Edition, iron golems cannot be picked up either.\n\nA jockey riding a minecart automatically accelerates the minecart.\n\n[7] Mobs in minecarts don't despawn, and don't count towards the mob cap. [Java Edition only ] [8] This feature is exclusive to Java Edition.\n\nThis section demonstrates the use of a bug to make a contraption.\n\nBugs of this nature may be fixed at any time without warning.\n\nWhen this happens, the contraption will cease to work.\n\nUse at your own risk.\n\nDue to the bug MC-113871, boats can be captured by minecarts.\n\nWhen a boat is placed in a minecart, the minecart travels faster on rails, approximately as fast as on powered rails.\n\nThe movement in the boat minecart is glitchy and moving forward with the W key moves the cart backward relative to the player, and vice versa for moving backward with the S key.\n\nThe minecart also moves on the rail-less ground at a crawling speed, but it does not float in the water despite being in a boat.\n\nUsing this glitch can be far more resource-efficient since the boat minecart can move at the speed of a powered rail track on flat ground and on slopes.\n\nAnother physics glitch with the boat minecart is the extreme reduction in friction when the minecart is on rails, which is similar to the lack of friction when a boat is riding on ice.\n\nThis glitch can be done in Survival without cheats simply by pushing a minecart into a boat on the track.\n\nThis bug is now patched.\n\nJava Edition: Minecarts use the Friendly Creatures sound category for entity-dependent sound events.\n\n[sound 1] \u2191 a b c d \"[MC-42132] The sounds of minecarts aren't controlled by the correct sound slider - Jira\" \u2013 Mojira, December 13, 2013.\n\n\u2191 a b Based on horizontal speed; it is clamped between 0.0 and 0.75 and will not play if speed is less than 0.01 \u2191 a b MC-177078 \u2191 a b MC-204124 \u2191 Shows far less often than it should - see MC-181831 \u2191 Relates linearly with horizontal velocity (max 0.5) \u2191 Will increase by 0.0025 per tick if the minecart's horizontal velocity is more than 0.01 Bedrock Edition: Java Edition: Bedrock Edition: Minecarts have entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Entity data Tags common to all entities Tags common to all minecarts Bedrock Edition: See Bedrock Edition level format/Entity format Issues relating to \"Minecart\" are maintained on the bug tracker.\n\nReport issues there.\n\nMinecarts appear to float above the track, as their model has no wheels.\n\nIf the player views their inventory while riding in a minecart, they appear sitting down in mid-air.\n\nThe player can teleport to another minecart while sitting in a minecart by right-clicking a minecart in their range.\n\nThis can be used as an elevator to quickly rise up when minecarts are placed on top of each other.\n\nIf the sound is muted in the options while riding a minecart, and then turned back up, the minecart no longer makes noise in the client until the player exits the minecart.\n\nIf a saddled pig is riding a minecart, the player can ride the pig.\n\nDoing so causes the minecart to be able to ride freely at the player's walking speed.\n\nIt is unknown whether this is a glitch.\n\nIt seems that hunger does not deplete while inactive in a minecart (at least in normal difficulty).\n\nA minecart (alongside rails and powered rails) are used as Steve's Side-Special in the crossover fighting game Super Smash Bros.\n\nUltimate.\n\nA pig inside a burning minecart A Minecart opened in Minecraft Infdev A Minecart filled in Minecraft Infdev An image of two Minecart with Spawners and unimplemented Minecart with Dispensers.\n\nThe first image Jeb released.\n\n[10] The first image of minecarts in Pocket Edition.\n\nMinecart booster.\n\nMinecarts being stacked on each other.\n\nVillager in a minecart.\n\nPlayer in minecart.\n\nMinecarts can be edited to show any block inside, and can also be edited to be invisible.\n\nA wooden minecart, featured in the Trails & Tales Event.\n\nTwo minecarts, as depicted on Minecoin gift cards.\n\n\u2191 \"[MC-161251] Attempting to enter an occupied bed displays a message over the hotbar, but attempting to enter an occupied vehicle does not - Jira\" \u2013 Mojira, September 18, 19.\n\nResolved as \"Works as Intended\".\n\n\u2191 \"[MC-179971] Minecart skips turns if too fast - Jira\" \u2013 Mojira, April 22, 2020.\n\n\u2191 \"[MC-8004] Minecarts glitch through the stop block of a track that ends with a turn or a downward slope - Jira\" \u2013 Mojira, January 20, 2013.\n\n\u2191 \"[MC-8265] Minecarts don't slide on any sort of ice - Jira\" \u2013 Mojira, January 25, 2013.\n\n\u2191 MC-3866 \u2014 \"Endermen, Tamed Wolves and Ocelots cannot teleport when in a Minecart\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 MCPE-31761 \u2014 Endermen can still teleport out of the boats and minecarts \u2191 MC-71998 \u2014 Minecarts that have passengers within them riding mobs can move automatically when not on rails \u2191 MC-182897 \u2014 \"Some passenger mobs don't count to the mob cap\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-249493 \u2014 resolved as \"Fixed\".\n\n\u2191 https://twitter.com/jeb_/status/289000646210904064 Taking Inventory: Minecart \u2013 Minecraft.net on September 6, 2019 Items View at: Template:Items/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Minecart with Chest",
    "url": "https://minecraft.fandom.com/wiki/Minecart_with_Chest",
    "content": "Minecart with Chest Rarity color Common Health 6 Stackable No Renewable Yes Size Height: 0.7 blocks Width: 0.98 blocks Drops 1 Minecart with Chest plus contents Network ID JE: 10 A minecart with chest is a single chest inside a minecart, and functions as such.\n\nMinecarts with chests containing loot naturally generate in mineshafts, each on top of a piece of rail.\n\nMinecarts with chests can be retrieved by attacking them.\n\nBy doing so it drops as an item and any other contents of the chest are dropped as well.\n\nThe GUI of a minecart with chest.\n\nMinecarts with chests can be placed by using its item on any type of rail.\n\nChest minecarts' contents can be accessed by pressing use item button on them.\n\nThe interaction makes no sounds and the chest does not show the opening or closing animation, unlike regular chests.\n\nThe boost that minecarts with chests gain from powered rails is dependent on their load.\n\nFor example, from a 1 powered rail starter track, an empty minecart with chest travels 64 blocks, but a full minecart with chest travels only 16 blocks (opposed to 80 blocks for an occupied normal minecart and 8 blocks for an empty normal minecart).\n\nAnother physical property of chest minecarts is their ability to be stacked.\n\nWhile three chests can fit in an area three blocks tall, up to four chest minecarts can fit in the same area.\n\nLike other minecarts, an unlimited number of minecarts with chests can exist in the same block space.\n\nMinecarts with chests are also able to interact with hoppers.\n\nHoppers can take items out from the minecart chest if they are below the track as the minecart rolls over it or put them in if the minecart rolls under a downward facing hopper.\n\nHoppers can also input items if they are facing into the side of the minecart.\n\nOpening or destroying a minecart with chest angers piglins.\n\nSee also: Tutorials/Storage minecarts When on top of detector rails, nearby redstone comparators will give out redstone signals based on how full the minecarts with chests are.\n\nJava Edition: Minecarts with chests use the Friendly Creatures sound category for entity-dependent sound events.\n\n[sound 1] \u2191 a b MC-42132 \u2191 Relates linearly with horizontal velocity (max 0.5) \u2191 Will increase by 0.0025 per tick if the minecart's horizontal velocity is more than 0.01 Bedrock Edition: Java Edition: Bedrock Edition: Minecarts with chests have entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Entity data Tags common to all container entities Tags common to all entities Tags common to all minecarts Bedrock Edition: See Bedrock Edition level format/Entity format.\n\nThe Minecart models in the Bedrock Edition were north or south on the sides.\n\nIn the latest version, the front and rear sides are north or south.\n\nBut the absolute orientation of the chest was not changed.\n\nThis section is missing information about In Bedrock Edition 1.16.100 it seems that chests in minecarts face sideways instead of forward.\n\nWhen was this changed?.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nIssues relating to \"Minecart with Chest\" are maintained on the bug tracker.\n\nReport issues there.\n\nA compact storage using chest minecarts (left) compared to chest storage in the same volume.\n\nNotice how chests cannot be placed next to each other, which is no longer the case after Java Edition 1.13.\n\nThis minecart with chest is trapped inside a block, due to a stronghold and a mineshaft that generated partially overlapping.\n\nA minecart with chest generated on top of an end portal frame, because there is a mineshaft behind the wall.\n\nA large stack of chest minecarts.\n\n\u2191 mcw:Issues/Beta 1.8pre2#Graphical \u2191 MC-249493 \u2014 resolved as \"Fixed\".\n\nItems View at: Template:Items/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Minecart with Furnace",
    "url": "https://minecraft.fandom.com/wiki/Minecart_with_Furnace",
    "content": "Minecart with Furnace Rarity color Common Health 6 Stackable No Renewable Yes Size Height: 0.7 Blocks Width: 0.98 Blocks Drops 1 Minecart with Furnace Network ID 10 A minecart with furnace is a furnace inside a minecart.\n\nIt can be powered with coal or charcoal to propel it across a rail line for a limited time, which can be used to move other minecarts.\n\nMinecarts with furnace can be retrieved by attacking them, and by doing so it drops as an item.\n\nMinecarts with furnaces are placed in the same way as other minecarts.\n\nIt does not have a graphical user interface, unlike a furnace.\n\nMinecarts with furnaces can be powered, done by feeding fuel (coal or charcoal) into the furnace minecart with the use button.\n\nThe fuel is consumed immediately and it starts to move in the same direction the player clicked toward.\n\nPressing use always turns it to that direction, even when not holding coal.\n\nAny piece of fuel, added at any time, increases the total range by an additional 3600 ticks (equal to 180 seconds or 3 minutes).\n\nThe upper limit is 32767 ticks, approximately 27 minutes.\n\nWhen powered, minecarts with furnaces cover 240m per minute (about 4 m/s, slightly slower than walking speed) or 720m per piece of coal.\n\nThey do not accelerate beyond this speed when going downhill or on active powered rails, and as long as they remain powered, they do not slow down when going uphill, on inactive powered rails, or when pushing or pulling other minecarts.\n\nIf a powered furnace minecart is derailed and then pushed back onto a rail, it starts moving again in the direction it came from, so they are not easily turned around in this state unless a player is nearby to redirect it with use.\n\nMinecarts with furnaces can climb up steep inclines while pushing other minecarts as long as they have fuel.\n\nIf a minecart with furnace reaches a slope while pulling another minecart, the pulled minecart is switched to the forward position so that it can be pushed along the slope instead of pulled.\n\nWhen a minecart with furnace bumps into another minecart or multiple minecarts, the other minecarts are pushed forward with great speed.\n\nThe furnace minecart continues on with its own speed.\n\nBecause of this speed difference, some of the minecarts may end up inside unloaded chunks on straight tracks.\n\nweakly-shunted 1-cart train, one cart was used only to push the train together and is left behind Creating a strongly-shunted 1-cart train.\n\nThe sloped rail must be replaced with a horizontal rail before powering.\n\nA Minecart train powered by furnace minecarts.\n\nA furnace minecart can be made to pull up to four other minecarts.\n\nAll minecarts in this train move at the constant speed of the furnace minecart.\n\nTrains are formed when a minecart is pushed into the back of a powered furnace minecart or a short-enough train.\n\nThese shunts are fragile at best and easily come undone, but some methods are stronger than others.\n\nFor example, pushing a minecart into a furnace minecart and then powering the furnace gives a weaker shunt than pushing the furnace minecart into the other minecart against a wall, and then powering the furnace in the other direction.\n\nA high-speed minecart running into the back of a furnace minecart going in the same direction automatically creates a weak shunt with it, pulling it along.\n\nPulling a minecart with TNT causes it to explode.\n\nWhen a train comes to a turn, the shunt comes undone with the pulled minecart jettisoned backward.\n\nThe correct way to make such a turn is having the shunt undone before a turn, and then make the two rejoin on a straight rail later by having the pulled cart catch up with the minecart with furnace.\n\n[1] Since the train runs slower on a fully powered track than a normal minecart (~5 m/s compared to 8m/s), a train pulled by an unpowered furnace minecart is ideal for AFK farms involving breaking or placing blocks like nether wart.\n\n[1] The coal is not stored as an item in the entity, but in the object data in the fuel property as a time in ticks.\n\nFuel is a short value, i.e.\n\na maximum of 32767 ticks, which is about 27 minutes.\n\nHowever, / summon furnace_minecart ~ ~ ~ {Fuel:32000} alone doesn't make it go since it doesn't have a direction.\n\nIt can be right-clicked on a track to give it a direction, or it can be summoned with the properties PushX and PushZ set, which are responsible for the direction.\n\nThe Motion property of every entity allows for movement of the minecart, but it does not direct the minecart to move on its own.\n\nJava Edition: Minecarts with furnaces use the Friendly Creatures sound category for entity-dependent sound events.\n\n[sound 1] \u2191 a b MC-42132 \u2191 Relates linearly with horizontal velocity (max 0.5) \u2191 Will increase by 0.0025 per tick if the minecart's horizontal velocity is more than 0.01 Bedrock Edition: Minecarts with furnace have entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Entity data Tags common to all entities Tags common to all minecarts Fuel: The number of ticks until the minecart runs out of fuel.\n\nPushX: Force along X axis, used for smooth acceleration/deceleration.\n\nPushZ: Force along Z axis, used for smooth acceleration/deceleration.\n\nBedrock Edition: See Bedrock Edition level format/Entity format.\n\nIssues relating to \"Minecart with Furnace\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe minecart with furnace is excluded from Bedrock and New Nintendo 3DS editions on purpose.\n\nIn a tweet, Jeb considered removing it from Java Edition.\n\n[3] When converting a Legacy Console Edition world to a Bedrock Edition world, any present minecarts with furnaces are converted into a normal minecart.\n\nDespite the above-described poor standing of the minecart, it was most recently briefly featured in an animation in the Minecraft Live 2022, where one was depicted as moving a train of about 20 minecarts at a higher than normal speed.\n\nA powered minecart in action.\n\n\u2191 a b \"Why The Furnace Minecart Isn't As Useless As You Think\" \u2013 ilmango on YouTube \u2191 MC-249493 \u2014 resolved as \"Fixed\".\n\n\u2191 \"I think we will phase out the furnace minecraft (sic) \" \u2013 @jeb_ (Jens Bergensten) on X, February 15, 2016 Items View at: Template:Items/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Minecart with Hopper",
    "url": "https://minecraft.fandom.com/wiki/Minecart_with_Hopper",
    "content": "Minecart with Hopper Rarity color Common Health 6 Stackable No Renewable Yes Size Height: 0.7 Blocks Width: 0.98 Blocks Drops 1 Minecart with Hopper plus contents Network ID JE: 10 A minecart with hopper is a minecart with a hopper inside.\n\nUnlike a normal hopper, it pulls items from containers much more quickly, cannot push items into containers, can collect item entities through a single layer of solid blocks and is locked and unlocked via activator rails.\n\nMinecarts with hoppers can be retrieved by attacking them.\n\nBy doing so it drop as an item and any other contents of the hopper are dropped as well.\n\nThe GUI of a minecart with hopper.\n\nMinecarts with hoppers are placed similarly to other minecarts.\n\nA minecart with hopper pulls in items lying nearby (within a range slightly larger than the cart itself), or inside a container directly above the minecart, at a rate of 1 item every game tick (20 items per second), eight times as fast as a normal hopper.\n\nIt also picks up items that are lying on a block directly above the track.\n\nIt does not push items into containers, but a hopper underneath the track can remove items from a minecart with hopper on the track.\n\nOrdinary hoppers can also drop items into a minecart with hopper like other containers, at the normal speed of 2.5 items per second.\n\nIn Bedrock Edition, a minecart with hopper on curved rail pulls in items in a hopper lying in front of its moving direction and 1 block above if hopper's output funnel is pointed downward and no block is below that hopper.\n\n[1] The hopper can be disabled by passing over a powered activator rail, and can be reenabled by an inactive activator rail.\n\nAn empty minecart with hopper can travel more than 85 blocks without stopping (as opposed to a normal cart going less than 12 blocks) from a dead stop using a 2 powered track starter even with another cart in front of them.\n\nHowever, the distance traveled by a minecart with hopper depends on the hopper's load.\n\nUsing a 1 powered rail starter track, a minecart with an empty hopper travels 64 blocks until it stops (as opposed to an empty normal minecart going 8 blocks).\n\nThe distance traveled diminishes non-linearly with increased hopper load; a minecart with a full hopper can travel only 16 blocks in this setup.\n\nSee also: Tutorials/Storage minecarts Java Edition: Minecarts with hoppers use the Friendly Creatures sound category for entity-dependent sound events.\n\n[sound 1] \u2191 a b MC-42132 \u2191 Relates linearly with horizontal velocity (max 0.5) \u2191 Will increase by 0.0025 per tick if the minecart's horizontal velocity is more than 0.01 Bedrock Edition: Java Edition: Bedrock Edition: Minecarts with hoppers have entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Entity data Tags common to all container entities Tags common to all entities Tags common to all minecarts Enabled: Determines whether or not the minecart hopper picks up items into its inventory.\n\nTransferCooldown: Time until the next transfer in game ticks, between 1 and 8, or 0 if there is no transfer.\n\nBedrock Edition: See Bedrock Edition level format/Entity format.\n\nIssues relating to \"Minecart with Hopper\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe first image of hopper carts released by Dinnerbone.\n\n[3] The 13w03a banner showing a minecart with hopper and a dropper.\n\n\u2191 MCPE-94293 \u2191 MC-249493 \u2014 resolved as \"Fixed\".\n\n\u2191 \"Well you guys got that quick.\n\nThe letters in the hotbar were for [imgur link]\" \u2013 @Dinnerbone (Nathan Adams) on X, January 15, 2013 Items View at: Template:Items/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Minecart with Monster Spawner",
    "url": "https://minecraft.fandom.com/wiki/Minecart_with_Monster_Spawner",
    "content": "This feature is exclusive to Java Edition.\n\nMinecart with Monster Spawner Health 6 Behavior Does not exist Details Size Height: 0.7 Blocks Width: 0.98 Blocks Minecarts with monster spawners are a combination of both minecarts and monster spawners.\n\nMinecarts with monster spawners cannot be obtained as an item in the inventory, and can only be produced using the / summon command.\n\nMain article: Monster Spawner The monster spawner within behaves the same way as normal monster spawners; but the entity to be spawned cannot be set via using spawn eggs; the monster spawner's data can only be modified using commands or NBT edits.\n\nIt has the same associated NBT tags as a normal monster spawner.\n\n[1] More precisely, a minecart with monster spawner acts as a monster spawner block at the minecart's position.\n\nIn other words, if the minecart with monster spawner moved within a block position, the range of spawn would not change, but if it moved 5 blocks east, the range of spawn would now be centered at the minecart with monster spawner's new position.\n\nWhen they are broken, minecarts with monster spawners drop 1 minecart.\n\nThe monster spawner will not drop.\n\nMinecarts with monster spawners use the Friendly Creatures sound category for entity-dependent sound events.\n\n[sound 1] \u2191 a b MC-42132 \u2191 Relates linearly with horizontal velocity (max 0.5) \u2191 Will increase by 0.0025 per tick if the minecart's horizontal velocity is more than 0.01 See also: Entity format Minecarts with monster spawners have entity data associated with them that contain various properties of the entity.\n\nEntity data Tags common to all entities Tags common to all minecarts Tags common to all spawners Issues relating to \"Minecart with Monster Spawner\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe first image of minecarts with monster spawners released by Dinnerbone.\n\nThe second image released by Dinnerbone.\n\nZoomed image of the second release.\n\nAnother image posted by Dinnerbone.\n\nA minecart with monster spawner spawned using / summon.\n\nA minecart with monster spawner spawning pigs.\n\n\u2191 https://twitter.com/Dinnerbone/status/299139100638851073 \u2191 https://twitter.com/Dinnerbone/status/288319336962215936 Entities View at: Template:Entities/content [edit ] Unused features View at: Template:Unused features/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Minecart with TNT",
    "url": "https://minecraft.fandom.com/wiki/Minecart_with_TNT",
    "content": "Minecart with TNT Rarity color Common Health 6 Stackable No Renewable Yes Size Height: 0.7 Blocks Width: 0.98 Blocks Drops;If not exploded 1 Minecart with TNT Network ID JE: 10 A minecart with TNT is a block of TNT inside a minecart.\n\nUnlike normal TNT it can detonate instantly under certain conditions and its damage and blast radius is increased by its speed when it detonates.\n\nMinecarts with TNT can be retrieved by attacking them, and by doing so it drops as an item.\n\nWhen the TNT minecart passes over the powered activator rail, it explodes after four seconds.\n\nPlacing two TNT minecarts on the rail and powering it (here, by flicking the lever) creates an instant explosion.\n\nDestroying the gold block causes the TNT minecart to fall down and instantly explode.\n\nA minecart with TNT detonates after a delay on these conditions: It moves over a powered activator rail.\n\nIt is destroyed while in motion (except by a player in Creative mode).\n\nIt is destroyed by fire, lava, or an explosion.\n\nIn Java Edition, it is hit by a fire charge.\n\nThe delay is 4 seconds (80 game ticks) for an activator rail, like the TNT block.\n\nFor other causes there is a random delay between 0 and 1.9 seconds, but more likely to be close to 1.\n\nIt detonates instantly on these conditions: It hits the ground with a downward velocity of it falling more than three blocks, unless landing on any form of rail.\n\nIt turns on a curved track too fast, with a solid block or entity located beside the track (in the previous movement direction).\n\nIt is hit by a flaming arrow.\n\nIt is pressed into a block or entity and has velocity.\n\nUpon detonation it acts as normal TNT, exploding and damaging nearby blocks, players, and entities.\n\nUpon detonation after activating on activator rail, it does not destroy its rails and the blocks the rail is on, however other nearby carts can. [Java Edition only ] More than one minecart can be placed on the same rail block, allowing many of them to fit into a single block.\n\nThey explode when touched, dealing large amounts of damage.\n\nThe explosion has a base power of 4, the same as regular TNT, but the game also adds a random bonus value up to 1.5 times velocity, but no higher than 7.5.\n\nThis means that with a speed of 5 or higher the power will be a random value between 4 and 11.5.\n\nWhen triggered by an activator rail or by damage, the bonus value is calculated using the horizontal velocity of the minecart.\n\nWhen hit by a flaming arrow the velocity of the arrow is used instead.\n\nWhen triggered by fall damage, the fall distance divided by 10 is used.\n\nMinecarts with TNT bounce off of other minecarts and cannot be linked to minecarts with furnaces.\n\nJava Edition: Minecarts with TNT use the Friendly Creatures sound category for entity-dependent sound events.\n\n[sound 1] \u2191 a b MC-42132 \u2191 Relates linearly with horizontal velocity (max 0.5) \u2191 Will increase by 0.0025 per tick if the minecart's horizontal velocity is more than 0.01 Bedrock Edition: [sound 1] \u2191 MCPE-35778 \u2014 Minecart with tnt does not have the sound of tnt being ignited when we use flint and steel, fire charge or activator rail Java Edition: Bedrock Edition: Minecarts with TNT have entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Entity data Tags common to all entities Tags common to all minecarts TNTFuse: Time until explosion or -1 if deactivated.\n\nBedrock Edition: See Bedrock Edition level format/Entity format.\n\nIssues relating to \"Minecart with TNT\" are maintained on the bug tracker.\n\nReport issues there.\n\nA direct hit from three merged minecarts with TNT can reduce a fully diamond armored player to half a heart.\n\n[4] However, if the TNT minecarts explode, they do not destroy any rails.\n\nThe first image of minecarts with TNT, released by Dinnerbone.\n\n[5] [6] (One can be seen in the lower-left corner.) A more zoomed in image.\n\nMinecart with TNT and activator rail for detonation.\n\nThe 13w02a banner, with a minecart with TNT and a hopper.\n\nDinnerbone showing how minecarts with TNT have controlled explosions.\n\n[7] Primed minecart with TNT.\n\nExplosion from a minecart with TNT.\n\n(The \"bridge\" of rails is left undestroyed by the explosion.) \u2191 MC-6833 \u2191 MC-165971 \u2191 MC-249493 \u2014 resolved as \"Fixed\".\n\n\u2191 \"Haha, oops...\n\nNuclear minecarts!\n\n(mature language)\" \u2013 @Dinnerbone (Nathan Adams) on X, January 10, 2013 \u2191 \"Those blasted pigs have taken the village.\n\nWe've ran out of options; we must stop them from spreading further!\" \u2013 @Dinnerbone (Nathan Adams) on X, January 7, 2013 \u2191 \"(Mirror: [imgur link])\" \u2013 @Dinnerbone (Nathan Adams) on X, January 7, 2013 \u2191 \"What's the point of properly activating TNT carts if they just blow up your tracks?\n\nLet me answer that with an album!\" \u2013 @Dinnerbone (Nathan Adams) on X, January 15, 2013 Items View at: Template:Items/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Note Block",
    "url": "https://minecraft.fandom.com/wiki/Note_Block",
    "content": "This article is about the block that produces single musical notes.\n\nFor the block that plays music discs, see Jukebox.\n\nNote Block Renewable Yes Stackable Yes (64) Tool Blast resistance 0.8 Hardness 0.8 Luminous No Transparent No Flammable No Catches fire from lava Yes A note block is a block that emits sounds when attacked, used or powered with redstone.\n\nThe sound produced can be altered in various ways by using it or putting certain blocks directly above or below it.\n\nA note block's sound played repeatedly can be used to direct allays to stay nearby and drop collected items near it.\n\nNote blocks generate in ancient cities.\n\nNote blocks are most quickly broken with an axe.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA note block being triggered and playing a note.\n\nNote blocks play a musical note when hit (pressing the attack button) or powered by redstone.\n\nA note block must have air in the space directly above it to play a sound.\n\nNotes can be heard up to 48 blocks away.\n\nThe volume of a note block decreases as the player gets further away from it.\n\nThe volume of note blocks (as well as jukeboxes) can be independently controlled by the Jukebox/Note Blocks slider in the audio settings.\n\nNote blocks play when on or next to a powered block.\n\nEach time a note block plays a note, a note particle may fly out of the top (if pressed too fast, notes may not appear), with the color depending on the pitch (but not the instrument).\n\nThere are 16 different instruments and 25 different pitches per instrument.\n\nPressing the use button on the block increases the note pitch up a semitone, with a total of two full octaves and a semitone (25 semitones in total) being available for each instrument.\n\nThe standard range (for harp and pling instruments) of notes span from F\u266f 3 to F\u266f 5.\n\nAfter reaching the highest note, pressing use again resets the pitch back to F\u266f 3, as does breaking the block and picking it back up.\n\nThe string bass and didgeridoo are two octaves (24 semitones) lower than the standard range, the guitar is one octave (12 semitones) lower than the standard range, the flute is one octave above the standard range, and the bells, chimes, and xylophone are 2 octaves above the standard range.\n\nThis gives the player six octaves (72 semitones) of effective range to combine instruments for greater pitch coverage.\n\nThe exact pitch can be found from its use -count by using the following formula: 2 ^ ((use count - 12) / 12).\n\nThe exact pitch to use -count assignment is shown below, [1] [2] along with the note's color, which is rendered with shading using the particle's texture.\n\nAlternatively, there is a graphical version available: Players can roughly check the tuning of a block by looking at the note icon.\n\nIn Java Edition, the tuning can also be checked by looking at the right side of the debug screen (accessed by pressing F3).\n\nIt is denoted as \"note:\" followed by a number from 0 to 24.\n\nThe instrument played depends on the material of the block underneath the note block.\n\nNote that these are groups of blocks defined by the code, not just the individual block.\n\nWhen a mob head is placed on top of a note block, the sound made by the note block will instead be that of the corresponding mob's ambient sound, with the exception of the creeper head, which instead causes the note block to play the primed sound.\n\nA pair of note blocks wired to a clock circuit to play alternately.\n\nNote blocks can be powered in a variety of different ways following normal redstone principles; however, some ways of powering note blocks are more convenient than others or produce unexpected results.\n\nWhen a note block is powered by a button on its side, it does play a note, but is often difficult to hear because the sound of the button can overlap the note block.\n\nBecause note blocks need space above them, note blocks powered by pressure plates or redstone directly above them do not make a sound.\n\nIf an allay hears a note block play within 16 blocks of its location, it tries to path find to the note block and then spends 30 seconds around that particular note block, seeking items around it and returning them to it instead of its player.\n\nAfter 30 seconds, the allay returns to targeting its player.\n\nA vibration particle emanates from the note block and reaches the allay to indicate the allay has locked on to the note block.\n\nBecause the allay and the note block interact via a vibration particle, placing wool between the note block and the allay can prevent this interaction.\n\nNote blocks can be used as a fuel in furnaces, smelting 1.5 items per block.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: In Bedrock Edition, a note block has a block entity associated with it that holds additional data about the block.\n\nSee Bedrock Edition level format/Block entity format.\n\nThis section is missing information about Info on the block entity used before 17w47a.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nIssues relating to \"Note block\" or \"Noteblock\" are maintained on the bug tracker.\n\nReport issues there.\n\nBecause a note block is a wooden type block, a note block directly on top of another one produces a string bass sound when powered.\n\nIn Java Edition, note blocks have the second highest number of possible block state combinations, at 1150 [verify ], beating fire 's 512 and behind redstone dust 's 1296.\n\nIn Creative mode, the only way to hit a note block to play it without breaking it or changing its pitch is by doing so while holding a sword.\n\nRedstone linked to note blocks, playing a simple melody when the button is pressed.\n\nA concept sketch tweeted by Notch depicting what would eventually become the Note Block.\n\nEfe looking at Makena napping on a Note block Efe placing a zombie head sneakily on the note block.\n\nMakena waking up startled at the sound of zombies being played on the note block.\n\nTutorials/Redstone music Tutorials/Redstone music/Doorbell Jukebox Minecraft Note Block Studio \u2013 A music editor for Minecraft.\n\n\u2191 Original chart by cookingfat \u2191 Original /playsound pitch chart by kwerti \u2191 MC-212976 Block of the Week: Note Block \u2013 Minecraft.net on June 1, 2018 Search YouTube for the many songs played on note blocks Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Observer",
    "url": "https://minecraft.fandom.com/wiki/Observer",
    "content": "This article is about the block that detects block updates.\n\nFor the redstone mechanism, see block update detector.\n\nObserver Renewable Yes Stackable Yes (64) Tool Blast resistance 3 Hardness 3 Luminous No Transparent Partial Flammable No Catches fire from lava No An observer is a block that emits a quick redstone pulse from its back when the block or fluid directly in front of its \"face\" experiences a change.\n\nAn observer requires a pickaxe to be mined.\n\nWhen mined without a pickaxe, it drops nothing.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAn observer is placed similarly to a piston.\n\nIt observes the block that it is placed against.\n\nThe texture of the detecting side is that of an observing face.\n\nAs observers can detect the state of other observers, placing two adjacent observers, each watching the other, can make a fast and compact redstone clock.\n\nThey send out a pulse.\n\nIn Java Edition, an observer detects changes in its target's block states, or the breaking or placing of a block (i.e.\n\nchanges in its block state, but not its block entity data).\n\nThis means that changes like the age of crops can be detected because they are part of the block states.\n\nIn Bedrock Edition, an observer acts as a block update detector and detects anything that causes a block update.\n\nThe causes and propagation of block updates are different between Java Edition and Bedrock Edition.\n\nAs a result, each can detect some kinds of changes that the other cannot.\n\nSee the table below for a comparison.\n\nWhen it detects something, the observer emits a redstone pulse of strong power at level 15 for 2 game ticks (1 redstone tick).\n\nThe pulse can power redstone dust, a redstone comparator, a redstone repeater, or any mechanism component located at its opposite end.\n\nIn Java Edition, the pulse is emitted with a delay of 1 redstone tick.\n\nIn Bedrock Edition, it is supposed to be delayed by 1 tick as well but is actually delayed 2 redstone ticks due to MCPE-15793, a bug causing redstone delays to be incorrect when components are activated by world changes (which, in the case of the observer in Bedrock Edition, is the only way it can be activated), as opposed to pure redstone components ticking.\n\nIts timing can also be incorrect due to MCPE-73342.\n\nIt also counts as a block update when the observer itself is moved by a piston.\n\nWhen this happens, an observer emits a pulse after being pushed or pulled, but not beforehand.\n\nThis enables them to be used in flying machines.\n\nObservers behave as both opaque and transparent blocks: they block light and allow mob spawning on top, but do not block opening chests below, do not cut off redstone wire, and cannot conduct redstone power.\n\nBecause observers in Java Edition detect changes in the block state, and not block updates, they can detect a wider range of phenomena than a block update detector (BUD) circuit in Bedrock Edition can detect (as some block state changes don't cause block updates).\n\nObservers in Bedrock Edition do detect block updates but not block state changes, and so they detect the exact same things that any other BUD would detect in that edition.\n\nThe observer can be placed under note blocks to produce bass drum sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Observer\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe current observer texture was created because Jeb kept confusing the front with the back.\n\nHe said it was inspired by the \"rejected texture\" created by Tommaso Checchi.\n\n[36] [37] Development image of an observer from Jeb.\n\nThe first image released of the new observer texture for Java Edition.\n\nTutorials/Block update detector Redstone Comparator \u2191 For example, a button cling on a block, when break the block that a button are clinging, that button will break and cause block update which can be detect by observer.\n\n\u2191 For example, a mushroom are on light level of 13, according to Minecraft Wiki, at level 13 and above, mushroom will uproot unless on mycelium, podzol or nylium.\n\nWhen update the mushroom, that mushroom will break and cause block update which can be detect by observer.\n\n\u2191 Another example, a wheat block are on light level of 0, according to Minecraft Wiki, at level 0 and below, wheat block will uproot.\n\nWhen update the wheat, that wheat will break and cause block update which can be detect by observer.\n\n\u2191 For example, place 2 chorus plants on top of an end stone.\n\nWhen place a chorus plant on the side of the bottom one, that \"bottom\" chorus plant will break and cause block update which can be detect by observer.\n\n\u2191 If a block get replaced by itself (with the same block states) by the / clone command, the observer will still be able to detect that.\n\nThis does not happen for / setblock and / fill.\n\n[more information needed ] \u2191 If observer is placed using / setblock or / fill, that observer will be powered.\n\nThis don't work for / clone.\n\n[more information needed ] \u2191 MC-107664 \u2191 MCPE-130935 \u2191 If an observer being pushed/pulled by a (sticky) piston, that observer will also powered.\n\n[more information needed ] \u2191 In Java Edition the game rule snowAccumulationHeight must be larger than 1.\n\n\u2191 The change of quasi-connected state usually coincides with some other block state change for these mechanisms, such as activating to dispense an item, or the piston head extending/retracting.\n\nTherefore, this effect is only noticeable when a dropper or dispenser \"deactivates\" by losing its quasi-connected status when the redstone power source is turned off.\n\nTo demonstrate, use a lever to power a redstone repeater that quasi-connects to a dropper.\n\nMonitor the dropper with an observer.\n\nTurn the lever on.\n\nThe dropper will drop an item and the observer will trigger.\n\nTurn the lever off.\n\nThe dropper will not do anything, but the observer will trigger again because it detects the dropper's change in quasi-connected state.\n\n\u2191 When the fluid source block is removed, all of the fluid flowing from the source will also be removed and cause a block update.\n\n\u2191 In Bedrock Edition, rabbits do not eat carrot crops; see MCPE-113321 and MCPE-131980.\n\n\u2191 In Bedrock Edition, the death of a coral fan cannot happen under normal circumstances \u2014 it happens the very next tick after the coral fan is placed, so the observer will already be reading the placement or water removal update, and coral fans placed using commands are waterlogged \u2014 but if lag is used to make the unwaterlogging and death events happen separately, the observer will detect both.\n\nFor coral, the death also happens too fast for the observer to detect it separate from the placement or water removal, but a non-waterlogged coral can be placed using commands.\n\nCoral blocks take multiple seconds to die, and removing water next to the coral block does not activate the observer anyway, so they can be detected under normal circumstances.\n\n\u2191 This event cannot normally happen, but if commands are used to place a wet sponge in the nether, the sponge will dry when it recieves a random tick. [Bedrock Edition only ] In Java Edition, sponges in the Nether always stay wet.\n\n\u2191 The disarmed  [JE only ] or disarmed_bit  [BE only ] block state cannot change without also detaching the tripwire, so this event cannot happen in isolation.\n\n\u2191 In Bedrock Edition, observers detect when a sculk shrieker stops shrieking, but not when it starts shrieking.\n\n\u2191 In Bedrock Edition, placing a pumpkin or melon next to a corresponding stem does not cause the stem to attach.\n\n\u2191 In Bedrock Edition, using bone meal on a coral block does not create sea pickles, due to MCPE-171383.\n\n\u2191 Grass, tall grass, 1-block-tall flower, seagrass, tall seagrass, coral, (wall) coral fan, moss carpet, azalea, flowering azalea, roots, fungus, nether sprouts, twisting vine, and pink petals.\n\n\u2191 Both under the sapling and the area around the sapling.\n\n\u2191 MC-107410 \u2191 MC-107783 \u2191 MCPE-17439 \u2191 MC-108696 \u2191 MC-107934 \u2191 MCPE-17321 \u2191 MC-107795 \u2191 MC-107730 \u2191 MC-108897 \u2191 MC-107760 \u2191 MC-108697 \u2191 MC-107623 \u2191 MC-146824 \u2191 \"Hype train!\n\n@darngeek is working on a device that acts as a proper BUD block in MC:PE (PC eventually), currently called \"Observer\"\" \u2013 @jeb_ (Jens Bergensten) on X, May 2, 2016 \u2191 a b \"Here's my rejected graphics for the Observer, because @darngeek has no artistic sensibility\" \u2013 @_tomcc (Tommaso Checchi) on X, May 2, 2016 \u2191 \"I kept confusing myself which side was front and back, so here's something inspired by the works of @_tomcc http://i.imgur.com/IK2d8m2.png\" \u2013 @jeb_ (Jens Bergensten) on X, November 7, 2016 \u2191 a b When deactivated, the sculk sensor's and the calibrated sculk sensor's \"sculk_sensor_phase\" block stage is converted from \"active\"->\"cooldown\"->\"inactive\".\n\nHowever, this happens so fast that observer can't detect it, so that isn't counted.\n\nBlock of the Week: Observer \u2013 Minecraft.net on November 10, 2017 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Opacity",
    "url": "https://minecraft.fandom.com/wiki/Opacity",
    "content": "When leaves are opaque (in \"fast\" graphics), they completely obstruct rendering.\n\nWhen leaves are transparent (in \"fancy\" graphics), the world behind them is also rendered.\n\nThis article is about see-through block textures, models, and lighting.\n\nFor blocks that can conduct redstone, see Conductive.\n\nFor blocks that have collision boxes you cannot move through, see solid block.\n\nFor partially see-through textures, see Translucency.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nNote: The term \"transparency\" has been used to describe many different properties in colloquial use; this page has been narrowed down to the visual and light-related definition.\n\nOpacity (and its inverse, transparency) are properties of blocks which affect how the game renders it and other nearby blocks, as well as how occlusion culling is handled.\n\nThe primary purpose of opacity is to tell the game engine if it needs to render other blocks behind that block; an opaque block completely obscures the view behind it, while a transparent block does not.\n\nThus, transparency applies not only to solid blocks like ice and glass, but also to blocks like cacti, stairs, chests, and single slabs, which are not considered full blocks.\n\nBy this definition, transparency does not imply that a block is actually see-through, which is a quality of the item texture specified by the game or resource pack.\n\nWater that is completely surrounded by water or opaque blocks does not have a current.\n\nHowever, if one of the surrounding blocks is transparent, the water shows a downward current on its side, like a waterfall, although swim speed through that water remains unchanged.\n\nOpacity also affects how light propagates through the world.\n\nOpaque blocks completely prevent light from traveling through them, while transparent blocks generally diminish the light by one light level per block (these value can be overridden however, and there are several exceptions).\n\nThe growth of grass blocks is linked to the amount of light in the blocks directly above them.\n\nA grass block can be killed by placing an opaque or partially transparent block above it.\n\nSome transparent blocks can reduce or block light, according to type: Glass and carpets do not reduce the light passing through them, i.e.\n\nthere is no additional modifier.\n\nIn other words, light passes through them as if it were air.\n\nLava is set to completely block light propagation.\n\nThis is often unnoticeable since lava has the maximum light level of 15, but can be observed in cases where lava blocks skylight propagation.\n\nWater, ice, leaves, slime block s, honey block s, and cobweb s do not have any extra effect on block light, but they do diffuse sky light.\n\nIn Bedrock Edition, water and ice have a -1 modifier to light propagation, on top of the normal decrease of 1 per block.\n\nThe light level from sunlight or moonlight is the same in each block of air in the column of air above the highest obstruction in the column.\n\nWhen placed, water, ice, leaves, slime blocks, honey blocks, and cobwebs obstruct that light column so that the lowest air block above the leaves acts as other light sources do.\n\nSunlight is attenuated by leaves and each vertical layer of leaf blocks attenuates the light further.\n\nIssues relating to \"Opacity\" or \"Transparency\" are maintained on the bug tracker.\n\nReport issues there.\n\nIn the Nether, the spawn point is always on top of an opaque block.\n\nThis can be seen if the player used a respawn anchor to set their spawn in the Nether.\n\nIf an opaque block is given transparent pixels in an edited texture, then instead of showing the block behind it through the transparent part, it simply fills in the area with white.\n\n[verify ] However, currently X-ray texture packs could be created using the blocks custom models feature.\n\n[1] Liquid \u2191 MC-172659 Environment View at: Template:Environment/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Piston",
    "url": "https://minecraft.fandom.com/wiki/Piston",
    "content": "Piston Regular Sticky Renewable Yes Stackable Yes (64) Tool Blast resistance 0.5 Hardness 1.5 Luminous No Transparent No Flammable No Catches fire from lava No A piston is a block capable of pushing most entities and blocks when given a redstone signal.\n\nA sticky piston is a variant of the piston that can additonally pull most blocks when it retracts.\n\nSome blocks cannot be moved, break when pushed or have other interactions with pistons.\n\nA piston can move up to twelve blocks at once.\n\nA piston can be broken using any tool with equal efficiency, and always drops itself.\n\nIn Java Edition, it is faster to break them with a pickaxe.\n\nThe pickaxe is also the preferred tool for breaking the head when extended.\n\n[1] \u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nThree sticky pistons generate as part of each jungle temple.\n\nFive sticky pistons also generate in each ancient city.\n\nSee also: Tutorials/Piston uses and Mechanics/Redstone/Piston circuits Pistons are always placed facing toward the player.\n\nWhen powered, the piston's wooden surface (the \"head\") starts extending immediately in Java Edition; or either 2 game ticks (1 redstone tick; 0.1 seconds) later or immediately, depending on how it was powered, in Bedrock Edition.\n\nWhen it extends, it pushes at most 12 blocks.\n\nThe piston makes a sound that can be heard within a 31\u00d731\u00d731 cube centered on the activating piston.\n\nAny entities in the path of the extending head are pushed with the blocks.\n\nIf there is no place for the entities to go, the block pushes inside them, suffocating mobs if the block is not transparent when pushed into the eye height of the mob.\n\nWhen a piston loses power, its head retracts.\n\nLike extending, this retraction starts immediately in Java Edition; or, depending on how it was powered, after 1 tick in Bedrock Edition.\n\nIt finishes retracting 2 game ticks (1 redstone tick; 0.1 seconds) after it starts.\n\nA sticky piston also pulls the block attached to its head, but not any of the other blocks it may have pushed.\n\nSticky pistons stick to a block only when retracting, so a block next to the piston head can be pushed aside by another piston and sticky pistons cannot hold falling blocks horizontally against gravity.\n\nIn Java Edition, pistons finish extending early and start retracting if given a pulse shorter than 3 game ticks (1.5 redstone ticks; 0.15 seconds).\n\nThese shorter pulses cause sticky pistons to \"drop\" their block, leaving it behind when trying to push it with a short pulse.\n\nAlso, this causes the block to end up in its final position earlier.\n\nHowever, if they receive a short pulse and don't have a block to be pushed, they pull the block which is 1 block away.\n\nA piston that pushes a slime block bounces any entity that it displaces in the direction the piston is facing.\n\nIn addition, when a slime block is moved by a piston, any movable blocks adjacent (not diagonally) to the slime block also move.\n\nSee the \"Slime blocks\" section below for more details.\n\nIn Bedrock Edition, blocks that stick to walls (such as levers) can be placed on pistons or sticky pistons.\n\nPistons can push most blocks, and sticky pistons can pull most blocks, except those listed in the table below.\n\nA sticky piston simply leaves a block behind if it cannot pull it.\n\nPistons cannot push blocks into the Void or beyond the top of the map.\n\nThey also cannot push more than 12 blocks.\n\nIf the requirements for a block to be pushed are not met, the piston simply does not extend.\n\nPistons do not move blocks that are \"attached to a block\", as they detach and drop as an item.\n\nRails: as long as they remain on top of a solid face of a block in their new position, and that block isn't moving at the same time.\n\nAn exception is when the rail and block supporting it are on two parallel extended pistons at which the rail remains attached.\n\nTrying to move both on the same piston using slime blocks does not work, nor does moving them on perpendicular pistons (although the latter temporarily appears to work because of the bug MC-75716).\n\nRails re-orient themselves after being pushed, similar to when placed manually.\n\nPistons powered by one line of redstone.\n\nPistons can be powered in various ways: If a redstone wire is in a line shape toward the piston.\n\nIn Java Edition, the wire does not automatically curve to the piston.\n\nPistons can be powered by a powered block directly adjacent to them, whether it is strongly powered or weakly powered.\n\nPistons can be powered by a redstone torch directly adjacent to them.\n\nIn Java Edition, pistons can be powered by any powered block one block diagonally, including the \"activated space\" above it (if a piston, both sticky and normal were to be facing up and a block of redstone placed on its head, it extends when powered, but doesn't retract when the power it receives from the side or back turns off).\n\nHowever, the piston doesn't extend or retract until it receives a block update.\n\nThis property is called quasi-connectivity and can be used to make a BUD switch.\n\nA repeater cannot transfer power through a piston, as pistons are a transparent block.\n\nAn upward-facing piston can't be powered by a block above it, unless it is extended In Java Edition.\n\nIn Bedrock Edition a redstone torch attached to a piston turns off whenever the piston is powered.\n\nThis mechanic is called soft inversion.\n\nPistons can also be powered by observers.\n\nThis can create a clock if the setup is correct.\n\nA B Piston A may extend because the slime block ignores the adjacent obsidian.\n\nPiston B may not extend because the diamond block is prevented from moving by the obsidian and so the slime block also refuses to move.\n\nWhen a slime block is pushed or pulled by a piston, while moving, adjacent blocks also move with the slime block, unless a non-piston movable block stops the blocks that are \"grabbed\" by the slime blocks.\n\nThese blocks may in turn push other blocks, not just the blocks in the line in front of the piston.\n\nFor example, a slime block sitting on the ground attempts to move the ground block underneath itself, which in turn has to push additional ground blocks in the direction of motion just as if it were being pushed directly by a piston.\n\nGlazed terracotta is an exception; it does not move when adjacent slime blocks are moved.\n\nThe same occurs when a slime block is moved by an adjacent slime block.\n\nFor example, a 2\u00d72\u00d72 cube of slime blocks may be pushed or pulled as a unit by a single piston acting on any of the blocks in the cube.\n\nA slime block adjacent to a block that cannot be moved by pistons ignores the immobile block.\n\nBut if an adjacent block could be moved but is prevented by the presence of an immobile block, the slime block is prevented from moving.\n\nSlime blocks are not pulled by a non-sticky piston, nor are they moved if an adjacent (non-Slime) block is moved by a piston.\n\nThe maximum of 12 blocks moved by a piston still applies.\n\nFor example, a 2\u00d72\u00d73 collection of Slime Blocks may be pushed or pulled by a sticky piston as long as no other movable blocks are adjacent to it.\n\nA piston cannot move itself via a \"hook\" constructed of slime blocks, but self-propelled contraptions can be created with multiple pistons.\n\nFor that, see the article Tutorials/Flying machines.\n\nThe same happens for the honey block, but it does not stick to slime blocks.\n\nPiston Head Regular Sticky Renewable Yes Stackable No Tool Any tool Blast resistance 0.5 Hardness 1.5 Luminous No Transparent Yes Flammable No Catches fire from lava No The piston head is a technical block used as the second block of an extended piston.\n\nA block state defines whether it is a normal or a sticky piston head.\n\nIt can be placed using the / setblock command or with the debug stick, though if not part of a proper piston, it disappears after receiving any block tick, such as when a block is placed next to it unless the player uses the debug stick.\n\nIt drops nothing.\n\nIn Java Edition, the normal and sticky piston heads are distinguished by a block state.\n\nIn Bedrock Edition, they use separate block IDs, and it can be obtained as an item via inventory editors.\n\nSee also: Block states Java Edition: Bedrock Edition: Piston Head: Sticky Piston Head: Moving Piston Renewable Yes Stackable No Tool None Blast resistance 0 Hardness?\n\nLuminous No Transparent Yes Flammable No Catches fire from lava No The moving piston, also known as block 36 due to its pre-flattening block ID, is an unobtainable technical block that contains part of a piston head, and/or part of one or two blocks that the piston is carrying into or out of the grid cell (including blocks carried indirectly via slime blocks).\n\nSince moving blocks vary in how much of each grid cell they occupy, they can't be stored as normal blocks and are instead stored as block entities.\n\nIt is overwritten with air, the piston head or the carried block at the end of the piston stroke; but if it is placed through editing and no piston is connected, it remains indefinitely.\n\nIt is invisible and non-solid in Java Edition, and cannot be broken without the use of commands or TNT.\n\nAlthough it is non-solid, fluids cannot pass through it.\n\nIt also prevents players from building at its location.\n\nMobs can see through it, but cannot walk through it.\n\nThe game treats the block as a stone block when it comes to the player's footstep sounds.\n\nIt is similar to Invisible Bedrock in properties with the exception that the player can walk through the moving piston but not invisible bedrock.\n\nSee also: Block states Java Edition: The moving piston has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities blockState: The moving block represented by this block entity.\n\nBlock state extending: 1 or 0 (true/false) \u2013 true if the piston is extending instead of withdrawing.\n\nfacing: Direction that the piston pushes (0=down, 1=up, 2=north, 3=south, 4=west, 5=east).\n\nprogress: How far the block has been moved.\n\nStarts at 0.0, and increments by 0.5 each tick.\n\nIf the value is 1.0 or higher at the start of a tick (before incrementing), then the block transforms into the stored blockState.\n\nNegative values can be used to increase the time until transformation.\n\nsource: 1 or 0 (true/false) \u2013 true if the block represents the piston head itself, false if it represents a block being pushed.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition (piston): Bedrock Edition (arm): \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 a b c Unavailable with / give command See also: Block states The piston and sticky_piston blocks use following block states: Java Edition: Bedrock Edition: In Bedrock Edition, a piston has a block entity associated with it that holds additional data about the block.\n\nSee Bedrock Edition level format/Block entity format.\n\nThis page would benefit from the addition of isometric renders.\n\nPlease remove this notice once you've added suitable isometric renders to the article.\n\nThe specific instructions are: MCPE-38053, extended sticky piston from the original mod First screenshot of pistons.\n\nThe following content is transcluded from Technical blocks/Pistons.\n\nA piston head in the inventory.\n\nA comparison between a normal stone block, and a stone block with a block 36 on it A \"sphere\" made out of block 36.\n\nPiston head Moving piston Piston Head Java Edition Beta 1.7 - Beta 1.9 Prerelease: [Has no defined name, rendering a minimum-length text box if highlighted] Beta 1.9 Prerelease 2 - Beta 1.9 Prerelease 3: [Has no defined name, and attempting to render it causes a game crash] Beta 1.9 Prerelease 4 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.null.name When given using the / give command, it is announced as null.name.\n\nBedrock Edition?\n\n- Beta 1.18.30.22: tile.pistonArmCollision.name Beta 1.18.30.26 - now: tile.piston_arm_collision.name Sticky Piston Head Bedrock Edition?\n\n- Beta 1.18.30.22: tile.stickyPistonArmCollision.name Beta 1.18.30.26 - now: tile.sticky_piston_arm_collision.name Moving Piston Java Edition Beta 1.7 - Beta 1.9 Prerelease: [Has no defined name, rendering a minimum-length text box if highlighted] Beta 1.9 Prerelease 2 - Beta 1.9 Prerelease 3: [Has no defined name, and attempting to render it causes a game crash] Beta 1.9 Prerelease 4 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.null.name When given using the / give command, it is announced as null.name.\n\nBedrock Edition?\n\n- Beta 1.18.30.22: tile.movingBlock.name Beta 1.18.30.26 - now: tile.moving_block.name \u2191 MC-171370 \u2014 resolved as \"Works As Intended\".\n\n\u2191 http://www.minecraftforum.net/viewtopic.php?t=247686&f=1032 \u2191 http://www.reddit.com/r/Minecraft/comments/hvkmo/attribution_of_the_piston_mod_in_vanilla_minecraft/ \u2191 MC-248841 \u2191 https://youtu.be/UgHbUFnr2NE?t=2m31s \u2191 https://youtu.be/2WOBsLF7Ooc?t=7m02s Issues relating to \"Piston\" are maintained on the bug tracker.\n\nReport issues there.\n\nMojang stated that the 12-block push limit for pistons would not be changed, because \"the current limitations are by design\".\n\n[1] When toggled between on and off rapidly with a gravity affected block (such as sand) above it, a piston can eventually break the block, which can be picked up as a resource.\n\nHowever, gravel broken this way never drops flint.\n\nIf a sticky piston powered by a short pulse directly pushes a waterlogged block, the block remains waterlogged at its new position.\n\nMobs can spawn inside the piston head block.\n\nCarpet can be placed on the piston extension block, and remains even if it is replaced with a solid block using / setblock.\n\nIn Bedrock Edition, the piston head is invisible and non-solid when placed with commands.\n\nThe moving piston cannot be placed with block placement commands in this edition.\n\nThe moving_piston is transparent and does not emit light.\n\nIf a light-emitting block is moved, the player can see it turn dark briefly.\n\nIf an opaque block is moved, the player may see light passing through it.\n\nNotch's explanation on how the rod (a full block long when extended) fits into the piston box (whose depth is a block minus the face's thickness).\n\n[2] Fundamental logic gates, implemented purely with pistons and redstone repeaters, clockwise from upper left: AND, OR, XOR, and NOT.\n\nSlow clock generator with pistons and redstone.\n\nAn example of a piston-controlled waterflow.\n\nArtwork of a Piston connected to a lever.\n\nLight shining through an extended piston.\n\nRedstone connecting to pistons in bedrock edition.\n\nAn example of sticky piston use with glass panes.\n\nAn example of sticky piston use with rails.\n\nAn example of sticky piston use with fences.\n\nSlime Block Redstone Tutorials/Piston uses Tutorials/Headless pistons Mechanics/Redstone/Piston circuits \u2191 In Java Edition, item frames are entities, not blocks.\n\nIn Bedrock Edition, they are blocks \u2191 Paintings are technically entities, not blocks.\n\n\u2191 \"Piston Push Limits (and increases).\n\nThe current limitations are by design.\" \u2013 Minecraft Feedback, January 3, 2019.\n\n\u2191 https://twitter.com/notch/status/83513677654929408 Block of the Week: Piston \u2013 Minecraft.net on October 13, 2017 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Place Block",
    "url": "https://minecraft.fandom.com/wiki/Place_Block",
    "content": "This article is about the block.\n\nFor other uses, see Place.\n\nThis article documents an April Fools' joke.\n\nThis feature was exclusively part of a joke version and is not currently planned for addition to regular Minecraft.\n\nIt is documented here on the wiki due to being officially-released content by Mojang Studios, even if not present in a final version.\n\nThis feature is exclusive to Java Edition.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nPlace Block South West North East Up Down Renewable Yes Stackable Yes (64) Tool Blast resistance?\n\nHardness 3 Luminous No Transparent No Flammable No Catches fire from lava No The Place Block is a joke block, unlocked by a vote, that takes other blocks from a container on its back side and places them in front of it when given a redstone signal.\n\nA Place Block can be mined with a pickaxe, in which case it drops only itself as it has no storage capacity on its own.\n\nIf mined without a pickaxe, the block breaks but drops no item.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAs part of Java Edition 23w13a_or_b the Place Block can only be \"used\" when the vote for minecraft:place_block is approved.\n\nIf this is not the case, the block cannot be: placed (nothing happens) dropped (the block gets removed from the inventory but no item appears) activated (the block doesn't react to redstone signals) crafted (the output of the crafting table stays empty) A Place Block can be used to place any block from any container.\n\nThis includes chests, hoppers, and dispensers.\n\nThey can be used When there is already a block in front of the output, the block that would have been placed is dropped as an item.\n\nA Place Block can be placed so that its in- and outputs face in any direction, including up or down.\n\nWhen placed, the output faces toward the player.\n\nThe texture of this side is identical to the output of an observer.\n\nA Place Block can be activated by: an adjacent active power component (Exceptions: a redstone torch does not turn ON a Place Block it is attached to) an adjacent powered opaque block (strongly-powered or weakly-powered) a powered redstone repeater or redstone comparator facing the Place Block powered redstone dust configured to point at the Place Block, or on top of it, or a directionless \"dot\" next to it; a Place Block is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nA Place Block is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\n\u2191 a b MC-177082 See also: Block states Place Block/BS Place blocks are an unsupported item due to being an April Fools' joke, and therefore such issues relating to them will not be fixed.\n\nPickaxe Block Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Powered Rail",
    "url": "https://minecraft.fandom.com/wiki/Powered_Rail",
    "content": "This article is about the powered rail.\n\nFor other types of rails, see Rail (disambiguation).\n\nPowered Rail Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No A powered rail is a type of rail that either increases or decreases the velocity of minecarts that move over it, depending on its power state.\n\nPowered rails can be crafted, and previously placed powered rails can be broken with any tool or by hand, dropping themselves as items.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA powered rail also drops as an item when the block beneath it is removed or a piston moves it into a space with no floor below it.\n\nSee also: Tutorials/Minecarts A powered rail can be used as a rail and as a redstone component.\n\nTo place a powered rail, use a powered rail item while pointing at a surface facing the space the powered rail should occupy.\n\nA powered rail can be placed on: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, upside-down slab, or upside-down stairs.\n\nA powered rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the powered rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a powered rail to the side of the fence causes the powered rail to be attached to the top of the ground next to the fence instead.\n\nWhen placed, a powered rail configures itself to line up with any adjacent rails (including activator rails, detector rails, and other powered rails), as well as adjacent rails one block up.\n\nIf there are two adjacent rails on non-opposite sides, or three or more adjacent rails, a powered rail lines up in the east-west direction.\n\nIf there are no adjacent rails, a powered rail lines up in the north-south direction (but if a rail is later placed to the east or west, the powered rail re-orients itself in the east-west direction even if it is already connected to another rail to the north or south).\n\nIf a rail it would line up with is one block up, a powered rail slants upward toward it (with multiple options to slant upward to, a powered rail \"prefers\", in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nUnlike their unpowered counterparts, and like detector and activator rails, powered rails are always straight.\n\nIt cannot be placed suspended in midair, even with commands, which is not unintentional.\n\n[1] Main article: Rail Powered rails (and other rails) can be used as \"roads\" for minecarts.\n\nA minecart that enters a powered rail's space from either end of the powered rail continues to move in the direction the powered rail is facing, but its speed may change depending on whether the powered rail is active or not (see below).\n\nA minecart that enters a powered rail's space from the side turns east or south (depending on the powered rail's orientation), or in the downward direction for a slanted powered rail.\n\nSee also: Redstone circuit Powered rails can be used to affect the speed of minecarts that travel over them.\n\nActivation A powered rail is a redstone mechanism and can be activated by: an adjacent active power component (for example, a redstone torch, a block of redstone, a daylight sensor, etc.) an adjacent powered block (strongly-powered or weakly-powered) a powered redstone comparator or redstone repeater facing the powered rail powered redstone dust configured to point at the powered rail; a powered rail is not activated by adjacent powered redstone dust that is a directionless \"dot\" or configured to point in another direction.\n\nAn activated powered rail also activates any adjacent powered rails it is connected to, up to eight away from the original activation source.\n\nThus a single activation source can activate up to 17 rails (one original in the middle and eight on either side).\n\nAn activated powered rail does not activate non-connected adjacent rails.\n\nBehavior An active powered rail: increases the speed of a moving minecart in the direction it is already moving.\n\nSpecifically, let the speed in both the X and Z directions (meters / tick) combined be \"speed\".\n\nIf speed > 0.01, then every tick the minecart is passing over the powered rail, its x velocity is increased by (xspeed * 0.06 / speed) and its z velocity is increased by (zspeed * 0.06 / speed) accelerate a non-moving minecart away from a solid opaque block the powered rail is facing (so a non-moving minecart moves away from the block when the powered rail activates, and a moving minecart bounces off a block an active powered rail is facing because it stops and then gets accelerated away) An inactive powered rail reduces the speed of a moving minecart, usually stopping it within one block's distance even on a downward-slanted track.\n\nIf a slanted powered rail activates with a non-moving minecart on it, the minecart starts moving downward (because it is no longer being braked by an inactive powered rail) and is then accelerated downward.\n\nPowered rails cannot increase the speed of a minecart to more than 8 blocks per second on either the north-south or east-west axis.\n\nThe speeds that can be achieved with varying numbers of powered rails or intervals of normal rails between powered rails is complex -- for a thorough discussion, see Tutorials/Minecarts.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Powered Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nPowered rails were originally a suggestion for golden tracks.\n\nPower on.\n\nPower off.\n\nRail Activator Rail Detector Rail \u2191 MC-182709 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Pressure Plate",
    "url": "https://minecraft.fandom.com/wiki/Pressure_Plate",
    "content": "\"Plate\" redirects here.\n\nFor the armor, see MCD:Plate Armor.\n\nPressure Plate View all renders Renewable Yes Stackable Yes (64) Tools Blast resistance 0.5 Hardness 0.5 Luminous No Transparent Yes Flammable No Catches fire from lava Overworld wood: Yes All others: No A pressure plate is a non- solid block that produces a redstone signal when stood on by an entity, with four variants: Wooden pressure plates can detect all entities, producing the maximum signal strength of 15.\n\nStone pressure plates can detect only players and mobs, also producing a strength of 15.\n\nLight weighted pressure plates can detect all entities, and the signal strength equals the number of entities stood on one.\n\nHeavy weighted pressure plates are similar to light weighted pressure plates, but measure groups of 10 entities.\n\nA wooden pressure plate can be mined using any tool, or without a tool, and drops itself as an item.\n\nHowever, axes are the fastest way to break one.\n\nAll other types can be obtained only by using a pickaxe.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA pressure plate is removed and drops itself as an item if: the block beneath it is moved, removed, or destroyed a piston tries to push it or moves a block into its space One stone pressure plate is generated naturally in each desert pyramid.\n\nStone pressure plate also generate as part of ancient city.\n\nOak pressure plates can generate in some plains village houses.\n\nAcacia pressure plates can generate in some savanna village houses.\n\nSpruce pressure plates can generate in some snowy tundra village houses.\n\nSee also: Redstone circuit A pressure plate can be used to detect entities on top of it (players, mobs, items, etc.).\n\nPlacement Pressure plate placement and behavior.\n\nPressure plates on fences.\n\nTo place a pressure plate, use it while aiming at the face of a block adjacent to the destination space.\n\nA pressure plate can be attached to: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, fence, nether brick fence, an upside-down slab, or upside-down stairs.\n\nA pressure plate cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the plate to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a plate to the side of the fence causes the plate to be attached to the top of the ground next to the fence instead.\n\nMore information regarding placement on transparent blocks can be found at Opacity/Placement.\n\nActivation A pressure plate activates when an entity is on top of it (specifically, when the entity's collision mask intersects the bottom quarter-block of the pressure plate's space, which may include entities flying close to the ground), with a minimum activation time of 1 second.\n\nA stone pressure plate is activated only by mobs, players and armor stands, while a wooden pressure plate or a weighted pressure plate is activated by all entities (including players, mobs, items, arrows, experience orbs, fishing bobs, etc.) besides snowballs.\n\nHeavy or light weighted pressure plates deactivate 5 redstone ticks (10 game ticks or 0.5 seconds, barring lag) after no entities are on top of it, while stone or wooden pressure plates deactivate 10 redstone ticks (20 game ticks or 1 second, barring lag) after no entities are on top of it.\n\nA minecart traveling on rails activates a pressure plate next to a diagonal track but not one next to a straight track (stone pressure plates are activated only if the minecart contains a mob or player).\n\nBehavior While active, a pressure plate: powers adjacent redstone dust, and adjacent redstone comparators or redstone repeaters facing away from the plate strongly powers any full solid opaque block beneath it activates adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nFor stone and wooden pressure plates, the power level is always 15.\n\nFor weighted pressure plates, the power level varies depending on the number of entities.\n\nThe signal strength from a weighted pressure plate does not vary with the type of entity: all entities have the same \"weight\", so two mobs produce the same strength as two dropped items.\n\nAn item stack counts as a single entity, no matter how many items are in the stack.\n\nWhen multiple items of the same type fall on a weighted pressure plate, they may initially be separate item entities and the weighted pressure plate counts them separately, but if they then collapse into a single item stack entity the signal strength from the weighted pressure plate may go down.\n\nWater and lava flow around a pressure plate without affecting it.\n\nA pressure plate is not solid (it is not a barrier to entity movement).\n\nA block under a pressure plate can provide a solid barrier underneath it (for mobs to walk across, items to fall on, etc.), but when a pressure plate is placed on a block with a small collision mask, such as a fence or nether brick fence, it is possible for entities to move through the pressure plate while still activating it (walking through it horizontally, or falling through it vertically).\n\nThus, a pressure plate on a fence can be used to detect entities without stopping them (more compactly than a tripwire circuit).\n\nPressure plates are 0.0625 blocks high (1 \u2044 16 of a block) when inactive and 0.03125 blocks high (1 \u2044 32 of a block) when active, but because they are not solid they do not affect the position of entities \"on top\" of them, so a player on top of a pressure plate is actually standing on the block beneath it.\n\nPressure plates can also open doors, activate TNT, and power command blocks.\n\nWooden pressure plates can be used as a fuel in furnaces, smelting 1.5 items per pressure plate.\n\nWooden pressure plates can be placed under note blocks to produce \"bass\" sounds.\n\nStone pressure plates can be placed under note blocks to produce \"bass drum\" sounds.\n\n[verify ] Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k l m n o Available with / give command.\n\n\u2191 a b c d e f g h i j k l m n o The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Stone and wooden pressure plates Weighted pressure plates Bedrock Edition: Stone and wooden pressure plates Weighted pressure plates Before Java Edition 1.7.2, weighted pressure plates could be activated only by drops, and they required larger quantities.\n\nOak Pressure Plate Spruce Pressure Plate Birch Pressure Plate Jungle Pressure Plate Acacia Pressure Plate Dark Oak Pressure Plate Mangrove Pressure Plate Cherry Pressure Plate Bamboo Pressure Plate Crimson Pressure Plate Warped Pressure Plate Stone Pressure Plate Polished Blackstone Pressure Plate Iron Pressure Plate Gold Pressure Plate \"Polished Blackstone Pressure Plate\" is the current longest name for a block tied with Cracked Polished Blackstone Bricks (34 characters with spaces, 31 without) It briefly lost its place between Java Edition 1.17 snapshots 20w45a and 21w05a, where it was surpassed by variants of the Copper Block: Waxed Lightly Weathered Cut Copper Stairs (41 characters with spaces, 36 without in first place) Waxed Lightly Weathered Cut Copper Slab (39 characters with spaces, 34 without in second place) Waxed Semi-Weathered Cut Copper Stairs (38 characters with spaces, 34 without in third place) Waxed Semi-Weathered Cut Copper Slab (36 characters with spaces, 32 without in fourth place) Issues relating to \"Pressure Plate\" or \"Weighted Pressure Plate\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-50309 \u2191 MC-66247 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Rail",
    "url": "https://minecraft.fandom.com/wiki/Rail",
    "content": "For other uses, see Rail (disambiguation).\n\nRail Straight (North to South) Straight (West to East) North - East East - South South - West North - West Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No Rails are non-solid blocks that provide a path along which minecarts can travel.\n\nRails can be mined with anything, but pickaxes are the quickest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA rail also drops as an item when the block beneath it is removed, or a piston moves it into a space with no block below it, or when water flows across it.\n\nRails are destroyed by flowing lava.\n\nRails can be found naturally running along the floors of mineshafts, and in the \"pumpkin ring room\" of woodland mansions.\n\nSee also: Tutorials/Minecarts A rail can be used as a minecart track and as a redstone component.\n\nA sequence of rails (including regular rails, activator rails, detector rails, and powered rails) is called a track.\n\nTo place a rail, use a rail item while pointing at a surface facing the space the rail should occupy.\n\nA rail can be placed on: the top of any full block (stone, dirt, blocks of gold, glass, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of an upside-down slab, upside-down stairs, or trapdoor.\n\nany of the above underwater (making the rail waterlogged) Rails visually float 1 \u2044 16 blocks above the ground, with an outline 2 \u2044 16 blocks high.\n\nA rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a rail to the side of the fence causes the rail to be attached to the top of the ground next to the fence instead.\n\nMore information regarding placement on transparent blocks can be found at Opacity/Placement.\n\nA placed rail configures itself to be straight or curved according to rail blocks around it.\n\nIf there are no other rails adjacent, or if placed beside an existing stretch of track of any type, then in Bedrock Edition the new rail orients itself as a straight north-south track, and in Java Edition the new rail orients itself in the direction the player is facing.\n\nA new rail placed at the end of an existing stretch of track continues the existing track in the same direction, either east-west or north-south.\n\nIf there are two adjacent rails on its level, or one level up or down, the newly placed rail configures itself as straight or curved as needed to connect the other two.\n\nIf placed between three adjacent rails (forming a T-junction) the newly placed rail configures itself as curved to join two of the sides.\n\nT-junction before filling in tracks T-junction after filling in tracks Existing tracks one block up and down are considered for adjacency in the same manner, and the new piece of track gets laid as a curve, but unless space is left for sloping track sections, minecarts can continue past the curve only on level or one-block-down corners.\n\nIn one-block-up corners, the cart ends up buried in the ground.\n\nBefore placing the top block.\n\nTop block is placed as curve.\n\nShowing cart getting buried.\n\nSome placement of rails produces track layouts that cause minecarts to collide and enter blocks.\n\nMinecarts always buried Minecarts get through If placed to form a 4-way intersection with no curved section, it does not form a cross-roads connection.\n\nIf placed between four adjacent rails to form a curved intersection it always curves south-to-east.\n\nCurve controls minecart passage Existing sections of track may be re-oriented, become sloping, or even change into curved sections when the new rail is placed adjacent to it: An existing straight, north-south rail re-orients to east-west when a new rail is placed at the east or west sides.\n\nIf placed next to an existing rail that is one block up or down, the new rail slants up or down to join it.\n\nRail \"prefers\", in order: west, east, south, and north.\n\nOther configurations can be created by placing and removing rails.\n\nIf a track is placed perpendicular to an existing length of track, it appears as a straight rail, but in fact, it is curved according to the patterns for tee junctions as seen above; mine carts going through the intersection turn the corner.\n\nBreaking and re-laying track so that the intersection block is laid last causes the intersection block to be updated as a curved section.\n\nRails can be pushed and pulled by pistons.\n\nThe intersection rail at a T-intersection may be made to change its direction of curvature by applying redstone power using a redstone torch, lever, or button.\n\nSeparate tracks are laid adjacent, but at the next level, lower or higher can sometimes cause issues.\n\nHowever, normally they do not interact with the switched rail.\n\nMain article: South-east rule A minecart travels straight through a T-shaped intersection when entering from the \"back of\" the curved rail.\n\nIt follows the curve when entering from either of the other two legs.\n\nA minecart passes straight through a 4-way intersection constructed to have no curved rail.\n\nWhen entering the 4-way from east or west a cart turns according to the south-east rule.\n\nAt non-curve track intersections, minecarts always travel downhill if they can.\n\nThis is known as the downhill rule and overrides the south-east rule.\n\nA block placed above the track at the downhill end of a ramp prevents minecarts from traveling down the slope, but not up.\n\nFor a minecart to move down a diagonal tunnel, there must be clearance sufficient for a player to walk it.\n\nA diagram on how minecarts travel according to track curves.\n\nIf a straight track piece leads to a curve block and isn't attached to the curve, a minecart runs over the gap and continues to go straight over the curve.\n\nThis is not applicable to other types of rails.\n\nNotably, the minecart can exceed the normal 8 m/s speed limit while it jumps over the gap.\n\nFor example, by placing intersections on every other block of a straight track, it is possible to travel (uncomfortably) at 10 m/s in a straight direction.\n\nAs with straight T-intersections and 4-way intersections, the practice of making a minecart jump track can be used to make one-way entries onto a track.\n\nOn curve intersections the behavior is more intuitive because the cart simply proceeds in the direction it is already going, allowing designs that don't rely on knowledge of the south-east rule.\n\nA minecart with no rider at full speed can climb 10 blocks on an unpowered track.\n\nThis suggests that a powered track is needed at a height of only 10 blocks to keep a cart climbing.\n\nHowever, the cart slows so much that it can reach only another 5 blocks high with 2 lengths of powered track starting at 9 blocks high.\n\nThe minimum number of powered rails to keep the cart climbing perpetually is 3 every 6 blocks.\n\nCarts with a rider, or minecarts with chests, have more momentum and so climb higher than carts that are unloaded.\n\nWith a rider, a minecart can climb at least 24 blocks before needing powered rails to go higher.\n\nAlso, to ascend from 0 to max speed, the player needs 7 powered rails.\n\nIn Java Edition, some mobs (such as pillagers, zombies, sheep and many others) avoid walking on rails, and walk off rails when pushed onto them.\n\n[1] Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: This section is missing information about initial waterlogged rail reveal.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nIssues relating to \"Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nWhen walking on a block that has a rail on top, the player hears the sound of the block they are walking on, but if they jump (while still walking), they hear the sound of iron.\n\n[2] Rails are 750 mm (approx.\n\n2-foot 5-inch) narrow gauge (the gauge is the distance between the rails).\n\nA chest of rails has a total length of 64 \u00d7 27 = 1728 meters, which is slightly more than 1 mile (1.074 miles, 0.933 nautical miles).\n\nRails do not touch the block they are placed on.\n\nThe flat texture can actually be seen to hover over their supporting block.\n\nAn example of a track with curves and ramps.\n\nAn example of how to use the tracks as a roller coaster.\n\nA randomly generated misplaced rail found in a mineshaft.\n\nThree more floating rails in a mineshaft.\n\nEven more floating rails.\n\nVillagers riding minecarts with rails below them.\n\nA railroad stop without any redstone switching mechanisms, based purely on the one-way curve intersection behavior.\n\nA polar bear intentionally walking on powered rails due to the fact that it spawned inside a ski resort's ski lifts.\n\nThis is an example of odd behavior of mobs, since they don't walk on rails.\n\nAn example of sticky piston use with rails.\n\nPowered Rail Activator Rail Detector Rail \u2191 \"[MC-33359] Mobs are unable to cross minecart rails - Jira\" \u2013 Mojira, October 1, 2013.\n\n\u2191 \"[MC-1691] Sprinting / falling on level 1 and 2 snow, lily pads and carpet use the block below for the particles - Jira\" \u2013 Mojira, November 1, 2012.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits",
    "content": "A redstone circuit is a contraption that activates or controls mechanisms.\n\nCircuits can act in response to player or entity / mob activation, continuously on a loop, or in response to non-player activity (mob movement, item drops, plant growth, etc).\n\nA useful distinction can be made between a circuit performing operations on signals (generating, modifying, combining, etc.), and a mechanism manipulating the environment (moving blocks, opening doors, changing the light level, producing sound, etc.).\n\nMaking this distinction lets us talk about the various circuits separately, and will let players choose whichever circuits are useful for their purposes.\n\nThe machines controlled by redstone circuits can range from simple devices such as automatic doors and light switches to complex devices such as elevators, automatic farms, or even in-game computers.\n\nHowever, this article provides only an overview of redstone circuits as above.\n\nThese can be used to control simple mechanisms, or combined as parts of a larger build.\n\nEach circuit type on this page has links to its own page, which provides greater detail about them and give schematics for multiple variations of each.\n\nBefore working with any but the most basic Redstone circuits, an understanding of some basic concepts is required: \"power\", \"signal strength\", \"redstone ticks\", and \"block updates\".\n\nOther relevant articles: The Redstone mechanics article provides more information on these concepts.\n\nThe Redstone components article adds a list and description of all blocks which interact with redstone power.\n\nThe Mechanisms tutorial complements this article with an assortment of mechanism designs using circuits described here.\n\nThe Redstone tips tutorial gives general advice about building.\n\nMost circuits are described using Schematic diagrams; some of these require multiple images to show one or two layers per image.\n\nSee the Help:Schematic page for details on how various blocks and components are represented.\n\nThe wiki describes circuit size (the volume of the rectangular solid it occupies) with the notation of shorter width \u00d7 longer width \u00d7 height, including support/floor blocks, but not including inputs/outputs.\n\nAnother method used for describing circuit size in the Minecraft community is to ignore non-Redstone blocks simply used for support (for example, blocks under Redstone dust or repeaters).\n\nHowever, this method is unable to distinguish between flat and 1-high circuits, as well as some other circuit differences.\n\nSometimes it is convenient to compare circuits simply by the area of their footprint (e.g., 3\u00d74 for a circuit three-block wide by four blocks long), or by a single dimension important in a particular context (e.g., length in a sequence of sub-circuits, height in a confined space, etc.).\n\nSeveral features may be considered desirable design goals: 1-high A structure is 1-high (aka \"1-tall\") if its vertical dimension is one block high (meaning it cannot have any redstone components that require support blocks below them, such as redstone dust or repeaters).\n\nAlso see flat.\n\n1-wide A structure is 1-wide if at least one of its horizontal dimensions is exactly one block wide.\n\nFlat A structure is flat if it generally can be laid out on the ground with no components above another (support blocks under redstone components are okay).\n\nFlat structures are often easier for beginners to understand and build, and fit nicely under floors or on top of roofs.\n\nAlso see 1-high.\n\nFlush A structure is flush if it doesn't extend beyond a flat wall, floor, or ceiling and can still provide utility to the other side, though redstone mechanisms may be visible in the wall.\n\nFlush is a desirable design goal for piston-extenders, piston doors, etc.\n\nAlso see hipster and seamless.\n\nHipster A structure is hipster if it is initially hidden behind a flat wall, floor, or ceiling and can still provide utility to the other side.\n\nSee also flush and seamless.\n\nInstant A structure is instant if its output responds immediately to its input (a circuit delay of 0 ticks).\n\nSeamless A structure is seamless if no redstone components are visible both before and after it completes its task (but it's okay if some are visible during operation).\n\nSeamless is a desirable design goal for piston-extenders, piston doors, etc.\n\nSee also flush and hipster.\n\nSilent A structure is silent if it makes no noise (such as from piston movement, dispenser/dropper triggering when empty, etc.).\n\nSilent structures are desirable for traps or peaceful homes.\n\nStackable A structure is stackable if it can be placed directly on top of other copies of itself, and they all can be controlled as a single unit.\n\nAlso see tileable.\n\nExpandable A structure is Expandable if it can be placed directly next to other copies of itself, and they all can be controlled as a single unit.\n\nAlso see tileable.\n\nTileable A structure is tileable if it can be placed directly next to or on top of other copies of itself, and each copy can still be controlled independently.\n\nAlso see stackable.\n\nStructures might be described as \"2-wide tileable\" (tileable every two spaces in one dimension), or \"2\u00d74 tileable\" (tileable in two directions), etc.\n\nSome structures might be described as \"alternating tileable\", meaning they can be placed next to each other if every other one is flipped or a slightly different design.\n\nOther design goals may include reducing the delay a sub-circuit adds to a larger circuit, reducing the use of resource-expensive components (redstone, nether quartz, etc.), and re-arranging or redesigning a circuit to make it as small as possible.\n\nSome components are not available before a player has access to the Nether, which limits the designs available.\n\nIn particular, redstone comparators, observers and daylight detectors require nether quartz, which is available only from the Nether.\n\nAdditionally, redstone lamps require glowstone, which is occasionally available from trading or witches, but is much more plentiful in the Nether.\n\nAlthough the number of ways to construct circuits is endless, certain patterns of construction occur repeatedly.\n\nThe following sections attempt to categorize the circuits that have proven useful to the Minecraft community, while the main articles describe the specific circuits that fall into those categories.\n\nSome of these circuits might be used by themselves for simple control of mechanisms, but frequently the player needs to combine them into more complex circuits to meet the needs of a mechanism.\n\nMain article: Transmission circuit Some aspects of signal transmission can be helpful to understand: transmission types, vertical transmission, repeaters, and diodes.\n\nVertical transmission Transmitting signals upward Transmitting signals downward Examples of two-way vertical ladders in Bedrock Edition Although horizontal signal transmission is straightforward, vertical transmission involves options and trade-offs.\n\nRedstone staircases: The simplest way to transmit signals vertically is by placing redstone dust on blocks diagonally upward, either in a straight staircase of blocks, in a 2\u00d72 spiral of blocks, or in another similar variation.\n\nRedstone staircases can transmit signals both upward and downward but can take up much space and require repeaters every 15 blocks.\n\nRedstone ladders: Because glowstone, top slabs, glass, and upside-down stairs can support redstone dust but don't cut redstone dust, signals can be transmitted vertically (upward only) by alternating these blocks in a 2\u00d71 \"ladder\".\n\nRedstone ladders take up less space than redstone staircases, but also require repeaters every 15 blocks.\n\nIn Bedrock Edition, glass and pistons can be used to create two-way vertical ladders that transmit signals both upward and downward (glowstone, hoppers, and slabs still allow the dust to power upward but not downward).\n\nTorch towers and torch ladders: A redstone torch can power a block above it, or redstone dust beneath it, allowing vertical transmission both upward and downward (different designs are required for each).\n\nBecause it takes each torch a little time to change state, a torch tower can introduce some delay into a circuit, but no repeaters are necessary.\n\nHowever, every torch inverts the redstone signal (i.e.\n\nchanges it from powered to unpowered), so having an even number of torches is required.\n\nObserver towers: An observer can power a block of a redstone circuit above or below it, allowing vertical transmission both upward and downward.\n\nPlacing blocks that can be activated, such as redstone dust, noteblocks, or doors, both above and below it creates a state change when the observer is looking downward or downward when the observer is looking upward.\n\nRepeating this pattern means that updates are chained.\n\nDaylight detector exploiting: You can use daylight detectors to send a Redstone signal downward in 1 tick, but the path needs to be unobstructed by anything.\n\nYou need to have a piston push a block over the sensor.\n\nIt detects the change in light and emits a Redstone pulse.\n\nThis design is extendable upward as far as you want, but you need to have the original hole open to sunlight.\n\nIt also works only during the day, because it uses shadows to activate.\n\nBubble columns: An observer can be used to detect the block update that occurs when a water source changes to a bubble column (or vice versa).\n\nWhen swapping the block below a column of water sources to soul sand or a magma block from some other block, the entire column immediately changes to bubble column blocks.\n\nThis can be used to quickly transmit a redstone signal upward to an observer facing the top water source/bubble column block.\n\nWall updating: A setup that can carry a pulse signal downwards across any distance involves walls of any type of stone, a piston, and an observer.\n\nWhen a wall block has a solid block on two opposing sides and non-solid blocks (e.g., air) on the other two sides, it takes a flat shape.\n\nThis is vertically repeatable up to any height.\n\nHowever, when a wall/solid block is placed into one of the two air blocks around a flat wall, the flat wall block and every flat wall block below it are updated to a different version of the wall with a column in the middle.\n\nThis update is instant and can be detected by an observer watching any flat wall in the tower.\n\nThe update can be made repeatable by having a regular piston face the flat wall at the top of the tower, since the piston head also triggers the wall update.\n\nRepeater To \"repeat\" a signal means to boost it back up to full strength.\n\nThe easiest way to do this is with a redstone repeater.\n\nVariations include: Instant repeater: Repeats a solid signal without the delay introduced by a redstone repeater.\n\nTwo-way repeater: Repeats a signal in both directions.\n\nDiode A \"diode\" is a one-way circuit that allows a signal to travel in one direction.\n\nIt is used to protect another circuit from the chance of a signal trying to enter through the output, which could incorrectly change the circuit's state or interfere with its timing.\n\nIt is also used in a compact circuit to keep one part of the circuit from interfering with another.\n\nCommon choices for a diode include a redstone repeater or a height elevation to glowstone or a top slab, which does not transmit a signal back down.\n\nMany circuits are already one-way simply because their output comes from a block that can't take input.\n\nFor example, a signal cannot be pushed back into a circuit through a redstone torch except through the block it's attached to.\n\nMain article: Logic circuit It's sometimes necessary to check signals against each other and output a signal only when the inputs meet some criteria.\n\nA circuit that performs this function is known as a logic gate (a \"gate\" that allows signals through only if the logic is satisfied).\n\nIn electronic or programming diagrams, logic gates are typically shown as if they were individual devices; However, when building redstone devices in Minecraft, all logic gates are formed from multiple blocks and components, which interact to produce the desired results.\n\nNOT gate A NOT gate (aka \"inverter\") is on if its input is off.\n\nThe simplest NOT gate is an input block with a redstone torch attached.\n\nOR gate An OR gate is on if any of its inputs are on.\n\nThe simplest OR gate is to feed multiple signals into a single block or redstone wire.\n\nNOR gate A NOR gate is on only if none of its inputs are on.\n\nThe simplest NOR gate is to feed multiple signals into a block with a redstone torch attached.\n\nAND gate An AND gate is on only if all of its inputs are on.\n\nNAND gate A NAND gate is on if any of its inputs are off.\n\nXOR gate An XOR gate is on if its inputs are different.\n\nXNOR gate An XNOR gate is on if its inputs are equal.\n\nIMPLY gate An IMPLY gate is on unless the first input is on and the second input is off.\n\nMain article: Pulse circuit Some circuits require specific pulses; other circuits use pulse duration to convey information.\n\nPulse circuits manage these requirements.\n\nA circuit that is stable in one output state and unstable in the other is known as a monostable circuit.\n\n[note 1] Many pulse circuits are monostable because their OFF state is stable, but their ON state soon reverts to OFF.\n\nPulse generator A pulse generator produces a pulse of a specific duration.\n\nPulse limiter A pulse limiter (aka pulse shortener) reduces the duration of pulses that are too long.\n\nPulse extender A pulse extender (aka pulse sustainer, pulse lengthener) increases the duration of pulses that are too short.\n\nPulse multiplier A pulse multiplier outputs multiple pulses for every input pulse (it multiplies the number of pulses).\n\nPulse divider A pulse divider (aka pulse counter) outputs a signal only after a certain number of pulses have been detected through the input (the number of pulses is indicative of the number of loops).\n\nEdge detector An edge detector reacts to either a redstone signal changing from OFF to ON (a \"rising edge\" detector), from ON to OFF (a \"falling edge\" detector), or switching between ON and OFF in either order(a \"dual edge\" detector).\n\nPulse length detector A pulse length detector reacts only to pulses in a certain range of durations (often only to pulses of one specific duration).\n\nMain article: Clock circuit A clock circuit is a pulse generator that produces a loop of specific pulses repeatedly.\n\nSome are designed to run forever, while others can be stopped and started.\n\nA simple clock with only two states of equal duration is named for the duration of its ON state (e.g., for example, a clock that alternates between a 5-tick ON state and a 5-tick OFF state is called a 5-clock) while others are usually named for their period (the time it takes for the clock to return to its original state; for example, a \"1-minute clock\" might produce a 1-tick pulse every 60 seconds).\n\nObserver clock 1 A repeating clock made with Observers and Pistons (an Observer looking at a piston).\n\nObserver clock 2 A repeating clock made with two Observers with their faces facing each other.\n\nRepeater clock A repeater clock consists of a loop of repeaters (usually either redstone repeaters or redstone torches) with occasional dust or blocks to draw off the appropriate pulses.\n\nHopper clock A hopper clock produces timed pulses by moving items back and forth between 2 hoppers feeding into each other and taking a redstone output with comparators.\n\nThis was revolutioninised by ethoslab, as he created the etho hopper clock, a staple in redstone timers.\n\nPiston clock A piston clock produces a loop of pulses by passing a block back and forth (or around, with many pistons) and drawing off a redstone pulse when the block is in a certain location.\n\nComparator clock The clock of short or moderate cycle length utilizing comparator's subtraction or signal fading feature.\n\nClocks can also be built using daylight sensors, minecarts, boats, water flow, item despawn, etc.\n\nMain article: Memory circuit Unlike a logic circuit whose state always reflects its current inputs, a memory circuit's output depends not on the current state of its inputs, but on the history of its inputs.\n\nThis allows a memory circuit to \"remember\" what state it should be in, until told to remember something else.\n\nThere are five basic types of memory circuits.\n\n(A few circuits combine two different types.) RS latch An RS latch has two inputs, one to set the output on and another to reset the output back to off.\n\nAn RS latch built from NOR gates is known as an \" RS NOR latch\", which is the oldest and most common memory circuit in Minecraft.\n\nT flip-flop A T flip-flop is used to toggle a signal (like a lever).\n\nIt has one input, which toggles the output between on and off.\n\nBefore the 1.21 updates, they had to be big, chunky machines, but now we can use a copper bulb as one, and it only takes up 2 blocks (copper bulb and comparator) Gated D latch A gated D latch has a \"data\" input and a \"clock\" input.\n\nWhen the clock input turns on, it sets the output to equal its data input.\n\nNot to be confused with a D flip-flop, which sets the output equal to its data input on a clock rising transition.\n\nJK latch A JK latch has two inputs, one to set the output on and another to reset the output back to off (like an RS latch), but when both turn on simultaneously it toggles the output between on and off (like a T flip-flop).\n\nCounter Unlike T flip-flops and RS latches, which can hold two states (ON or OFF), a counter can be designed to hold a greater number of states.\n\nMany other memory circuits are possible.\n\nMain article: Piston circuits Pistons have allowed players to design circuits that are smaller and/or faster than the standard, redstone-only counterparts.\n\nAn understanding of standard redstone circuits is helpful, as this tutorial is focused on the circuit design rather than the function.\n\nThe main components here are sticky pistons, redstone wire, repeaters, and redstone torches.\n\nRegular pistons can also see use, especially combined with gravity blocks.\n\nThere are several benefits of piston circuitry: Neither repeaters nor pistons 'burn out', unlike redstone torches.\n\nPiston circuits are often (not always) smaller and/or faster than their redstone counterparts.\n\nThis allows building devices such as fast clocks and \"instant\" signal transmission.\n\nPistons' ability to move blocks within the world makes them a natural for memory circuits, as well as the obvious doorways and switchable bridges.\n\nWith slime or honey blocks involved, entire structures can \"get up and move\" (see also the Flying Machines tutorial).\n\nPiston circuits can sharply reduce the use of redstone in favor of wood, stone, and iron.\n\nMain article: Miscellaneous circuits These circuits aren't generally needed for redstone projects, but might find use in complex projects, proofs of concept, and thought experiments.\n\nSome examples: Multiplexers and relays A multiplexer is an advanced form of logic gate that chooses which of two inputs to let through as output based on an additional input (for example, if input A is ON then output input B, otherwise output input C).\n\nThe reverse of this is a relay, which copies a data input to one of two outputs, depending on whether the additional input is ON or OFF.\n\nRandomizers Main article: Tutorials/Randomizers A randomizer produces output signals unpredictably.\n\nRandomizers can be designed to produce a pulse at random intervals, or to randomize which of multiple outputs are turned ON (such as random number generators, or RNGs).\n\nSome randomizers use the random nature of Minecraft (such as cactus growth or dispenser slot selection), while others produce pseudo-randomness algorithmically.\n\nMulti-bit circuits Multi-bit circuits treat their input lines as a single multi-bit value (something other than zero and one) and perform an operation on them all at once.\n\nWith such circuits, possibly combined with arrays of memory circuits, it's possible to build calculators, digital clocks, and even basic computers inside Minecraft.\n\nBlock update detectors Main article: Tutorials/Block update detector Main article: Tutorials/Comparator update detector A block update detector (BUD, or BUD switch) is a circuit that reacts to a block changing its state (for example, stone being mined, water changing to ice, a pumpkin growing next to a pumpkin stem, etc.).\n\nBUDs react by producing a pulse, while T-BUDs (toggleable BUDs) react by toggling their output state.\n\nThese are generally based on subtle quirks or glitches in device behavior; current circuits most often depend on pistons.\n\nAs of Java Edition 1.11, many of the functions of BUDs were condensed into the observer, however, a BUD circuit can also detect other changes undetectable by observers, like a furnace finishing smelting or something being crafted in a crafting table.\n\nThe addition of this was made to move toward feature parity with Bedrock Edition versions.\n\nMore advanced circuits Main article: Tutorials/Advanced redstone circuits Many other complex circuits are possible.\n\n\u2191 Note: Some players refer to edge detectors as monostable circuits Redstone View at: Template:Redstone/content [edit ] Gameplay View at: Template:Gameplay/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Comparator",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Comparator",
    "content": "Redstone Comparator Redstone Comparator Subtracting Powered Powered+Subtracting Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No This page uses many images.\n\nIt is not recommended for people with limited or slow internet connections to read through this page.\n\nA redstone comparator is a block that can produce an output signal from its front by reading chests, lecterns, beehives and similar blocks, or repeat a signal without changing its strength.\n\nIt can also be set to either stop outputting a signal when its side input receives a stronger one (front torch off), or subtract its side input's signal strength from its output (front torch on).\n\nRedstone comparators generate in ancient cities.\n\nA redstone comparator can be broken instantly with any tool, or by hand, and drops itself as an item.\n\nA redstone comparator is removed and dropped as an item if: its attachment block is moved, removed, or destroyed; water flows into its space; [Java Edition only ] a piston tries to push it or moves a block into its space.\n\nIf lava flows into a redstone comparator's space, the redstone comparator is destroyed without dropping as an item.\n\nA redstone comparator can be placed on the top of any opaque block with a solid full-height top surface (including upside-down slabs and upside-down stairs).\n\nIn Bedrock Edition, a comparator can also be placed on walls and fences.\n\nFor more information about placement on transparent blocks, see Opacity/Placement.\n\nThe redstone comparator has a front and a back \u2014 the arrow on the top of the comparator points to the front.\n\nWhen placed, the comparator faces away from the player.\n\nThe comparator has two miniature redstone torches at the back and one at the front.\n\nThe back torches turn on when the comparator's output is greater than zero (the arrow on top also turns red).\n\nThe front torch has two states that can be toggled by using the comparator: Down and unpowered (indicating the comparator is in \"comparison mode\") Up and powered (indicating the comparator is in \"subtraction mode\") The redstone comparator can take a signal strength input from its rear as well as from both sides.\n\nSide inputs are accepted only from redstone dust, block of redstone, redstone repeaters, other comparators, and observers in specific scenarios.\n\nThe redstone comparator's front is its output.\n\nIt takes 1 redstone tick (2 game ticks, or 0.1 seconds barring lag) for signals to move through a redstone comparator, either from the rear or from the sides.\n\nThis applies to changing signal strengths as well as simply to turning on and off.\n\nRedstone comparators check their power state before their scheduled ticks update.\n\nThis results in redstone comparators not usually responding to 1-tick fluctuations of power or signal strength \u2014 for example, a 1-clock input is treated as always off from the side, and always on from the rear.\n\nThis happens because the signal changes back to its original state before the redstone comparator checks its input states.\n\nHowever, certain setups such as powering any input with two separate observer pulses at the same time will cause a redstone comparator to respond to 2 gametick pulses.\n\nThe redstone comparator has four functions: maintain signal strength, compare signal strength, subtract signal strength, and measure certain block states (primarily the fullness of containers).\n\nA redstone comparator with no powered sides outputs the same signal strength as its rear input.\n\nComparators in comparison mode.\n\nA redstone comparator in comparison mode (front torch down and unpowered) compares its rear input to its two side inputs.\n\nIf either side input is greater than the rear input, the comparator output turns off.\n\nIf neither side input is greater than the rear input, the comparator outputs the same signal strength as its rear input.\n\nThe formula for calculating the output signal strength is as follows: output = rear \u00d7 [left \u2264 rear AND right \u2264 rear ] The greatest of the side inputs A and C is subtracted from the rear input B, outputting 1.\n\nIf either A or C were greater than B, it would output 0.\n\nA redstone comparator in subtraction mode (front torch up and powered) subtracts the signal strength of the higher side input from the signal strength of the rear input.\n\noutput = max(rear \u2212 max(left, right), 0) For example: if the signal strength is 6 at the left input, 7 at the right input and 4 at the rear, the output signal has a strength of max(4 \u2212 max(6, 7), 0) = max(4\u22127, 0) = max(\u22123, 0) = 0.\n\nIf the signal strength is 9 at the rear, 2 at the right input and 5 at the left input, the output signal has a strength of max(9 \u2212 max(2, 5), 0) = max(9\u22125, 0) = 4.\n\nA redstone comparator can measure the fullness of a chest, as well as other block states, even through an opaque block.\n\nA redstone comparator treats certain blocks behind it as power sources and outputs a signal strength proportional to the block's state.\n\nThe comparator may be separated from the measured block by an opaque block.\n\nHowever, in Java Edition, if the opaque block is powered to signal strength 15, then the comparator outputs 15 no matter the fullness of the container.\n\n[1] A redstone comparator can output a signal indicating how full a container is.\n\n(0 for empty, 15 for full, etc.) The table on the right is described more in detail, later in this section.\n\nContainers that can be measured by a comparator include: Furnace Blast Furnace Smoker Brewing Stand Hopper Minecart with Hopper on top of a detector rail Dispenser Dropper Chest Trapped Chest Minecart with Chest on top of a detector rail Barrel Large chest Large trapped chest Shulker Box (any color) Generally speaking, the comparator output signal strength represents the average fullness of the slots, based on how many of that item form a full stack (64, 16, or 1 for non-stackable items).\n\nThe Minimum Items for Container Signal Strength table (right) shows the minimum full-stack-equivalent (FSE) to produce different signal strengths from common containers.\n\nA full-stack-equivalent quantifies how many normal 64-stackable items are needed to output a corresponding signal strength.\n\nThe 's' is a constant 64, with the additional amount needed following after.\n\nOne may also consider the terms: c umulative-weight or weighted-sum instead of full-stack-equivalent.\n\nItems that stack to a max of 16 (snowballs, signs, ender pearls, etc.), contribute +4 to the full-stack-equivalent for each unity (count of 1 item).\n\nSimilarly, items that stack to 1 (minecart, boat, etc.) contribute +64, and items that stack to 64 contribute +1.\n\nExample 1: 3 ender pearls will contribute a 3 x 4 = 12 full-stack-equivalent.\n\nExample 2: 16 ender pearls and 60 redstone dust contributes a 16x4 + 60x1 = 124 full-stack-equivalent.\n\nExample 3: 1 minecart and 60 redstone dust contributes a 1x64 + 60x1 = 124 full-stack-equivalent.\n\nExample 4: To produce a signal strength of 10 from a hopper, one requires a full-stack-equivalent of at least 3s + 14 = 206 but strictly less than than 3s + 37 = 229.\n\nThis can be done with 3 minecarts, and 14 dirt.\n\nWhen a comparator measures a large chest or large trapped chest, it measures the entire large chest (54 slots), not just the half directly behind the comparator.\n\nA chest or trapped chest that cannot be opened (either because it has an opaque block, ocelot, or cat above it) always produces an output of 0 no matter how many items are in the container \u2014 shulker boxes can always be measured, even if they cannot open.\n\nCalculating signal strength from items When a container is empty, the output is off.\n\nWhen it is not empty, the output signal strength is calculated as follows: signal strength = floor(1 + ((sum of all slots' fullnesses) / (number of slots in container)) \u00d7 14) fullness of a slot = number of items in slot / max stack size for this type of item Example: 300 blocks in a dispenser (which has 9 slots), where each block stacks to a maximum of 64 has a 300 full-stack-equivalent.\n\nThis produces an output with a signal strength of 8: 1 + ((300 items / 64 items per slot) / 9 slots) \u00d7 14 = 8.292, floored is 8 Calculating items from signal strength It can be useful in redstone circuits to use containers with comparators to create signals of a specific strength.\n\nThe number of items required in a container to produce a signal of desired strength is calculated as follows: items required = max(desired signal strength, roundup((total slots in container \u00d7 64 / 14) \u00d7 (desired signal strength \u2212 1))) Example: To use a furnace (which has 3 slots) to create a strength 9 signal, players need 110 items: max(9, (3\u00d764/14) \u00d7 (9\u22121)) = 109.714, rounded up is 110 Comparators used to measure containers.\n\nSome non-container blocks can also be measured by a redstone comparator: Beehive and Bee nest A hive or nest outputs a signal strength equal to the amount of honey in the hive/nest.\n\nCake A cake outputs a signal strength relative to the amount of cake remaining.\n\nEach slice is worth 2 signal strength, with 7 total slices, for an output of 14 for a full cake.\n\nCauldron signal strength Cauldron A cauldron outputs different signal strengths depending on how much water or powdered snow is inside.\n\nFrom completely empty to completely full, the output values are 0, 1, 2, and 3.\n\nIf lava or powder snow is inside, the strength is always 3.\n\nComposter signal strength Composter A composter outputs different signal strengths depending on the level inside.\n\nFrom completely empty to completely full, the output values are 0, 1, 2, 3, 4, 5, 6, 7 and 8.\n\nCommand Block A command block stores the \"success count\" of the last command executed, which represents the number of times the most recently used command of this command block succeeded.\n\nA \"success\" is defined by the command 's success conditions: if a red error message is returned in the chat, the command was not successful.\n\nMost commands can succeed once per execution, but certain commands (such as those that accept players as arguments) can succeed multiple times, and the comparator outputs the number of times it succeeded (maximum 15 when sent to redstone dust, but in the code it is able to go up to the 32-bit integer limit, and can be used in contraptions with no redstone dust with those values).\n\nA command block continues to store the success count of the last command executed until it executes its command again, thus the comparator continues to output the same signal strength even after the command block is no longer being activated (it doesn't turn off when the signal to the command block turns off).\n\nEnd Portal Frame An end portal frame outputs a full signal of 15 if it contains an eye of ender and zero otherwise.\n\nA comparator can measure the presence and rotation of an item frame's contents.\n\nItem Frame A comparator can measure the state of an item frame 's contents.\n\nAn item frame comparator outputs 0 if the item frame is empty, or 1 to 8 for any item depending on its rotation: 1 at initial placement, plus 1 for each 45\u00b0 of rotation for a maximum of 8.\n\nFor an item frame that holds a map, a unit of rotation is 90\u00b0 instead of 45\u00b0, but a comparator still outputs power levels 1 to 8.\n\nIt takes two full rotations to cycle through all comparator outputs, and each orientation of the map corresponds to two output levels that differ by 4.\n\nThe comparator must be placed behind the block the item frame is attached to, facing away from the item frame.\n\nThe block must be a full block, and the item frame cannot be submerged in water.\n\nHaving a sign in the same block as the item frame will prevent the frame from sending a signal as well. [Java Edition only ] Jukebox A jukebox outputs a signal strength indicating which music disc is currently playing.\n\nSee the Minimum Items for Container Signal Strength table above.\n\nLectern A lectern outputs a signal strength that depends on what page the player is currently on.\n\nThe calculation used is: signal strength = floor(1 + ((current page - 1) / (number of pages in book - 1)) \u00d7 14) This results in page 1 having a signal strength of 1, and the last page having a signal strength of 15.\n\nThe exception is a single page book, which will output a signal strength of 15.\n\nFor example, a book with 15 pages will output a signal equal to the current page number.\n\nA book with 5 pages will output signal strengths of 1, 4, 8, 11 and 15 for the different pages.\n\nA book with 100 pages will have the signal strength increase to the next level on pages 1, 9, 16, 23, 30, 37, 44, 51, 58, 65, 72, 79, 86, 93 and 100.\n\nRespawn Anchor A respawn anchor outputs a signal strength of 0, 3, 7, 11, or 15, depending on the \"charged\" value.\n\nSculk Sensor A sculk sensor outputs a signal strength depending on the type of vibration that is detected.\n\nChiseled Bookshelf A chisled bookshelf outputs a signal strength between 1 and 6 indicating the last slot interacted with.\n\nWhen no slot has been interacted with yet, it outputs 0.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b Unavailable with / give command \u2191 a b The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A redstone comparator has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities OutputSignal: Represents the strength of the analog signal output of this redstone comparator.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nThis section is missing information about If MC-50242 also affected comparators?.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nFor a more in-depth breakdown of changes to repeater textures and models, including a set of renders for each state combination, see /Asset history The following content is transcluded from Technical blocks/Redstone Comparator.\n\nJava Edition 13w01a - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.comparator.name When given using the / give command, it is announced as tile.comparator.name.\n\nJava Edition 13w01a - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.comparator.name When given using the / give command, it is announced as tile.comparator.name.\n\nIssues relating to \"Redstone Comparator\" are maintained on the bug tracker.\n\nReport issues there.\n\nComparators do not emit redstone particles when powered, unlike redstone torches and repeaters.\n\n[5] Dinnerbone showing how comparators work.\n\nDinnerbone showing how comparators work.\n\nDinnerbone showing how comparators work.\n\nA contraption incorporating comparators.\n\nComparators in action.\n\nOutput specific signals.\n\nAnother comparator in use.\n\nRotating the torch in the item frame adjusts the comparator's output.\n\n\u2191 MC-64394 (resolved as \"Works As Intended\") \u2191 MC-182820 \u2014 resolved as \"Fixed\".\n\n\u2191 https://youtu.be/UgHbUFnr2NE?t=2m50s \u2191 https://youtu.be/Ib83drtXv6Y?t=3m40s \u2191 MC-51692 \u2014 resolved as \"Works As Intended\".\n\nRedstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Dust",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Dust",
    "content": "\"Redstone\" redirects here.\n\nFor the ore, see Redstone Ore.\n\nFor the powered mineral block, see Block of Redstone.\n\nFor other uses, see Redstone (disambiguation).\n\nRedstone Dust Inactive (connected) Inactive (unconnected) Active (connected) Active (unconnected) View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No Redstone dust is a mineral that can transmit redstone power as a wire when placed as a block.\n\nIt is also used in crafting and brewing.\n\nSee also: Redstone Ore \u00a7 Natural generation Redstone ore mined using an iron pickaxe or higher drops 4 or 5 redstone dust (or more with Fortune, averaging at 6 redstone dust with Fortune III).\n\nIf mined with Silk Touch, the block drops itself instead of redstone dust.\n\n15 lengths of redstone dust are naturally generated as part of the trap in each jungle pyramid.\n\n5 lengths of redstone dust can be found in one type of jail cell room in a woodland mansion.\n\nIn ancient cities, multiple pieces of redstone dust can be found integrated into circuitry.\n\nRedstone dust can be broken instantly using any tool, or without a tool, and drops itself as an item.\n\nRedstone dust is removed and drops as an item if: its attachment block is moved, removed, or destroyed water or lava flows into its space a piston tries to push it or moves a block into its space Witches have a chance of dropping 0\u20132 redstone dust upon death.\n\nThis is increased by 1 per level of Looting, for a maximum of 0\u20135 redstone dust.\n\nRedstone dust can be crafted from blocks of redstone.\n\nIn Java Edition, novice-level cleric villagers sell two redstone dust for one emerald.\n\nIn Bedrock Edition, novice-level cleric villagers sell four redstone dust for one emerald.\n\nSee also: Tutorials/Raid farming In Java Edition, when the player has the Hero of the Village status effect, clerics might throw that player a redstone dust as a gift.\n\nRedstone dust is used for brewing, crafting, and in redstone circuits by placing it on the ground to create redstone wire.\n\nIt can also be used to power redstone components.\n\nWhen placed in the world, redstone dust becomes a block of \"redstone wire\" [more information needed ], which can transmit redstone power.\n\nTrim color palette The following color palette is shown on the designs on trimmed armor: Examples of redstone wire configuration.\n\nTop Left: Redstone wire connects diagonally vertically through non-opaque blocks.\n\nTop Right: Redstone wire does not connect diagonally vertically through opaque blocks.\n\nCenter: Redstone wire gets darker as its power level drops, to a maximum of 15 blocks from a power source.\n\nExamples of redstone wire placements.\n\nRedstone dust can be placed on opaque blocks as well as glowstone, upside-down slabs, glass, upside-down stairs, and hoppers.\n\nIt can also be placed on some transparent blocks; see Opacity/Placement for more information.\n\nIt cannot be placed suspended in midair, even with commands, which is not unintentional.\n\n[1] Redstone wire configures itself to point toward adjacent redstone power components and transmission component connection points.\n\nRedstone wire also configures itself to point toward adjacent redstone wire one block higher or lower \u2013 unless there is a solid opaque block above the lower redstone wire.\n\nIf there is only one such adjacent redstone component, redstone wire configures itself into a line pointing both at the neighbor and away from it.\n\nIf there are two or more such adjacent components, redstone wire connects them in the form of,,, or as needed.\n\nWhen there are no adjacent components, a single redstone wire configures itself into a plus sign, which can provide power in all four directions.\n\nBy right-clicking it can be changed into a dot, which does not provide power to any of the four directions.\n\nIn Bedrock Edition, redstone wire automatically configures itself to point toward adjacent blocks or mechanism components.\n\nIn Java Edition, it does not.\n\nIf such a configuration is desired, the other neighbors of the redstone wire must be arranged to create it, i.e the redstone dust must be placed in a way that it would be pointed at the block\u2019s location even if it were not there.\n\nWhen redstone wire is reconfigured after placement, it does not update other redstone components around it of the change unless that reconfiguration also includes a change in power level or another component provides an update.\n\nThis can create situations where a mechanism component remains activated when it shouldn't, or vice versa, until it receives an update from something else \u2013 a \"feature\" of redstone wire that can be used to make a block update detector.\n\nIn Bedrock Edition, the signal can go down from glass blocks.\n\nHowever, the signal can never go down from slabs.\n\nRedstone wire can transmit power, which can be used to operate mechanism components (doors, pistons, redstone lamps, etc.).\n\nRedstone wire can be \"powered\" by a number of methods: from an adjacent power component or a strongly-powered block from the output of a redstone repeater or redstone comparator from adjacent redstone wire.\n\nThe powering dust can be a level higher or lower, but with restrictions: Redstone dust can be powered by redstone dust that is one level lower, or on an opaque block one level higher.\n\nA transparent block cannot [Java Edition only ] pass power downward.\n\nThe block \"between\" the two dust blocks must be air or transparent.\n\nA solid block there \"cuts\" the connection between the higher and lower dust.\n\nThe \"power level\" of redstone dust can vary from 0 to 15.\n\nMost power components power-up adjacent redstone dust to power level 15, but a few (daylight sensors, trapped chests, and weighted pressure plates) may create a lower power level.\n\nRedstone repeaters output power level 15 (when turned on), but redstone comparators may output a lower power level.\n\n15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 Redstone wire can transmit power up to 15 blocks.\n\nPower level drops by 1 for every block of redstone wire it crosses.\n\nThus, redstone wire can transmit power for no more than 15 blocks.\n\nTo go further, the power level must be re-strengthened \u2013 typically with a redstone repeater.\n\nPowered redstone wire on top of, or pointing at, an opaque block provides weak power to the block.\n\nA weakly-powered block cannot power other adjacent redstone wire, but can still power redstone repeaters and comparators, and activate adjacent mechanism components.\n\nTransparent blocks cannot be powered.\n\nWhen redstone wire is unpowered, it appears dark red.\n\nWhen powered, it becomes bright red at power level 15, fading to darker shades with decreasing power.\n\nPowered redstone wire also produces \"dust\" particles of the same color.\n\nWhile redstone wire always provides power to the directions it points into, it can still point into directions in which it cannot give power.\n\nIf redstone wire comes in the form of a cross, the player can right-click to toggle it between a cross and dot.\n\nA redstone dot does not power anything adjacent to it, but powers the block under it.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Unavailable with / give command \u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Main article: Redstone Dust/Asset history [edit ] Note: These videos do not show all uses for redstone in crafting and all methods of obtaining.\n\nThis video is also outdated, as of 1.13 Java Edition, redstone is now called Redstone Dust.\n\nThe following content is transcluded from Technical blocks/Redstone Wire.\n\nThis section is missing information about MC-8149.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Redstone Dust (As block name, item does not exist) 13w37a - 17w47a: Redstone Dust (As block name, item does not exist) 17w47a and onwarda: Redstone Wire Bedrock Edition?\n\n-?: Redstone Dust Java Edition Bedrock Edition First image of redstone dust on top of slabs and stairs.\n\nOlivia using a scarce amount of redstone dust.\n\nSunny using a very long strip of redstone dust.\n\nOfficial T-shirt artwork \"Powered By Redstone\" made by JINX.\n\nPixel art of redstone dust.\n\nIssues relating to \"Redstone\", \"Redstone dust\", or \"Redstone wire\" are maintained on the bug tracker.\n\nReport issues there.\n\nFive updates for Windows 10 released from 2016 to 2018 were codenamed \"Redstone\", referencing Minecraft.\n\n[5] The block has 1,296 possible block state combinations, the highest of all blocks as of 1.15.2, beating fire 's 512 and note block 's 800.\n\nAccording to Minecraft Education, redstone dust contains radioactive elements.\n\n\u2191 MC-182709 \u2191 MC-137336 \u2191 MC-153508 \u2191 a b https://youtu.be/qtn9Nx3YpeU \u2191 \"Microsoft plans \u2018Redstone\u2019 updates for Windows 10 in 2016\" by Tom Warren \u2013 The Verge, April 7, 2015.\n\nRedstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Lamp",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Lamp",
    "content": "\"Lamp\" redirects here.\n\nFor the other light source, see Lantern.\n\nRedstone Lamp Redstone Lamp Lit Redstone Lamp Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0.3 Hardness 0.3 Luminous Yes (15) (when lit) Transparent Partial [a] Flammable No Catches fire from lava No A redstone lamp is a block that produces light when activated with a redstone signal.\n\nRedstone lamps generate naturally in ancient cities.\n\nA redstone lamp can be mined with any tool [1] or by hand, dropping itself as an item.\n\nA redstone lamp can be used to produce switchable light.\n\nRedstone lamps are redstone mechanisms and can be activated by: An adjacent active power component, including above or below: for example, a redstone torch (except that a redstone torch does not activate a redstone lamp it is attached to), a block of redstone, a daylight sensor, etc.\n\nAn adjacent powered block (for example, an opaque block with an active redstone torch under it), including above or below A powered redstone comparator or redstone repeater facing the redstone lamp Adjacent powered redstone dust configured to point at the redstone lamp (or on top of it) or directionless; a redstone lamp is not activated by adjacent powered redstone dust that is configured to point away from it.\n\nA redstone lamp activates instantly, but takes 2 redstone ticks to turn off (4 game ticks, or 0.2 seconds barring lag).\n\nAn active redstone lamp produces block light 15.\n\nAn inactive redstone lamp produces no light.\n\nA redstone lamp acts like an opaque block; it blocks sky light, mobs suffocate in it, and it conducts redstone power.\n\nIt also allows mobs to spawn on them while it is unlit.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: The following content is transcluded from Technical blocks/Lit Redstone Lamp.\n\nJava Edition 12w07a - 13w36b: Redstone Lamp Issues relating to \"Redstone Lamp\" are maintained on the bug tracker.\n\nReport issues there.\n\nMultiple tiled redstone lamps produce a pattern that resembles the truncated square tiling t{4,4}.\n\nRedstone lamps are transparent on maps.\n\n[4] [5] A redstone lamp shown during the day that is switched off.\n\nA redstone lamp shown during the day that is switched on.\n\nA redstone lamp shown during the evening that is switched off.\n\nA redstone lamp shown during the evening that is switched on.\n\nDemonstrating how wire powers redstone lamps.\n\nDemonstrating how repeaters power redstone lamps.\n\nDemonstrating how a solid block powers redstone lamps.\n\nSince lamps themselves are solid blocks, they power other lamps.\n\nThis causes the cross-shaped patterns of lit lamps.\n\nFloor torch with no lamp above it.\n\nFloor torch with a lamp above it.\n\nWall torch with no lamp above it.\n\nWall torch with a lamp above it.\n\nA way you can use lit redstone lamps in building.\n\nA glowing roof can be done by laying wire across the blocks, or lining the top of the lamps with redstone blocks.\n\nFloors and walls are also do-able.\n\nA glowing floor can be created by using \" knight's move \" shape underneath the floor with torches.\n\nA glowing wall uses wall-mounted torches that power blocks above them.\n\nA redstone lamp floor.\n\nA redstone lamp wall.\n\n\u2191 Only when lit, it diffuses sky light from above.\n\n\u2191 MC-192719 \u2014 Sea Lantern, Glowstone, Redstone Lamp don't have an assigned tool \u2191 https://youtu.be/o74FHoM0Lo4?t=29s \u2191 MC-3973 \u2191 MC-124331 \u2191 MCPE-112543 Block of the Week: Redstone Lamp \u2013 Minecraft.net on March 30, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Repeater",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Repeater",
    "content": "Redstone Repeater Redstone Repeater Redstone Repeater (BE) View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No This article is about the block.\n\nFor repeater circuits, see Transmission circuit \u00a7 Repeater.\n\nFor other topics related to redstone, see Redstone (disambiguation).\n\nA redstone repeater is a block that produces a full-strength output signal from its front when its back is powered, with four configurable delay settings.\n\nIt can also be locked into a power state by its side being directly powered by a repeater or a comparator.\n\nA redstone repeater can be broken instantly using any tool, or without a tool, and drops itself as an item.\n\nTo remove a redstone repeater, mine it.\n\nA redstone repeater is removed and drops as an item if: its attachment block is moved, removed, or destroyed; water or lava flows into its space; [Java Edition only ] a piston tries to push it or moves a block into its space.\n\nA redstone repeater generated in the jungle temple's hidden room.\n\nA single redstone repeater is generated naturally in each jungle temple.\n\nThey also generate in ancient cities.\n\nSee also: Redstone circuit A redstone repeater can be used in four different ways: to \"repeat\" redstone signals back to full strength, delay signals, prevent signals moving backwards, or to \"lock\" signals in one state.\n\nA repeater can be placed only on top of opaque blocks (dirt, stone, etc.), on top of upside-down slabs, upside-down stairs, furnaces, and glass.\n\nIn Bedrock Edition, a repeater can also be placed on fences and stone walls.\n\nThey can also be placed on some transparent blocks.\n\nSee Opacity/Placement for more information.\n\nTo place a repeater, use the Place Block control.\n\nA redstone repeater has a front and back \u2013 the arrow on the top points to the repeater's front.\n\nA repeater also has two small redstone torches on its top \u2013 the color of the torches indicates whether its output is on (dark red when off, bright red when on) and the distance between them indicates the delay the repeater adds to the signal transmission.\n\nA repeater is 0.125 (1 \u2044 8) blocks high.\n\nA repeater transmits signals only from its back to its front, but its behavior can be modified from the side (see signal locking, below).\n\nDifferent ways to power a repeater A redstone repeater can be powered by any of the following components at its back: an active power component (redstone torch, lever, block of redstone, etc.) powered redstone dust a powered redstone comparator or another powered redstone repeater facing the repeater a powered opaque block (including any opaque mechanism components, such as dispensers, redstone lamps, etc.) A redstone repeater can power any of the following components at its front: redstone dust a redstone comparator or another redstone repeater facing away from the repeater any opaque block (including any opaque mechanism components) A redstone repeater can activate any mechanism component it is facing.\n\nAn opaque block powered by a redstone repeater is called \"strongly-powered\" (as opposed to an opaque block \"weakly-powered\" by redstone dust).\n\nA strongly-powered opaque block can power adjacent redstone dust, as well as other redstone components.\n\nSee also: Transmission circuit \u00a7 Repeater A redstone repeater can \"repeat\" a redstone signal, boosting it back up to power level 15.\n\nRedstone signals have a maximum power level of 15 and that level drops by 1 for every block of redstone dust the signal travels through.\n\nIf a signal must travel through more than 15 blocks of redstone dust, a redstone repeater can be used to boost the signal back up to full strength.\n\nAn extra two blocks of distance can be achieved by placing solid opaque blocks before and after the repeater.\n\nWhile redstone repeaters can allow signals to travel great distances, each always adds some delay to the transmission since the minimum amount of delay is 1 redstone tick (0.1 seconds, barring lag).\n\nWhen initially placed, a redstone repeater has a delay of one redstone tick (equivalent to two game ticks, or 0.1 seconds barring lag).\n\nA repeater's delay can be modified by using the Use Item control.\n\nEach use increases the repeater's delay by one redstone tick, to a maximum of four redstone ticks, then back to one redstone tick.\n\nLonger delays can be made with multiple repeaters \u2013 for example, a repeater set to 'four' and another to 'one' provides a half-second delay (0.4s + 0.1s = 0.5s).\n\nA repeater set to a delay of two to four redstone ticks increases the length of any shorter on-pulse to match the length of the repeater's delay, and suppress any shorter off-pulse.\n\nFor example, a repeater set to a 4-tick delay changes a 1-tick, 2-tick, or 3-tick on-pulse into a 4-tick on-pulse, and does not allow through any off-pulse shorter than 4 ticks.\n\nAlthough a repeater cannot be set to have a delay of zero, instant repeater circuits are possible (circuits that repeat a signal with no delay).\n\nIn Bedrock Edition, the first repeater have a delay of zero but the repeater is still showing 1-tick [more information needed ] See also: Mechanics/Redstone/Transmission circuit \u00a7 Diode A redstone repeater acts as a diode \u2013 it allows redstone signals through in one direction (unlike redstone dust or opaque blocks that can transmit redstone signals in any direction).\n\nA diode can be used to protect a redstone circuit from redstone signals feeding back into the circuit from its output, or can be used to isolate one part of a circuit from another.\n\nSee also: Mechanics/Redstone/Memory circuit The left repeater has been locked in an unpowered output state by the right repeater.\n\nA redstone repeater can be \"locked\" by another powered redstone repeater facing its side.\n\nWhen locked, the repeater does not change its output (whether powered or unpowered), no matter what the input does.\n\nWhen the side repeater turns back off, the repeater returns to its normal behavior.\n\nA repeater can also be locked by a powered redstone comparator facing its side.\n\nThis offers additional possibilities for locking signals because a comparator's output can be affected from 3 sides as well as by containers.\n\nIf a repeater is locked again too quickly after unlocking (e.g.\n\nthe lock is controlled by a fast clock circuit), or the lock and the input are changed only on the same tick (e.g.\n\nbecause they're fed by the same clock and both repeaters have the same delay), the repeater does not switch states.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b Unavailable with / give command \u2191 a b The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: For a more in-depth breakdown of changes to repeater textures and models, including a set of renders for each state combination, see /Asset history The following content is transcluded from Technical blocks/Redstone Repeater.\n\nThis section is missing information about Pick Block functionality.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nThis section is missing information about Expected b1.9 crash.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.3 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.diode.name When given using the / give command, it is announced as tile.diode.name.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.3 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.diode.name When given using the / give command, it is announced as tile.diode.name.\n\nIssues relating to \"Redstone Repeater\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe recipe and appearance of redstone repeaters are a likely reference to the old method of repeating signals, which would also use two torches at a time, inverting each other A redstone clock formed from a redstone torch and a repeater.\n\nA redstone clock formed from two repeaters.\n\nMCRedstoneSim diagram of a two-way repeater.\n\nCrossing redstone wires using repeaters.\n\n\u2191 http://twitter.com/jeb_/status/33888465502339073 \u2191 http://www.reddit.com/r/Minecraft/comments/fmdtp/teammojang_redstone_repeater_video/c1gzrn6 \u2191 MC-50242 \u2191 MC-182820 \u2014 resolved as \"Fixed\".\n\n\u2191 https://youtu.be/UgHbUFnr2NE?t=2m50s \u2191 https://youtu.be/Ib83drtXv6Y?t=3m40s Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Torch",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Torch",
    "content": "Redstone Torch Lit Unlit View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous Yes (7) (when lit) Transparent Yes Flammable No Catches fire from lava No A redstone torch is a non-solid block that produces a full-strength redstone signal on all sides adjacent to it, except for its attached block, and can power the block directly above it.\n\nIt deactivates while the block it is attached to is powered.\n\nIn Java Edition, the inactive redstone torch cannot be obtained as an item.\n\nIn Bedrock Edition, it can be obtained via inventory editing.\n\nA redstone torch can be broken instantly using any tool, or without a tool, and drops itself as an item.\n\nA redstone torch is removed and drops as an item if: its attachment block is moved, removed, or destroyed water or lava flows into its space a piston pushes it or moves a block into its space A single redstone torch is found inside each igloo.\n\nIn ancient cities, multiple redstone torches can be found integrated into circuitry.\n\nRedstone torches can be used to craft activator rails, redstone comparators, and redstone repeaters.\n\nSee also: Redstone circuit Redstone torches can be used to power blocks and transmission components such as redstone dust, activate mechanism components such as pistons, or invert redstone signals like a NOT Gate.\n\nPlacement See also: Opacity/Placement Examples of redstone torch placement and behavior.\n\nTo place a redstone torch, use the Place Block control while aiming at the surface to which the redstone torch should be attached.\n\nA redstone torch can be attached to: the top or side of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top only or side only of certain block.\n\nSee Opacity/Placement.\n\nRedstone torches cannot be attached to the bottoms of any blocks.\n\nAttempting to attach a redstone torch to an invalid surface can cause it to \"snap\" to a valid surface adjacent to the same space.\n\nFor example, if a fence is on the ground, attempting to attach a redstone torch to the side of the fence causes the redstone torch to be attached to the top of the ground next to the fence instead.\n\nActivation A redstone torch is active unless the block it is attached to is powered.\n\nEffectively, a redstone torch inverts the signal applied to its attachment block: power level 0 is changed to 15 and power levels 1 to 15 are changed to 0 (for an alternative that produces a greater range of output power levels, consider a redstone comparator in subtraction mode).\n\nWalls, fences, glass, slabs, hoppers, and stairs cannot be powered so redstone torches attached to them cannot be deactivated.\n\nA redstone torch takes 1 redstone tick (2 game ticks, or 0.1 seconds barring lag) to change state and usually does not respond to 1-tick fluctuations of power.\n\nBehavior While active, a redstone torch: powers adjacent redstone dust to power level 15, including beneath the redstone torch if it is attached to the side of a block powers adjacent redstone comparators or redstone repeaters facing away from the redstone torch to power level 15 strongly powers a full solid opaque block above the redstone torch to power level 15 (but not next to or below it) activates adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nproduces \"reddust\" particles A redstone torch never affects the block it is attached to, even if it is a mechanism component.\n\nFor example, a redstone torch attached to a redstone lamp does not activate the lamp.\n\nA redstone torch experiences \"burn-out\" when it is forced to change state (by powering and de-powering the block it is attached to) more than eight times in 60 game ticks (three seconds, barring lag).\n\nAfter burning out, a redstone torch produces a \"smoke\" particle and a hiss similar to an extinguished fire, deactivates, and then ignores attempts to change its state until the number of state changes in the last 60 game ticks drops to fewer than eight\u2014after that it re-activates when it receives a block update (an adjacent block changing its state) or a redstone update that would not normally deactivate the redstone torch.\n\nThere is no limit on how often a single redstone torch can burn out.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Floor: Wall: Bedrock Edition: This section is missing information about changes to the redstone torch's resilience against rapid state changes (3-torch loops used to be unreliable but work as of modern Minecraft versions).\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nMain article: /History The following content is transcluded from Technical blocks/Unlit Redstone Torch.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Redstone Torch In Minecraft Earth, the icon in the inventory shows an unlit redstone torch.\n\nIssues relating to \"Redstone Torch\" are maintained on the bug tracker.\n\nReport issues there.\n\nRedstone Torch Unlit Redstone Torch (BE) Unlit (BE) Redstone Wall Torch Unlit Redstone Wall Torch (BE) Unlit (BE) Several characters carrying redstone torches.\n\n[3] Official replica of a redstone torch.\n\n\u2191 https://bugs.mojang.com/browse/MCPE-152036 \u2191 MC-1153 \u2191 https://youtu.be/oXKVfLTrdBM Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Sculk Sensor",
    "url": "https://minecraft.fandom.com/wiki/Sculk_Sensor",
    "content": "For calibrated version of Sculk Sensor, see Calibrated Sculk Sensor.\n\nSculk Sensor Renewable Yes Stackable Yes (64) Tool Blast resistance 1.5 Hardness 1.5 Luminous Yes (1) Transparent Yes Flammable No Catches fire from lava No The sculk sensor is a block in the sculk family.\n\nIt detects vibrations caused by actions and events in a radius around it and emits a redstone signal, and, if it was triggered by a player, also activates nearby sculk shriekers.\n\nPlayers can sneak to avoid making vibrations and wool can be used to occlude and block them.\n\nSculk sensors can be mined with any tool enchanted with Silk Touch, but hoes are the quickest.\n\nIf mined with a non-Silk Touch tool, they drop 5 experience instead.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nSculk sensors generate within the deep dark biome and ancient cities.\n\nA sculk catalyst has a 9% chance of generating a sculk sensor on top of a sculk block.\n\nSculk sensors can be used to craft calibrated sculk sensors.\n\nA sculk sensor has a light level of 1.\n\nWhen active, it changes to a lighter block state without a change to the light level.\n\nThe sculk sensor vibration particle.\n\nSculk sensors detect vibrations in an 8 block spherical radius around it.\n\nVibrations are caused by various events, such as a player and mobs walking, placing or breaking blocks, gliding with elytra, items falling on the ground, a piston extending or a wet wolf shaking itself off.\n\nWhile sneaking, a player is not detected.\n\nWalking, falling, dropping items, or shooting a projectile all trigger the sensor.\n\nWhen a vibration is made within the range of a sculk sensor, a signal travels from the vibration source to the sensor at a speed of one block per game tick (20 blocks per second).\n\nWhen the signal arrives, the sensor is activated for 40 game ticks (2 seconds).\n\nThe sensor cannot detect any other vibrations while activated or while a signal is traveling to it.\n\nSculk sensors have a cooldown period of 1 game tick (0.05 seconds) after being placed or after deactivating.\n\nDuring this short cooldown period, they cannot detect vibrations.\n\nThis prevents them from activating when a contraption it is powering is being unpowered.\n\nSculk sensors don't detect vibrations from other sculk sources or the warden.\n\nWool and carpets have a special interaction with sculk sensors.\n\nIf a wool block is placed between a sensor and a vibration source, the sensor is not able to detect the placed wool nor vibrations behind it.\n\nSpecifically, if the ray joining the cube centers of the sensor block and the vibration source passes through any wool blocks, the noise is muffled.\n\nIf the ray passes diagonally through the edge between two blocks, either one or the other block may muffle it but not both.\n\nSculk sensors are not able to detect footsteps or dropped items on wool blocks or carpet, and they are also unable to detect dropped items of wool and carpets.\n\nSculk sensors pass on the vibrations made by players to sculk shriekers within 8 blocks of the sensor.\n\nFor example, an item dropped by a player triggers the shrieker, but an item dropped by a dispenser or from a broken block does not; a player flying around with elytra triggers the shrieker, but a bat flying around does not.\n\nAlarms can be blocked by wool placed in between the sensor and shrieker, similar to how wool can block vibrations from reaching the sensor itself.\n\nSculk sensors emit a redstone signal when they are activated.\n\nThe strength of the redstone signal is inversely proportional to the distance the vibration signal traveled \u2013 the closer the vibration is to the sculk sensor, the stronger the redstone signal is, so it reaches the maximum redstone signal strength when the vibration is directly on top of the sensor.\n\nThis section needs expansion.\n\nYou can help by expanding it.\n\nInstructions: Bedrock Edition values Each vibration in the game falls under a certain amplitude value.\n\nThis value can be measured with a comparator.\n\nWith the right contraption, the player could detect if a certain action has occurred or is occurring nearby.\n\nThis article is a stub.\n\nYou can help by expanding it.\n\nWhen a sculk sensor detects a vibration, any adjacent block of amethyst will reemit a vibration on the same frequency that the sculk sensor detected.\n\nThe following occurrences, despite presumably causing physical motion, do not produce vibrations and therefore cannot be detected: Blocks destroyed by a fluid flowing into their space [1] Several blocks being destroyed due to their supporting block being removed: [2] Rails Powered rails Detector rails Activator rails Redstone wire Redstone repeaters Redstone comparators Several cases where a dispenser fails to perform an action: [3] Flint and steel not creating fire Bone meal not growing something Heads and carved pumpkins, if not equipped on something or placed Shulker boxes, if not placed Shears, if there's nothing to shear Glowstone, if it doesn't charge a respawn anchor Inserting an eye of ender into an end portal frame [4] [5] Usage of bone meal [6] Eyes of ender breaking [7] Ender Pearl Teleportation [8] Silverfish entering blocks [9] Water and lava flowing into existing spaces, or drying up [10] Changing the mode of a redstone comparator [11] Dyes used on signs [12] Ink sacs and glow ink sacs used on signs [13] Changing the delay on a redstone repeater [14] Changing the shape of a single unit of redstone wire [15] Fire extinguished by rain [16] Fire extinguished via splash water bottles [17] Carrot crops eaten by rabbits [18] Certain specific events at a distance of exactly seven [more information needed ] blocks away: [19] Falling blocks changing from entities to blocks Placing armor stands Breaking armor stands Using spawn eggs The following cases have been confirmed to be intentional: Axolotls being bred via tropical fish buckets [20] Moss blocks replacing existing blocks [21] Sculk sensors are immovable.\n\nPistons cannot push them, and sticky pistons cannot push or pull them.\n\nSlime blocks and honey blocks do not stick to sculk sensors and have no effect whether the slime block or honey block is being pushed or pulled.\n\nA sculk sensor is silent if waterlogged.\n\nIt can still detect vibration, but does not produce sounds itself.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 Picks number from 0, 0, 2, 4, 6, 7, 9, 10, 12, 14, 15, 18, 19, 21, 22, or 24 using the vibration's signal strength, and applies 2 n \u2212 12 12 {\\displaystyle 2^\\frac{n-12}{12}}.\n\nIt uses the same equation that note blocks do.\n\nBedrock Edition: \u2191 Uses the same system as Java Edition.\n\n[verify ] Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A sculk sensor has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Sculk Sensor/BE Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Sculk Sensor\" are maintained on the bug tracker.\n\nReport issues there.\n\n\"Sculk\" is derived from \" skulk \", meaning \"keep out of sight, typically with a sinister or cowardly motive\".\n\n[30] Originally the sculk sensor used to require 4 vibrations before it would emit a redstone signal which is the markings up the top, they would light up for each vibration received and would slowly go down after time.\n\n[31] Multiple Sculk sensors with other sculk type of blocks on Minecraft Live.\n\nDitto.\n\nScreenshot by kingbdogz.\n\nClose look.\n\nWool occlusion.\n\nSculk sensors as wireless redstone.\n\nSculk sensors are not affected by rain.\n\nSculk in a forest.\n\nOld textures.\n\nNew textures.\n\nPerformance optimizing.\n\nDitto.\n\nSnowballs creating vibrations.\n\nSculk sensors in a cave.\n\nA contraption using a waterlogged sculk sensor.\n\nSculk type of blocks in redstone category.\n\nTrypophobia sculk sensor.\n\n\u2191 MC-207410 \u2191 MC-207411 \u2191 MC-208142 \u2191 MC-208805 \u2191 MCPE-155372 \u2191 MC-209798 \u2191 MC-210153 \u2191 MC-261419 \u2191 MC-210283 \u2191 MC-210482 \u2191 MC-211331 \u2191 MC-212278 \u2191 MC-214619 \u2191 MC-214621 \u2191 MC-214623 \u2191 MC-217923 \u2191 MC-219440 \u2191 MC-251525 \u2191 MC-260818 \u2191 MC-208799 \u2191 MC-214210 \u2191 MC-213936 \u2191 MC-207334 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-213950 \u2191 MC-213962 \u2014 Works As Intended \u2191 MC-208799 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-213947 \u2191 MC-252389 \u2014 \"When landing (or jumping) on wool with your hitbox over the edge, it produces a vibration\" \u2014 resolved as \"Fixed\".\n\n\u2191 MC-207290 \u2014 \"Sculk sensors don't detect vibrations while walking on the edge of a block\" \u2014 resolved as \"Fixed\".\n\n\u2191 \"While not related, Sculk name was inspired by Jeb's process with naming the Shulkers - he liked the word \"Lurker\", but changed it around a bit to feel new.\n\nSculk is one letter changed in Skulk, meaning 'keep out of sight, typically with a sinister or cowardly motive'\" \u2013 @kingbdogz on X, October 13, 2020 \u2191 \"This is how the old sculk sensor worked Source: Minecraft Ideas Academy discord\" \u2013 @CagilMartin on X, June 26, 2022 How to Use Sculk Sensors \u2013 Minecraft.net on February 2, 2023 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Sculk Shrieker",
    "url": "https://minecraft.fandom.com/wiki/Sculk_Shrieker",
    "content": "Sculk Shrieker Renewable Yes Stackable Yes (64) Tool Blast resistance 3 Hardness 3 Luminous No Transparent No Flammable No Catches fire from lava No A sculk shrieker is a sculk block found in the deep dark biome that produces a \"shrieking\" noise when a player either stands on it (regardless of sneaking) or triggers a nearby sculk sensor.\n\nShriekers that generate naturally in the deep dark will inflict Darkness and may summon a warden when triggered, but those that are placed by a player or sculk catalyst will never summon wardens or inflict Darkness under any circumstance.\n\nSculk shriekers can be found infrequently within the deep dark biome, and they are much more common within ancient cities.\n\nSculk shriekers can be mined with any tool, but hoes are the quickest.\n\nIt drops 5 experience when mined without Silk Touch.\n\nWhen a sculk shrieker is broken it loses the ability to summon the warden, even if mined with Silk Touch.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA sculk catalyst has a 1% chance of generating a sculk shrieker on top of a sculk block.\n\nThese shriekers do not summon the warden.\n\nThe shriek particle.\n\nSculk shriekers \"shriek\" after being activated.\n\nA sculk shrieker activates when any player stands on the black part in the center of the block, even when sneaking.\n\nSculk shriekers are also activated by any sculk sensor triggered within an 8-block spherical radius of itself, but only if the vibration was caused by a player.\n\nHowever, a sculk sensor cannot activate the sculk shrieker if the line between the two contains a wool block.\n\nThe shrieker shrieks for exactly 90 game ticks (4.5 seconds).\n\nA set of shriek particles emitted by a sculk shrieker.\n\nSculk shriekers that naturally generate in the deep dark biome are capable of inflicting the Darkness effect upon players and summoning wardens.\n\nIf a sculk shrieker is placed by a player or generated via a sculk catalyst, the tag can_summon is set to false, and therefore a warden cannot be summoned and Darkness cannot be inflicted by that sculk shrieker [1].\n\nEach time a naturally generated sculk shrieker is activated, it adds 1 to a \"warning\" level to alert the warden.\n\nThe warning level is specific to each player, not each sculk shrieker, meaning that the same player can activate a different sculk shrieker for each of the four times, and a warden still spawns on the fourth activation, even though any particular shrieker had been activated once.\n\nIf a player does not activate any sculk shrieker, the warning level decreases by 1 every 10 minutes (12000 ticks).\n\nAfter the shrieking ends, all players in Survival or Adventure mode within 40 blocks are given the Darkness effect for 12 seconds.\n\nAfter a warden is summoned, a player's warning level does not reset back to 0, meaning multiple wardens can be summoned.\n\nNaturally generated sculk shriekers have a 10-second cooldown per player.\n\nThis means that if a player triggers one shrieker, they are completely unable to trigger any other shrieker within 10 seconds.\n\nThe cooldown period includes the 4.5-second shrieking, which means 5.5 seconds after the previous shrieking ends, the player can activate sculk shriekers again.\n\nWhen a player's warning level reaches level 4, the sculk shrieker attempts to spawn a warden after its shrieking ends.\n\nUp to 20 attempts are made to spawn a warden within an 11\u00d713\u00d711 box centered on the shrieker.\n\nIf there isn't another warden within 24 blocks, a warden emerges from the ground.\n\nThe warden always spawns at the highest available block.\n\nIf the shrieker is broken before it ends shrieking, the warden spawns immediately as a result.\n\nIf all 20 spawning attempts fail, a loud roaring sound is played.\n\nIn Java Edition, if the game rule doWardenSpawning is set to false, naturally generated sculk shriekers behave as if they are placed by a player: they do shriek, but there is no shrieking cooldown, the player's warning level does not increase, no Darkness effect is inflicted, and no warden spawns.\n\nIf the player that triggered the sculk shrieker is outside the shrieker's range when the shrieking ends, the sculk shrieker does not apply the Darkness effect to any player.\n\nThe player's warning level still increases by 1.\n\nIt is possible to make a warden spawn from a distance, by shooting a projectile into the direction of known sensors that are near shriekers.\n\nThe warnings have unique subtitles at different levels of warning: 1) \"Warden approaches.\" 2) \"Warden advances.\" 3) \"Warden draws close.\" Java Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-153217 Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A sculk shrieker has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Sculk Shrieker/BE Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Sculk Shrieker\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe sculk shrieker's design was inspired by the human larynx.\n\n[7] The old shrieker was a combination of the modern day shrieker and scrapped sculk jaw as it would both scream and show teeth [8] The sculk shrieker's shrieks are similar to the sound effects of Minecraft Dungeons soul-based artifacts, primarily being the harvester.\n\nA player steps on a sculk shrieker and activates it.\n\nA sculk shrieker getting activated.\n\nA sculk shrieker summoning a warden.\n\nA warden summoned by a sculk shrieker.\n\n\u2191 MC-250137 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-249437 \u2191 MC-250200 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-255164 \u2014 resolved as \"Fixed\".\n\n\u2191 \"Oh and Sculk Shrieker model is outdated\" \u2013 @kingbdogz on X, October 21, 2021 \u2191 MCPE-153359 \u2191 \"Minecraft Live 2021 @ 1:52:36\" \u2013 Minecraft on YouTube, October 15, 2021 \u2191 \"The old shreiker didn't have lights\" \u2013 @CagilMartin on X, July 23, 2022",
    "category": "Mechanics"
  },
  {
    "title": "Slime Block",
    "url": "https://minecraft.fandom.com/wiki/Slime_Block",
    "content": "This article is about the block.\n\nFor the mob, see Slime.\n\nSlime Block Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Partial [a] Flammable No Catches fire from lava No A slime block is a storage block equivalent to nine slimeballs.\n\nIt has both sticky and bouncy properties making it useful in conjunction with pistons to move both blocks and entities.\n\nSlime blocks can be broken instantly, regardless of held items, or when under the Mining Fatigue effect.\n\nLanding on a slime block does not cause fall damage regardless of whether the player is sneaking. Slime blocks are also slightly slippery, but less so than ice.\n\nSlime blocks cause movement on top of them to slow down.\n\nA player or mob that falls onto the top of a slime block bounces to a height proportional to the falling velocity.\n\nThe bounce height quickly deteriorates.\n\nFor example, a fall of 255 blocks produces a bounce height of about 50 blocks, while a fall of 50 blocks results in a bounce height of 22 blocks.\n\nThe maximum bounce height is 57.625 blocks.\n\nEntities hitting the side of a slime block do not bounce, unless the slime block is moving using a piston.\n\nA player holding the jump key performs a normal jump on contact with the slime block without taking fall damage.\n\nA player holding sneak does not bounce at all and takes fall damage.\n\nPlacing carpets, rails, trapdoors, redstone repeaters or redstone comparators on a slime block does not stop mobs from bouncing and not taking fall damage.\n\nLikewise, placing a pressure plate on a slime block does not stop mobs from bouncing, but the pressure plate still activates.\n\nHalf-blocks such as Cakes and slabs stop the bouncing effect.\n\nMost mobs bounce off slime blocks.\n\nExceptions are chickens, ghasts, bats, phantoms, bees, parrots, and vexes.\n\nOccasionally a horse may get stuck on a block when a player tries to spawn it on top of a slime block in Creative mode.\n\nItems, falling blocks, minecarts and boats do not bounce on slime blocks.\n\nParticles, however, do bounce.\n\nPlayers can also get around the fact that falling blocks, minecarts, and boats don't bounce by having sticky pistons with slime blocks bounce them.\n\nA B Piston A can extend because the slime block ignores the adjacent obsidian.\n\nPiston B cannot extend because the diamond block is prevented from moving by the obsidian and so the slime block also refuses to move.\n\nA self-propelled aircraft engine.\n\nPlace the top block of redstone and sticky piston last.\n\nWhen being pushed by a piston, entities (except ender dragons, item frames and paintings) that are ahead are launched into the direction the block is pushed into.\n\nWhen pulled by a piston, no entities are launched.\n\nWhen a slime block is pushed or pulled by a piston, it attempts to move all adjacent blocks in the same direction.\n\nThe types of blocks that can be moved are the same as those that can be pulled by a sticky piston.\n\nBlocks that cannot be pulled by a sticky piston (i.e.\n\nall the blocks listed on the table on the pistons page) stay in place.\n\nThe blocks that are moved may in turn push other blocks.\n\nFor example, a slime block sitting on the ground attempts to move the ground block underneath itself, which pushes additional ground blocks in the direction of motion just as if it were being pushed directly by a piston.\n\nBlocks such as glazed terracotta and honey blocks are exceptions; they do not move when adjacent slime blocks are moved, even if they are normally pushable by a piston.\n\nWhen the adjacent block that is moved is also a slime block, that block attempts to move all its adjacent blocks.\n\nFor example, a 2\u00d72\u00d72 cube of slime blocks may be pushed or pulled as a unit by a single piston acting on any of the blocks in the cube and attempts to move all blocks adjacent to the cube.\n\nA slime block adjacent to a block that cannot be moved by pistons ignores the immobile block.\n\nHowever, if an adjacent block could be moved but is prevented by the presence of an immobile block, the slime block is also prevented from moving.\n\nThis includes slime blocks being pulled rather than pushed, in which case the piston retracts without pulling anything.\n\nLiquids are an exception: they aren't moved, but neither do they stop a piston from pushing or pulling blocks into their space (usually destroying the liquid, and in a rare case displacing it through the piston).\n\nSlime blocks are not pulled by a non-sticky piston, nor are they moved if an adjacent (non-slime) block is moved by a piston.\n\nThe maximum of 12 blocks moved by a piston still applies.\n\nFor example, a 2\u00d72\u00d73 of slime blocks may be pushed or pulled by a sticky piston as long as no other movable blocks are adjacent to it.\n\nA piston cannot move itself via a \"loop\" constructed of slime blocks, but self-propelled contraptions can be created with multiple pistons.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nIssues relating to \"Slime Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nA minecart leaving a rail onto a slime block can continue on a rail on the opposite side if it has sufficient momentum leaving the initial rail.\n\nSlime blocks under soul sand make the player move slower than if the player was just walking on soul sand.\n\nThis is also apparent with ice.\n\nEntities launched upward by a slime block on top of a piston achieve slightly more than 6.4 blocks of lift, including the lift from the piston.\n\nEntities launched sideways across normal blocks or air are moved 3.510 blocks in the direction of the launch.\n\nWhile falling, placing a slime block while just before impact prevents all fall damage.\n\nSlime blocks are invisible if seen from the clouds.\n\nPlayers walking on slime blocks move at 1.359 m/s, a speed reduction of around 70% from the normal walking speed.\n\nA zombie bouncing on a slime block.\n\nClick to view animation.\n\nImage posted by Jeb over Twitter posted to Imgur.\n\nThe 14w02a Banner showing slime blocks in a slime shape.\n\nObsidian is used for the eyes and the mouth.\n\n[2] Testing of bounce heights.\n\nX axis is the start height in half blocks.\n\nY axis is the return height in half blocks.\n\nRed line at the top is maximum possible bounce height in half blocks.\n\nCrafting a Slime Block in Minecraft: Story Mode \u2191 Like leaves, this block diffuses sky light only from directly above.\n\n\u2191 MC-1133 \u2014 \"Whether or not a player experiences some effect is calculated based on the block under the center of the player\" \u2014 resolved as \"Fixed\".\n\n\u2191 https://www.mojang.com/2014/01/minecraft-snapshot-14w02a/ Block of the Week: Slime \u2013 Minecraft.net on March 10, 2017 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Spawn",
    "url": "https://minecraft.fandom.com/wiki/Spawn",
    "content": "\"Respawn\" redirects here.\n\nFor the block to set a spawn point in the Nether, see Respawn Anchor.\n\nThis article is about the natural spawning of mobs.\n\nFor the spawn that frogs lay when breeding, see Frogspawn.\n\nFor other uses, see Spawn (disambiguation).\n\nSpawning refers to the creation and placement of players and mobs in the Minecraft world.\n\nWorld spawning area.\n\nWhite represents the extent of singleplayer, blue represents multiplayer, and yellow represents the world spawn point.\n\nSee also: Multiplayer spawning details New players initially spawn within a small area surrounding the world spawn point when the server is not in Adventure mode.\n\nUpon death or return from the End dimension, the player respawns within this area unless the player's individual spawn point changed (by using a bed or respawn anchor, or the / spawnpoint command).\n\nThis area is 21\u00d721 blocks by default in Java Edition or 5\u00d75 in Bedrock Edition, but can be changed by the spawnRadius gamerule in both single and multiplayer.\n\nBedrock Edition's Respawn Radius setting interface.\n\nWhen set to 0, the player spawns in the crosshair of four blocks.\n\nWhen set to 1, the player always spawns on the northwest of those four blocks.\n\nThe maximum spawn radius is 99999999 but when rejoining the world, it resets to 128.\n\nHowever, on the discontinued \" Old \" world type, the maximum spawn radius is 256 instead.\n\nBedrock Edition's new Respawn Radius interface.\n\nWhen the player first loads into the world or respawns, the game searches within the world spawn area and tries to place the player on a random grass block.\n\nUpon spawning, the player is placed on the highest valid spawn point block of the X and Z spawn coordinates, even if this would set the player above the maximum build height.\n\nHowever, if there are no valid spawn points but a grass block that was determined to be an invalid spawn point due to being blocked by a block above it (though the grass block would decay soon after), the game checks the closest two free spaces from below and the player spawns there.\n\nIf there are absolutely no grass blocks, the player spawns directly at the world spawn point, which can even result in players spawning above the Void if there are no blocks at that location.\n\nThe world spawn point also determines the center of the permanently loaded spawn chunks.\n\nThe world spawn point itself can be changed using the / setworldspawn command.\n\nThis section needs to be updated.\n\nPlease update this section to reflect recent updates or newly available information.\n\nReason: Spawn search rules have changed in 1.18; more biomes are available to spawn in.\n\nIn Bedrock Edition, when a player creates a new world, the world spawn point is restricted to specific biomes.\n\nThe algorithm starts searching from coordinate 0,0, continuing outward until an acceptable biome is found for the world spawn point.\n\nUsing add-ons, a rare biome can be designated to cause the player to spawn at a distant location, but the game crashes if the biome does not exist or cannot generate.\n\nThe algorithm searches for these biomes: Plains At main plains biome Small islands in an ocean (islands are usually a plains biome) Patch of plains next to desert, badlands, or snowy plains Forest At main forest biome Small islands in an ocean (islands can also be a forest biome) Dark Forest Taiga At main taiga biome Patch of taiga next to old growth pine taiga Near beach, snowy taiga, or windswept hills Jungle Savanna (only regular variants) The player spawns within a 5-block radius of the point selected in the chosen biome, sometimes resulting in the player spawning outside the intended spawn biome, ending up in a beach, river, or swamp biome.\n\nIt is also possible (but rare) for a player to spawn initially underwater and start drowning.\n\n[1] A search for a valid world spawn biome is not performed for Flat and Old world-types.\n\nWhen the server's settings specify the default game mode as Adventure (using the server.properties), then the normal spawning mechanic is ignored, and players are spawned directly on the world spawn point.\n\nThis includes the X, Y, and Z coordinates, even if there is no block there, and even if there are blocks above it.\n\nIf the Y coordinate is not within a valid spawning area, then the server looks up until it finds one, up to a maximum of Y=256.\n\nIf there is space to spawn, but it is in mid-air, the player spawns in mid-air, even falling into the Void if there is a hole.\n\nThere are several ways to determine the world spawn point: A compass (that hasn't been assigned to a lodestone) always points to the world spawn point.\n\nDoing the commands / gamerule spawnRadius 0 then / kill.\n\nIf commands are disabled, remove all the grass blocks in the 21\u00d721 spawn area (or place a block above them to make them invalid), make sure the individual spawn point is disabled, and die.\n\nEntities, other than players, falling into the exit portal in the End land exactly at the world spawn point.\n\nItems thrown in mark the spot in the Overworld.\n\nPlayers spawn like they normally do, allowing this action to be used to perform the above without dying, and thus can be performed in hardcore mode.\n\nMods or external programs, such as NBTExplorer or MCEdit, can also be used to find and set the world spawn point.\n\nThe individual spawn point of the player can be changed by sleeping in a bed, using a respawn anchor, or using the / setworldspawn or / spawnpoint command.\n\nIf the individual spawning area of the player is obstructed upon death, the player respawns at the world spawn.\n\nSleeping in a bed allows for leniency in obstruction, in that the player respawns on other blocks near the bed if the original point becomes blocked.\n\nThe same is true for the respawn anchor.\n\nIf the spawn point set via / setworldspawn or / spawnpoint becomes obstructed, the player is not given this leniency in respawning.\n\nA cow that generated with the map inside a tree's leaves and could not escape, a common sight in forested hill areas.\n\nIn Java Edition many animals generate upon initial chunk creation.\n\nThese spawns occur only once per chunk.\n\nThey are not affected by the / gamerule doMobSpawning command.\n\nOne in ten newly-generated chunks attempts to generate animal mobs, usually in packs of up to 4 of the same species.\n\nThe spawn attempt always starts on top of the highest available block in a randomly chosen column within the chunk.\n\nThe chosen position must not be a solid block for the animals to generate.\n\nOnce the starting position is chosen for a chunk, a second position is chosen in a 9\u00d79 block area around the starting position.\n\nBlocks toward the center of the 9x9 area are more likely to be chosen than blocks toward the edge.\n\nThe block does not need to be a grass block nor does it need to be illuminated as it does with mob spawning.\n\nIf an animal can spawn at the second position, it does so.\n\nThe second position becomes the first position, and a new second position is chosen like before in a 9x9 area.\n\nThis process can repeat until each chunk has attempted to spawn 1\u20134 mobs.\n\nIn Bedrock Edition animals do not spawn during chunk generation, but they continually attempt to spawn everywhere as part of the environmental spawning algorithm, according to their spawn weights, biome tags, and block requirements (see Bedrock Edition under Spawn Cycle, below).\n\nThere are 2 types of animals: common animals and biome-specific animals.\n\nCommon animals Common animal mobs do not spawn in desert, badlands, beach, snowy plains, river, ocean, or mushroom fields biomes.\n\nBiome-specific animals Some animal mobs spawn only in specific biomes.\n\n[more information needed ] Randomness for animal spawning is derived from the world seed, which means that worlds with the same seed always generate chunks with the same animals in the same places.\n\nMonsters cannot spawn when the difficulty is set to Peaceful (except piglin [BE only ] and hoglin).\n\nAt any higher setting they spawn when block light level is 0.\n\nThe player cannot sleep when a monster (other than hoglin; and in Java Edition, also include slime, magma cube and non-hostile zombified piglin) is nearby, even if the monster has no path to the player.\n\nCommon monsters Common monster mobs can spawn in almost any biome in the Overworld (except for mushroom fields or deep dark).\n\nThey can spawn on the surface and underground.\n\nThe weight determines the spawn rate in the Bedrock Codebase.\n\nBiome-specific monsters Some monsters spawn only in specific biomes.\n\nIn Java Edition these mobs still spawn if the / gamerule doMobSpawning command is set to false, because they spawn as part of structure generation.\n\nIn Bedrock Edition nothing spawns if the / gamerule doMobSpawning command is set to false.\n\nAnimal mobs Monster mobs Other mobs Mobs are broadly divided into seven categories: hostile, passive, water creature (squids and dolphins), underground water creature (glow squids), axolotls, water ambient (all 4 types of fish), and ambient (bat).\n\nMost mobs have a spawning cycle once every game tick (1 \u2044 20 of a second), but passive mobs have only one spawning cycle every 400 game ticks (20 seconds).\n\nBecause of this, where conditions permit, hostile mobs spawn frequently, but passive mobs (animals) spawn rarely.\n\nMost animals spawn within chunks when they are generated.\n\nMobs spawn naturally within chunks that have a player horizontally within 128 blocks of the chunk center.\n\nWhen there are multiple players, mobs can spawn within the given distance of any of them.\n\nHowever, hostile mobs (and some others) that move farther than 128 blocks from the nearest player despawn instantly, so the mob spawning area for such mobs is more-or-less limited to spheres with a radius of 128 blocks, centered at each player.\n\nThere are two caps, a global cap and a per-player cap.\n\nNote the spawn density mechanism may also be considered a \"cap\" of sorts, but takes effect later in the spawning process.\n\nThe mob caps are checked once for each spawn-eligible chunk.\n\nSpawn for the chunk may take the total number of mobs over the cap.\n\nThe caps for each mob category are as follows: Monster = 70 Creature = 10 Ambient (bats) = 15 Axolotls = 5 Underground water creature (glow squids) = 5 Water creature (squids, dolphins) = 5 Water ambient (fish) = 20 Misc = -1 The \"misc\" category is used only by entities that are not mobs, do not spawn naturally, and/or following different spawning rules than other mobs.\n\nAs such the mob cap has no bearing on mobs of this category.\n\nGlobal mob cap All non- persistent loaded mobs are counted against the global cap, including those in chunks not in range of a player or eligible for spawns.\n\nThe cap is scaled by the total number of chunks within a 17\u00d717 chunk square around any player.\n\nThe cap is then scaled as globalCap = mobCap \u00d7 chunks \u00f7 289.\n\nBecause chunks that are in the range of multiple players are counted once, more chunks and higher mob caps result from the players spreading out.\n\nPer-player mob cap Each non- persistent mob in a chunk that has its center within 128 blocks horizontally of a player is counted toward that player's per-player mob cap.\n\nFor each chunk, spawns are only allowed if at least one player has that chunk in range and has not reached their per-player mob cap.\n\nExample of a mob pack spawning.\n\nThe mob spawning area is shaded blue.\n\nThe yellow figures represent the actual positions that mobs could spawn in after checking the environment.\n\nNote that the mobs can spawn inside torch and ladder blocks.\n\nBut they can't spawn on top of glass because it is not opaque.\n\nThe red cube is the center of the pack.\n\nRequirements for the spawning location of individual mobs.\n\nFor each spawning cycle, attempts are made to spawn packs of mobs per each eligible chunk.\n\nAn eligible chunk is determined by the same check for which chunks are random ticked.\n\nA random location in the chunk is chosen to be the center point of the pack.\n\nIf the block in which a pack spawn occurs is an opaque full cube, further pack spawn attempts are canceled.\n\nThere are a maximum of 3 pack spawn attempts per mob category.\n\nBefore the attempt to spawn each mob in the pack, the position is offset by \u00b15 (triangular distribution) on the X and Z axes.\n\nThus, while the pack can be spread out up to 40 blocks from the initial position for a pack size of 4, it's much more likely they'll be closer to the center.\n\nApproximately 85% of spawns are within 5 blocks of the pack center, and 99% within 10 blocks of the center.\n\nMobs spawn with the lowest part of their body inside this area.\n\nAll mobs within a pack are the same species.\n\nThe species for the entire pack is chosen randomly, but based on a weight system from those eligible to spawn at the location of the first spawn attempt in the pack.\n\nFor later mob spawn attempts in the pack, if the selected species cannot spawn at the location (e.g.\n\ndue to being in a different biome or structure) then that attempt fails.\n\nThe game checks on each spawn if the number of mobs that have been spawned for the pack is equal to the max spawn attempts, as well as the location's spawn potential.\n\nPack spawn size Pack spawn attempts max out at: 8 Wolves, cod, and tropical fish 6 Horses and Donkeys 1 Ghast 4 for any other mob When the max pack size is less than the number of possible spawn attempts, some spawns attempts fail, but are seen more commonly in practice.\n\nBased on the number of mobs that have been successfully spawned.\n\nIf the max pack size is greater than the number of spawn attempts, one gets only the number of spawns from the spawn attempts.\n\nSome mobs have a minimum and max pack size, meaning there is an even chance for any number of spawn attempts between them occurring.\n\nFor zombie villagers, drowned, pillagers, donkeys in savanna biomes, parrots in jungles excluding bamboo jungle and jungle, cats in swamp huts and witches, it is 1.\n\nFor parrots in bamboo jungles and Jungle, polar bears, squids in lukewarm oceans, pandas and dolphins, it is 1-2.\n\nFor donkeys in plains biomes, ocelots and pufferfish, it is 1-3.\n\nFor endermen except in the End and in nether wastes, and squids except in lukewarm oceans, it is 1-4.\n\nFor rabbits and blazes, it is 2-3.\n\nFor guardians, foxes, zombified piglins in crimson forests and striders, it is 2-4.\n\nFor turtles, it is 2-5.\n\nFor horses, it is 2-6.\n\nFor piglins and hoglins in crimson forests, it is 3-4.\n\nFor Cod it is 3-6.\n\nFor llamas, it is 4-6.\n\nFor mooshrooms, it is 4-8.\n\nFor wither skeletons and skeletons, in nether fortresses, it is 5.\n\nFor bats and tropical fish, it is 8.\n\nFor every other mob, it is 4.\n\nPack spawn location For all dimensions, structure-based spawns take priority over biome for hostile spawns.\n\nThis means that in a swamp hut, pillager outpost, nether fortress (outer bounding box only when there is nether bricks below it [JE only ]), and ocean monument, one sees only the corresponding hostile mobs for that structure within that structure.\n\nIn the Overworld, this depends on the location: Jungle biomes have a higher chance to spawn chickens. [Java Edition only ] Badlands biomes spawn only hostile mobs and bats.\n\nRiver and frozen river can spawn only drowned, squid, and salmon underwater.\n\nOcean biomes do not spawn passive mobs.\n\nThey spawn drowned, and the other hostile mobs.\n\nFrozen oceans do not spawn dolphins, but do spawn polar bears.\n\nSnowy Plains biomes do not spawn animals other than polar bears and rabbits.\n\nSwamp huts spawn only witches, cats, and bats.\n\nOcean monuments spawn guardians, other water mobs and bats.\n\nPillager outposts spawn pillagers, other passive mobs and bats.\n\nAll other overworld biomes spawns common animals and common monsters, as well as slimes, dependent on spawn conditions.\n\nIn the Nether: Skeletons, wither skeletons, magma cubes, zombified piglins, and blazes spawn within nether fortresses.\n\nGhasts spawn in nether wastes, soul sand valley and basalt deltas.\n\nZombified piglins and piglins can spawn in nether wastes, while magma cubes spawn primarily in basalt deltas and sometimes in nether wastes.\n\nGhasts, magma cubes and hoglins spawn regardless of light level.\n\nHoglins and piglins spawn at a higher rate anywhere in the crimson forest biome.\n\nEndermen spawn more frequently in the warped forest biome, but not in the crimson forest.\n\nSkeletons and ghasts spawn more frequently in the soul sand valley biome.\n\nWhether a spawn condition fails differs from the above determination if the game tries to spawn them in that biome.\n\nFor example, dolphins can have pack spawns that occur inside of frozen ocean and deep frozen ocean biomes, but no other biomes.\n\nThese rules apply to variants of the same mob, such as baby zombies and spider jockeys.\n\nEach individual spawn attempt succeeds only if all of the following conditions are met: There must be no players or the world spawn point within a 24 radius block distance (spherical) of the spawning block The number of loaded mobs of that type must be less than the mob cap for that type.\n\n(I.e.\n\nthe corresponding mobcap must not be full) The mob's collision box upon spawning must not collide with another collision box.\n\nA mob cannot spawn inside of anything that would collide with it upon spawning.\n\nThe mob's collision box must not intersect with a solid block.\n\nFor all mob types excluding passives and fish, spawns fail unless within a 128 radius block sphere around the player.\n\nFor fish, spawns fail unless within a 64 block radius of the player.\n\n[2] / gamerule doMobSpawning is true For non-aquatic mobs, the spawning block and the block above that cannot be rails, powered rails, detector rails, activator rails, redstone power components, wither roses (except for wither skeletons) or sweet berry bushes (except for foxes).\n\nHostile mobs The difficulty must not be Peaceful, excluding piglins and hoglins This also affects ocelots [3] For all hostiles other than guardians, drowned, and phantoms: the block directly below it must have a solid, opaque, top surface (this includes upside down slabs, upside down stairs, and others) or be soul sand or a slime block.\n\nthe block directly below it must not be bedrock, barrier, or any type of trapdoor or glass.\n\nThe mob's collision box must not collide with any liquid.\n\nThe block above the spawning block must be transparent The mob must be immune to the damaging effects of the spawning block and the block directly below it.\n\nFor instance, if the block directly below the spawning block is a magma block, the mob must be immune to fire damage.\n\nIf the spawning block contains a wither rose, the mob must be immune to wither damage.\n\n(Currently, this is only true for Wither Skeletons).\n\nThe basic rules for spawning are as follows: In the Overworld, block light level must be 0 and sky light must be 7 or below (which it always is inside a cave).\n\nIn the Nether, block light level must be 11 or less.\n\nSky light is always 0 in the Nether.\n\nIn the End, block light level must be 0.\n\nSky light is always 0 in the End.\n\nWhen doing the light check in the Overworld and End, the spawn chances are randomized and a spawn only occurs if the light level is less than or equal to a random number between 0 and 7.\n\nIn the Nether, as long as the light level is below 11, the spawn is allowed.\n\nSome mobs have some additional rules in addition to the ones above.\n\nPassive mobs The mob's collision box must not collide with any liquid.\n\nif it is not a strider, the light level of the spawning block must be 9 or brighter.\n\nIf it is a mooshroom, then.....\n\nthe block directly below the spawning block must be mycelium.\n\nIf it is a turtle, then.....\n\nthe block directly below the spawning block must be sand.\n\nthe spawning block must be y-level 66 or lower.\n\nIf it is a parrot, then....\n\nthe block directly below the spawning block must either be grass block, leaves, log, or air.\n\nIf it is a rabbit, then....\n\nthe block directly below the spawning block must either be grass block, snow block, snow [4], or sand.\n\nIf it is a wolf, then...\n\nthe block directly below the spawning block must either be grass block, snow block, or snow [4].\n\nIf it is a fox, then...\n\nthe block directly below the spawning block must either be grass block, snow block, snow [4], podzol, or coarse dirt.\n\nIf it is a polar bear spawning in a frozen ocean or deep frozen ocean biome, then...\n\nthe block directly below the spawning block must be ice.\n\nIf it is a goat, then...\n\nthe block directly below the spawning block must either be stone, snow block, snow [4], packed ice, or gravel.\n\nFor all others then.....\n\nthe block directly below the spawning block must be a grass block.\n\nIf it is a strider, then.....\n\nSpawn attempts with lava above check upward as long as there is still lava for if they can successfully spawn in a lava block with air on top.\n\nThe spawning block must be at level 31 or lower.\n\nAquatic mobs The spawning block must be water For cod, salmon, pufferfish, tropical fish, squid or dolphin: the block directly below the spawning block must be water the block directly above the spawning block must be water and cannot be waterlogged the spawning block must be between level 50 and 63, inclusive.\n\nThis does not apply to tropical fish spawning in lush caves If it is a glow squid, then...\n\nthe light level must be 0 the spawning block must be level 30 or lower If it is an axolotl, then...\n\nthe block directly above the spawning block must not be a solid block the block directly below the spawning block must be clay Ambient mobs The mob's collision box must not collide with any liquid.\n\nIf it is a bat, then...\n\nthe spawning block must be at level 62 or below.\n\nthe block directly below it must have a solid, opaque, top surface.\n\nthe block directly below it must not be bedrock, barrier, or any type of trapdoor or glass.\n\nIf the real-time day is between October 20 and November 3, then the light level must be 7 or darker.\n\nOtherwise, the light level must be 4 or darker.\n\nIf all of these conditions are met then the mob is spawned.\n\nSpawn costs Locations that do not have spawning potential reliant spawns are marked by wart blocks or netherrack The warped forest and soul sand valley biomes introduced a new mechanic to limit the amount of mobs that naturally spawn in them.\n\nThe spawn cost (also called spawn potential or spawn density) takes on a value for each block in the biome.\n\nCertain mobs increase that value by some number (\"charge\") divided by their distance to the block.\n\nIf a new spawn attempt would bring the \"potential\" of the spawning block above a certain threshold, the spawn attempt is canceled.\n\nThis results in mobs not spawning too close to one another in these biomes, and new spawns in the area are completely blocked long before the full mobcap of 70 hostile mobs is ever reached.\n\nMore specifically, a mob may be spawned at a location if sum(existing mob's charge \u00f7 distance to mob) \u00d7 new mob's charge < new mob's maximum potential.\n\nWhile the code allows for different mobs to have different charges and maximum potential, all checked mobs have the same charge and maximum potential within both the warped forest and the soul sand valley.\n\nWhich mobs contribute to the charge, how much they add, and what the maximum potential is are all biome-specific.\n\nMobs carry charge according to their current biome, and affect spawning in an adjacent biome even if they would not contribute a charge if in that biome.\n\nFor example, striders in a soul sand valley will affect enderman spawns in an adjacent warped forest, even though striders in the warped forest itself do not.\n\nDue to the limited total number of mobs in soul sand valleys and warped forests, a larger-than-usual amount of mobs spawn in any space outside of these biomes, including in Nether fortresses.\n\nNotes Buildings surrounded by air spawn more mobs inside than underground rooms because packs that spawn outside of the building can spawn mobs inside it.\n\nThe mob caps tend to be reached in seconds.\n\nIf the player's view distance or the server view distance in multiplayer is at 9 or below, mob spawning is severely reduced (or they despawn too quickly), and may result in the player encountering no mobs at all.\n\nSet the view distance to 10 or higher to ensure mobs spawn correctly.\n\nEnvironmental spawning in Bedrock Edition shares broad similarities to natural spawning in Java Edition: mobs spawn in a radius around the player subject to block conditions, lighting conditions, biome conditions, naturally generated structure conditions, and caps.\n\nMany mobs spawn in groups (called \"packs\" in Java and \"herds\" in Bedrock).\n\nOne notable difference from Java Edition is that most animals can spawn at light level 7 or higher rather than 9 or higher.\n\nThere are two types of environmental spawns: cluster spawns and structure spawns.\n\nStructure spawns reproduce specific types of mobs at specific locations within certain naturally generated structures, such as nether fortresses, swamp huts, etc.\n\nCluster spawns account for all other types of environmental spawns, including mobs that spawn individually (i.e.\n\nnot in a herd of 2 or more).\n\nBoth types of environmental spawns follow the same rules for spawn conditions and mob caps, except that structure spawns can exceed the monster population cap by 1 (see below).\n\nMob spawning in bedrock edition happens within a spherical shell 24-44 blocks away from the player on simulation distance 4.\n\nIt happens a quasi-spherical shell 24-128 blocks away from the player, restricted by a simulation distance and/or to roughly 96 blocks horizontally, on simulation distances 6 and higher.\n\nThis means that mobs can spawn directly above or below the player (for example, phantoms in the sky or zombies underground).\n\nMobs can spawn only in chunks that are being ticked.\n\nThere is a 11 \u2044 2000 chance of the mob spawning algorithm attempting to run per chunk, per tick.\n\nThere are three mob caps that affect environmental spawning: a global mob cap, population control caps for general mob types, and density caps for specific mob types.\n\nThe global mob cap is set at 200 regardless of difficulty.\n\nThe global mob cap affects only environmental mob spawning, and does not affect mobs spawned through breeding, spawn eggs, the / summon command, monster spawners, or any other type of mob spawning.\n\nChickens created by thrown or dispensed eggs are counted in the global mob cap.\n\nOnly mobs that have spawn rules count toward the global cap (i.e.\n\narmor stands and minecarts do not take up cap space).\n\nIn addition, mobs that are within ticking areas (both those around players and those set manually using the / tickingarea command) count toward the global mob cap; mobs not ticked do not count toward the global mob cap.\n\nThe population control caps limit how many mobs of each type and category can spawn within a 9 chunk by 9 chunk square region surrounding the chunk in which the spawn attempt is made.\n\nMobs in chunks outside a ticking area still count toward population control counts as long as they were previously loaded (i.e.\n\nwithin simulation distance at some time) after relogging.\n\nThe population control caps are split up into two distinct categories: a cap for surface mobs, and a cap for cave mobs.\n\nCave mobs do not count toward the surface mob cap, and surface mobs do not count toward the cave mob cap.\n\nWhether a mob counts as a surface mob or a cave mob is determined by where or how it spawned, not where it happens to be at the moment.\n\nFor cluster spawns, those that spawn on the highest spawnable block at a given coordinate count toward the surface cap, and any that spawn below the highest solid or non-solid but spawnable (e.g.\n\nice or upper slab with air above) block count toward the cave cap.\n\nStructure-spawned mobs and converted mobs (i.e.\n\ndrowned converted from zombies, witches from villagers, zombified piglins from pigs, and medium and small slimes from killed larger slimes) always count toward the cave cap, and monster-spawner-spawned mobs always count toward the surface cap.\n\nThere are five categories of mobs: ambient, animal, monster, pillager, and water_animal.\n\nThe population control cap for each category and location of mob in each dimension is as follows (* denotes values that are coded in the game but not actually used by any mobs): Some specific mobs types also have their own density caps.\n\nThe density caps limit the number of those mobs to some amount below the applicable population control cap.\n\nDensity caps are checked in the same manner as the population control caps.\n\nCaps are below (n/a indicates that the mob does not spawn in that environment at all).\n\nSee also: Simulation Distance The following rules apply to most mobs: Mobs spawn at a distance from the player that depends on the world's simulation distance: Simulation distance 4: between 24 and 44 blocks spherical radius from the player.\n\nSimulation distance 6 and up: between 24 and 128 blocks spherical radius from the player, but limited horizontally by simulation distance and coding that restricts the spawning algorithm from running in chunks whose center exceeds 96 blocks from the player.\n\n[5] The bottom part of the mob (i.e.\n\nthe feet of a standing mob, or the whole body of a mob <= 1 block tall) can spawn only in an air block, or for water mobs in a water block.\n\nA few naturally-generated, non-motion-blocking blocks such as grass and flowers are ignored for this rule.\n\nThere must be a block with a full, solid top surface under the spawn location for the mob to spawn on.\n\n(I.e.\n\nmobs cannot spawn on carpets, lower slabs, fences, right-side-up stairs, redstone repeaters, chests, etc.) Mobs cannot spawn on transparent full blocks like glass and leaves.\n\nFor mobs that can spawn floating in water or flying in air, the block that is checked for spawning is the water or air block immediately above the first solid top surface block below the spot where the mob would spawn.\n\n(So for example, phantoms cannot spawn over a field covered in carpet, and fish cannot spawn in an ocean where bottom slabs cover the ocean floor.) Most overworld monsters cannot spawn if the sky light level is greater than or equal to 7 or the block light level is greater than 0.\n\nMost overworld animals cannot spawn if the (combined) light level is less than 7.\n\nCluster spawning happens in two stages: first attempt to spawn surface mobs, then attempt to spawn cave mobs.\n\nBefore spawning, the population control cap is calculated based on the 9 chunk x 9 chunk square area surrounding the current chunk.\n\nSpawning begins by picking a random X and Z location within the chunk currently being evaluated.\n\nThe Y coordinate is determined by starting at the world height and searching downward for a solid-top-surface block with a non-spawn-blocking block above it.\n\nThe first such block that is found is considered to be the surface, and the algorithm attempts to spawn a surface mob herd.\n\nHowever, if the algorithm finds a solid block before finding a spawnable solid-top-block (e.g.\n\nif it finds a tree trunk directly under leaves), it does not make any surface spawn attempt.\n\nThe algorithm then continues to search downward for the next suitable block with a non-spawn-blocking block above it.\n\nWhen a block meeting the criteria is found, the algorithm attempts to spawn a cave mob herd at that block location.\n\nCave spawn attempts continue until the Y coordinate reaches the world bottom, and do not stop even if a cave herd was spawned.\n\nSurface and cave cluster spawn attempts then go through the following steps to figure out what mob to spawn and how many: Picks a random mob.\n\nIf the current spawn location is in a liquid, pick a random water mob.\n\nIf the light level is 7 or higher, there are no other blocks above the current location, and the current location is a grass block, pick a random animal mob.\n\nOtherwise, spawn a monster mob.\n\nPicks a random number of mobs to spawn in the herd.\n\nEach mob can have its own min and max herd size, and the herd size can depend on difficulty and biome.\n\nMake sure the spawn location has suitable spawn conditions.\n\nLimit the number of mobs spawning based on the global mob cap.\n\nNo mobs spawn if the mob count already meets or exceeds the mob cap.\n\nFor each mob to spawn, check that spawning it would not exceed the population control cap or mob density cap.\n\nIf spawning the mob would not exceed the population control or mob density caps, then the probability of a mob spawning can be calculated using the formula: (mob density cap - current mob density count) / mob density cap Finally, attempt to spawn the mob in the world.\n\nSpawning the mob can fail; for example, if spawning it would cause it to spawn inside of a block or part of a wall.\n\nStructure spawn attempts occur at specific relative X and Z coordinates in naturally generated structures, known as \"hard-coded spawn spots\".\n\nThe structures that have hard-coded spawn spots include swamp huts, ocean monuments, pillager outposts, and nether fortresses.\n\nWhenever a successful cluster spawn attempt occurs within a chunk that contains a hard-coded spawn spot, the environmental spawning algorithm also attempts a structure spawn.\n\n(Note that a \"successful attempt\" here means that a spawnable block was found, even if the spawn was then blocked by light level check or mob cap check.) The structure spawn attempt follows the same rules and steps described above for cluster spawning, with the following changes: Instead of starting at world height and searching down to bedrock at the specific X and Z location, the search begins and ends at a specific Y values determined by the type of structure.\n\nStructure spawn attempts occur only on the first spawnable block found (i.e.\n\nthe highest spawnable block) within that range.\n\nThe mob picked depends on the structure: swamp huts spawn witches, ocean monuments spawn guardians, pillager outposts spawn pillagers (including patrol captains), and nether fortresses spawn skeletons, wither skeletons, blazes, and magma cubes.\n\nThe population control caps are effectively 1 higher for structure spawn attempts.\n\nIn Creative or via a dispenser, the player can use spawn eggs to spawn most mobs.\n\nWhen mobs are spawned this way, all normal spawning requirements, such as light level and block type, are ignored (though monsters other than vindicators [BE only ], evokers [BE only ], shulkers, and ender dragon still cannot be spawned in peaceful).\n\nAny entity can be spawned using the / summon command.\n\nVarious mob spawning ranges, illustrated.\n\nAll monster, ambient, and aquatic mobs excluding shulkers, withers, elder guardians and ender dragons despawn unless they have been marked persistent.\n\nOther mobs that are not monster, ambient, or aquatic that do despawn include ocelots, stray cats, and wandering traders.\n\nA mob that has had no player within 32 blocks of it for more than 30 seconds, or 10 seconds if in low light levels, has a 1 \u2044 800 chance of despawning on each game tick (1 \u2044 20 of a second), which is a 2.47% chance per second.\n\nTherefore, the mob population declines so that half remains after 27.75 seconds, and the average lifetime of monsters not within 32 blocks of a player is 40 seconds (after the initial 30 seconds have elapsed).\n\nMobs other than fish despawn immediately if no player is within 128 blocks of it, while fish despawn if no player is within 64 blocks.\n\n[6] This is a Euclidean sphere, not a cylinder from map top to bottom and not a taxicab sphere (an octahedron).\n\nExample: A mob at 0/y/0 remains at least 10 seconds (as above) if the player moves to 65/y/65 (real distance 91.9), but despawns immediately if the player moves to 91/y/91 (real distance 128.7).\n\nThe chunk the mob is in must still be loaded for the mob to despawn.\n\nOtherwise, the mob is saved until the chunk is loaded again.\n\nFor example, if a player enters a nether portal while being chased by a spider, the spider is saved, and it resumes chasing the player coming back through the same portal.\n\nIn the case of a player reloading chunks, the loading happens before the player is added, meaning they may despawn.\n\nOcelots and most monster mobs (including those that are holding items) despawn if the difficulty is set to Peaceful, regardless of where the player is located.\n\nMonster mobs that do not despawn include hoglins, piglins, and shulkers in all editions, as well as vindicators, zoglins, piglin brutes, and evokers in Bedrock Edition.\n\nFor despawning to occur, there must be at least one non-spectator player in the dimension.\n\nChickens that originally spawned as chicken jockeys follow zombie despawn rules, rather than chicken despawn rules.\n\nWandering traders and trader llamas despawn after 40-60 minutes (2-3 in game days).\n\nThey also despawn sooner if all the trades are locked.\n\nEndermites despawn after 2 minutes unless named with a name tag or have persistent tag.\n\nWardens despawn after 1 minute if they couldn't detect a vibrations or smell by any mob or player.\n\nMobs are persistent, meaning they do not despawn and do not count toward the mob cap, when they: are a passenger to another mob.\n\nare riding a boat or a minecart.\n\n[7] spawned as part of a generated structure.\n\nhave had something added to their inventory, including having something dispensed upon them (such as a saddle) or something they have picked up, but never for anything they spawn with.\n\nThis includes dolphins playing with items [verify ].\n\nhave been named with a name tag.\n\nHowever, one created from a renamed spawn egg does despawn as normal.\n\nhave had the NBT tag {PersistenceRequired: 1b} set on them, whether by being summoned with it, or by being set manually with / data merge or / data modify  [JE only ].\n\nThis is also the only way to prevent wandering traders from despawning.\n\nFollowing mobs also have another way to prevent despawning and do not count toward mob cap: Enderman: During the time that they hold a block Fish (all variants) and Axolotl: Spawned as a result of placing out of a fish bucket or Bucket of Mob.\n\nZombie villagers: If they were converted from a villager that has been traded with.\n\nThis still counts toward the hostile mob cap.\n\n[8] Hoglins: If a crimson fungus is used on them.\n\nZoglins as a result of hoglins have crimson fungus used on them before they zombify also do not despawn.\n\nIn Bedrock Edition, like Java, despawning occurs based on distance and chance.\n\nOn simulation distances 6 and higher, almost all environmentally spawned mobs immediately despawn when they are either (1) in a chunk at the edge of the simulation distance (technically, a chunk not fully surrounded by 8 chunks that were simulated on the last game tick), or (2) more than 128 blocks from the nearest player.\n\nOn simulation distance 4, mobs immediately despawn when they are more than 44 blocks from the nearest player.\n\nFish despawn at a shorter distance, when they are more than 40 blocks from the nearest player on all simulation distances.\n\nMobs more than 32 blocks from the nearest player have a 1 in 800 chance to despawn on each game tick if they have not taken damage for 30 seconds.\n\nMobs with persistence do not despawn.\n\nMobs gain persistence in the following ways: The entity interacts with a player (except for attacking, which does not count as a persistence-inducing interaction): Is ridden by the player.\n\nIs attached to a lead connected to a fence.\n\nIs named with a name tag.\n\nIs tempted with food.\n\nIs bred, or born as a result of breeding (except for turtles hatched from eggs before 1.17.10 [9]).\n\nIs tamed by the player.\n\nIs summoned using the / summon command or a spawn egg.\n\nIs cured from being a zombie villager.\n\nIs spawned by the player triggering a skeleton trap (spawns skeletons and skeleton horses).\n\nThe entity picks up an item.\n\nThe entity is spawned during the generation of a certain kind of structure: Shulker spawned in an end city.\n\nWitch spawned in a swamp hut.\n\nVillager or zombie villager spawned in an igloo.\n\nVillager or animals spawned in a village.\n\nZombie villager or animals spawned in a zombie village.\n\nVindicator or evoker spawned in a woodland mansion.\n\nThe entity is spawned in a raid.\n\nThe following entities always have persistence: Ender Dragon Wither Elder Guardian Evoker Vindicator Iron Golem Snow Golem Villager Armor Stand Minecart Painting Agent  [Minecraft Education only ] This section is missing information about Bedrock Edition.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nIssues relating to \"Spawn\" are maintained on the bug tracker.\n\nReport issues there.\n\nIn Java Edition, the world spawn (the point where players spawn if they have no valid bed spawn) is usually a random (seed determined) point between -500 and +500 on the X and Z axis.\n\nIf the chosen point is in water (due to nothing but ocean biomes in the -500 to +500 range), a second attempt is made between -1500 to +1500.\n\nIf this fails due to ocean, the game gives up and puts the world spawn in the middle of the ocean (still at the surface) (attempting to play the flat lands preset Water World does this, for example).\n\nNormally, a player who spawns in the water does so near the shore because the world spawn itself picked a spot there.\n\nIn Bedrock Edition, an opaque block normally causes all blocks below it to spawn cave mobs, but not if a transparent block is placed on top.\n\nAn ideal spawn location, with trees and animals nearby.\n\nA non-ideal spawn location.\n\nIn a desert, unless a player finds an exposed mineshaft, it is much more difficult to find wood.\n\nA spawn location on an island, with trees nearby.\n\nA Dark forest's dense foliage can protect hostile mobs from sun, making this biome dangerous.\n\n\u2191 MCPE-120237 \u2191 https://www.minecraft.net/en-us/article/minecraft-snapshot-20w10a \u2191 MC-1788 \u2191 a b c d Only 8 levels, since only blocks with solid top surfaces are spawnable.\n\nSee MC-202376 \u2191 The 96-block horizontal limit is reported as a bug at MCPE-102197 \u2191 [1] \u2191 MC-182897 \u2014 \"Some passenger mobs don't count to the mob cap\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-182304 \u2191 MCPE-70664 Forum thread by Marglyph about the spawning algorithm in Beta 1.2 Forum thread by fr0stbyte124 on mob spawning in Alpha v1.1.2_01 from before the Halloween Update changes Gameplay View at: Template:Gameplay/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Spawn/Multiplayer details",
    "url": "https://minecraft.fandom.com/wiki/Spawn/Multiplayer_details",
    "content": "For this discussion, coordinates refer to the column centered at (x+0.5, z+0.5).\n\nThat is, -225x, 255z refers to the column bounded by -224x to -225x and 255z to 256z.\n\nEvery world has a \"spawn point\" (really, an area) located within a few hundred blocks of the origin, which is at coordinates 0x, 0y, 0z.\n\nThis point is stored in the level.dat file's SpawnX, SpawnY, SpawnZ attributes (although SpawnY seems to be ignored).\n\nIf the spawn point is deemed unacceptable, a new, temporary spawn point will be selected (although the criterion for \"acceptable\" is unknown).\n\nA player with no spawn point set (such as by a bed) will be placed randomly at the highest point in a 20x/20z square centered on the x-/z- corner of the spawn point; that is, the 20x/20z spawn square's edges are at SpawnX -10/+9, SpawnZ -10/+9.\n\nThe 10 block radius can be changed using / gamerule spawnRadius though.\n\nChanging the spawn radius also affects the radius of spawn protection.\n\nThe spawn protection will be removed if the spawnRadius is set to 0.\n\nOn multiplayer servers, a 33x/33z slice of the world centered at SpawnX, SpawnZ can, at the server owner's or operator's option, be set as \"protected\", and can then (almost; see below) only be modified by Operators; that is, the 33x/33z protection square's edges are at SpawnX +16/-16, SpawnZ +16/-16.\n\nNon-operator players cannot place or destroy blocks in the protected area, nor can they use doors or Redstone devices other than Pressure Plates.\n\nCreepers can still destroy terrain in the protected area and TNT placed outside of the protected area will destroy surrounding blocks as usual.\n\nAlong with this, portals from the nether can connect to the protected area, water/lava/fire can spread from outside into the protected area, and pistons can push items inside as well.\n\nPlayers can place blocks on the edge of the protected area if placed against the side of a block on the outside of the area.\n\nHowever, if the edges of the protected area are avoided, small, indestructible structures can be built.\n\nPaintings that are put up can be removed by players in the safe zone.\n\nSleeping in a bed will reset your spawn point to that bed, even if you click \"Leave Bed\".\n\nIf the bed at which you have set your spawn point last is missing or blocked when you respawn, your spawn point reverts to the world spawn.\n\n[1] The spawn point was forced to 100x,100z and the player data was cleared.\n\nThe purple square outlines the column at 100x,100z, which holds an obsidian tower.\n\nTo determine the spawn area, a flat, open area large enough for the (presumed) 20x20 spawn area was created.\n\nThe player (an op) repeatedly respawned and immediately dug a hole if one was not already present.\n\nThe red square, above, is drawn from the midpoints of the outermost holes in each direction.\n\nTo determine the protection area, the player (a non-op) attempted to place blocks until successful while moving away from the spawn, and then traced around the edges of the protected area until all four corners were found.\n\nThe lapis corners marked above were the extent of the minimum placeable area by the player.\n\nThe blue square, above, is drawn from the midpoints of the outermost protected blocks in each direction.\n\nThe dimensions of each square are given by (max - min + 1) to include the extra half-block on either end of the measurement (In the example below, width should be [7 - 3 + 1 = 5]): XXXXX <- width=5 123456789 ^min=3 ^max=7 Main article: Spawn chunk There is a 23x23 chunk area around the world's \"spawn point\" that is constantly loaded, even when the player is not in range.\n\nThis can be verified by moving a player far away from the world's spawn point and deleting the original spawn chunks in MCEdit and then reloading the world.\n\nThat being said, redstone and hopper clocks only work within a 21x21 chunk area of the world's \"spawn point\", and entities will only stay loaded within a 19x19 chunk area.\n\nClocks will continue to run even when the player is not in the area, making this a useful tool for map makers who need to have constantly running clocks for the world.\n\nThe loaded chunks are decided by the natural spawn point in the world, and may be changed or edited by map makers using the \"Move Spawn Point\" feature in MCEdit, or the / setworldspawn command.\n\n\u2191 http://twitter.com/jeb_/statuses/50614359507992577",
    "category": "Mechanics"
  },
  {
    "title": "String",
    "url": "https://minecraft.fandom.com/wiki/String",
    "content": "String String Tripwire View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No String is an item used in crafting recipes such as bows, fishing rods and leads.\n\nWhen placed as a block, string becomes tripwire, which can be combined with tripwire hooks to form a tripwire circuit.\n\nString can be obtained from drops, breaking cobwebs, fishing, bartering, and as gifts from cats.\n\nString can be looted from jungle temples, desert pyramid chests, and dungeons.\n\nTripwire can be mined instantly with any tool, dropping string.\n\nTripwire is also removed and drops string as an item when: Water flows into its space A piston pushes it or moves a block into its space Tripwire is destroyed without dropping string if lava flows into its space.\n\nA cobweb drops string when it is broken in these ways (see also Cobweb \u00a7 Usage): Breaking a cobweb with a sword Pushing a cobweb with a piston Water breaking a cobweb by flowing over it (flowing lava destroys cobwebs without leaving string) Five pieces of tripwire generate naturally in every jungle temple.\n\nSpiders and cave spiders drop 0\u20132 string upon death.\n\nThe maximum is increased by 1 per level of Looting, for a maximum of 0\u20135 string with Looting III.\n\nStriders drop 2\u20135 string upon death.\n\nThe maximum is increased by 1 per level of Looting, for a maximum of 2\u20138 string with Looting III. [JE only ] Cats drop 0\u20132 string upon death, unaffected by Looting.\n\n[1] String has a 0.6% (3 \u2044 500) chance of being caught when fishing with an unenchanted fishing rod.\n\nThe chance decreases to 0.5% (1 \u2044 200), 0.4% (1 \u2044 250), and 0.3% (3 \u2044 1000) if the fishing rod is enchanted with Luck of the Sea at enchantment levels I, II, and III, respectively.\n\nMain article: Cat \u00a7 Gifts Tamed cats have a 70% chance of giving the player a gift when they wake up from a bed, and the gift has a 16.13% chance to be a string.\n\nPiglins may barter 3-9 string when given a gold ingot.\n\nString can be used as a crafting ingredient and tripwire can be used as a redstone circuit component.\n\nIt can also be used to keep players from ender-pearling through that space.\n\n\"Tripwire\" redirects here.\n\nFor tripwire hooks, see Tripwire Hook.\n\nSee also: Redstone circuits String can be placed as tripwire, which can be used to detect entities as part of a tripwire circuit.\n\nObservers can also be used with a tripwire to generate redstone signals.\n\nPlacement To place tripwire, use string while pointing at a surface facing the space the tripwire should occupy.\n\nTripwire Circuit In order to activate tripwire hooks, tripwire must be part of a \"tripwire circuit\": a straight line of blocks consisting of a block with a tripwire hook attached to it, a \"tripwire line\" (1 to 40 blocks of tripwire), and a second tripwire hook attached to another block.\n\nActivation Tripwire activates if almost any entity (players, mobs, minecarts, boats, items, arrows, etc.) intersects its collision mask.\n\nThe tripwire remains active until there are no entities intersecting its collision mask.\n\nThrown potions, some arrows, thrown ender pearls, and thrown eyes of ender do not activate tripwire.\n\nBehavior An active tripwire updates adjacent blocks (for example, it can activate a BUD circuit).\n\nAdditionally, active tripwires that are part of valid tripwire circuits cause the attached tripwire hooks to activate (producing redstone power).\n\nActive tripwires do not themselves produce redstone power.\n\nWhen tripwire is broken (including by being washed away by spreading water in Java Edition) after being part of a valid tripwire circuit, it activates the attached tripwire hooks.\n\nIn Java Edition, it activates for 5 redstone ticks (10 game ticks, or 0.5 seconds barring lag).\n\nIn Bedrock Edition, it activates for 6 redstone ticks (14 game ticks, or 0.6 seconds barring lag).\n\nIt does not produce the signal if it is broken using shears.\n\nNovice-level fisherman villagers have a 50% chance to buy 20 string as part of their first-tier trade.\n\nJourneyman-level fletcher villagers buy 14 string for 1 emerald as part of their trade.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Bedrock Edition: The following content is transcluded from Technical blocks/Tripwire.\n\nThis section is missing information about Pick Block functionality.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nThis section is missing information about Early behavior Command announced name.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nJava Edition 12w22a - 13w36b: Tripwire Issues relating to \"String\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe first image of tripwires released by Mojang.\n\nAn image released by Mojang testing visibility of tripwires from a distance at night.\n\nThe same room viewed from the same angle, in daytime.\n\nPower lines made of suspended string blocks.\n\n\u2191 MC-200707 \u2014 Looting does not increase drops for iron golems and cats \u2191 \"It's a tripwire, yeah.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"You place it yourself.\n\nString is now placeable\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 Taking Inventory: String \u2013 Minecraft.net on May 14, 2020 Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Structure Block",
    "url": "https://minecraft.fandom.com/wiki/Structure_Block",
    "content": "Not to be confused with Structure Void.\n\nStructure Block Rarity color Epic Renewable No Stackable Yes (64) Tool None Blast resistance 3,600,000 Hardness -1 Luminous No Transparent No Flammable No Catches fire from lava No A structure block is used to generate structures manually.\n\nThey can also be used to save and load structures, alongside structure void blocks.\n\nStructure blocks are available using the / setblock, / fill, or / give commands, and are available in the Creative inventory in Java Edition.\n\nWhen placed, structure blocks are unbreakable in Survival and have the same blast resistance as bedrock.\n\nIn Bedrock Edition, only save-mode structure blocks are obtainable through commands.\n\nWhen placed, use the structure block to open the structure block GUI.\n\nThe GUI opens only if the player is in Creative mode, and has permission level 2 or higher.\n\nOnce a structure is named, its name appears above the structure block when highlighted, preceded by the block mode (e.g.\n\n\"Save:House\"). [Java Edition only ] Switching between modes preserves the settings of the structure block wherever possible.\n\nBefore being placed, the structure block uses a \"blank\" texture in the inventory, a texture that is not used when on a placed block.\n\nA piston cannot move a structure block.\n\nThey also cannot be pushed nor pulled by sticky pistons.\n\nStructure blocks cannot be destroyed by the ender dragon.\n\nYou can not attach any redstone, vines, bells, lanterns or torches to the block.\n\nYou can however place these blocks around the edge of the block, Save Mode GUI for Java Edition Save Mode GUI for Bedrock Edition Save mode allows the player to highlight a structure in the world and save it to memory, level file [Bedrock Edition only ], or a separate file.\n\nStructure Name The name of the structure is entered into this text box.\n\nCapital letters [JE only ] and special characters are not allowed.\n\nUnderscores (_) and hyphens (-) are allowed.\n\nIn Bedrock Edition, it has \"mystructure:\" prefix on default.\n\nRelative Position Enter the X, Y, and Z values for the structure here, based on the position of the structure block.\n\nSets the origin of the structure outline.\n\nMaximum allowed distance from the structure block in Java Edition is 48 blocks in any direction and 64 on horizontal direction and 256 on vertical direction in Bedrock Edition.\n\nAll invisible blocks shown by structure blocks Show invisible blocks  [JE only ] This section is missing information about What color was used for structure voids prior to 21w20a?\n\nAnd were there any other changers since their introduction in 1.10 (ignoring the old dark outlines)?.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nDisplays invisible blocks as small colored cubes.\n\nOff by default.\n\nInvisible blocks as shown by the \"Show invisible blocks\" option Structure Size Enter the X, Y, and Z values to set the distance from the Relative Position coordinates.\n\nThis sets the opposite corner of the structure, and defines its size.\n\nMaximum structure size is 48x48x48 In Java Edition and 64x256x64 In Bedrock Edition.\n\nWhen successful, generates a white outline surrounding the structure. [JE only ] In Bedrock Edition, the outline is green, blue, or red (depending on the axis) and the preview design can be used to see every layer of fragmented structure and to change the structure size to be saved.\n\nDetect structure size and position Automatically calculates the size and position of the structure using a corner block placed on the opposite corner of the structure.\n\nThe name of the structure in the save block must match the name within the corner block, or the size calculation fails.\n\nTwo corner blocks can also be used.\n\nIt uses the second corner block instead of the structure block.\n\nRemove blocks  [BE only ] While saving the structure and when enabled, this doesn't include any blocks within the structure.\n\nInclude entities While saving the structure and when enabled, this saves any entities within the structure as well.\n\nSave When all coordinates and a structure name have been entered, press this button to save the structure.\n\nIn Java Edition, this saves the structure to a file.\n\nThe name of the structure is the name of the file.\n\nStructures can be saved to a file only by manually pressing this button.\n\nIf a structure block in Save mode is instead powered by redstone, the structure is saved only in memory by default.\n\nThis is the case even if a file for that structure already exists on disk.\n\nReloading the world clears any structures stored in memory.\n\nThis is for unspecified security reasons.\n\n[2] By default, structure blocks are saved in the minecraft namespace.\n\nThis can be changed by prefixing the structure name with <namespace>: in the structure block.\n\nStructures are saved in.minecraft/saves/(WorldName)/generated/(namespace)/structures.\n\n[note 1] In Bedrock Edition, this saves the structure into level database file rather than a standalone file.\n\nAnd the player can set up the structure block so that it can save into the memory or the disk (level file) when automated with redstone.\n\nExport  [BE only ] Used to export a structure into a.mcstructure file, which can be used to load from the structures folder of a behavior pack.\n\nIf the structure contains a custom block from a behavior pack, then the block is also saved on the structure block.\n\nThis option is available only on Android and Windows 10 devices.\n\nLoad Mode GUI for Java Edition Load Mode GUI for Bedrock Edition Load mode allows the player to load and rotate saved structures.\n\nStructure Name The name of the structure to load.\n\nIn Java Edition, it can load structures saved to memory or a file (.minecraft/saves/ <World Name> /generated/ <namespace> /structures/), structures in data pack and in minecraft.jar.\n\nTo load a structure from a file, simply type <namespace>: <structure_path>.\n\nStructures saved only to memory have a higher priority than structures of the same name that were saved to a file.\n\nStructures saved to a file have a higher priority than structures of the same name that is in data pack, which have a higher priority than structures in minecraft.jar.\n\nIn Bedrock Edition, it can load structures saved to memory or disk (level database), and structures in behavior pack.\n\nStructures saved only to memory have a higher priority than structures of the same name that were saved to disk.\n\nStructures saved to disk have a higher priority than structures of the same name that is in behavior pack.\n\nVanilla NBT structure files cannot be loaded with structure block.\n\nRelative Position The X, Y, and Z coordinates of the corner in which to generate the structure, based on the position of the structure block.\n\nCoordinates may be defined as numbers between -48 and 48 In Java Edition, or between -64 and 64 In Bedrock Edition.\n\nShow bounding box Highlights the outline of the structure; on by default.\n\nStructure Integrity and Seed Removes random blocks that compose the structure based on a user-defined seed.\n\nLower integrity values result in more blocks being removed.\n\nThe integrity value must be between 0.0 and 1.0 [JE only ] / 100.00 [BE only ].\n\nInclude entities Include any entities saved in the structure file when loading the structure.\n\nOff by default.\n\nWaterlog blocks  [BE only ] While loading the structure in water, it allows the blocks to be waterlogged instead of being replaced with air.\n\nRemove blocks  [BE only ] While loading the structure, doesn't include any blocks within saved structure.\n\nRotation (0, 90, 180, 270) Sets the rotation of the structure to 0\u00b0 (no rotation), 90\u00b0 clockwise, 180\u00b0 clockwise, and 270\u00b0 clockwise (or 90\u00b0 counter-clockwise).\n\nMirror (\u00a6, <>, ^v) Sets the mirroring of the structure to none (\u00a6), left to right (< >), or front to back (^ v).\n\nAt 0\u00b0 rotation < > mirrors across the X-axis and ^ v mirrors across the Z-axis.\n\nIn Bedrock Edition, the options are x and z, which can be toggled to set mirroring.\n\nAnimation mode  [BE only ] Select the animation to show how structure is loaded.\n\nPlace by layer make structure loaded layer by layer, place by block make structure loaded one block by block.\n\nDefault to none.\n\nOnce the loading has started, breaking the structure block can not stop the loading process.\n\nLoading with animation may break blocks in structures that contain multiple parts (such as beds, doors, or tall grass), or need to be attached to other blocks (such as torches), and may cause water, lava, and fire to spread out.\n\nAnimation time  [BE only ] Adjust the animation time for loading the structure.\n\nLoad Load the structure.\n\nIn Java Edition, press this button once to prepare the outline preview of the structure.\n\nWhen satisfied with the position, press again to generate the structure.\n\nStructures may also be loaded with the use of redstone.\n\nCorner Mode GUI for Java Edition.\n\nCorner Mode GUI for Bedrock Edition.\n\nCorner mode allows for an easier and automatic size calculation while saving or loading structures.\n\nTo use, place on the opposite corner of a save structure block or a second corner structure block.\n\nThen, using a save block, press \"DETECT\".\n\nWhen successful, a bounding outline appears.\n\nStructure Name The name of the structure on which to calculate the size and position.\n\nName is case sensitive; it must match exactly with the name provided by the complementary save or corner structure block.\n\nData Mode GUI Data mode is a deprecated mode, which is superseded by jigsaw block, but still used in some certain vanilla structures (igloo, end city, woodland mansion, ocean ruin, shipwreck).\n\nStructure block in data mode can be used only during natural generation.\n\nThey mark the location to run a specified hardcoded function, which can be used only for relevant structures.\n\nIn Java Edition, this mode is hidden unless the Alt key is held while switching from Corner mode.\n\nIn Bedrock Edition, data mode structure block cannot be obtained with commands.\n\nCustom Data Tag Name The name of the function to run.\n\nIgloo \"chest\" - sets the loot table for a chest beneath the structure block to \"chests/igloo_chest\" and sets the loot table seed dependent on the world seed.\n\nEnd city \"Chest\" - Sets the loot table for a chest beneath the structure block to \"chests/end_city_treasure\" and sets the loot table seed dependent on the world seed.\n\n\"Sentry\" - Creates a shulker at the location of the structure block.\n\n\"Elytra\" - Creates an item frame entity with an elytra item inside it at the location of the structure block.\n\nWoodland mansion \"ChestSouth\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"ChestNorth\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"ChestEast\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"ChestWest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"Mage\" - Creates an evoker at the location of the structure block.\n\n\"Warrior\" - Creates a vindicator at the location of the structure block.\n\nOcean Ruin \"chest\" - Creates a chest at the location of the structure block, setting its loot table to either \"chests/underwater_ruin_big\" or \"chests/underwater_ruin_small\", with seed dependent on the world seed.\n\n\"drowned\" - Creates a drowned at the location of the structure block.\n\nShipwreck \"map_chest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"treasure_chest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"supply_chest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\nExport Mode GUI 3D Export mode [Bedrock Edition only ] [note 2], is similar to save mode, but the structure is saved as a 3D render in the format of.glb rather than as an actual structure.\n\n[3] Therefore, structures saved this way can be viewed with 3D Viewer [4] or Paint 3D [5], but cannot be generated via load mode.\n\nThe 3D file exported is basically the same as the real-time rendering in the preview.\n\nEnd portal blocks, nether portal blocks, etc.\n\nin.glb file have only a static texture.\n\nSome blocks cannot be displayed properly, such as piston arms, chests, beds, etc.\n\nIncluding entities is not supported in this mode.\n\nStructure blocks in 3D output mode cannot be activated by redstone.\n\nStructure Name Enter the name of the structure.\n\nCase sensitive.\n\nThe player must enter a file name in order to export.\n\nRelative Position Enter the X, Y, and Z values for the structure here, based on the position of the structure block.\n\nSets the origin of the structure outline.\n\nMaximum allowed distance from the structure block is 64 blocks in any direction.\n\nStructure Size Enter the X, Y, and Z values to set the distance from the Relative Position coordinates.\n\nThis sets the opposite corner of the structure, and defines its size.\n\nMaximum structure size is 64\u00d7256\u00d764.\n\nRemove Blocks While exporting the structure, doesn't include any blocks within saved structure.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nExport Structure Block See also: Block states Java Edition: Bedrock Edition: A structure block also has a block entity associated with it.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities author: Author of the structure; only set to \"?\" for most vanilla structures.\n\nignoreEntities: 1 or 0 (true/false): Whether entities should be ignored in the structure.\n\nintegrity: How complete the structure is that gets placed.\n\nmetadata: Value of the data structure block field.\n\nmirror: How the structure is mirrored, one of \"NONE\", \"LEFT_RIGHT\" (mirrored over X axis when not rotated), or \"FRONT_BACK\" (mirrored over Z axis when not rotated).\n\nmode: The current mode of this structure block, one of \"SAVE\", \"LOAD\", \"CORNER\", or \"DATA\".\n\nname: Name of the structure.\n\nposX: X-position of the structure.\n\nposY: Y-position of the structure.\n\nposZ: Z-position of the structure.\n\npowered: 1 or 0 (true/false): Whether this structure block is being powered by redstone.\n\nrotation: Rotation of the structure, one of \"NONE\", \"CLOCKWISE_90\", \"CLOCKWISE_180\", or \"COUNTERCLOCKWISE_90\".\n\nseed: The seed to use for the structure integrity, 0 means random.\n\nshowboundingbox: 1 or 0 (true/false): Whether to show the structure's bounding box to players in Creative mode.\n\nsizeX: X-size of the structure, its length.\n\nsizeY: Y-size of the structure, its height.\n\nsizeZ: Z-size of the structure, its depth.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nThe first image of the then-mysterious structure block, as posted by Michael Stoyke.\n\nAnother cryptic image by Searge; the structure block can be seen in the center of the image, as well as the hotbar.\n\nThe previous image, brightened for clarity.\n\nYet another of the cryptic images posted by Searge; note the structure block in the hotbar and several in the upper-right corner.\n\nThe secret message uncovered in the previous image with the use of an image-editing program.\n\nAnother mystery image.\n\nYet another mystery image.\n\nThe mystery images in sequence.\n\nA \"side quest\" mystery image.\n\nHighlighting of the end city structures The structure block on the data mode in 1.9 The interface in 1.9 Highlighting of end city structures in save mode Highlighting of structures Teaser screenshot of the 1.10 structure block textures.\n\nAn image, tweeted by ProfMobius, of a structure block generating a fossil-like structure made of quartz.\n\nIssues relating to \"Structure Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nComparison of Java Edition 1.9 and Java Edition 1.10 blank structure block textures.\n\nSelecting a tree on an island using Save and Corner structure blocks.\n\nPreparing to load the saved tree structure into an empty sunflower plains.\n\nStructure loaded.\n\nA structure block showing invisible blocks.\n\nThe UIs of different structure block types.\n\nThe UI Interface for Bedrock Edition (Classic UI) The UI Interface for Bedrock Edition (Pocket UI) Jigsaw Block \u2191 Structures created in versions before 1.13 are saved in.minecraft/saves/(WorldName)/structures.\n\n\u2191 Only available on Windows 10 \u2191 MC-221834 \u2191 MC-105595 \u2191 \"How to Use Structure Blocks in Minecraft: Education Edition\" \u2013 Minecraft: Education Edition on YouTube, August 2, 2018 \u2191 https://apps.microsoft.com/store/detail/3d-viewer/9NBLGGH42THS \u2191 https://apps.microsoft.com/store/detail/paint-3d/9NBLGGH5FV99 \u2191 \"How about a block that players can't get, can't be found in the world, but it's effect to the world is visible and exciting?\" \u2013 @SeargeDP (Michael Stoyke) on X, April 8, 2015 \u2191 \"I once met a small bright dot that enjoyed nothing more in his life than protecting big dark secrets by being painted over them in images.\" \u2013 @SeargeDP (Michael Stoyke) on X, April 14, 2015 \u2191 \"The instructions I got was to make them \"feel mysterious\";)\" \u2013 @jeb_ (Jens Bergensten) on X, May 3, 2016 \u2191 MC-257102 \u2014 \"Missing Structure Block in creative tab\" \u2014 resolved as \"Fixed\".\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Target",
    "url": "https://minecraft.fandom.com/wiki/Target",
    "content": "Target Renewable Yes Stackable Yes (64) Tool Blast resistance 0.5 Hardness 0.5 Luminous None Transparent No Flammable Yes (15) Catches fire from lava No A target is a block that produces a temporary redstone signal when hit by a projectile.\n\nUnlike most other conductive blocks it also redirects adjacent redstone dust towards it.\n\nA target can be found in ancient cities.\n\nTargets can be mined using any tool or by hand, but a hoe is the fastest way to break it.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nTargets emit a redstone signal when hit by most projectiles.\n\nThis includes arrows, tridents, eggs, snowballs, splash potions, fire charges fired by a dispenser, firework rockets, lingering potions, bottles o' enchanting, ender pearls, shulker bullets, and llama spit.\n\nThe closer a projectile is to the center of the block, the stronger the redstone signal that is produced.\n\nWhen struck by most projectiles, the target emits redstone power for 4 redstone ticks (0.4 seconds).\n\nArrows and tridents instead cause the target to emit power for 10 redstone ticks (1 second), similar to stone buttons.\n\nA target can be hit with any of the projectiles mentioned above.\n\nThe strength of the signal depends on how close the projectile is to the center of the block, from 1 to 15.\n\nThe target also provides a block update when hit, meaning that an observer can detect if the target has been hit and has produced a redstone signal. [Java Edition only ] [1] When used as part of a redstone circuit, a target has the unique property that, though being an opaque block that is not a mechanism component, still can redirect adjacent redstone dust to point to itself.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nJava Edition: Issues relating to \"Target\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe target block shown at MINECON Live 2019.\n\nOfficial target block artwork.\n\nAn arrow at the center of a target block \u2191 MCPE-84391 Block of the Week: Target \u2013 Minecraft.net on June 18, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "TNT",
    "url": "https://minecraft.fandom.com/wiki/TNT",
    "content": "This article is about the regular TNT block.\n\nFor the consumable in Minecraft Dungeons, see:MCD:TNT.\n\nFor other uses, see TNT (disambiguation).\n\nTNT Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 25 Hardness 0 Luminous No Transparent No Flammable Yes (15) Catches fire from lava Yes TNT is a block that can be activated by a Redstone signal, flint and steel, stray fire, flaming projectile or explosion.\n\nPrimed TNT is a gravity-affected entity that produces a damaging, block-destroying explosion after a few seconds.\n\nTNT can be broken instantly with any tool, or without a tool.\n\nPrimed TNT cannot be broken as it is an entity, but it can be removed with the / kill command.\n\nNine TNT blocks occur naturally in each desert pyramid.\n\nTwo TNT blocks flank a trapped chest in one secret woodland mansion room.\n\nA TNT explosion.\n\nTNT blocks can be primed by: using a flint and steel or a fire charge using any item enchanted with Fire Aspect, including a Fire Aspect enchanted book  [Bedrock Edition only ] a powered redstone signal being shot by a flaming or explosive projectile being hit an arrow from a bow with flame enchantment being hit by an arrow that has traveled through lava or fire being hit by a ghast, blaze fireball or a fire charge fired from a dispenser being hit by an explosive skull from a Wither coming into contact with spreading fire or lava being in the blast radius of a nearby explosion, including that of another TNT block, a creeper, a bed, a respawn anchor, or an end crystal being placed by a dispenser being lit by a flint and steel used by a dispenser being hit by a lightning bolt Primed TNT Behavior Does not exist Details Size Height: 0.98 blocks Width: 0.98 blocks Once primed, TNT turns into an entity, which includes being affected by gravity.\n\nThe new primed TNT is spawned at the center (+0.5,+0.5,+0.5) of where the TNT block was, like a cube with an edge length of 0.98.\n\nIts fuse lasts 40 redstone ticks (4 seconds/80 game ticks) if activated by redstone or fire, or a random number between 10 and 30 game ticks (0.5 to 1.5 seconds) if it is destroyed by another explosion.\n\nOnce spawned, primed TNT is given a vertical velocity of 0.2 blocks per tick, and a horizontal velocity of 0.02 blocks per tick in a random direction.\n\nGiven these velocities, the TNT travels 0.166 blocks (or 6 block pixels) horizontally before it stops, given there is no block in the way.\n\nWhen the countdown timer expires, the TNT explodes.\n\nIf in the air, TNT falls roughly 77 blocks before exploding once it is ignited.\n\nThe explosion has an explosive force of 4.\n\nPrimed TNT's texture blinks, alternating every 0.5 seconds between the TNT block's texture, and a copy of it that has been brightened to near-white.\n\nThe effect is dynamic and the brightened texture can't be found in the assets.\n\nPrimed TNT cannot be pushed by players or other mobs, but it moves when in flowing water or lava.\n\nPrimed TNT cannot mount minecarts or boats.\n\nWhen primed TNT detonates while in water or lava, it does not break any blocks.\n\nIt does still damage players, mobs, and other entities. [Java Edition only ] [1] Primed TNT that detonates outside water can still damage submerged blocks.\n\nTo make TNT destroy blocks in the water, e.g.\n\nto enter an ocean monument from the top, one can place sand or gravel on the TNT before it is primed.\n\nPriming the TNT causes the sand or gravel to fall one block, engulfing the TNT.\n\nBecause the TNT is no longer immersed in water, it can destroy the surrounding blocks.\n\nPrimed TNT is not teleported when entering a nether portal; instead, it passes through portal blocks. [Java Edition only ] Primed TNT teleports as expected when entering an end portal, maintaining its direction and speed.\n\nThe fuse timer keeps counting down (unless the spawn chunks are unloaded, then it pauses until a player loads the chunks).\n\nIf the TNT is primed atop any sort of fence post that is two blocks high or larger, it falls through the fence block on which it was activated and stops on the next lower one.\n\nIts detonation damages only the fence block it was \"stuck\" in. [Java Edition only ] In Java Edition primed TNT summoned by a command explodes immediately because the fuse time defaults to zero if not specified.\n\nFor redstone to activate TNT, it must either lead directly to the TNT, or power an adjacent block.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Primed TNT use the Friendly Creatures sound category for entity-dependent sound events.\n\nBedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nJava Edition: Bedrock Edition: TNT has entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Dynamic block entity data Tags common to all entities Fuse: Ticks until explosion.\n\nDefault is 0.\n\nIf activated from a TNT block, the fuse duration is 80 ticks (4 seconds).\n\nBedrock Edition: See Bedrock Edition level format/Entity format.\n\nIssues relating to \"TNT\" are maintained on the bug tracker.\n\nReport issues there.\n\n\"TNT\" stands for T ri n itro t oluene.\n\nThe Preferred IUPAC name, however, is 2,4,6-trinitrotoluene.\n\nThe chemical formula is C 7 H 5 N 3 O 6.\n\nThe use of sand in the crafting recipe references dynamite, a different high explosive from TNT, consisting of nitroglycerin mixed with diatomaceous earth (which is mostly silica, the same chemical compound as yellow sand).\n\nThe block\u2019s appearance as a bundle of red sticks is also typical of dynamite.\n\nAlthough flint and steel cannot light fires in Adventure Mode, it can still ignite TNT.\n\nIt takes 19.75 blocks to fall for it to reduce the timer for one second.\n\nAlthough primed TNT normally gets caught in cobwebs, TNT propelled fast enough flies through them without slowing down at all.\n\nIt is slightly smaller than a full block when activated, as with all entity versions of blocks (see shulker).\n\nUsing flint and steel to ignite it sets it off at once, but fire must burn it for many seconds before triggering.\n\nIn Pi Edition, TNT by default doesn't do anything, but when set to data value 1, it ignites when broken.\n\nThe longest fuse time of TNT is 27 minutes and 18.35 seconds, or 32,767 ticks.\n\nAttempting to ignite TNT while sneaking results in the block being lit on fire, rather than the TNT becoming primed.\n\nStanding behind blocks during an explosion dramatically reduces knockback and damage from the explosion.\n\nTNT does not damage the player on peaceful difficulty, however, it does break blocks and damage entities.\n\nThe TNT fuse sound uses the same sound file as when a creeper is primed, but it is played at a higher pitch when the TNT is primed.\n\nAs seen in the Mobestiary, the creeper has TNT inside.\n\nFalling primed TNT, showing the effect of gravity.\n\nTNT triggered by redstone signal.\n\nA giant cube of TNT.\n\nCreeper Tutorials/Traps#Explosive traps Tutorials/TNT cannons \u2191 MCPE-21611 Works As Intended \u2191 MC-12959 \u2191 MC-165991 \u2191 MCPE-81258 Block of the Week: TNT \u2013 Minecraft.net on August 11, 2017 Redstone View at: Template:Redstone/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Trapdoor",
    "url": "https://minecraft.fandom.com/wiki/Trapdoor",
    "content": "See also: Door Trapdoor View all renders Renewable Yes Stackable Yes (64) Tools Blast resistance 3 (Wooden) 5 (Iron)?\n\n(Copper) Hardness 3 (Wooden and copper) 5 (Iron) Luminous No Transparent Yes Flammable No Catches fire from lava Overworld wood: Yes Iron, Nether wood, copper: No A trapdoor is a solid, transparent block that can be used as an openable 1\u00d71 barrier.\n\nWooden trapdoors can be mined with any tool, but an axe is the fastest.\n\nIron trapdoors require a pickaxe to drop as items.\n\nCopper trapdoors require a stone pickaxe or better to drop as items.\n\nTrapdoors remain in place if their attachment block is moved, removed, or destroyed.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nMost types of trapdoors can be found in shipwrecks.\n\nSpecifically: Oak trapdoors generate in villages, igloos, and shipwrecks.\n\nSpruce trapdoors generate in taiga villages and shipwrecks.\n\nJungle trapdoors generate in desert villages (around composters) and shipwrecks.\n\nDark oak trapdoors generate in shipwrecks.\n\nIron trapdoors generate in ancient cities.\n\nCopper trapdoors generate in trial chambers.\n\nCopper trapdoors can be turned into the respective waxed copper trapdoors by using a honeycomb item on them.\n\nWaxed copper trapdoors do not oxidize and are identical to the non-waxed version.\n\nUsing an axe on a waxed copper trapdoor turns it into the respective non-waxed copper trapdoor.\n\nIn addition, using an axe on an exposed, weathered, or oxidized copper trapdoor reverts it one stage to a regular, exposed, or weathered copper trapdoor respectively.\n\nNon-waxed copper trapdoors are completely deoxidized when struck by lightning, and other non-waxed copper trapdoors nearby are deoxidized randomly.\n\nSee also: Trapdoor uses Wooden trapdoors and copper trapdoors can be opened and closed by players or redstone pulse.\n\nIron trapdoors can be opened only by redstone pulse.\n\nTo place a trapdoor, use a trapdoor item while pointing at the block it should be attached to.\n\nOnce it is placed, the attachment block can be removed without breaking the trapdoor.\n\nWhen placed, a trapdoor either occupies the top or bottom part of a block, depending on where the player placed the trapdoor.\n\nIf a trapdoor is placed on the top part of a block, it opens downward.\n\nIf placed on the bottom part of a block, it opens upward.\n\nA trapdoor's \"hinge\" is located on the block attached to it.\n\nTrapdoors can be moved by pistons.\n\nTrapdoors block flowing water and lava.\n\nWaterlogged trapdoors release water from all sides apart from the top [Bedrock Edition only ] or all sides apart from the side that is blocked by the trapdoor itself (and the top) [Java Edition only ] Lava can create fire in air blocks next to wooden trapdoors as if they were flammable, but the trapdoors do not burn (and cannot be burned by other methods either).\n\nSingle trapdoors are climbable if they are opened and placed directly above a ladder against a wall.\n\nThis means if an opened trapdoor is placed in the middle of two ladders, players can climb through it directly.\n\nHowever, if there is more than one trapdoor between two ladders, players cannot climb through (they are stopped at the top of the first trapdoor).\n\nTrapdoors can act as a solid block when in the closed position and thus certain items can be placed above or below it.\n\nWhen trapdoors are opened, they act like a non-solid block resulting as a non-placeable area.\n\nLanterns, for example, can be placed on top and below the closed trapdoor.\n\nThe sound of opening and closing of a trapdoor can be heard up to 16 blocks away, like most mob sounds.\n\nTrapdoors can be opened or closed with a player or mob inside.\n\n[1] In Java Edition, closing a trapdoor one block above the ground while standing under it causes the player to crawl, and continue crawling until reaching a block with two empty spaces above, at which time the player stands automatically.\n\nThis can be used to enter small secret tunnels or otherwise inaccessible terrain.\n\nThis functionality is not available in Bedrock Edition unless the \u201cCrawling\u201d experimental feature is enabled.\n\nA trapdoor can be used as a switchable barrier to entity movement.\n\nAlthough primarily used to block movement by mobs and players, a trapdoor can also be used to control the movement of boats (for example, a top trapdoor placed in a two-wide water flow stops a boat when closed (extended out into the water flow), but allow it to move again when open), items and minecarts (a trapdoor can stop a falling item or minecart, then allow it to drop again when the trapdoor opens), etc.\n\nTrapdoors are 0.1875 (3 \u2044 16) blocks thick.\n\nThe rest of a trapdoor's space can be moved through freely and provides a breathable space if placed underwater and not waterlogged.\n\nTo open or close a wooden trapdoor or a copper trapdoor, use the Use Item/Place Block control.\n\nWhen a trapdoor opens or closes, it immediately changes its orientation without affecting anything in the space it \"passes through\".\n\nMoving trapdoors don't push entities the way that pistons do.\n\nIron trapdoors can be opened only with redstone power (a button, a redstone circuit, etc.).\n\nMobs consider all trapdoors closed, resulting in pathfinding mobs falling through open trapdoors.\n\n[2] A player can take advantage of this behavior to construct mob traps.\n\nBoth wooden and iron trapdoors can be controlled with redstone power.\n\nA trapdoor is a redstone mechanism and can be activated by: an adjacent active power component, including above or below: for example, a redstone torch, a block of redstone, a daylight sensor, etc.\n\nan adjacent powered block (for example, a block with an active redstone torch under it), including above or below a powered redstone comparator or redstone repeater facing the trapdoor powered redstone dust configured to point at the trapdoor or a single redstone \"cross\" next to it; a trapdoor is not activated by adjacent powered redstone dust that is configured to point in another direction, or a single redstone \"dot\" next to it.\n\nWhen activated, a trapdoor immediately rotates around its hinge side to its open state.\n\nWhen deactivated, a trapdoor immediately returns to its closed state.\n\nEach change of state takes one game tick.\n\nAn activated wooden trapdoor can still be closed by a player, and does not re-open until it receives a new activation signal (if a trapdoor has been closed \"by hand\", it still needs to be deactivated and then reactivated to open by redstone).\n\nOverworld wooden trapdoors can be used as a fuel in furnaces, smelting 1.5 items per block.\n\nWooden trapdoors can be placed under note blocks to produce \"bass\" sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 a b Due to MCPE-168021, this sound sometimes does not play Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k l Available with / give command.\n\n\u2191 a b c d e f g h i j k l The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Trapdoor\" are maintained on the bug tracker.\n\nReport issues there.\n\nOak Trapdoor Spruce Trapdoor Birch Trapdoor Jungle Trapdoor Acacia Trapdoor Dark Oak Trapdoor Mangrove Trapdoor Cherry Trapdoor Bamboo Trapdoor Crimson Trapdoor Warped Trapdoor Iron Trapdoor Copper Trapdoor Exposed Copper Trapdoor Weathered Copper Trapdoor Oxidized Copper Trapdoor An example of an open trapdoor, shown with its back to a block.\n\nAn example of a closed trapdoor, shown flat against the adjacent block.\n\nTrapdoors on slabs.\n\nIron trapdoors.\n\nAll trapdoor types alongside with their respective door counterparts.\n\nClosed trapdoor.\n\nOpen trapdoor.\n\nFirst image of a mangrove trapdoor.\n\nBamboo trapdoor concept art.\n\nBamboo trapdoor prototype textures.\n\n\u2191 MC-11075 \u2013 \"Trapdoor Colliding With Player\" resolved as \"Won't Fix\" \u2191 MC-50556 \u2014 resolved as \"Works As Intended\".\n\nTaking Inventory: Trapdoor \u2013 Minecraft.net on October 19, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Trapped Chest",
    "url": "https://minecraft.fandom.com/wiki/Trapped_Chest",
    "content": "Trapped Chest Renewable Yes Stackable Yes (64) Tool Blast resistance 2.5 Hardness 2.5 Luminous No Transparent Yes Flammable No Catches fire from lava Yes A trapped chest is a variant of the chest that functions similarly, but has a red-tinted latch (with the default resource pack), and produces redstone power while it is open.\n\nLike normal chests, two trapped chests can combine into a large trapped chest.\n\nTrapped chests can be broken with any tool, but axes are the fastest.\n\nItems contained in the chest are dropped when the chest is broken.\n\nIf one half of a large trapped chest is destroyed, the corresponding items from the destroyed trapped chest are dropped and the remaining trapped chest continues to function as a small trapped chest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nTrapped chests naturally generate in \"fake end portal rooms\" in woodland mansions.\n\nTrapped chests can be used as containers and as redstone components.\n\nTo place a trapped chest, place the face of a block adjacent to the space the trapped chest should occupy.\n\nPlacing two adjacent trapped chests side-by-side typically joins them to create a large trapped chest.\n\nTo avoid them joining and instead place two single trapped chests side by side, the player may sneak while placing the second trapped chest, [Java Edition only ] or place the second trapped chest facing a different direction from the first one. [Bedrock and Java editions only ] Alternately, normal chests do not combine with trapped chests.\n\nTrapped chests can be moved by pistons. [Bedrock Edition only ] Water and lava flow around without affecting them.\n\nLava can create fire in air blocks next to trapped chests as if they were flammable, but the chests do not burn (and cannot be burned by other methods either).\n\nTrapped chests can also activate buried TNT, destroying themselves, their contents and any mobs or players near them.\n\nThey need to be opened twice for the TNT to be activated.\n\nThe GUI of a trapped chest.\n\nThe GUI of a large trapped chest.\n\nA single trapped chest has 27 slots of inventory space, and a large trapped chest has 54 slots of inventory space.\n\nIn a large trapped chest, the top three rows in the interface correspond to the western or northern chest block and the bottom three to the southern or eastern chest block.\n\nTo open the trapped chest GUI, use the Use Item control.\n\nTo move items between the trapped chest inventory and the player inventory or hotbar while the trapped chest GUI is open, drag or shift-click the items.\n\nTo exit the trapped chest GUI, use the Esc control.\n\nBy default, the GUI of a trapped chest is labeled \"Chest\" and the GUI of a large trapped chest is labeled \"Large Chest.\" A trapped chest's GUI label can be changed by naming the trapped chest in an anvil before placing it, or by using the data command [Java Edition only ] (for example, to label a trapped chest at (0, 64, 0) \"Loot!\", use /data merge block 0 64 0 {CustomName:'\"Loot!\"'}).\n\nIf half of a large trapped chest is renamed, that name is used to label the GUI of the entire large trapped chest, but if the named half is destroyed, the other half reverts to the default label.\n\nIf both halves of a large trapped chest have different names, the GUI label takes the name of the northernmost or westernmost half of the large trapped chest depending on its orientation (the half with the lowest coordinate in the appropriate axis).\n\nA trapped chest can be \"locked\" by setting the trapped chest's Lock tag.\n\nIf a trapped chest's Lock tag is not blank, the trapped chest cannot be opened except by players holding an item with the same name as the Lock tag's text.\n\nA trapped chest's Lock tag can be set or unset with the data command.\n\nFor example, to lock a trapped chest at (0, 64, 0) so that only players holding an item named \"Alice's Key\" can open the trapped chest, use data merge block 0 64 0 {Lock:\"Alice's Key\"}.\n\nChests (left) and trapped chests (right) can be placed next to each other.\n\nRedstone dust configures itself to point toward trapped chests, but not toward regular chests.\n\nSee also: Redstone circuit Trapped chests can be used to detect when their inventory is accessed by players.\n\nA trapped chest is inactive while not being accessed, but activates when accessed by a player (see above).\n\nAccessing either part of a large trapped chest activates both halves of the large trapped chest.\n\nMobs cannot access/activate a trapped chest, and a trapped chest is activated by items moving into or out of it by droppers or hoppers.\n\nWhile active, a trapped chest: powers any adjacent redstone dust, including beneath the trapped chest, to a power level equal to the number of players accessing the trapped chest (maximum 15) powers any adjacent redstone repeaters facing away from the trapped chest to power level 15 strongly powers any full solid opaque block (stone, dirt, block of gold, etc.) beneath the trapped chest to a power level equal to the number of players accessing the trapped chest (maximum 15) activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nDue to hoppers being locked by redstone activation, hoppers below a trapped chest do not take items from it while it is open.\n\nAn active trapped chest does not power any adjacent redstone comparators facing away from it.\n\nRedstone comparators can measure the block state of the trapped chest, producing a power level from 0 to 15 proportional to how full the trapped chest is.\n\nAnything else powered by an active trapped chest (including a block beneath it) can power redstone comparators normally.\n\nPiglins become hostile toward players who open, break or interact with trapped chests.\n\nTrapped chests can be used as a fuel in furnaces, smelting 1.5 items per chest.\n\nTrapped chests can be placed under note blocks to produce \"bass\" sound.\n\nThis feature is exclusive to Java Edition.\n\nAs with normal chests, on December 24, 25, and 26, trapped chests and large trapped chests have their textures changed to Christmas chests that look like presents.\n\nChristmas trapped chest and their large version look identical to Christmas chest and their large version respectively.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c MC-98316 \u2014 Wrong subtitles caused by missing distinction Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Every trapped chest has a block entity associated with it that holds additional data about the trapped chest.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nChest slots are numbered 0-26, 0 starts in the top left corner.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the chest when it is next opened, or the items are otherwise interacted with.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted use a random seed.\n\n[note 1] gold: Exists only in the april fools snapshot 23w13a_or_b.\n\nOptional.\n\nWhen set to anything but 0, turns the chest into a golden chest.\n\n\u2191 a b Both loot table tags are removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Trapped Chest\" are maintained on the bug tracker.\n\nReport issues there.\n\nTrapped chests render as a full block when in the inventory, but not when placed. [Bedrock Edition only ] [1] \u2191 MCPE-7990 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tripwire Hook",
    "url": "https://minecraft.fandom.com/wiki/Tripwire_Hook",
    "content": "Tripwire Hook Tripwire Hook Powered Attached Powered Attached Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No A tripwire hook is a block that emits a redstone signal when it is part of a valid tripwire circuit and it gets triggered by an entity.\n\nTripwire hooks can be broken instantly using any tool, or without a tool.\n\nA tripwire hook is also removed and drops itself as an item if: its attachment block is moved, removed, or destroyed.\n\nwater flows into its space in Java Edition.\n\na piston tries to push it or moves a block into its space.\n\nA tripwire hook is destroyed without dropping itself as an item if lava flows into its space.\n\nFour tripwire hooks are generated naturally in each jungle temple.\n\nTripwire hooks can be obtained as a \"junk\" item from fishing.\n\nTripwire hooks can be used as crafting ingredients or as redstone circuit components.\n\nTripwire hooks can be used to craft trapped chests and crossbows.\n\nSee also: Redstone circuit A tripwire hook can be used to detect mobs, items, and other entities over a large area.\n\nPlacement To place a tripwire hook, use the Place Block control.\n\nIn order to function correctly, a tripwire hook must be part of a \"tripwire circuit\": a straight line of blocks consisting of a block with a tripwire hook attached to it, a \"tripwire line\" (1 to 40 blocks of tripwire), and a second tripwire hook attached to another block, with both tripwire hooks facing the tripwire.\n\nTo place tripwire, use the Place Block control with a string.\n\nTripwire in a valid tripwire circuit has a short hitbox (0.09375 or 3/32 blocks high, with the bottom 0.0625 or 1/16 blocks above the block below), while tripwire not in a valid tripwire circuit has a taller hitbox (0.5 blocks high, bottom not raised).\n\nA tripwire hook in an invalid tripwire circuit appears \"folded\", while a tripwire hook in a valid tripwire circuit appears extended straight.\n\nTripwire lines from separate tripwire circuits can be placed next to each other (in parallel), above each other, and even intersecting each other.\n\nActivation A tripwire hook in a valid tripwire circuit activates when certain entities (players, mobs, items, etc.) intersect the tripwire hook's tripwire line \"hitbox\" (but not the tripwire hook itself), and deactivates when all entities leave or are removed from the tripwire line.\n\nEntities that cannot activate a tripwire circuit include thrown potions, some arrows, fireworks, thrown ender pearls, and thrown eyes of ender.\n\nA tripwire hook also activates for 5 redstone ticks (0.5 seconds, barring lag) when any of its tripwires are destroyed, except when shears are used to destroy the tripwire.\n\nBreaking the tripwire hook, or breaking the block it is attached to, does not generate a pulse.\n\nBehavior The tripwire hooks and the blocks they are attached to provide power, but the tripwire does not.\n\nWhile active, a tripwire hook appears to move downward and it: powers any adjacent redstone dust to power level 15, including beneath the tripwire hook powers any adjacent redstone comparators or redstone repeaters facing away from the tripwire hook to power level 15 strongly powers its attachment block to power level 15 activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nTripwire produces no power itself, but its state change can be detected with an observer.\n\nAlthough destroying tripwire with shears cannot activate a tripwire hook, it changes the tripwire hook's block state (its \"attached\" state from true to false), which can be detected with an observer.\n\nMaster-level fletcher villagers have a 2 \u2044 3 chance to buy 8 tripwire hooks for an emerald as part of their trades in Java Edition, and always offer the trade in Bedrock Edition.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Note: This video does not show the tripwire hook obtained from fishing, or its crafting usage.\n\nThis section is missing information about Potential ring placement changes between powered and powered attached Check if the string was still dashed directly before 14w11a.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nThe first image of tripwires released by Mojang.\n\nThe second image of tripwires released by Mojang.\n\nThe third image of tripwires released by Mojang.\n\nA comparison between a tripwire hook and a lever released by Mojang.\n\nIssues relating to \"Tripwire\" are maintained on the bug tracker.\n\nReport issues there.\n\nFirst location of tripwire hooks in jungle temple, setting of the dispenser trap in the background.\n\nSecond location of tripwire hooks in jungle temple, setting of the dispenser trap in the background.\n\nTripwire hook found in a chest inside pillager outpost.\n\n\u2191 \"I think I'm taking a big liking toward adventure maps.\n\nIt's starting to show in my choice of new blocks.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Experimenting with some new ideas.\n\nPerhaps one day we'll see a pair of shears inside every griefers' toolbox.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"That awkward moment when you realize you just spent the last few days unknowingly designing a coat hanger.\n\nhttps://dl.dropbox.com/u/36087083/ZScreen/2012-05/28-Monday--0196.126866331.png \u2026\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Haha, I kinda see how it looks like a doorbell, too.\n\nMaybe if you pull it a golem should come out and yell \"YOU RANG?\" https://dl.dropbox.com/u/36087083/ZScreen/2012-05/28-Monday--0197.486672066.png \u2026\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Some people have got it right already, so this should clear up all further confusion and spoil the next update for you https://dl.dropbox.com/u/36087083/ZScreen/2012-05/28-Monday--0198.158946456.png \u2026\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"It's a tripwire, yeah.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Tripwire Experiments\" \u2013 Nathan Adams on YouTube, May 28, 3012 \u2191 \"Also, thanks to my wonderful fiancee @MissMarzenia for the idea.\n\nSeriously, all credit goes that way.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 MC-50948 \u2191 MC-146824 \u2191 MC-217629 \u2014 \"Tripwire hooks use stone sounds, rather than wood\" \u2014 resolved as \"Fixed\".\n\nTaking Inventory: Tripwire Hook \u2013 Minecraft.net on September 11, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Advanced redstone circuits",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Advanced_redstone_circuits",
    "content": "This article needs cleanup to comply with the style guide.\n\n[discuss ] Please help improve this page.\n\nThe talk page may contain suggestions.\n\nReason: Seems a bit chatty and very unformatted (messy); also there is too much whitespace.\n\nIt has been suggested that this page be split into Arithmetic logic, Passcode locks, and Base changers.\n\n[discuss ] If this split may potentially be controversial, do not split until a consensus has been reached.\n\nReason: There's already a tutorials section for this and it has become a disorganized mess.\n\nThe pages above are only a suggestion.\n\nThis article uses MCRedstoneSim schematics.\n\nThese should be converted to use {{schematic }} if possible.\n\nAdvanced redstone circuits encompass mechanisms that require complicated redstone circuitry.\n\nThey are usually composed of many simpler components, such as logic gates.\n\nFor simpler mechanisms, see electronic mechanisms, wired traps, and redstone.\n\nMain article: Tutorials/Redstone computers In Minecraft, several in-game systems can usefully perform information processing.\n\nThese systems include water, sand, minecarts, pistons, and redstone.\n\nOf all these systems, only redstone was specifically added for its ability to manipulate information, in the form of redstone signals.\n\nRedstone, like electricity, has high reliability and high switching-speeds, which has seen it overtake the other mechanical systems as the high-tech of Minecraft, just as electricity overtook the various mechanics such as pneumatics to become the high-tech of our world.\n\nIn both modern digital electronics and redstone engineering, the construction of complex information processing elements is simplified using multiple layers of abstraction.\n\nThe first layer is that of atomic components; redstone/ redstone torches / redstone repeaters /blocks, pistons, buttons, levers and pressure plates are all capable of affecting redstone signals.\n\nThe second layer is binary logic gates; these are composite devices, possessing a very limited internal state and usually operating on between one and three bits.\n\nThe third layer is high-level components, made by combining logic gates.\n\nThese devices operate on patterns of bits, often abstracting them into a more humanly comprehensible encoding like natural numbers.\n\nSuch devices include mathematical adders, combination locks, memory-registers, etc.\n\nIn the fourth and final layer, a key set of components are combined to create functional computer systems which can process any arbitrary data, often without user oversight.\n\nAn 8-bit register page would be in the third layer of component abstraction These circuits simply convert inputs of a given format to another format.\n\nConverters include Binary to BCD, Binary to Octal, Binary to Hex, BCD to 7-Segment, etc.\n\nYou can understand this design as a combination of AND gates.\n\nDemultiplexer is a circuit that uses the following logic: Output 0 = (~bit2) & (~bit1) & (~bit0) Output 1 = (~bit2) & (~bit1) & (bit0)...\n\nThe most obvious way to implement a demultiplexer would be to put a whole bunch of logic gates and connect them together, but even with 3 or 4 bits it turns into a mess.\n\nIf you look at the binary numbers table, you can notice a pattern.\n\nIf the number of bits is Q, the most significant bit reverses every Q/2 numbers, the next bit reverses every Q/4 numbers an so on until we get to the Qth bit.\n\nTherefore, we should make a circuit that looks like this: Where the green triangles are non-reversing and red triangles are reversing.\n\nThe black lines are imaginary AND gates.\n\nWe can easily implement this using 3 \"punch cards\" that consist of solid blocks and air.\n\nThe \"punch cards\" or the masks are being moved by pistons with slime blocks.\n\nSo the signal is only being propagated if all three layers of masks align in a specific way.\n\nOpen the picture to see the layers.\n\nAs you can see, this system is very compact and comprehensible.\n\nYou can use this in reverse as well (not as a multiplexer, but if you reverse the repeaters the signal from every ex-outptut (0\u20137) will only propagate if it matches the current state of the demultiplexer, so it works like \"Output3 = (Input3) AND (Demux=011)\").\n\n3-bit Binary to 1-of-8 gates.\n\nA series of gates that converts a 3-bit binary input to a single active line out of many.\n\nThey are useful in many ways as they are compact, 5\u00d75\u00d73 at the largest.\n\nAs there are many lines combined using implicit-ORs, you have to place diodes before each input into a circuit to keep signals from feeding back into other inputs.\n\nRequirements for each output line (excluding separating diodes): A series of gates that converts a 4-bit binary input to a single active line out of many (e.g.\n\n0-9 if the input is decimal or 0-F if the input is hexadecimal).\n\nThey are useful in many ways as they are compact, 3\u00d75\u00d72 at the largest.\n\nAs there are many lines combined using implicit-ORs, you have to place diodes before each input into a circuit to keep signals from feeding back into other inputs.\n\n4-bit Binary to 1-of-16 gates.\n\nRequirements for each output line (excluding separating diodes): You also can convert a 1-of-16 signal to a 4-bit binary number.\n\nYou only need 4 OR gates, with 8 inputs each.\n\nThese have to be isolating ORs to prevent signals from feeding back into other inputs.\n\nFor every output line, make an OR gate with the inputs wired to the input lines where there is a '1' in the table below.\n\nLogic for a 3-digit key log, with digits 0-9.\n\nIt's order-sensitive The example on the right uses ORs (>=1), XNORs (=), RS NOR latches (SR) and some delays (dt*).\n\nFor the XNORs I would prefer the C-design.\n\nThe example on the right uses a 4-bit design, so you can handle a hexadecimal key.\n\nSo you can use 15 various digits, [1,F] or [0,E].\n\nYou only can use 15, because the state (0) 16 = (0000) 2 won't activate the system.\n\nIf you want to handle 16 states, you edit the logic, to interact for a 5-bit input, where the 5th bit represents the (0) 16 state.\n\nIn the following we'll use (0) 16 = (1111) 2.\n\nAnd for [1,9] the MUX-table upon.\n\nSo the key uses decimal digits.\n\nTherefore, we have to mux the used buttons to binary data.\n\nHere look through the first two columns.\n\nThe first represents the input-digit in (hexa)decimal, the second represents the input-digit in binary code.\n\nHere you can add also buttons for [A,E], but I disclaimed them preferring a better arranging.\n\nThe /b1\\-box outputs the first bit, the /b2\\-box the second, and so on.\n\nNow you see Key[i] with i=1..3, here you set the key you want to use.\n\nThe first output of them is the 1-bit, the second the 2-bit and so on.\n\nYou can set your key here with levers in binary-encryption.\n\nUse here the MUX-table upon, and for (0) h:= (1111) 2.\n\nIf we enter the first digit, we have to compare the bits by pairs (b1=b1, b2=b2, b3=b3, b4=b4).\n\nIf every comparison is correct, we set the state, that the first digit is correct.\n\nTherefore, we combine (((b1=b1 & b2=b2) & b3=b3) & b4=b4) =: (b*=b*).\n\nIn Minecraft we have to use four ANDs like the left handside.\n\nNow we save the status to the RS-latch /A\\.\n\nThe comparison works the same way for Key[2], and Key[3].\n\nNow we have to make sure, that the state will be erased, if the following digit is wrong.\n\nTherefore, we handle a key-press-event (--/ b1 OR b2 OR b3 OR b4 \\--/ dt- \\--/ dt- \\--).\n\nSearch the diagram for the three blocks near \"dt-\".\n\nHere we look, if any key is pressed, and we forward the event with a minor delay.\n\nFor resetting /A\\, if the second digit is wrong, we combine (key pressed) & (not B).\n\nIt means: any key is pressed and the second digit of the key is entered false.\n\nTherewith /A\\ will be not reset, if we enter the first digit, /A\\ only should be reset, if /A\\ is already active.\n\nSo we combine (B* & A) =: (AB*).\n\n/AB*\\ now resets the memory-cell /A\\, if the second digit is entered false and the first key has been already entered.\n\nThe major delay /dt+\\ must be used, because /A\\ resets itself, if we press the digit-button too long.\n\nTo prevent this failure for a little bit, we use the delay /dt+\\.\n\nThe OR after /AB*\\ is used, for manually resetting, i.e.\n\nby a pressure plate.\n\nNow we copy the whole reset-circuit for Key[2].\n\nThe only changes are, that the manually reset comes from (not A) and the auto-reset (wrong digit after), comes from (C).\n\nThe manual reset from A prevents B to be activated, if the first digit is not entered.\n\nSo this line makes sure, that our key is order-sensitive.\n\nThe question is, why we use the minor-delay-blocks /dt-\\.\n\nVisualize /A\\ is on.\n\nNow we enter a correct second digit.\n\nSo B will be on, and (not B) is off.\n\nBut while (not B) is still on, the key-pressed-event is working yet, so A will be reset, but it shouldn't.\n\nWith the /dt-\\-blocks, we give /B\\ the chance to act, before key-pressed-event is activated.\n\nFor /C\\ the reset-event is only the manual-reset-line, from B.\n\nSo it is prevented to be activated, before /B\\ is true.\n\nAnd it will be deactivated, when a pressure-plate resets /A\\ and /B\\.\n\nPros You can change the key in every digit, without changing the circuit itself.\n\nYou can extend the key by any amount of digits, by copying the comparison-circuit.\n\nDependencies from previous output only.\n\nYou can decrease the amount of digits by one by setting any digit (except the last) to (0000) 2.\n\nYou can open the door permanently by setting the last digit to (0000) 2 Cons The bar to set the key will be get the bigger, the longer the key you want to be.\n\nThe hard-coded key-setting is a compromise for a pretty smaller circuit, when using not too long keys.\n\nIf you want to use very long keys, you also should softcode the key-setting.\n\nBut mention, in fact the key-setting-input will be very small, but the circuit will be much more bigger, than using hard-coded key-setting.\n\nNot really a con: in this circuit the following happens with maybe the code 311: 3 pressed, A activated; 1 pressed, B activated, C activated.\n\nTo prevent this, only set a delay with a repeater between (not A) and (reset B).\n\nSo the following won't be activated with the actual digit.\n\nIf you fix this, the circuit will have the following skill, depending on key-length.\n\n(digit = 2 n -1, possibilities: digit Length) Main article: Tutorials/Combination locks Combination locks are a type of redstone circuit.\n\nThey generally have a number of components which must be set in the right combination in order to activate something such as a door.\n\nCombination locks can be very useful in creating adventure maps.\n\nNote that if you are playing in survival multiplayer, other players will still be able to break into the mechanism and cause it to activate without knowing the password.\n\nThis is a device which sorts the inputs, putting 1s at the bottom and 0s at the top, in effect counting how many 1s and how many 0s there are.\n\nIt is designed so that it is easily expandable, as shown in the diagram.\n\nThe 5\u00d75 center square is tileable.\n\nThe inputs are at the bottom and right and the outputs are at the top and left Truth table for a three-bit sorting device: Timers can detect the time difference between the first input and the second.\n\n2 1 A timer.\n\nThe extra repeater at the bottom is to compensate for the delay of the upper repeaters.\n\nExample of a timer in action.\n\nThis one determines the time difference between the input and output of a 2-tick repeater.\n\nThe amount of time can be determined by how far the signal travels.\n\nFor example, if 5 of the locked repeaters are powered, it means the time difference was 0.4-0.5 seconds, ignoring lag.\n\nIf the time difference is exactly 0.4 seconds, 4 repeaters will be powered.\n\nThe repeaters that will lock can be set to different delays.\n\nFor example, if they are set to 4 ticks and the first 3 are active, it means the time difference was 0.8-1.2 seconds.\n\nYou can even have a mix, which can be handy if you know what the range is likely to be.\n\nHowever, you will need to be careful when reading these timers.\n\nIf you are measuring higher scales, the second signal might not reach all of the repeaters.\n\nYou will need repeaters to replenish the signal.\n\nA section of the timer that replenishes the signal.\n\nSince the upper repeater has a delay, another repeater is required in the lower section.\n\nIf the signals are short times (like if you are using observers), you may not have time to read the data.\n\n2 1 An input modifier.\n\nWhen the inputs are applied, the timer will treat them as active until the button is pressed.\n\nYou can also measure how long a signal lasts.\n\nA timer that measures the duration of a stone button.\n\nPlease note the following when making a duration timer: Because of the delay that the redstone torch adds, the delay of the initial repeater, the one that stays unlocked, must be increased to 2 ticks.\n\nThe data from the timer will be preserved.\n\nBecause the repeaters will still be powered when the timer is used again, the circuit must be obstructed between uses in order to unlock the repeaters.\n\nTo do this mine the redstone torch, wait for all of the repeaters to deactivate, and put the redstone torch back.\n\nD flip-flop is an electronic component that allows you to change its output according to the clock.\n\nIt's and RS NOR latch that sets its value to the D input when the \">\" (clock) input is changing its state from low to high (in some cases from high to low).\n\nBasically, it's equivalent to the expression: \"Set the output Q to the input D when the input C goes from 0 to 1\".\n\nFor example, you can use D flip-flops to shift the value from left to right.\n\nIn this lock, the > signal propagates from the rightmost flip-flop to the leftmost, so the signal shifts to the right.\n\nThis circuit allows you to input a 4-bit number with two levers.\n\nYou can use any number of bits, but this configuration is already pretty secure even if someone figures out what a lock it is.\n\nSo, if you want to input the combination 1-0-1-0, follow these steps: D = 1 > = 1 > = 0 D = 0 > = 1 > = 0 D = 1 > = 1 > = 0 D = 0 > = 1 > = 0 In theory, you can program the lock from this serial interface as well.\n\nJust attach 4 RS NOR latches and a hidden place for the programming levers.\n\nThis design is not very practical as a lock, but might be a nice feature on something like a puzzle challenge map.\n\nRedstone circuits Mechanisms Traps Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Mechanisms",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Mechanisms",
    "content": "This article needs to be rewritten.\n\n[discuss ] It may contain inappropriate or inaccurate information.\n\nPlease help us by rewriting it.\n\nReason: The article should be about types of mechanisms, not a list of specific examples.\n\nThis article uses MCRedstoneSim schematics.\n\nThese should be converted to use {{schematic }} if possible.\n\nA door wired to a lever, one of the simplest redstone mechanisms Mechanisms are systems of blocks used to perform certain tasks, such as opening a door from afar or revealing a hidden staircase.\n\nThese systems are built from simple components and normally involve some kind of user input, such as breaking a torch, which generates some kind of result, like a door being revealed.\n\nMechanisms can range from simple switches that open and close doors from a safe distance, to complex devices such as combination locks that prevent intruders from entering your fort.\n\nThese are the basic, modular parts that can be combined to form any complex mechanism.\n\nPlease note that individual items in the game are not considered components.\n\nAlso, not all of these components have to be used when making a mechanism.\n\nWater Channel: A channel in which water can flow.\n\nWater is commonly used to break torches, causing things to fall, or washing away crops, as well as to transport items or mobs.\n\nTube: A long three by three structure that can be used for launching TNT.\n\nPiston Switch: Block 1 above ground level with redstone on top, with a piston that moves across to stop circuit.\n\nUsed so pressing a button or lever will stop another circuit.\n\nPipe: A pipe of hoppers or clock-fed droppers used to transport items.\n\nSee redstone circuits for an overview of simple components and advanced redstone circuits for more complicated redstone mechanisms.\n\nMechanisms are useful devices made from the combination of components.\n\nHere are some examples: This is a storage system that allows a user to call a minecart and return them.\n\nYouTube Video (view on YouTube) For this device, you can stand on a pressure plate and make splash potions shoot out of a dispenser.\n\nSee the following steps for how to make it: First, make a dispenser dispense splash potions.\n\nThen, place a dispenser one block over the floor level.\n\nPlace a fence on the side the dispenser will shoot the potion out from.\n\nFinally, put pressure plates on top of the fence.\n\nSee the following video for a better demonstration: YouTube Video (view on YouTube) Vending machine View at: Tutorials/Mechanisms/Vending machine [edit ] This is a customizable vending machine that is relatively easy to make.\n\nUnfortunately, it does require a lot of iron.\n\nNotes: The leftmost top hopper in the side view is the \"input/output\" hopper.\n\nPut items into this hopper and get items out.\n\nThe droppers hold the \"purchase\" items.\n\nThe chest at the bottom collects the \"payment\" items.\n\nFill the leftmost bottom hopper with 19- <price> items in the first slot, and 1 in each remaining slot.\n\nThese items will be payment items.\n\nRepeat the upper-right 2 tall by 4 wide section upwards to add more items to the number purchased.\n\n(The number of droppers is this number.) Delay the signal from the redstone torch to the hopper by 4*(price)-5 ticks (if the price is 1, simply don't delay it).\n\nThe repeater here is showing 1 tick as an example.\n\nThis is fairly easy to make.\n\nBelow the floorboard's blocks, you put a face-up sticky piston that is powered when off, done by a redstone torch, and then the next block in the floor has a double-piston extender, also powered when off, and then a triple piston extender, and so on, so when the sticky pistons are powered off, then the blocks will be pulled down into a staircase.\n\nYouTube Video (view on YouTube) This design features a hidden staircase in the wall, revealed by triggering a redstone signal in some way, such as interacting with a lever or button.\n\nThere are many ways of making this.\n\nLook at the following videos for some examples: YouTube Video (view on YouTube) YouTube Video (view on YouTube) To make this design, make a dispenser attached to a redstone clock mechanism and hopper to feed it items.\n\nIn front of the dispenser, place a powered rail on a block of redstone and fill a chest above the hopper with minecart with TNT.\n\nThis will rapidly dispense those TNT minecarts onto a powered rail and into a massive crater of their own.\n\nIt can even tunnel down to bedrock given enough carts.\n\nThis is a system that will let you program what items you want to sell, how many you will give, what you want to be paid and how many of those to be paid.\n\nIt will lock when it's empty.\n\nThis is a very compact system that is also tile-able.\n\nYouTube Video (view on YouTube) With a lot of repeaters and AND-gates it is possible to control multiple outputs with only two wires.\n\nIt can be very tricky to get the timing right.\n\nYou need a pulse generator in both wires to get a pulse with a defined length and in most cases, the output pulse needs to be made longer.\n\nAs shown in this video you have a top wire and a bottom wire with repeater.\n\nOn one side you have repeater between the buttons on the top wire and none (or as needed) in the bottom wire.\n\nOn the other side none (or as needed) on the top wire and matching repeater (to the other top side) on the bottom one.\n\nbetween which you place AND-gates (matching the buttons).\n\nThe idea is that the signals only meet at one AND gate at the same time.\n\nVideo tutorial: YouTube Video (view on YouTube) Example use: YouTube Video (view on YouTube) Main article: Tutorials/Piston doors 1x2 flush with the wall piston door.\n\nFitting in a 2x4x4 space.\n\nYouTube Video (view on YouTube) 1x2 Hidden Piston Door YouTube Video (view on YouTube) These \"Jeb doors\" can also be referred to as flush-inset piston doors.\n\nHere is an example of one of these, with a redstone torch key system added on.\n\nOnce broken down, it's not extremely difficult to build.\n\nYouTube Video (view on YouTube) For an easy piston door with no sticky pistons: YouTube Video (view on YouTube) YouTube Video (view on YouTube) This design allows one to get a great view on the surroundings and enables you to connect and stop on any floor you want.\n\nThe video also contains horizontal piston transport.\n\nYouTube Video (view on YouTube) or YouTube Video (view on YouTube) This design is even more compact than the previous one; however, it blocks sight.\n\nIt's great for building elevators in shafts.\n\nNote: you need to set the pistons to 3 instead of 2.\n\nThe first is still to be set on 4.\n\nTwo-way elevators can be built, but they are slower and much more complex than the previous ones.\n\nThey also require a lot more space and resources.\n\nYouTube Video (view on YouTube) The two-way elevator can be built the following way: The engine shown below of this text uses wool between the pistons and the fence gates/trapdoors.\n\nHowever, instead of wool any other block can be put there, as long as pistons can push it.\n\nThe engine Front view schematic of the elevator The schematics for the wiring assuming that you know how to make a 1 tick long impulse.\n\nA 1 tick long impulse can be obtained using a pulse limiter.\n\nIn both of the schematics, empty squares represent air blocks, and repeaters all have the minimum delay possible.\n\nWiring that makes the elevator go down Wiring that makes the elevator go up A screenshot of an implementation of this design: Screenshot of a two-way elevator using this design Also, see this video for a larger two-way elevator: YouTube Video (view on YouTube) Quick item incinerator (view on YouTube) This is a quick video tutorial on how to make a compact block swapper.\n\nCompact block swapper (view on YouTube) This is a simple bank system using powered rails, which should be helpful for Minecrafters less experienced with redstone.\n\nYouTube Video (view on YouTube) This silent BUD switch design updates not only when there is an update going on adjacent to it, but also updates when there is redstone wire placed 1 block away from the BUD switch.\n\nYouTube Video (view on YouTube) This is the in-game build, which is very simple.\n\nThis is intended to be used in narrow passageways.\n\nSince a piston takes 1 tick to extend, you can make a tiny monostable circuit that is activated by a pressure plate.\n\nThen, place a sticky piston with a block attached one block away from the monostable circuit, in which the sticky piston is connected to another pressure plate, one block away from the other.\n\nThen connect the blocks on the bottom layers with repeaters.\n\nThe output is the block that is pushed by the sticky piston.\n\nThe output is on when a player walks from one pressure plate to the other, but only in one direction.\n\nIn the diagram, it looks like this (the inputs are below pressure plates): Self-destruct mechanisms are useful when destroying critical buildings or creating secret areas.\n\nLay TNT under critical areas of your base, about two blocks deep.\n\nThis will prevent torches and other redstone contraptions from detonating your system early.\n\nThen, lay TNT to the surface in a 1x1 area and add a lever or button above it to complete the basic self-destruct system.\n\nIn creative mode, one could use dispensers filled with enderman spawn eggs wired to a 5-clock redstone circuit to release endermen into your house, slowly assuring a semi-complete destruction of your base provided that it is made from blocks that enderman can manipulate.\n\nRemote dispensers could be wired to release fire charges upon your wood structures.\n\nPistons could be placed to release the floor below sand walls to quickly remove the walls of a structure.\n\nThis can also be done by supporting the sand with scaffolding and breaking the main support scaffolds with pistons.\n\nA dispenser with a lava bucket could be used to flood your base with lava.\n\nConnect a mob farm to your base, and open it up.\n\nThe mobs will cover your house.\n\nCreepers will detonate whenever anyone unwanted comes by, and the other mobs will fight and probably kill any intruders.\n\nUse command blocks to really wreak havoc upon any sensitive areas.\n\nUse commands such as /fill, /summon PrimedTnt, or if you're really thorough, use /summon ~ ~ ~ wither.\n\nWARNING: These methods can and will destroy your base and anything near it.\n\nThis is the False3D Monitor, if you place a second row of sticky pistons above the first row you can produce 2x2 pixels.\n\nTo complete the look of the monitor, you need to place blocks in front of the sticky pistons to determine what color the pixels are, example: wool.\n\nThis happens because when the sticky piston pushes the \"pixel block\" and then the shading and the 3D cause the pixel to be visible by the player(s).\n\nThis can generally be used for any purpose regarding visuals, it can also be used for a mob trap if used properly.\n\nAnd there you have it.\n\nA redstone wired sequence of redstone lamps to mimic the lighting of a working floor.\n\nIt is pretty easy and very good looking.\n\nYouTube Video (view on YouTube) A compact \"flying\" machine to make a thin basalt bridge across a lava lake.\n\nYouTube Video (view on YouTube) Mechanics/Redstone/Circuit Traps Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Monster spawner traps",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Monster_spawner_traps",
    "content": "This article is about single-species farms built around a monster spawner.\n\nFor farms which spawn mobs in natural conditions, see Tutorials/Mob farm.\n\nMonster spawner traps are a type of mob farm that uses a monster spawner.\n\nThey employ the monster spawners found in dungeons as a source of mobs.\n\nThe purpose of these traps is to create an infinite source of items that can be gathered in an efficient way from the mobs spawned by the monster spawner.\n\nTwo general goals of these traps are to keep the player safe and to allow the mobs to spawn.\n\nDungeons are found when tunneling or exploring caves and mineshafts.\n\nThey appear to spawn in random places, but almost always underground, usually at the Y=30 to Y=60 range.\n\nFinding dungeons without mods, cheats, or external programs is mostly attributed to luck and some know-how.\n\nWhile exploring, some tricks can be used to help detect dungeons.\n\nGravity blocks like sand and gravel in a neat square may cover a monster spawner and is easily visible in deserts if spawned near the surface.\n\nHearing or seeing a group of single-type mobs while caving could mean a monster spawner is nearby.\n\nLastly, mossy cobblestone or normal cobblestone naturally spawning away from lava, is a dungeon, unless it is in a jungle biome, where it can also be a jungle temple.\n\nMonster spawners can be neutralized by placing torches to light up any dark areas around the monster spawner.\n\nWith the exception of blaze monster spawners, a single torch placed on the monster spawner is sufficient to disable it.\n\nBecause blazes can spawn up to light level 11, multiple torches (light level 14) are required to neutralize a blaze monster spawner.\n\nThere are six different mobs that can spawn.\n\nThey are separated into two categories: the two-block high tall mobs - zombies, skeletons, and blazes - and the one block high short mobs - spiders, cave spiders, and silverfish.\n\nSimilar variants such as the zombie villager are not included in this list.\n\nIn the Nether, blaze monster spawners can be generated in nether fortresses, and can be trapped to collect blaze rods and mass amounts of experience.\n\nBlaze monster spawners are the most dangerous to trap because of the height of the structure and the additional danger of lava.\n\nOne must be well-prepared to contain this type of monster spawner, lest they might die from heights, lava, the blazes, or even external mobs.\n\nSilverfish monster spawners can be found in the portal room of a stronghold.\n\nHowever, silverfish don't drop anything and are bothersome unless properly trapped.\n\nYou may choose to simply break the monster spawner, unless you want to create a silverfish trap near an entrance to your base.\n\nSilverfish have some advantages: they are the easiest hostile mob to kill.\n\nNormal spider monster spawners are one of the easiest to trap, as they cannot fit through a 1 wide hole, so you can dig through the side and place a torch on the monster spawner without fear of getting hurt.\n\nCave spider monster spawners are hard to trap since you will get poisoned on normal or higher difficulty, novice and intermediate players may be better off breaking or disabling these as soon as possible.\n\nThese monster spawners are generated more often than other types, and some may even generate within 20 blocks of one another, which can be leveraged into an efficient farm.\n\nBecause cave spiders can fit through 1\u00d71 spaces and between slabs, it is possible to make small, simple, and efficient grinders, although the difficulty in containing cave spiders can lead to spiders leaking out and/or poisoning the players.\n\nZombie monster spawners are also a bit tricky, as the monster spawner may spawn baby zombies, which are a 1\u00d71 mob, making proper containment essential, (particularly on harder difficulties).\n\nThe zombies may spawn other zombies nearby to \"help\", making area security a priority, and the monster spawner may also spawn zombie villagers which makes adding in some manner of player-controlled sorting mechanism a consideration.\n\nOn that note, however, zombie monster spawners can prove to be one of the most lucrative to trap, as the variety of items it can drop is extensive, and potentially limitless if you factor in the added option to use it to generate Villagers, which can then, in turn, be traded with, themselves \"farmed\", or used to make iron golem farms.\n\nThe three most common types of monster spawner are for zombies, skeletons, and spiders.\n\nIn each case, it's fairly trivial to set them up so that you can attack the monsters without retaliation, forming a simple farm for XP and their drops.\n\nSometimes cave spider monster spawners can be treated similarly, but this is more hazardous.\n\nProceed as follows: Secure and light the area around the dungeon.\n\nLight the room and monster spawner while you work on it, so the monsters don't interrupt you.\n\nRansack and clear out the chests.\n\nChoose and prepare a \"front\" area for the farm, with a chest and crafting table to supply swords.\n\nMake sure you have a clear approach and/or room to back away quickly, in case you come by and find one or more creepers spawned inside, and you need to shoot them.\n\nThe details of the front will vary according to what monsters you are farming (see below).\n\nPrepare the monster spawner area by digging out the entire spawning range.\n\nThat's a 9x9x4 area centered on the monster spawner.\n\nSo you'll dig two layers of the floor underneath, two blocks above the monster spawner, along with walls to five blocks out horizontally.\n\nIn order to maximize spawn rates, however, in case it's not a spider monster spawner, it is advisable to dig a further 5 blocks under the monster spawner, dropping any non-spider mobs outside of the monster spawner's detection range.\n\nFill in the walls surrounding the farm, except at the front.\n\nClose off any extra exits and alcoves, fill stray holes, place fences as needed.\n\nSet up any redstone machinery, including access tunnels and alcoves.\n\nPrepare the front according to the monster type (see below).\n\nYou will always want fence gates, in case you want to dash in between spawns to collect drops, or to fix something up.\n\nMost farms will want a flood system, to wash monsters and stray drops toward the front.\n\nIf you've opened up the full 10x10 area under the monster spawner, you can get a nice sheet of water from three water source blocks at the back.\n\nThis will push monsters forward and bring all drops within reach of the front.\n\nIf you still have items being stuck in one corner, you might resort to a side tunnel and/or a sticky piston to get at them without exposing yourself.\n\nOnce your farm is prepared, remove most or all of the lights.\n\nBeat a hasty retreat to the front.\n\nMake some swords and whack away.\n\nKeep bows and arrows (or tridents with the Loyalty enchantment) handy near the entrance, in case a creeper spawns while you're away or approaching, or otherwise sneaks into the area (normal darkness spawns are suppressed within 24 blocks of a player).\n\nA bit of a special case: if you found a dungeon on mushroom fields or mushroom field shore biomes, congratulations!\n\nProceed as usual, but without worry about creepers or other stray monsters intruding, making it easier to make a farm without little distraction from mobs.\n\nThe setup at the front will vary according to which monster you are farming: Zombies: a simple gated fence will do.\n\nMaximize your view of the monster spawner, so that they come to the fence quickly.\n\nSpiders: cover the front with pillars of blocks, floor to ceiling, but with 1-block wide slits open between them.\n\nSome glass at the ceiling can keep the spiders from sticking up there out of reach.\n\nYou can then attack them freely, but they can't come through.\n\nTo defend against creepers and other non-spider spawns, you can make these slits two-high, between the top and bottom slabs (that is, three blocks total, but with the top and bottom spaces half-blocked by slabs).\n\nThe \"tall\" monsters will not recognize these as passable, but you can move or attack through them easily (or you can just put fences and gates to block walking monsters).\n\nCave spiders: you can place a door between floor-to-ceiling fences (see pictures below).\n\nIron doors are better so that you can't accidentally open them while you're attacking the spiders.\n\nNote that cave spider monster spawners don't come pre-enclosed in a dungeon, so you'll likely need to start by building a room around them.\n\nRemember to open up the entire 9\u00d79\u00d73 area so that you don't get snuck up on by spiders spawning in a way that ignores walls.\n\nAgain, glass can help keep them from climbing out of reach.\n\nSkeletons: are the trickiest, as they can shoot through even brief gaps the moment they get the angle.\n\nFor the actual killing zone, you want fences/gates at eye level (so they can't shoot you), with an open row below (so you can attack).\n\nIf you stand directly in front of the fence, they will usually come up to the front so you can attack them.\n\nThat row in front of the fence can also be a trench\u2014you can reach further into the room, but then they can occasionally get an arrow or two under the fences.\n\nThe most common use of Redstone is to switch a flood system on and off.\n\nInstead of placing the water blocks yourself, embed dispensers in the floor or wall, each containing a bucket of water.\n\nYou will need Redstone dust and switches to power these, but remember that flowing water will wash away Redstone and switches.\n\nIf you're ambitious, you can build a system to light up the dungeon when you flick a switch.\n\nThis will be much easier if you have redstone lamps, but it can even be done with blocks pulled by pistons to uncover jack-o-lanterns.\n\nYou can also convert the front to feed monsters into a killing device as discussed below.\n\nIf they are killed without player intervention, you will not get all of the drops, nor experience, but this can still be useful for the drops you do get.\n\nYou can also tune the device to soften up the monsters before killing them yourself.\n\nA classic water floor for normal dungeons.\n\nRedstone lamps controlling a monster spawner.\n\nContaining cave spiders.\n\nA more elaborate farm, using water to wash them forward.\n\nAny standard mob grinder can be connected to a dungeon.\n\nHowever, the purpose of this device is for players who are currently low on materials and can't yet build something larger.\n\nA hopper can be used to collect the items into a chest.\n\nA 3-tier lava blade trap, intended to kill mobs of different heights.\n\nA lava blade trap consists of using water underneath the monster spawner and funneling these into a single line.\n\nAt this point, the mob should find themselves approaching a sign at ground level and a 'lava blade' above it which flows over the top of the sign, but no further.\n\nThis allows the mob to drop items at their feet for your collection.\n\nA tutorial can be found here: https://youtu.be/EcOySVPf_t0.\n\nThe external view of a timed lava mechanism, showing the end of the water stream, the hoppers, the nether brick fence, the dispenser, the sign to stop the lava, and the button.\n\nA variant to the classic lava blade, the timed lava dispenser can be used to damage a zombie or skeleton to the point where one hit can kill it, allowing the player to get advanced drops and XP.\n\nThe mob arrives by water stream through a two block high, one block wide tunnel, and is pushed up against a nether brick fence or a cobblestone wall).\n\nA dispenser is placed to dispense lava on top of this fence post, while a sign prevents the lava from flowing into the tunnel.\n\nA button is linked to a redstone timing mechanism that will activate the dispenser twice; once right away when the button is pressed, and then a second time a few seconds later to retract the lava.\n\nSince the mob is halfway on the block with the fence post, it will be damaged by the lava, but since its feet are still in water, the damage stops exactly at the moment the lava is retracted.\n\nHoppers under the fence post and the block before that in the tunnel can catch all dropped items.\n\nThe timing in the repeaters will have to be adjusted depending on the mob type.\n\nSee also: Tutorials/Drowned farming Drowning traps employ water to drown the hostile mobs.\n\nMobs and items float in water.\n\nIn this example, the dungeon is a 5\u00d75 spider monster spawner, since drowning traps don't work on zombies and skeletons.\n\nCapture the monster spawner and place water in one of the corners.\n\nThe opposite corner should have one dry block.\n\nDig a small hole in the dry corner.\n\nThis is where the water channel is recommended.\n\nPlace two signs in the corners and one in the hole.\n\nWater considers signs to be solid blocks.\n\nWhen water is placed in the corner, it will be held in place, even though it will look like it is flowing backward.\n\nPlace glass blocks in the corner to create the drowning chamber.\n\nAny solid block works.\n\nGlass panes and iron bars have a space of air that the mobs can breathe in, rendering the trap useless.\n\nFill the chamber with water to the ceiling.\n\nClose up the chamber.\n\nPlace a water stream at the top of the chamber to push the items.\n\nPlace a top slab in the water source.\n\nIt should get waterlogged, so it will still drown the mobs and also push the items.\n\nTake out the torches and enclose the dungeon.\n\nUse signs to hold up water.\n\nZombies and skeletons will sink instead of float, and will not drown.\n\nThis new feature provides other opportunities, however; for example, harvesting drowned in Bedrock Edition is a source of tridents and nautilus shells.\n\nPlease note that the below tutorial is slightly imperfect; the glass panes have air spaces, sometimes letting the mobs survive.\n\nUse glass blocks instead, to prevent this.\n\nCapture monster spawner.\n\nPlace water in one corner.\n\nDig a hole in the opposite corner.\n\nPlace signs.\n\nFirst source in drowning chamber.\n\nGlass panes.\n\nFill the rest of the drowning chamber.\n\nEnclose drowning trap.\n\nCollection stream.\n\nPlease note that you must fill up the column using source blocks, not just one at the top.\n\nThis trap is highly recommended.\n\nIt's effective and safe on all mobs, except blazes, since you need water.\n\nDisable the monster spawner, and then make a 10\u00d710 room around the monster spawner.\n\nOn one side, place water on every block.\n\nOn the opposite side, make a one-block deep trench extending along the side opposite the water.\n\nLight up the trench well.\n\nThe holes have to be next to water.\n\nNow, get plenty of food, a few chests, and two or three swords.\n\nRemove the torches and let mobs spawn.\n\nThe water will bring them to you, and you can shoot them and hit them.\n\nAlso, make a room to eat and heal in safety, just in case you didn't build the trap thoroughly.\n\nWith this trap, you can go for hours in one go, and gain a massive amount of experience levels and items at minimum risk.\n\nThe trap system is built in a way where you can easily leave when you want, with almost no creepers or non-monster-spawner mobs popping up.\n\nIf the monster spawner is a spider, make these adjustments: Add iron doors with levers to control mob flooding and possible death.\n\nBring milk for cave spiders.\n\nAdd an on/off lighting system.\n\nBring bows to help control mob flooding and possible death.\n\nThis type only applies to zombie and skeleton monster spawners.\n\nSunlight-based traps are made by placing water below a monster spawner.\n\nThis water will flow from one side to another.\n\nWhere the water stops, dig a pit a few levels down.\n\nThis will drop the mobs into the pit.\n\nTo finish, make sure that the pit is open to sunlight.\n\nThis sunlight will burn the mobs alive.\n\nAn example of this can be found here: https://youtu.be/1AijahlBqyU.\n\nThis is a fairly expensive and hard-to-make trap, so it's not recommended.\n\nFirst: Light up the room to prevent mobs from spawning.\n\nSecond: On top, dig out 2 blocks from the monster spawner room top without breaking the monster spawner roof.\n\nThird: Place the wires and dispensers like shown: DWWWWWD X - Roof Block XXXWXXX W - Wires XXXWXXX D - Dispenser looking in the monster spawner room XXXLXXX L - Lever, button or even a redstone clock, whatever you want to power XXXWXXX the dispensers up!\n\nXXXWXXX DWWWWWD Fourth: Put inside the dispensers: HARMING POTIONS: Used to damage spiders.\n\nHEALING POTIONS: Used to damage skeletons and zombies.\n\nPOISON POTIONS: Used to weaken any mob that is not undead.\n\nFifth and last, but not least: Take the lights out, get up, and when you hear the mob noises, push the lever/to activate clock/ whatever you used to power it up.\n\nIn this trap an iron golem is used to kill the monsters for you.\n\nTo make it, simply make an iron golem in the dungeon and watch it kill for you.\n\nHowever, the iron golem will eventually die (especially if more than 1 mob is spawned), so you'll have to replace it with another, or link it to an iron golem farm.\n\nSimilarly to the Iron Golem trap, have tamed wolves kill mobs for you.\n\nHowever, this only works for skeleton dungeons, as wolves will only automatically target skeletons.\n\nAdditionally, as wolves have much less health than golems, you'll need to either have many wolves available, or weaken the skeletons beforehand (i.e.\n\na large fall).\n\nThe benefit of wolf traps over golem traps is that kills from tamed wolves can produce experience and extra loot.\n\nThe following cactus trap is designed for spiders.\n\nIt has a chance of destroying the items, but this is an inherent issue with cacti (this can also incorporate a small cactus farm by placing a block 2 blocks above the cacti).\n\nDig the main channel.\n\nThe spider monster spawner is left in the wall forcing spiders to spawn on the small dry patch.\n\nDig two blocks down and one block in just before the cacti.\n\nThese two holes will hold the collection water sources.\n\nPlace three ladders on the far side of the collection output.\n\nPlace one on either piece of sand.\n\nPlace the two water sources in the holes.\n\nPlace the main water in the two openings.\n\nThe block between them makes the water flow towards the gap in the cacti, slightly improving the collection rate of string.\n\nCover the entire trap and remove all lights.\n\nMain channel, dry.\n\nCollection channel, dry.\n\nCollection channel, water and ladder placement.\n\nMain channel, water flow.\n\nBoth channels.\n\nFront view.\n\nFall damage onto hoppers is another option for killing mobs and collecting items automatically.\n\nThis trap only works with zombies.\n\nBoth rooms in this design must be very dark.\n\nThe zombies will try to get the villagers, they will fall through a hole, and if the room was high enough, kill themselves in doing so!\n\nFirst make a room high above the ground and move at least 2 villagers to it.\n\nNow put at least nine doors in it.\n\nNext change one of the walls to glass.\n\nAttach another room to the side that the glass wall is on.\n\nMine a hole in the floor of the empty room.\n\nLine the hole with open trap doors (if your hole is 2 by 2 you will need 4 trap doors) Directly under the hole, make a room without a roof on the ground.\n\nOne way to make a blaze farm is to box in the monster spawner, so that the blazes can't fly away.\n\nLeave a space at the blazes foot level and stand so that your eye level is at that space.\n\nThat way the blazes can't hit you (mostly), but you can hit them.\n\nThis is also a pretty good experience farm since each blaze drops twice as much xp as other mobs with its health.\n\nBe warned, however, that sometimes blazes will spawn outside the box so it is advised that one box themselves in as well.\n\nAlternatively, see Tutorials/Blaze farming for video tutorials.\n\nLava can quickly kill mobs and can be suspended on either a ladder or a sign.\n\nTo suspend the lava, create a 3-long channel then put a sign or ladder on the last block.\n\nLava spreads three blocks away from the source, so the last section of the lava will be left suspended on the sign or ladder.\n\nLava generates light, which can lower the spawn rate in the dungeon unless placed far away; however the increased turnover of mobs may compensate for this.\n\nSince Java Edition 1.11, you can use an anvil, nametag and a vindicator to make a monster monster spawner trap.\n\nFirst, you need to find a monster spawner, then you need to make a wall with a door to make no monsters to leave the trap, then lure a vindicator to inside the trap.\n\nThen you go to your anvil and rename the nametag to \"Johnny\", then right-click the vindicator with the name tag.\n\nAfter it is renamed, the vindicator will attack any other mob except other illagers.\n\nIt's recommended to put more vindicators inside the trap.\n\nand also it's recommended to heal your vindicator using Potions of Healing.\n\nStep 1 Step 2, Note: Glass is optional.\n\nStep 3, Note: Any way to lure a vindicator works.\n\nStep 4 (Have a Name Tag with \"Johnny\" in it).\n\nStep 5: Profit!\n\nMagma blocks can be placed around the monster spawner as a floor, allowing mobs to spawn and then killing them.\n\nItems can be collected via minecart with hopper running below the floor, or with water leading to hoppers, making the trap fully automatic.\n\nTraps that use unusual methods, such as huge pits, fall into this category.\n\nNote: Using a slab of cobble, planks, or sandstone in murder holes will prevent creepers and skeletons from seeing you, then you can retrieve items without breaking blocks, place the slab on top of where the mobs would usually stand.\n\nNote: Water mob elevators no longer work on zombies or skeletons, as they now walk along the bottom of water.\n\nThey will still rise up bubble columns created by soul sand, but the challenge is getting them to enter the column.\n\nFor this method, you must dig a pit that reaches far under the dungeon.\n\nDepending on the height (at least 23 blocks), the mob will die on impact, as long as there aren't any blocks of water at the bottom and the mob has weak enough or no armor.\n\nHowever, this method takes a long time to make and only works for monster spawners near or above the surface.\n\nAlternatively, you can build an elevator for the mobs using alternating water and signs to bring the mobs 23 or more blocks higher, and then drop them 23 or more blocks in order to kill them (or you can do 22 blocks if being used for an XP farm).\n\nKeep in mind that skeletons and zombies can randomly spawn with armor, which can be enchanted randomly.\n\nThis can be remedied by placing a platform of magma blocks at the bottom.\n\nFor this trap, you need to dig a large pit 22 blocks deep under the dungeon, or make a water elevator taking them upwards so you can stay near the monster monster spawner.\n\nGo to the bottom of the pit and place water in a fashion so that it should flow towards a wall.\n\nThen make a room where the water is flowing.\n\nThis is where you will stay while finishing off the mobs.\n\nMake the room so that it has a one-block hole where you can see the mob drop zone.\n\nHopefully, mobs should spawn, fall down the pit and survive with half a heart, get pushed towards you by the water current, and get killed by a single hit.\n\nIf you like, you can bring food along as your hunger will deplete over time.\n\nThis should provide normal as well as rare mob drops and experience levels, making it quite useful.\n\nAnother technique is to leave your player by the dungeon for a couple of hours, overnight is suggested, and there will be at least a hundred monsters waiting to be harvested.\n\nKeep in mind that the maxEntityCramming gamerule can limit the output.\n\nThis grinder does not work in 1.13+, since skeletons and zombies no longer swim.\n\nHowever, it is possible to build a similar grinder using soul sand block bubbles to bring mobs to the top of the water column (https://youtu.be/N5m2sReltMc).\n\nSee Tutorials/Drowned farming for an alternative simpler design Note, all dimensions are given the format: Horizontal x Vertical.\n\nThis method is an indirect hybrid of the aforementioned traps, utilizing both fall damage and mob control with water.\n\nIn the mob spawning room, dig 1 block down so that the monster spawner is at eye level, and place water blocks at two adjacent corners.\n\nOn the wall opposite of the two water blocks, dig a 1\u00d72 hole for three blocks in the middle of the wall (allowing mobs to pass through).\n\nBegin digging upwards in a 1\u00d72 fashion for 24 blocks.\n\nTo get up, place signs on the long-faced wall (your left/right) in a zig-zag pattern going up while placing water blocks in between the signs.\n\nThe first sign should be placed as furthest, lowest space possible.\n\nStop placing signs after the 23rd level.\n\nThe last water block should be against the wall furthest away from the mob monster spawner on the 24th level.\n\nOn the 25-24 block levels, dig a 1\u00d72 hole for seven blocks in the direction the mob monster spawner.\n\nOn the seventh block in, dig one block downwards.\n\nDig in the forward direction for eight more blocks (again, 1\u00d72).\n\nYou should notice the water block placed on the 24th level should stop where the path drops by one block.\n\nPlace a water block against the wall of the drop.\n\nNotice how this water block stops 1 block short of the path.\n\nDig further for two block and begin to dig downwards in a 1\u00d71 fashion for 22 blocks, Face the direction of the mob monster spawner and dig another 1\u00d72 hole one block deep.\n\nDig down one and fill the top level with one block so that you can only see through one block of the pit you just created (if you are using a skeleton monster spawner, you need to stand one block away from this hole so that the skeletons cannot shoot you).\n\nYou are now standing at the loot point.\n\nNow that the almost-dead mobs are depositing into your 1\u00d71 hole, simply attack them with any item to gain their loot and experience!\n\nYou may use TNT + water to do splash damage to kill all mobs at once at the risk of lag spikes.\n\nSplash potions of Healing also work, as they do damage to most hostile mobs.\n\nNote: you must have 2 block tall non-exploding mobs to do this or the mob either destroys or escapes from the trap.\n\nUseful tips on this design by Duck//Marvin: When you make the opening in the spawn chamber for the mobs to exit, make it 3 blocks high and place a sign or slab at the top.\n\nThis lets the mobs into the elevator more easily and prevents water spillage from the elevator.\n\nAlso, making the transport corridors at the top 3 blocks tall instead of 2 allows the mobs to be transported faster as they do not hit the ceiling when they try to swim and get stuck.\n\nAn alternative layout with a smaller footprint takes advantage of the fact that a player must be within 16 blocks of a monster spawner for it to activate, but that monster spawners only check 9 blocks vertically for spawned mobs.\n\nBuild the trap as above, except instead of being off to the side, the killing floor is 4-16 squares directly above the monster monster spawner.\n\nThis requires less material, less x,z space and less precision in construction, though is 3-15 blocks taller.\n\nTo construct the trap this way, build a 9\u00d75\u00d79 room around the monster monster spawner with flowing water leading the mobs into a corner.\n\nBuild a water ladder in this corner going 26-38 blocks upwards as measured from the top of the monster monster spawner.\n\nAt the top of the ladder, direct the mobs a couple blocks in any direction with water, and into a 22 block drop chute.\n\nAt the bottom of the drop chute, create a platform 1 block lower, with a 1x1 \"window\" into the chute through which you can strike the mobs safely from the platform.\n\nFirstly it should be noted that this was made with a zombie monster spawner in mind.\n\nBasically you just make a balcony of sorts and wail on the zombies as they approach you while being unable to hit you.\n\nSeal the zombie monster spawner in a 5\u00d75\u00d75 chamber, naturally, you want it to stay in the center of the chamber at the lowest height.\n\nOutside of the chamber make a platform that is 2 blocks high that surrounds the outer wall, and while standing on this platform, punch a wide hole in the corner of the chamber 1 block above the platform.\n\nRemove the corner block so you can stand in the corner while the zombies practically funnel toward you.\n\nThey'll be able to push you, but not hit you at all, so you're free to smack them on the head with your weapon of choice.\n\nNaturally the rotten meat they drop will remain inside the chamber, but the experience points will hover toward you.\n\nIf for some reason, the points end up too far just walk around the chamber to their nearest corner.\n\nOptional: lead some tamed wolves into the chamber before sealing it!\n\nPlace torches to turn off the monster spawner.\n\nPlace water in two corners.\n\nDig a tunnel where the water converges.\n\nDig the tunnel path until the water ends.\n\nArrange a barrier so that mobs don't make it past the end of the water.\n\nRecollect the torch and stand where the end of the tunnel is.\n\nIf done correctly you can slay the mobs and get experience and rare drops from mobs.\n\nThis type of monster spawner is made for Humanoid type monster monster spawners (skeletons, zombies, and in some cases zombie pigmen), but can be modified for a spider monster spawner.\n\nFirst disable the monster monster spawner and areas around it with Torches so Mobs do not spawn and disrupt the creation of the trap.\n\nNow make a room 17 blocks wide by 9 blocks long and anywhere from 4-7 blocks high, with the monster spawner being in the rough center and 1-2 blocks above the ground.\n\nNow dig out the bottom row 1 down everywhere except the center, which should be dug down around 7 blocks.\n\nPlace a water source block on each end of this dug out area and it should stop just before the center.\n\nNow place water source blocks at the top so that it should stop before running into the dug out area.\n\nRemove the torches so that the mobs start spawning, and go down so that you are at eye level with where the center area was dug down 7 blocks.\n\nMake it so you can only see the mobs feet on one side, and on the other use a slab to make it so you can just see the top of its head.\n\nThis allows good use of both swords And bows (Also, some servers give bonus damage for Headshots).\n\nThis type of trap allows a one-hit kill on zombies and skeletons; however, the drops and the experience are farther away.\n\nExpand the floor so that there are two blocks of air below the monster spawner, and the walls so that the room is 9\u00d79.\n\nDig four blocks down on the block directly below the monster spawner and place water source blocks in each corner.\n\nDig one block north and two blocks south (three blocks tall for each direction), then go towards the south end, and make an access shaft.\n\nAt the north end, dig a shaft, 30 blocks deep, and three pointing west.\n\nAt the bottom, make a small room and light it up.\n\nPlace ladders on the west end, and make an access shaft to the top of the ladders.\n\nPlace blocks to the east of the ladders, except for the bottom few.\n\nPlace two bottom slabs on the block south to that directly below the monster spawner, and place trapdoors liberally (zombies and skeletons can climb ladders).\n\nOptionally, place hoppers at the bottom of the collection room.\n\nTo maintain maximum efficiency a trap must take on an increased complexity in keeping mobs separated or moving quickly when dealing with multiple monster spawners of the same species.\n\nMinecraft first checks within the 17 wide by 17 long by 9 high area with the monster spawner in the center (or 8\u00d78\u00d74 radius from the monster spawner) for mobs of the same species as the monster spawner.\n\nIf there are fewer than 6 mobs of the same species in the checking zone, it will spawn a mob within half the distance of the checking radius.\n\nThis means that with two monster spawners of the same species near to each other, there will be a zone that mobs will count for both monster spawners and severely impact the spawn rates.\n\nIt would be a wise idea to work out where these checking zones overlap and ensure that mobs being funneled to the trap do not enter that zone and/or leave the overlapped/checking area as quickly as possible to maintain peak monster monster spawner output.\n\n\"EXP farm with Monster spawner Tutorial\" \"Simple Mob Trap\"",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Traps",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Traps",
    "content": "This list doesn't cover mob grinders, the killing mechanism in mob farms.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\n\u201c Oh, sorry buddy!\n\nYou just fell into one of my traps.\n\nBecause friendship is nice, I suppose, but tricking people is clearly so much better.\n\nI love spending my weekends throwing pals down pits and blowing up TNT in their once-trusting faces.\n\n\u201e \u2014 Chris Priestman [1] Traps are a common mechanism in multiplayer built by players to kill other players or mobs automatically.\n\nThe following is a list of basic traps with a short tutorial that often assumes the reader has a working understanding of the basic concepts required to build the trap.\n\nMost traps are considered to be mechanisms, though some are not classified as such.\n\nNote: this video is outdated.\n\nTraps are devices designed to trap or damage entities, often referred to as targets.\n\nTraps are often made up of 3 components: A lure, a trigger, and the damage source.\n\nIn a simple landmine, the lure could be a base behind the landmine, the trigger a pressure plate, the damage source TNT.\n\nNot all traps have a lure, they may rely on chance or something else to lure the target.\n\nFeel free to add any ideas of traps you have here.\n\nJust follow the style guide and everyone will have new strategies to remove their enemies.\n\nA list of components for a good trap can be seen below: These components are a trigger that allows the rest of the trap to work.\n\nPressure plates are commonly used to detect whether an entity or item presses on it.\n\nThere are 4 variants (viz.wooden pressure plate, stone pressure plate, light-weighted pressure plate, and heavily weighted pressure plate.) Wooden pressure plates measure all entities and give out maximum signal strength.\n\nThe most commonly used pressure plate.\n\nUseful if you want to detect anything including items being thrown.\n\nWorks best when paired with an observer.\n\nStone pressure plates measure only players and mobs and give out maximum signal strength.\n\nThe second most commonly used pressure plate.\n\nUseful if you want to detect only a player or mob.\n\nWorks best when paired with an observer.\n\nLight-weighted pressure plates measure all entities, and the strength increases as more entities are added.\n\nUseful if you want to detect a specific number of entities.\n\nWorks best when paired with an observer.\n\nHeavy-weighted pressure plates are similar to a light weighted pressure plate but they measure groups of 10 entities per redstone comparator output.\n\nObservers are most commonly used to detect whether a block state changes (ie: an ore trap).\n\nThey are useful if you want to kill someone destroying a block in your base, a TNT lighting, redstone getting activated, containers being opened, furnaces turning on or off, etc.\n\nString, when connected to a pair of tripwire hooks or an observer, can detect when a player/mob steps through it or breaks it.\n\nIt is also difficult to see.\n\nWhen a player/mob/item comes in contact with a string connected to 2 tripwire hooks, it will output a redstone signal.\n\nPros: Can detect all entities Wide range of detection Cons: Hooks can be seen easily when placed on a wall String connected to it can be broken with shears without outputting a signal When a button is pressed, it outputs a redstone signal.\n\nUseful for redstone control rooms.\n\nIt detects the 'time' of Minecraft day.\n\nIt can be right clicked to detect sun or moon.\n\nShadow affects this, however, so if you set it to detect sun, and it is in direct sunlight, a redstone signal will be produced, at a power level relating to the height of sun or moon.\n\nIf it was in shadow, it would not produce any signal, and vice-versa for moon mode.\n\nUseful for hourly traps and such, though redstone clocks are more precise but also expensive.\n\nIt has no effect on adjacent opaque blocks.\n\nThe lectern can hold books.\n\nIt emits a redstone signal power depending upon the page of the displayed book.\n\nUseful when you want to tempt someone with important information, and blow them up as soon as they start reading a particular page.\n\nThese components actually affect the target.\n\nOf course, that's obviously coming to your mind first.\n\nTNT traps are ubiquitous and common.\n\nMost like the landmine (involving a pressure plate and some TNT) are easy to make; others like the TNT floor house are harder and more expensive.\n\nTNT traps have many triggers; from pressure plates to observers to pistons to dispensers...and more!\n\nPistons are often used, for example, to push a player into lava, push someone into a pressure plate, push someone into a block and suffocate them, and more.\n\nThey are often used in some capture traps to continuously keep a player out of an area.\n\nDispensers can be used to shoot out deadly objects like Potions, Arrows, Tipped Arrows, Fire Charges, Lava, etc.\n\nDon't ever put diamonds in a dispenser unless you are trying to lure someone, or else they will just become rich off your trap Nether Portals can be used to make traps upon entering The Nether.\n\nThey pause chunk generation, witch means you light TNT in the Overworld over a Nether Portal, then light the portal.\n\nas long as there is no chunk generator (Machine That Uses A Minecart In A Nether Portal To Load Chunks) or players in the nether, you, upon entering the nether, will be blown up.\n\nMobs, like Zombies, Skeletons, Witch es, Ravagers, Creeper s, Iron Golem s, Zoglins, Vindicators, Piglin Brutes and Pufferfish can deal damage to players.\n\nTo prevent mobs inside of traps from despawning, one should use Name tags.\n\nIf you can't spawn the mob, you can use Boats in Minecarts to take 2 mobs at a time to your trap.\n\nEach mob has their own pros and cons: Zombies - Most common mob to obtain and quite flexible, but can be killed easily.\n\nBurns in sunlight.\n\nSkeletons - Ideal for long-range traps without hiding spots, like long hallways and corridors.\n\nSlow rate of fire and no melee damage makes them ineffective for smaller traps.\n\nBurns in sunlight.\n\nWitches - Splash potions are effective against weaker victims, and they have a large area of effect.\n\nSelf-healing ensures longevity.\n\nThe unpredictability and inconsistency with the types of potions thrown makes them ineffective at killing victims.\n\nRavagers - Powerful and deals significant knockback.\n\nThe large hitbox of the Ravager can make them difficult to contain.\n\nCreepers - Deals explosive damage.\n\nIn Survival, the difficulty of transporting them and the one-time use of Creepers makes them an awful choice compared to simple and effective TNT.\n\nCharged Creepers - Way better than normal Creepers.\n\nYou can use Boats in Minecarts to take 2 Creepers at a time to your trap.\n\nIron Golems - Powerful.\n\nCan be repaired/healed with iron ingots.\n\nOnly attacks if it is attacked first.\n\nHoglins/Zoglins - Powerful.\n\nAttack almost anything and everything they see.\n\nThey can be difficult to transport out of the Nether due to their fear of Nether Portals.\n\nVindicators - High damage output.\n\nAttack all mobs except ghasts and illagers if renamed to \"Johnny\".\n\nHas a short attack range.\n\nPiglin Brutes - Deal the same amount of damage as vindicators.\n\nConvert into a normal zombified piglins upon leaving the Nether.\n\nPufferfish - Moderate damage, inflicts poison.\n\nThey can be picked up in buckets and placed by dispensers.\n\nThe traps here primarily use TNT to cause harm to the target.\n\nWhen testing explosive traps it may be a good idea to use a different block such as the redstone lamp, which like TNT, is triggered by redstone but it is less likely to accidentally blow up prematurely.\n\nLecterns can hold books, therefore, you could give a hint to someone about some important info, and set it up so as soon as they reach the sixth page maybe, the doors close, and TNT blows up the place.\n\nDon't set it to explode at the first page, they would go through the first few pages cautiously, and then feel safe, only to find out while they are reading the most important page, TNT removes them from the Minecraft world.\n\nThis is a trap that can be used to catch someone while they are out adventuring.\n\nYou place TNT at various points around their house, prioritizing spots which are behind an input like a button or likely to be set alight by an unsuspecting player, like behind an empty fireplace.\n\nTo finish it all off, place a few pressure plates near their bed with TNT underneath.\n\nIf the player dies and respawns, they would spawn on top of the pads and cause an easy kill.\n\nKeep in mind that some servers would consider this sort of behavior cheating or griefing.\n\nIf you have enough TNT, a dispenser, and an input, it can't hurt to pump some TNT into the End Portal.\n\nThe TNT will go to the spawn point of the world and will be loaded, as the spawn chunks are always loaded, and will explode soon after.\n\nIf nobody is in the end, the first player enter the portal will make the chunks load, which will instantly kill that player.\n\nA better version of this is getting to build hight above the End Portal to drop a Dripstone into the portal.\n\nIt will instantly kill anyone who will try entering the End, even if they have full Netherite armor.\n\nThis landmine by itself is inefficient and non-lethal.\n\nIt damages the landscape and deals little if any damage to players.\n\nIt is easy to make by placing a pressure plate on a block and one or more TNT directly beneath.\n\nStepping on the pressure plate will ignite the TNT To make it more efficient, there are many variations players can use: If you want to protect the landscape, you can place 2 water sources at the bottom of the hole.\n\nPlace a slab at the bottom as sand/ gravel may quench the water source.\n\nThis method will reduce the dealt damage, however.\n\nThis is well disguised next to a door; the player may think it is to open the door.\n\nBy digging a pit underneath it, the player might fall into it.\n\nTry to camouflage the landmine by making it less noticeable, e.g.\n\ngrow tall grass around it.\n\nConcrete powder cannot be used in this design, the concrete powder will harden into concrete upon contacting water and quench the water source.\n\nSide view TNT, when activated normally, plays an audible hissing sound and waits for a few seconds before blowing up, which can give anyone plenty of time to escape a landmine placed on the ground.\n\nA much more dangerous landmine with instant activation can be built instead: Dig a 3x3x3 hole in the ground, jump in, and stand on a corner.\n\nOn the center, place a block of dirt and a rail on top of it.\n\nOn the rail, place a minecart with TNT.\n\nBe careful not to push it.\n\nDestroy the block under the rail to derail the minecart.\n\nThe minecart will fall one block lower, this won't really cause any damage unless you accidentally pushed the minecart.\n\nPut a dispenser with flint and steel above the minecart like shown.\n\nSurround the minecart with TNT, cover it all up, and place a pressure plate on top.\n\nSide view Replace the wool with an end crystal, and put an arrow in the dispenser.\n\nwhen the dispenser is activated, it will shoot an arrow and blow up the crystal, leaving no time to escape.\n\nThe Youtuber Squibbles made a great video about a way better version of this trap (albeit it's harder to build) Top view for the Sculk Proximity Instant Landmine.\n\nDesign by DialgaTheTimeLord, aka LeopardBunny.\n\nhttps://minecraft.fandom.com/wiki/File:Minecraft_21w06a_Sculk_Proximity_Mine_small.mp4 Sculk Proximity Instant Landmine construction process.\n\nThis one's a bit tricky to build.\n\nIt requires both precise placement of TNT minecarts and extreme care not to set the trap off yourself.\n\nDo everything in order and make liberal use of the Sneak key and you'll be fine.\n\nProbably.\n\nTest it several times in Creative Mode just to be sure.\n\nThe top row has an empty space labeled with ESC.\n\nThis is your escape route.\n\nFirst dig a hole 2\u00d72 wide and 3 deep.\n\nSeal off the top with matching blocks.\n\nSurround the hole with a 2 block high wall of wool, leaving a Steve-sized gap for your escape route.\n\nDo not fill it back in yet.\n\nIn the spot where you left the gap, dig out an escape route leading directly away from the mine.\n\nReturn to your wool pit.\n\nPlace two powered rails (keeping them unpowered) along the wall opposite of your escape route (you do NOT want the TNT carts in the way of your escape).\n\nHere's where things start to get tricky.\n\nYou need to place at least two TNT carts on the same powered rail.\n\nThe trap will not work otherwise.\n\nPlacing the first will of course be easy.\n\nFor subsequent carts, you will need to right click carefully on the side hitbox of the track that the first cart is on.\n\nThe top will not work, as the first cart is in the way.\n\nYou'll know it worked if the minecart's shadow gets noticeably darker, or know, if your hand empties.\n\nOnce you find the right spot, feel free to place as many TNT carts as you care to sacrifice.\n\nMore carts means a bigger, more powerful explosion, and significantly less chance of escaping the blast (though it's not much of a chance to begin with).\n\nJust make sure not to bump the carts.\n\nNow is where things go from tricky to deadly.\n\nOne wrong move will make you the victim of your own trap.\n\nThis is when you hold Shift like your life depends on it, because it absolutely does.\n\nWhile holding Shift and not letting go, place the sculk sensor, either adjacent to or in front of your escape hole.\n\nNow, still holding Shift, sneak your way into your escape hole.\n\nThis is where you finally close the gap in the Steve-sized wool wall hole, making sure there is no hole for the Sculk Sensor to hear you through.\n\nYou should be safe by this point, but if you want to be extra careful, continue sneaking as you move away from your newly planted mine.\n\nNot that you can waterlog the Sculk Sensor to make it silent (so the target can't hear it).\n\nThat should be it!\n\nJust whatever you do, do NOT step over your landmine.\n\nYou will almost certainly die.\n\nSave the dying for the enemy.\n\nThe tree trap When the player chops down the tree, the TNT will be lit by the observer.\n\nThe observer can be replaced by a lever and a NOT Gate if you are short on quartz.\n\nhttps://minecraft.fandom.com/wiki/File:How_to_Build_an_Exploding_Tree_Trap_-_Minecraft_Tutorial.mp4 How to Build an Exploding Tree Trap by Bugo03.\n\nUses a NOT Gate for all of you who are low on quartz.\n\nReplace the slab with cake.\n\nReplace the dirt with any block.\n\nYou eat the cake, you explode!\n\nIn this trap when you eat the cake, the observer senses the update in the cake and ignites the TNT.\n\n1) Dig down 2 blocks.\n\n2) Place TNT at the bottom.\n\n3) On top of the TNT place an observer pointing up.\n\n4) On top of the observer place cake.\n\nReplace sand with sandstone.\n\nCreate BUD underneath the pressure plate in a desert temple.\n\nIf a player should try to disarm it, KABOOM!\n\nNote that if you use the observer, players might be able to detect it, since the pressure plate won't cover it completely.\n\nTNT field trap This trap is the opposite of a TNT door trap: The TNT is obvious, while the house is hidden.\n\nMake a field of TNT extending about 5 blocks into the ground.\n\nPlace signs all over the field saying: \"Find my hidden house.\" It lures people in twice: the TNT danger, and the hidden house challenge.\n\nThe problem is that there is no house!\n\nBeneath the field are pressure plates which ignite the TNT, leaving no time to escape, as you are in a field of TNT 5 blocks under.\n\nBlow up a fake base and kill assassins attacking you!\n\n(this can also be used for demolition) Build a base, preferably a half-hidden one, as not to create suspicion.\n\nMake the floor with TNT and put some carpet on it to look like a normal decorated house.\n\nHave an iron door as the entrance, with a pressure plate to open it.\n\nRedirect the pressure plate towards the base.\n\nBelow, place a block of TNT, but an extra step you can take is to have a circuit which delays the fuse using repeaters so the target won't retreat as soon as they hear the hisss of the TNT.\n\nIf any enemy, mob or player steps on the pressure plate (potential griefers included), they will be blown sky-high!\n\nGriefers love blowing and burning people's houses up.\n\nThis trap turns the grief onto the griefer.\n\nMake a decoy house out of wood and possibly wool.\n\nFill the area under it with TNT and make some \"rays\" of TNT extend from the house.\n\nIf a griefer happens to burn the house down, they will probably get a bit more of a bang than they expected!\n\nIf you use this for demolition (that is, if you have any fragile buildings to be destroyed), you can set it and wait for somebody else to do the work for you by setting it off unknowingly.\n\nThe \"C4 trap\" is a vertical or horizontal stack of TNT with a button wired to a dispenser with a fire charge in it.\n\nThe dispenser is placed one block above or below the stack (vertical) or one block next to the stack (horizontal).\n\nThis usually works better for demolition than for a trap.\n\nIf you want to use it as a trap, wire a pressure plate to the dispenser.\n\nThis works similarly to a flaming arrow hitting a stack of TNT from above.\n\nThis works better than a dispenser shooting TNT, because the \"C4\" stays in one place.\n\nAlso, if only two TNT blocks are used, it works well as a disposable cannon, even better on obsidian blocks, but not in a tube.\n\nAll evidence of the trap is usually destroyed.\n\nNote: C4 trap from below does not work well.\n\nWant a big unexpected boom?\n\nHave a bunch of spare furnaces?\n\nYou need a Redstone comparator, TNT, a furnace and something to smelt.\n\nPlace the furnace, and then put the comparator directly behind it.\n\nThen, just put the TNT behind the comparator and wait till someone smelts something!\n\nAn alternative is to put coal, iron, or food in a furnace and add a redstone comparator behind linked to a not gate.\n\nUse the not gate to trigger some tnt.\n\nAlso hide observers under the furnace so people can't break it.\n\nLike to kill your fellow players with protection IV armor?\n\nYou need many harming II arrows, a bow, soul sand, and water.\n\nUse the water and soul sand to make a bubble column, then shoot arrows into the pit until you run out.\n\nIt will instantly kill anyone that falls in!\n\nJust don't fall in yourself.\n\nThese traps primarily use fall damage to harm the target.\n\nSome minor variation can make a simple pit much more deadly.\n\nSand trap When the target walks on top of the trap, break the bottom block of sand.\n\nIt is a good idea to disguise the trap by making a house on top of the sand.\n\nIf you do this, you will probably want to put in carpet so as to not make it so obvious.\n\nSome variations: You may be able to get the target to break the sand themselves by making the bottom block valuable.\n\nYou can automate the trap by attaching a piston to the bottom block of sand.\n\nIf you want to retract the piston when a pressure plate is pressed, use a NOT Gate.\n\nYou could also use an observer and a piece of bait to lure in any players wanting a piece of that [whatever valuable block you placed].\n\nConstruct a hallway.\n\nA diagonal hallway works best.\n\nFence posts should be underneath the path and you should drop the sand or gravel for the floor on the fences.\n\nBelow the fences, you can have a pit.\n\nThis works because when a gravity-affected block falls on a fence post, the block stays as an entity.\n\nAs a result, a player walking between the fence posts will fall through the sand entities, causing them to plummet.\n\nDiagonal hallways make it more likely to fall through the sand without landing safely on a fence post.\n\nKeep in mind that the sand is going to look half a block higher than a normal block, but this can easily be covered up.\n\nThe best part: it does not need to be reset!\n\nDig a 2x2 hole until you reach a drop which would ruin any player's day.\n\nPlace 4 hoppers, one per block on the 2x2 hole, pointing into chests.\n\nBuild some kind of hall to access the chests below.\n\nThis can work in conjunction with other traps.\n\nThe player drops down into the pit, and at the bottom, they die and their items are sucked into the hoppers for you to use.\n\nA painting trap.\n\nPlace painting(s) instead of vines.\n\nThis trap is easy to make.\n\nIt hides a secret passage behind a painting.\n\nThe target may unwittingly decide to check for a secret passage behind the painting.\n\nBig mistake.\n\nDig a 16\u00d716 hole, preferably in line with real chunks, at least 20 blocks deep.\n\nSome inexperienced players may think it is a chunk error and walk-in.\n\nFake water, fake secret passage.\n\nDig a hole (2\u00d72 works best) at least 30 blocks deep, the deeper the better.\n\nAt the bottom place a block of lapis lazuli, a block of blue wool or a block of blue stained glass.\n\nAdd a false corridor at the bottom to make it look like it goes somewhere.\n\nWhen an unsuspecting player comes across the hole, they may think that there is water at the bottom, jump down and die.\n\nExperienced players are less likely to fall for this particular trap but it generally works quite well.\n\nYou can also place real water instead of blocks if you're wearing frost walker boots, just go down there, hide in the fake secret passage and sneak to hide nametag.\n\nUse F5 to see if a player is coming.\n\nIf someone falls down, quickly move to freeze the water.\n\nSnowball trap.\n\nLoad a dispenser with snowballs (or other knockback item), and connect it to a pressure plate.\n\nWhen the target walks across the plate, the dispenser, if aimed correctly, shoots a snowball and knocks the target into the pit.\n\nYou can also replace the dispenser with a piston.\n\nAutomatic piston pitfall Place the piston so it pushes the block the signs are on.\n\nThe player can make up to twelve rows using one piston.\n\nMake sure there is a block of empty space at the end of where the piston pushes.\n\nConnect the piston to a trigger, such a pressure plate or lever, and when the piston moves it should break the signs and cause the sand to fall along with the target.\n\nIt is also possible to do this by pushing a line of blocks with torches or buttons on them, which may be slightly cheaper.\n\nAlternatively, use a sticky piston connected to a NOT gate which retracts a block with a sign on it, which allows the player to use more than 12 rows.\n\nFake water elevator Real water elevator Make what is shown in the schematic, a water elevator with water only on the top block.\n\nMake sure the hole is 30-40 blocks deep, which is enough to kill the player.\n\nIt could help to place a lure sign near the 'elevator' saying something like \"Do not enter!\" You can also make the signs' text something like a floor countdown like \"35\", \"34\", \"33\", etc.\n\nso players are more likely to fall for the trap.\n\nIf they want, you can place hoppers with chests so you can gather the loot from the victims, but if they really want the drops, they will need a secret passage to the bottom of the pit for collection.\n\nA false-floor trap is a variation of a pitfall trap.\n\nIt works by creating a concealed safe route through the pitfall to allow authorized players to pass, while catching unauthorized players or mobs and killing them.\n\nIt generally works best when there is no way around, forcing the player to pass through the trap.\n\nDig a pit.\n\nThe deeper and longer the better.\n\nPlace TNT to build a bridge across the pit.\n\nIt should be at least 2 blocks wide, preferably more as someone could cheat otherwise.\n\nReplace some of the TNT with torches.\n\nRead the next step to understand which ones to replace.\n\nOn top of the torches, place sand or gravel.\n\nTry to get across the bridge now by only stepping on the sand.\n\nMake sure you can do it, because it will be even harder at the end as you must stay off the edges of the sand.\n\nOnce you have picked a satisfactory path, cover up the TNT with the same blocks as before.\n\nPlace pressure plates over all the sand/gravel.\n\nIf anyone steps on one of the pressure plates with TNT under it, the TNT will explode causing the whole bridge to collapse!\n\nNote: You will need to have something under the TNT, perhaps more TNT or something easily destructible to make sure the TNT doesn't fall and fail to ignite the rest of the TNT.\n\nA false door pit utilises Redstone torches and pressure plated to drop an unsuspecting player Make a regular doorway.\n\nThe ground blocks should be some form of stone or wood to disguise the pressure plates.\n\nMake sure that the door is not on the same block as directly in front of it.\n\nDig a 2x1 hole in front of the door.\n\nIf the door is placed correctly, there should be no room in front of the door.\n\nTo the side of the door, dig a 4x2x3 hole.\n\nAt the top of the pit, place a sticky piston with the ground block in front of it.\n\nThe piston should not cover up the pit until activated.\n\nRepeat at the bottom of the pit.\n\nIn between the two pistons, place any block and place a Redstone torch facing away from the pistons.\n\nPlace a single piece of Redstone below the torch.\n\nIf possible, place a regular piston between the two pistons' arms facing towards the block with the torch on it.\n\n8.\n\nCover up the pit with ground blocks and place the pressure plates!\n\nSome parts of the trap may still be visible, you can cover these up with walls.\n\nWater traps use water to suffocate, trap, or push the target.\n\nNone of these traps will work on zombies, as they will turn into drowned after drowning, instead of dying.\n\nPlayers who use potions of water breathing will also be unaffected.\n\nCobblestone can be swapped for obsidian Make a water elevator using soul sand bubble column, but without an exit at the top.\n\nThe column will force the unfortunate player upward, where they will be trapped against the ceiling, unable to break their way out because of the fact that blocks break much slower underwater.\n\nCobblestone can be swapped for Obsidian.\n\nThis can also be used reversely, with Magma Blocks, taking advantage of the fact players cannot swim upwards easily.\n\nIn both cases, the players may not drown since they're in a bubble column, or you could make it more dangerous and put a sign with lava on the top but make sure to not have the blocks the lava is touching or is around is not flammable as it will burn.\n\nA way better version of this is having the Soul Sand switch with Magma Blocks using Pistons, a redstone clock, and a NOT Gate (aka a Redstone Torch).\n\nA trap made with water and dirt which can kill any mob except zombies.\n\nCreate a water current that drags the mobs down under a solid block.\n\nThe current will hold the mobs under until they drown.\n\nThe loot from the mobs will float, making the collection hard.\n\nIf you use this trap to kill zombies, they won't die, but will turn into drowned instead.\n\nThis trap will also not work on skeletons.\n\nThrough clever use of magma blocks, you can pull the target down into water.\n\nIt should be noted that it's possible to breathe while inside a bubble column, so this trap is not useful for drowning players.\n\nDig a 1 block wide, 1 block long, 2 block deep pit with a magma block floor.\n\nReplace the 4 adjacent blocks to the air block at the bottom with trapdoors (make sure they open towards the magma so the pufferfish don't escape and die) and open them, then put a pufferfish in each one.\n\nFill the pot with water, and (optional) add an open trapdoor in the hole, which mob Ai sees as a solid block.\n\nThe magma pulls it down and causes fire damage, while the pufferfish poison and damage the mob/player who fell in or was knocked in.\n\nNote: This could be disguised as an elevator to a secret by putting the magma further down.\n\nResource requirements: 1 magma block, 4 buckets of pufferfish, 4 trapdoors (any), and 2 water buckets.\n\nLava traps usually use lava to burn the target, or distract them for an easier kill.\n\nNote that most of these traps will destroy the loot.\n\nA lava staircase trap This trap can be handy for players who want to deal with assailants.\n\nThe player should lure the target into the staircase for this trap to be most effective.\n\nDig a standard staircase down a way.\n\nThe tighter the space available the better.\n\nAfter a certain distance, place a stone pressure plate in the staircase.\n\nIt's suggested to place it so it blends in.\n\nIn the schematic, a wooden pressure plate is used for visibility.\n\nPlace redstone dust in an upward trail for a certain distance.\n\nMake sure it does not look different from any other part of the staircase.\n\nConnect the dust to a dispenser and put a lava bucket inside.\n\nWhen the target steps on the pressure plate, it will be trapped by the lava running down the staircase.\n\nEven if they have Fire Resistance, it will take a long time to wade back up.\n\nThis trap can be expanded to make a handy escape mechanism.\n\nIf you place the pressure plate on the upward side of the dispenser, the lava will flow down onto anyone chasing you.\n\nYou could also make a hidden escape at the bottom.\n\nJust make sure you have a button to remove the lava.\n\nWith some clever piston work, the entire trap could be concealed except the pressure plate.\n\nBe wary of stepping on the trap yourself or placing the pressure plate in the wrong location.\n\nThere are many variations of this trap, so don't be scared to alter elements of it, especially concerning the direction (descending or ascending), who steps on the trap (you or assailant) and more.\n\nChest trap Build 2 rows of sticky pistons such that are facing each other and the rows are 4 blocks apart.\n\nAttach solid blocks to the rows of sticky pistons.\n\nLink the rows of pistons to redstone torches.\n\nAttach the trapped chest to the Redstone torches.\n\nDig a hole below the sticky pistons and fill it with lava.\n\nDecorate the area around the trapped chest to attract players!\n\nMake a 3x3 pit at least 4 blocks deep.\n\nPlace lava at the top, ladders in the middle, and water at the bottom.\n\nIf you get mobs to go into the trap, they will burn in the lava and their drops should go into the water.\n\nMake a house, and right inside the front door make a pit with lava.\n\nMost players will likely notice the trap and avoid it, so it works only on really careless players.\n\nIf the target should wander onto the pressure plate, good luck getting off!\n\nAn example of a trapdoor lava pit.\n\nMake a stone room.\n\nPlace a pressure plate in the room.\n\nConnect the plate to a dispenser with lava in it on the ceiling.\n\nThese traps don't actually kill the target.\n\nInstead another trap is often used, or the player can come later to kill captured mobs.\n\nPlace a pressure plate on a piece of 3 by 3 flat land.\n\nPlace 4 iron doors in a way that when you step on the pressure plate, the doors will close, revoking your chance to escape.\n\nPlace a ceiling that is either blast resistant or unbreakable.\n\nAlso have an observer under the pressure plate that connects to some TNT so that when a player tries to escape, they will get blown up.\n\nThis not only traps the player, but it also kills the player if they try to escape.\n\nYou can also replace the observer with a block that blends in with the terrain so that they cannot see the TNT.\n\nThis might work on only inexperienced players because experienced players can use the parts that are shown to think of what might happen to them if they went in.\n\nYou may also have a bit like having a dropper that throws out diamonds to lure them over to the trap.\n\nPiston trap This trap is best for 2-tall tunnels, perhaps inside a friend\u2019s mine.\n\nMake sure there is a roof over it, so when the target hits the pressure plate, it cannot escape.\n\nWhen the pressure plate is stepped on, two pistons push up.\n\nNote that players will easily be able to break blocks and escape so you probably will want to combine this with another trap.\n\nYouTube Video (view on YouTube) This is a simple and rather obvious trap that is made by putting a pressure plate in the middle of 4 open iron doors so that the target is trapped inside when they enter.\n\nIf using this trap against mobs such as skeletons, you don\u2019t have to use iron doors.\n\nDig a 1-block deep pit at least 5x5 blocks.\n\nPlace fences on the inside edge.\n\nSince fences count as one and one half blocks in height, mobs can walk in, but cannot jump out.\n\nAlternatively, line the outside with half-slabs.\n\nThis can also be combined with a mob grinder, via water currents leading to it.\n\nZombies and Skeletons will take damage from sunlight during the day if the pit is uncovered, making this an effective way to sort out creepers.\n\nThis design does not capture spiders.\n\nThis trap is designed to trap skeletons and zombies, not to kill them!\n\nDig out a 5x5 square.\n\nDig a 3x3 square 2 layers deep in the center.\n\nPlace water in each of the corners and in the middle of each side on the top, where the water isn't flowing along the top.\n\nThis simple trap targets slimes.\n\nDig a 4x4 hole three blocks deep.\n\nFill the bottom layer with water, so that it is all still water on the bottom.\n\nWhen a slime of any size wanders around, it may fall into the hole.\n\nSince slimes cannot jump in water, it will not be able to escape.\n\nYou can come by later and kill all the slimes.\n\nIf you are not interested in the drops, just leave them into lower slime population.\n\nThis trap is best on superflat survival worlds where slimes spawn frequently.\n\nIn that case, water can be obtained in villages.\n\nStep 1: Dig down an x/1<y/z (However wide and long you want, a minimum of 2 blocks deep) hole with soul sand on the bottom Step 2: Fill it with water that goes up to 1 block below ground level, make sure bubble columns are made Step 3/4: Fill in the area at ground level with cobwebs* Step 3/4: Place sand in the bubble columns* Step 5: Knock someone in!\n\nExplanation: The bubble columns keep the sand on the same level as the cobwebs, so it just looks like slightly darker sand (entity and block shading are different) but sand entities don't collide with players or mobs, so you get stuck in the cobwebs and you need to use a sword or shears to break them, and you have to hit through the sand entities.\n\nYou could also break a block at the edge of the hole.\n\nNOTE: Only works on BE, in Java the sand will break after several seconds.\n\n*You can do step 4 before 3, or vice versa, so they're 3/4 This trap is extremely expensive to construct.\n\nThis trap is intended to work on players, and requires a secondary trap to initiate.\n\nLocate a location in the overworld at bedrock level in which a 1x1x2 hole exists.\n\nIf a player were to jump into said hole, they should see a block of bedrock directly in front of their face on all four sides.\n\nDig a vertical, 1x1 shaft all the way to the surface and construct a secondary trap there.\n\nThe secondary trap must be able to force the target into the 1x1 shaft.\n\nApproximately 10-15 blocks above bedrock, place a pair of tripwire hooks and string so that mobs that fall down the 1x1 shaft will trigger the tripwire.\n\nWire the Tripwire setup down to bedrock level by any means necessary, but ideally with as little delay as possible.\n\nPlace a Block of Netherite on top of one of the four bedrock blocks surrounding the hole.\n\nPlace a second Block of Netherite on top of another one of the four bedrock blocks surrounding the hole, but not directly across from the Block of Netherite placed in Step 5.\n\nPlace a piston adjacent to and facing towards the Block of Netherite placed in Step 5.\n\nThe piston must face towards the hole.\n\nPlace a piston adjacent to and facing towards the Block of Netherite placed in Step 6.\n\nThe piston must face towards the hole.\n\nPlace a disposable block opposite to the Block of Netherite placed in Step 5.\n\nPlace a piston adjacent to and facing towards the disposable block placed in Step 9.\n\nThe piston must face towards the hole.\n\nRemove the disposable block placed in Step 9.\n\nUsing redstone dust and redstone repeaters, separate the redstone line coming from the Tripwire placed in Step 3 into two repeaters.\n\nSet one to 1 tick, the other to 4 ticks.\n\nWire the redstone line from the 1-tick repeater directly into the piston placed in Step 8.\n\nWire the redstone line from the 4-tick repeater into a pulse shortener to reduce it to a 1-tick signal.\n\nConstruct a basic repeater clock, composed of 2 1-tick repeaters wired into each other.\n\nWire the pulse shortener to the repeater clock.\n\nWire one end of the repeater clock to the piston placed in Step 7.\n\nWire the other end of the repeater clock to the piston placed in Step 10.\n\nPlace a Cobweb on the bottom of the hole to prevent the target from dying to fall damage.\n\nShould the trap be triggered, the following sequence of events will occur: Target springs secondary trap and is forced into 1x1 shaft.\n\nTarget triggers tripwire whilst falling down shaft.\n\nTarget hits cobweb at bottom.\n\nPiston placed in Step 8 triggers, pushing Block of Netherite directly above hole.\n\nRepeater clock triggered, causing pistons placed in Steps 7 and 10 to repeatedly shift the Blocks of Netherite back and forth, preventing them from being dug out.\n\nBlocks of Netherite are shifted at an interval of time that is shorter than the amount of time needed to break a Block of Netherite by conventional means such as by pickaxe.\n\nTarget is contained within the trap until trap is disabled or target dies (or remains trapped indefinetly if difficulty settings forbid death by hunger and target has no other means of commiting suicide (Ender pearls, Potions etc.)).\n\n(Actually, this trap is escapable, you can either just mine the Netherite block (yes you can, but this can be disabled by placing another Block Of Netherite above the sliding ones), or you can place a ladder on the top block of the trap you're in and throw an Ender Pearl at the ladder's hitbox top.) These traps use pistons to harm the target.\n\nA piston suffocation trap This is ideal at the end of a water flow mob grinder as it minimizes drop losses.\n\nThe design can be expanded to make a long row.\n\nA simple honeycomb trap.\n\nReplace the wool with a honeycomb block.\n\nConnect two sticky pistons to a clock circuit so that they rapidly push a honeycomb block back and forth.\n\nIf done correctly a player fallen into this trap will be unable to get out.\n\nHoneycomb block was chosen because tools do not affect the breaking speed, even with enchantments.\n\nAlternatively, a Block of Netherite could be used instead, as while Pickaxes break it faster, it still takes so long to break that even an Efficiency V Netherite Pickaxe cannot break it in time before it gets moved.\n\nDig down two blocks in a flat area and put a piston at the bottom.\n\nDig down two blocks around the piston and put redstone dust at the bottom.\n\nDig down two blocks around the redstone and put pistons at the bottom.\n\nCover everything up with the block(s) of your choice.\n\nPlace pressure plates in a ring around the center block, above the redstone.\n\nPut a cake on top of the center piston.\n\nAbove the outer ring of pistons, place blocks in the air so there is room to walk under if the pistons are retracted.\n\nIf the target moves too near to the cake, the pistons will trap them and destroy the cake.\n\nThis device uses pistons to push entities into a pit.\n\nYouTube Video (view on YouTube) These traps require the player to manually trigger the trap, or perhaps even be the trap.\n\nAsk someone if they could dig down at a spot, perhaps because you lost diamonds there.\n\nWhen they get far enough, cover them with sand or gravel.\n\nYou can also use lava for a more dramatic death, however, this will destroy their drops as well and won't work if they have a source of Fire Resistance.\n\nThis will probably only work on inexperienced players.\n\nMake a tower that is at least three blocks high so it will be seen from a distance.\n\nThis will work best when built in a flat area such as plains or desert.\n\nThe tower will act as a bait for this trap.\n\nAround the tower, dig a pit at least three blocks deep.\n\nIf you want this trap to be fully automatic, dig the pit at least 30 blocks deep.\n\nWhen the target falls in the pit, drop gravel on the target.\n\nIf you dug the pit at least 30 blocks deep, this isn't necessary, because most players will die from fall damage anyway.\n\nIf done correctly, the gravel blocks should fall on your target's head, thus trapping or killing him.\n\nHence the name facebreaker.\n\nMake sure not to take too long or else the target may escape jumping off the gravel or placing blocks.\n\nFor a fully automated version, replace the top TNT with an observer.\n\nMake a tall watchtower.\n\nAt the top out of sight, put a bunch of TNT.\n\nMake a vertical redstone path to the TNT with a lever to activate it.\n\nPut a lure at the top, and ask someone to go get it.\n\nWhen they get to the top, pull the lever.\n\nNote: This trap needs to be built on an already existing ender pearl \"stasis chamber\" where a player throws an ender pearl in and it teleports them back if the chamber is turned off, or a player enters it 1: Throw in a lot of splash potions of various negative effects.\n\nMake sure they don't shatter.\n\n2: Trigger the ender pearl, teleporting the player who threw it into the splash potions, which shatter, possibly killing them The traps here do not yet fit into any of the other categories.\n\nThe spike trap.\n\nMaterials: a dispenser, a pressure plate and any type of arrows.\n\nDig a 1x1x1 hole.\n\nPlace a dispenser facing up in the hole and fill it with arrows.\n\nPlace a stone pressure plate on top of the dispenser.\n\nIf the target steps onto the pressure plate, they will get shot by an arrow.\n\nThis trap is not lethal, except to players or mobs with low health.\n\nIt could be made to be more of an annoyance if you replace the arrows with tipped arrows with potions such as Slowness, Poison, Weakness, or even fire charge to inflict fire damage.\n\nThe slow monologue trap.\n\nUse shears to collect spider webs.\n\nThen dig a 3 block deep hole placing lava at the bottom and cobwebs on the top layer.\n\nAnyone not watching their step could get caught in the web and slowly fall to their death, allowing you to get a few dramatic words in as they die.\n\n(experienced players will be able to get out of this by mining the cobweb, and quickly placing a block in the lava) There is a way to 'store' fall damage in a minecart and later have someone take that damage even though they don't actually fall a distance that would make them take damage.\n\nYou can also search up for a video on how to do this.\n\nThis trap will probably involve a trip to the Nether.\n\nAfter gathering a fair amount of magma blocks, make a room.\n\nUse the magma blocks you have gathered to make the floor of the room, and cover ALL the magma blocks with carpets.\n\nWhen the target walks on to the carpet, they will take damage from the hidden magma blocks, often wondering and unable to figure out where the damage is coming from.\n\nIf they don't figure out the trap soon enough, they will eventually die or lose a lot of health from fire damage.\n\nOne alternative is to make the entrance to the Magma Room two iron doors with pressure plates on the outside but not on the inside, potentially trapping the target inside to burn.\n\nThis trap could also be a potential mob farm.\n\nWhen the mob is killed by the fire damage, you can enter the room, most likely by a secret entrance, and by sneaking or wearing Frost Walker boots, claim the mob loot and go back out without taking any damage at all.\n\nNote: This trap will not work on all types of Nether mobs, as they are immune to all kinds of fire damage.\n\nNote: This only works pre 1.16.\n\nPlace two iron doors sideways with redstone torches under them so they stay shut.\n\nSet up two pressure plates in front of the doors.\n\nThe plates shouldn't do anything yet.\n\nRun redstone dust from underneath the plates onto the roof of your porch to trigger two pistons.\n\nPut an anvil on each extended piston arm, and make sure there is a hole through the porch roof down to the entrance where the target stands.\n\nWhen the target stands on the pressure plates, the doors won't open and while they are confused the anvils will fall on them.\n\nThey will either be killed or if the anvils don't fall from high enough they get injured.\n\nThis trap is useful to stop thieves from stealing valuable goods, and exploits the fact that people don't look up.\n\nCommand mine.\n\nSick of rebuilding land mines that don't even kill the target?\n\nReplace the TNT with a command block with the command ' /kill @e[distance=..3] ' and the command block will instantly kill any entity that touches the trigger!\n\nIf you use a repeating command block instead of an impulse command block and set \"needs redstone\" to \"always active\", you don't need a pressure plate.\n\nThis trap may be of use only in Creative mode, though.\n\n(you can also use the /summon lightning_bolt command) A simple arrow dispenser By connecting this to a trigger, you can rapidly fire arrows at the target.\n\nIt is recommended to place this trap in a 1-wide 2 tall tunnel so there is less room to run.\n\nYou can either place this in the side of the tunnel or shooting down the tunnel.\n\nSome variations: Place lava in front of the dispenser to catch the target on fire.\n\nYou can adjust the repeater, which will change the speed.\n\nYou can also completely change the clock if you don't have quartz.\n\nYou could use this to knock the target into a pit.\n\nAttach this to a RS-Latch to keep it on until a button is pressed.\n\nUse tipped arrows with negative effects to make the trap more dangerous.\n\nDig a 2-wide trench down 1 block deep on one side, 3 or more on the other.\n\nPlace signs on the deeper side at the same height as the shallow side.\n\nWandering mobs will not be afraid to try and walk on the signs.\n\nIf they do, they will get trapped.\n\nThis will not always work, so it is advised to make the deeper part wider.\n\nFind a cave spider monster spawner, or enable cheats and use / give to give yourself one.\n\nIt is recommended to place a torch to keep it from spawning.\n\nDig a pit under it.\n\nIt should be at least 5 blocks deep.\n\nPlace cobweb or something for the spiders to spawn on.\n\nBreak the torch and allow the pit to fill with spiders.\n\nYou need to be within 15 blocks for this to work.\n\nGet a player to go into the pit.\n\nSurround your base with a field of wither roses or sweet berry bushes, and leave a block-wide path leading to your base, or make a hidden underground tunnel leading to it.\n\nAny hostile mob that walks through the field takes significant damage, but unless you make the field large enough, this trap isn't fatal.\n\nThis trap works only on mobs and not on players, because players can disarm it quickly with just a water bucket.\n\nFor added effect, place cobwebs on top of the plants, and if you are using wither roses, plant them on soul sand.\n\nThis way, the mobs have to spend more time inside the trap, making it more fatal.\n\nBuild a really high staircase up into the sky.\n\nThe longer you build, the higher it is, the better.\n\nMake a hole into the staircase You can even make yourself look like a noob, which will also give you an advantage.\n\nWhen someone notices and walks up, due to the player's view, they will fall through the hole you create, resulting in the target falling to the ground.\n\nThis trap can even be effective with experienced players, if they don't look carefully.\n\nBuild a water elevator (using soul sand and water) At the top of the elevator, start building a fake base.\n\nDo not use any valuable material because unlike last trap, it will be destroyed completely (unless you want to).\n\nIn the fake base, connect two tripwire hooks together with string right in the top of the elevator.\n\nUsing redstone dust to lead around the base from the tripwire, then filling it with TNT.\n\nIf someone notice a base with a water elevator, they will sometimes attempt trying to go up.\n\nAfter they discovered the TNT behind those walls, they are likely to be gone.\n\nMake a somewhat small, square-ish room with a one way door and 2 block thick walls Make 1x1x1 holes in the walls Add trapdoors on each hole.\n\nMake sure that when closed they're on the upper half of a block, not on the bottom Connect the one way door to a redstone signal inverter that is triggered when walked through Then connect the signal inverter to the trapdoors, just make sure it allows for enough room for step 6* Fill each hole with a pufferfish.\n\nMake it look attractive to go into!\n\nIt's done!\n\nWhen in action, the player will be trapped and the pufferfish will inflate and bounce around the room.\n\n(Fun fact: Fish out of water bounce.\n\nA lot.) *You could probably use some hoppers attached to dispensers and fill the hoppers with buckets of pufferfish.\n\nThen, invert power to the dispenser.\n\nThis makes it a renewable trap!\n\nMake an observer clock (Face 2 observers at each other, which will produce a blinking redstone signal) Place a redstone comparator going out of the observer clock and use it to change it to subtract mode (the redstone torch on the end is ON) (this is for your on/off switch!) Add a trigger somewhere that goes into a signal inverter and into the SIDE of the comparator, make sure the signal that the comparator receives is equal to the observer's signal (signal strength of 15, like a redstone torch) Now back to the trap, send the comparator's output into a repeater and then a dispenser Now Cover it With Slabs.\n\nIf you've done it right, your trap should be nearly flush with the ground (1.5 blocks tall from the ground) and only show the dispenser Now fill up the dispenser with arrows.\n\nEggs, snowballs, bottles of enchanting, and potions fly straight up.\n\nArrows and fire charges are offset from the center, but fire charges don't come back down.\n\nIf you want to destroy something flammable in the sky, FIRE CHARGES (optional) Add a storage block with a hopper going into the dispenser.\n\nIf the dispenser is empty and getting refilled while the trap is active, it won't shoot as much (Constant fire while containing arrows, shoots twice and \"misses\" once (It's empty, so it makes the annoying TICK sound) while being refilled) Now maybe disguise it?\n\nIf you've done this right, it'll start raining arrows when someone activates the trigger.\n\nI recommend a flip flop before it activates, and a one time trigger, that way it starts constantly shooting arrows after being triggered.\n\nAs a last minute extra bit, if you can squeeze one in and a skeleton monster spawner's nearby, why not make the monster spawner an automatic farm and use an item elevator to bring arrows up to it?\n\nJust visit every now and then to refill it because of 1.16 mob despawning.\n\nThe traps here are most notable for their trigger and can be connected to many different mechanisms of harm.\n\nTrapped ore.\n\nReplace the cobblestone with ore.\n\nWhen someone mines the ore the TNT will explode!\n\nBe sure to place the torches before the TNT and to not place any TNT next to a lit torch.\n\nUse a piston to push a TNT next to a redstone torch when a block is mined.\n\nThe advantage of this method is that the trapped block does not need have wires right next to it and that it can cover a wider area.\n\nYouTube Video (view on YouTube) For a more expensive but instant explosion, place an observer behind the trapped ore and a dispenser behind the observer with an arrow inside facing away from the observer and place and end crystal where the dispenser is facing.\n\nPlace the observer before the dispenser and the ore before the observer.\n\nThe redstone mine.\n\nReplace the glowstone with redstone ore.\n\nInstead of a daylight sensor, you can also use an observer.\n\nThis trap is good because it is hard to detect.\n\nIf you build this above ground, it may seem somewhat out of place, so you should cover the redstone ore with carpet or build it underground.\n\nWhen the target walks on the redstone, it lights up, triggering the TNT.\n\nA similar trap is achieved by putting a valuable block that the player may want to mine in place of the redstone ore.\n\nWhen the player breaks the block, the daylight sensor activates, provided there's a light source or clear air above it.\n\nThe furnace trap Normally people would expect only chests to explode, so this trigger will surprise them as soon as they loot your furnace.\n\nYou can replace the furnace with any other container for the same effect.\n\nFill a furnace with coal, iron or food.\n\nPut a comparator leading away from the furnace.\n\nIt should turn on.\n\nPlace a block in front of the comparator.\n\nPlace a redstone torch on the block, it should turn off.\n\nCreate a redstone line from the torch to TNT.\n\nIf a griefer loots the furnace the comparator deactivates and the torch turns on, blowing the victim to bits.\n\nA basic minecart trap A target riding the minecart triggers the TNT and gets blown up.\n\nIt might help to disguise the detector as doing something else, like switching tracks, opening a door, etc.\n\nPlace several levers on a wall and put TNT behind it.\n\nPlace a sign saying something along the lines of, \"Which one...,\" \"Don't pull these!,\" or \"Passcode entry.\" Eventually a player with too much curiosity may come along and pull a lever.\n\nConnect a bed next to a Observer, the Observer to some TNT, and cover the whole thing in cobblestone.\n\nThen just wait for the player to sleep in it and get blasted sky-high.\n\nYou will probably want to put the hooks the other way as they can be seen.\n\nThis trap relies on the fact that like end portal, string is invisible from the bottom.\n\nMake a room or hallway at least 3 blocks high, and put tripwire in a layer on the third layer up.\n\nIf the victim jumps, they trigger the trap.\n\nHowever, if the victim sees the tripwire hooks they will probably mine the block so they don't have to jump.\n\nA chest bomb.\n\nPlace a chest.\n\nPlace a hopper underneath the chest.\n\nPlace a comparator pointing away from the hopper.\n\nPlace TNT in front of the comparator.\n\nIf someone puts something inside the chest, it will go into the hopper, turn on the comparator, and activate the TNT.\n\nYou could attach the comparator directly to the chest, but it would be more obvious as you can see over chests.\n\nTrapped chests are also an option but they can be seen by experienced players.\n\nAlso, they can be seen more easily with resource packs.\n\nIt is possible to detonate TNT with a pressure plate and a fishing rod.\n\nThis method is mostly undetectable; however, it is unstable and prone to premature detonation if you don't have patience.\n\nYouTube Video (view on YouTube) A proximity trap is a player detector paired with an output.\n\nYouTube Video (view on YouTube) These traps' primary feature is the way they lure the target into the trap.\n\nNote that none of these lures work on mobs.\n\nYou could drop items such as gold or diamonds near your trap to increase chances that someone will walk into it.\n\nThis works best if you know someone is coming by.\n\nSome tips: It might look too obvious with diamonds, so it could be better to use items like iron bars.\n\nYou could also try to make it look like someone just died.\n\nIf you want to get elaborate, you could setup a dropper to periodically dispense an item.\n\nIt would probably be possible to detect if the item was picked up, perhaps using a weighted pressure plate.\n\nSigns are useful for luring new, and sometimes even experienced, players into a trap.\n\nHere are some messages which can be good to lure players into traps.\n\n\"Free Diamonds!\" This could be good on a trapped chest, but would only work on newbies.\n\n\"DO NOT ENTER!\" Most players would be tempted to do exactly the opposite, even into a possible trap.\n\n\"DO NOT PRESS!\" If you see a button, you really want to press it.\n\nEspecially if there is a sign saying not to.\n\n\"FREE ADMIN!\" Like the \"free diamonds\" example above, this probably works on newbies only.\n\np/s by troller10000: \" DO NOT \" means \" yes \", while \" FREE \" means \" no \".\n\nChests, especially when paired with signs, can make a good lure.\n\nIf you place one inconspicuously in a wooden house, what self respecting griefer would not go and investigate?\n\nOre blocks make an irresistible lure.\n\nAfter all, if you saw a diamond block just sitting there on the ground, would you just leave it there?\n\nThis lure is good when paired with a BUD trigger.\n\nMineshafts are known for lots of loot.\n\nIf you trap one, you can pretend to have 'accidentally given away directions' to the mineshaft.\n\nAn iron door looks somewhat out of place in a dark cave.\n\nIf a player sees one, they may be tempted to go inside.\n\nUnfortunately for them, there may only be a pressure plate on one side of the door, or a landmine hidden under the plate.\n\nWhen faced with a trap, the safest course of action is usually to leave the way you came.\n\nIf the player really wants to disarm it though, here are some tips: Don't try to trip the trap and run away.\n\nUnless you have a really safe way of doing this, the trap is probably designed to prevent you from doing this.\n\nWatch out for observers.\n\nThese can be placed inside walls and under pressure plates as a fail safe.\n\nDon't assume it is safe to break redstone.\n\nIt is usually safer to keep redstone in its current state.\n\nIf it is off, it might be okay to break it.\n\nIf it is on, it might be okay to place a redstone torch to keep it on.\n\nIn elaborate traps the redstone may blink to check if it is broken, so watch out!\n\nTNT in water generally doesn't do much damage.\n\nIf you have a water bucket, it may be helpful to use it if you think everything is about to blow up.\n\nTry to always check for traps.\n\nIf you see a pressure plate next to an iron door, check for observers below the plate, and break the door and plate, and go in.\n\nAnother problem is underground traps.\n\nFor ore traps, check for observers again, break them, and then mine the ore.\n\nTutorials/Player versus Player \u2191 \"How to make great traps\" (archived) by Chris Priestman \u2013 minecraft.net, October 4, 2019.",
    "category": "Mechanics"
  },
  {
    "title": "Underwater TNT",
    "url": "https://minecraft.fandom.com/wiki/Underwater_TNT",
    "content": "This page describes an education-related feature.\n\nThis feature is available only in Minecraft Education or when enabling the \"Education\" option in Bedrock Edition.\n\nThis feature is exclusive to Bedrock Edition and Minecraft Education.\n\nUnderwater TNT Renewable No Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Partial Flammable Yes Catches fire from lava Yes Underwater TNT is a block that can be used by the player to initiate a controlled explosion underwater.\n\nUnderwater TNT can be broken instantly using any tool, or without a tool.\n\nHowever, primed underwater TNT cannot be broken, as it is an entity.\n\nMain article: TNT \u00a7 Usage Underwater TNT blocks can be activated the same way as a normal TNT block.\n\nOnce activated, it explodes like a normal TNT block.\n\nHowever, unlike the TNT block, it can destroy blocks underwater.\n\nIt can still explode in the air, although it does not work in lava.\n\nUnderwater TNT has the same delayed detonation rate as normal TNT.\n\n\u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nThe inclusion of sodium is a reference to elemental sodium's explosive reaction with water.\n\nAll alkaline metals react with water violently to form hydrogen gas and a hydroxide.\n\nThe heat generated often ignites the gas.\n\nIssues relating to \"Underwater TNT\" are maintained on the bug tracker.\n\nReport issues there.\n\nRedstone View at: Template:Redstone/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "USB Charger Block",
    "url": "https://minecraft.fandom.com/wiki/USB_Charger_Block",
    "content": "This article documents an April Fools' joke.\n\nThis feature was exclusively part of a joke version and is not currently planned for addition to regular Minecraft.\n\nIt is documented here on the wiki due to being officially-released content by Mojang Studios, even if not present in a final version.\n\nThis feature is exclusive to Java Edition.\n\nUSB Charger Renewable Yes Stackable Yes (64) Tool Blast resistance 30 Hardness 3 Luminous No Transparent No Flammable No Catches fire from lava No The USB charger block was a joke block introduced in Java Edition 1.RV-Pre1.\n\nIt provided a redstone output like that of a block of redstone.\n\nUSB charger blocks require a pickaxe to mine, otherwise it drops nothing.\n\nUSB charger blocks output a constant signal strength of 15.\n\n\u2191 a b MC-177082 USB Charger Blocks are an unsupported item due to being an April Fools' joke, and therefore such issues relating to them will not be fixed.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits",
    "content": "A redstone circuit is a contraption that activates or controls mechanisms.\n\nCircuits can act in response to player or entity / mob activation, continuously on a loop, or in response to non-player activity (mob movement, item drops, plant growth, etc).\n\nA useful distinction can be made between a circuit performing operations on signals (generating, modifying, combining, etc.), and a mechanism manipulating the environment (moving blocks, opening doors, changing the light level, producing sound, etc.).\n\nMaking this distinction lets us talk about the various circuits separately, and will let players choose whichever circuits are useful for their purposes.\n\nThe machines controlled by redstone circuits can range from simple devices such as automatic doors and light switches to complex devices such as elevators, automatic farms, or even in-game computers.\n\nHowever, this article provides only an overview of redstone circuits as above.\n\nThese can be used to control simple mechanisms, or combined as parts of a larger build.\n\nEach circuit type on this page has links to its own page, which provides greater detail about them and give schematics for multiple variations of each.\n\nBefore working with any but the most basic Redstone circuits, an understanding of some basic concepts is required: \"power\", \"signal strength\", \"redstone ticks\", and \"block updates\".\n\nOther relevant articles: The Redstone mechanics article provides more information on these concepts.\n\nThe Redstone components article adds a list and description of all blocks which interact with redstone power.\n\nThe Mechanisms tutorial complements this article with an assortment of mechanism designs using circuits described here.\n\nThe Redstone tips tutorial gives general advice about building.\n\nMost circuits are described using Schematic diagrams; some of these require multiple images to show one or two layers per image.\n\nSee the Help:Schematic page for details on how various blocks and components are represented.\n\nThe wiki describes circuit size (the volume of the rectangular solid it occupies) with the notation of shorter width \u00d7 longer width \u00d7 height, including support/floor blocks, but not including inputs/outputs.\n\nAnother method used for describing circuit size in the Minecraft community is to ignore non-Redstone blocks simply used for support (for example, blocks under Redstone dust or repeaters).\n\nHowever, this method is unable to distinguish between flat and 1-high circuits, as well as some other circuit differences.\n\nSometimes it is convenient to compare circuits simply by the area of their footprint (e.g., 3\u00d74 for a circuit three-block wide by four blocks long), or by a single dimension important in a particular context (e.g., length in a sequence of sub-circuits, height in a confined space, etc.).\n\nSeveral features may be considered desirable design goals: 1-high A structure is 1-high (aka \"1-tall\") if its vertical dimension is one block high (meaning it cannot have any redstone components that require support blocks below them, such as redstone dust or repeaters).\n\nAlso see flat.\n\n1-wide A structure is 1-wide if at least one of its horizontal dimensions is exactly one block wide.\n\nFlat A structure is flat if it generally can be laid out on the ground with no components above another (support blocks under redstone components are okay).\n\nFlat structures are often easier for beginners to understand and build, and fit nicely under floors or on top of roofs.\n\nAlso see 1-high.\n\nFlush A structure is flush if it doesn't extend beyond a flat wall, floor, or ceiling and can still provide utility to the other side, though redstone mechanisms may be visible in the wall.\n\nFlush is a desirable design goal for piston-extenders, piston doors, etc.\n\nAlso see hipster and seamless.\n\nHipster A structure is hipster if it is initially hidden behind a flat wall, floor, or ceiling and can still provide utility to the other side.\n\nSee also flush and seamless.\n\nInstant A structure is instant if its output responds immediately to its input (a circuit delay of 0 ticks).\n\nSeamless A structure is seamless if no redstone components are visible both before and after it completes its task (but it's okay if some are visible during operation).\n\nSeamless is a desirable design goal for piston-extenders, piston doors, etc.\n\nSee also flush and hipster.\n\nSilent A structure is silent if it makes no noise (such as from piston movement, dispenser/dropper triggering when empty, etc.).\n\nSilent structures are desirable for traps or peaceful homes.\n\nStackable A structure is stackable if it can be placed directly on top of other copies of itself, and they all can be controlled as a single unit.\n\nAlso see tileable.\n\nExpandable A structure is Expandable if it can be placed directly next to other copies of itself, and they all can be controlled as a single unit.\n\nAlso see tileable.\n\nTileable A structure is tileable if it can be placed directly next to or on top of other copies of itself, and each copy can still be controlled independently.\n\nAlso see stackable.\n\nStructures might be described as \"2-wide tileable\" (tileable every two spaces in one dimension), or \"2\u00d74 tileable\" (tileable in two directions), etc.\n\nSome structures might be described as \"alternating tileable\", meaning they can be placed next to each other if every other one is flipped or a slightly different design.\n\nOther design goals may include reducing the delay a sub-circuit adds to a larger circuit, reducing the use of resource-expensive components (redstone, nether quartz, etc.), and re-arranging or redesigning a circuit to make it as small as possible.\n\nSome components are not available before a player has access to the Nether, which limits the designs available.\n\nIn particular, redstone comparators, observers and daylight detectors require nether quartz, which is available only from the Nether.\n\nAdditionally, redstone lamps require glowstone, which is occasionally available from trading or witches, but is much more plentiful in the Nether.\n\nAlthough the number of ways to construct circuits is endless, certain patterns of construction occur repeatedly.\n\nThe following sections attempt to categorize the circuits that have proven useful to the Minecraft community, while the main articles describe the specific circuits that fall into those categories.\n\nSome of these circuits might be used by themselves for simple control of mechanisms, but frequently the player needs to combine them into more complex circuits to meet the needs of a mechanism.\n\nMain article: Transmission circuit Some aspects of signal transmission can be helpful to understand: transmission types, vertical transmission, repeaters, and diodes.\n\nVertical transmission Transmitting signals upward Transmitting signals downward Examples of two-way vertical ladders in Bedrock Edition Although horizontal signal transmission is straightforward, vertical transmission involves options and trade-offs.\n\nRedstone staircases: The simplest way to transmit signals vertically is by placing redstone dust on blocks diagonally upward, either in a straight staircase of blocks, in a 2\u00d72 spiral of blocks, or in another similar variation.\n\nRedstone staircases can transmit signals both upward and downward but can take up much space and require repeaters every 15 blocks.\n\nRedstone ladders: Because glowstone, top slabs, glass, and upside-down stairs can support redstone dust but don't cut redstone dust, signals can be transmitted vertically (upward only) by alternating these blocks in a 2\u00d71 \"ladder\".\n\nRedstone ladders take up less space than redstone staircases, but also require repeaters every 15 blocks.\n\nIn Bedrock Edition, glass and pistons can be used to create two-way vertical ladders that transmit signals both upward and downward (glowstone, hoppers, and slabs still allow the dust to power upward but not downward).\n\nTorch towers and torch ladders: A redstone torch can power a block above it, or redstone dust beneath it, allowing vertical transmission both upward and downward (different designs are required for each).\n\nBecause it takes each torch a little time to change state, a torch tower can introduce some delay into a circuit, but no repeaters are necessary.\n\nHowever, every torch inverts the redstone signal (i.e.\n\nchanges it from powered to unpowered), so having an even number of torches is required.\n\nObserver towers: An observer can power a block of a redstone circuit above or below it, allowing vertical transmission both upward and downward.\n\nPlacing blocks that can be activated, such as redstone dust, noteblocks, or doors, both above and below it creates a state change when the observer is looking downward or downward when the observer is looking upward.\n\nRepeating this pattern means that updates are chained.\n\nDaylight detector exploiting: You can use daylight detectors to send a Redstone signal downward in 1 tick, but the path needs to be unobstructed by anything.\n\nYou need to have a piston push a block over the sensor.\n\nIt detects the change in light and emits a Redstone pulse.\n\nThis design is extendable upward as far as you want, but you need to have the original hole open to sunlight.\n\nIt also works only during the day, because it uses shadows to activate.\n\nBubble columns: An observer can be used to detect the block update that occurs when a water source changes to a bubble column (or vice versa).\n\nWhen swapping the block below a column of water sources to soul sand or a magma block from some other block, the entire column immediately changes to bubble column blocks.\n\nThis can be used to quickly transmit a redstone signal upward to an observer facing the top water source/bubble column block.\n\nWall updating: A setup that can carry a pulse signal downwards across any distance involves walls of any type of stone, a piston, and an observer.\n\nWhen a wall block has a solid block on two opposing sides and non-solid blocks (e.g., air) on the other two sides, it takes a flat shape.\n\nThis is vertically repeatable up to any height.\n\nHowever, when a wall/solid block is placed into one of the two air blocks around a flat wall, the flat wall block and every flat wall block below it are updated to a different version of the wall with a column in the middle.\n\nThis update is instant and can be detected by an observer watching any flat wall in the tower.\n\nThe update can be made repeatable by having a regular piston face the flat wall at the top of the tower, since the piston head also triggers the wall update.\n\nRepeater To \"repeat\" a signal means to boost it back up to full strength.\n\nThe easiest way to do this is with a redstone repeater.\n\nVariations include: Instant repeater: Repeats a solid signal without the delay introduced by a redstone repeater.\n\nTwo-way repeater: Repeats a signal in both directions.\n\nDiode A \"diode\" is a one-way circuit that allows a signal to travel in one direction.\n\nIt is used to protect another circuit from the chance of a signal trying to enter through the output, which could incorrectly change the circuit's state or interfere with its timing.\n\nIt is also used in a compact circuit to keep one part of the circuit from interfering with another.\n\nCommon choices for a diode include a redstone repeater or a height elevation to glowstone or a top slab, which does not transmit a signal back down.\n\nMany circuits are already one-way simply because their output comes from a block that can't take input.\n\nFor example, a signal cannot be pushed back into a circuit through a redstone torch except through the block it's attached to.\n\nMain article: Logic circuit It's sometimes necessary to check signals against each other and output a signal only when the inputs meet some criteria.\n\nA circuit that performs this function is known as a logic gate (a \"gate\" that allows signals through only if the logic is satisfied).\n\nIn electronic or programming diagrams, logic gates are typically shown as if they were individual devices; However, when building redstone devices in Minecraft, all logic gates are formed from multiple blocks and components, which interact to produce the desired results.\n\nNOT gate A NOT gate (aka \"inverter\") is on if its input is off.\n\nThe simplest NOT gate is an input block with a redstone torch attached.\n\nOR gate An OR gate is on if any of its inputs are on.\n\nThe simplest OR gate is to feed multiple signals into a single block or redstone wire.\n\nNOR gate A NOR gate is on only if none of its inputs are on.\n\nThe simplest NOR gate is to feed multiple signals into a block with a redstone torch attached.\n\nAND gate An AND gate is on only if all of its inputs are on.\n\nNAND gate A NAND gate is on if any of its inputs are off.\n\nXOR gate An XOR gate is on if its inputs are different.\n\nXNOR gate An XNOR gate is on if its inputs are equal.\n\nIMPLY gate An IMPLY gate is on unless the first input is on and the second input is off.\n\nMain article: Pulse circuit Some circuits require specific pulses; other circuits use pulse duration to convey information.\n\nPulse circuits manage these requirements.\n\nA circuit that is stable in one output state and unstable in the other is known as a monostable circuit.\n\n[note 1] Many pulse circuits are monostable because their OFF state is stable, but their ON state soon reverts to OFF.\n\nPulse generator A pulse generator produces a pulse of a specific duration.\n\nPulse limiter A pulse limiter (aka pulse shortener) reduces the duration of pulses that are too long.\n\nPulse extender A pulse extender (aka pulse sustainer, pulse lengthener) increases the duration of pulses that are too short.\n\nPulse multiplier A pulse multiplier outputs multiple pulses for every input pulse (it multiplies the number of pulses).\n\nPulse divider A pulse divider (aka pulse counter) outputs a signal only after a certain number of pulses have been detected through the input (the number of pulses is indicative of the number of loops).\n\nEdge detector An edge detector reacts to either a redstone signal changing from OFF to ON (a \"rising edge\" detector), from ON to OFF (a \"falling edge\" detector), or switching between ON and OFF in either order(a \"dual edge\" detector).\n\nPulse length detector A pulse length detector reacts only to pulses in a certain range of durations (often only to pulses of one specific duration).\n\nMain article: Clock circuit A clock circuit is a pulse generator that produces a loop of specific pulses repeatedly.\n\nSome are designed to run forever, while others can be stopped and started.\n\nA simple clock with only two states of equal duration is named for the duration of its ON state (e.g., for example, a clock that alternates between a 5-tick ON state and a 5-tick OFF state is called a 5-clock) while others are usually named for their period (the time it takes for the clock to return to its original state; for example, a \"1-minute clock\" might produce a 1-tick pulse every 60 seconds).\n\nObserver clock 1 A repeating clock made with Observers and Pistons (an Observer looking at a piston).\n\nObserver clock 2 A repeating clock made with two Observers with their faces facing each other.\n\nRepeater clock A repeater clock consists of a loop of repeaters (usually either redstone repeaters or redstone torches) with occasional dust or blocks to draw off the appropriate pulses.\n\nHopper clock A hopper clock produces timed pulses by moving items back and forth between 2 hoppers feeding into each other and taking a redstone output with comparators.\n\nThis was revolutioninised by ethoslab, as he created the etho hopper clock, a staple in redstone timers.\n\nPiston clock A piston clock produces a loop of pulses by passing a block back and forth (or around, with many pistons) and drawing off a redstone pulse when the block is in a certain location.\n\nComparator clock The clock of short or moderate cycle length utilizing comparator's subtraction or signal fading feature.\n\nClocks can also be built using daylight sensors, minecarts, boats, water flow, item despawn, etc.\n\nMain article: Memory circuit Unlike a logic circuit whose state always reflects its current inputs, a memory circuit's output depends not on the current state of its inputs, but on the history of its inputs.\n\nThis allows a memory circuit to \"remember\" what state it should be in, until told to remember something else.\n\nThere are five basic types of memory circuits.\n\n(A few circuits combine two different types.) RS latch An RS latch has two inputs, one to set the output on and another to reset the output back to off.\n\nAn RS latch built from NOR gates is known as an \" RS NOR latch\", which is the oldest and most common memory circuit in Minecraft.\n\nT flip-flop A T flip-flop is used to toggle a signal (like a lever).\n\nIt has one input, which toggles the output between on and off.\n\nBefore the 1.21 updates, they had to be big, chunky machines, but now we can use a copper bulb as one, and it only takes up 2 blocks (copper bulb and comparator) Gated D latch A gated D latch has a \"data\" input and a \"clock\" input.\n\nWhen the clock input turns on, it sets the output to equal its data input.\n\nNot to be confused with a D flip-flop, which sets the output equal to its data input on a clock rising transition.\n\nJK latch A JK latch has two inputs, one to set the output on and another to reset the output back to off (like an RS latch), but when both turn on simultaneously it toggles the output between on and off (like a T flip-flop).\n\nCounter Unlike T flip-flops and RS latches, which can hold two states (ON or OFF), a counter can be designed to hold a greater number of states.\n\nMany other memory circuits are possible.\n\nMain article: Piston circuits Pistons have allowed players to design circuits that are smaller and/or faster than the standard, redstone-only counterparts.\n\nAn understanding of standard redstone circuits is helpful, as this tutorial is focused on the circuit design rather than the function.\n\nThe main components here are sticky pistons, redstone wire, repeaters, and redstone torches.\n\nRegular pistons can also see use, especially combined with gravity blocks.\n\nThere are several benefits of piston circuitry: Neither repeaters nor pistons 'burn out', unlike redstone torches.\n\nPiston circuits are often (not always) smaller and/or faster than their redstone counterparts.\n\nThis allows building devices such as fast clocks and \"instant\" signal transmission.\n\nPistons' ability to move blocks within the world makes them a natural for memory circuits, as well as the obvious doorways and switchable bridges.\n\nWith slime or honey blocks involved, entire structures can \"get up and move\" (see also the Flying Machines tutorial).\n\nPiston circuits can sharply reduce the use of redstone in favor of wood, stone, and iron.\n\nMain article: Miscellaneous circuits These circuits aren't generally needed for redstone projects, but might find use in complex projects, proofs of concept, and thought experiments.\n\nSome examples: Multiplexers and relays A multiplexer is an advanced form of logic gate that chooses which of two inputs to let through as output based on an additional input (for example, if input A is ON then output input B, otherwise output input C).\n\nThe reverse of this is a relay, which copies a data input to one of two outputs, depending on whether the additional input is ON or OFF.\n\nRandomizers Main article: Tutorials/Randomizers A randomizer produces output signals unpredictably.\n\nRandomizers can be designed to produce a pulse at random intervals, or to randomize which of multiple outputs are turned ON (such as random number generators, or RNGs).\n\nSome randomizers use the random nature of Minecraft (such as cactus growth or dispenser slot selection), while others produce pseudo-randomness algorithmically.\n\nMulti-bit circuits Multi-bit circuits treat their input lines as a single multi-bit value (something other than zero and one) and perform an operation on them all at once.\n\nWith such circuits, possibly combined with arrays of memory circuits, it's possible to build calculators, digital clocks, and even basic computers inside Minecraft.\n\nBlock update detectors Main article: Tutorials/Block update detector Main article: Tutorials/Comparator update detector A block update detector (BUD, or BUD switch) is a circuit that reacts to a block changing its state (for example, stone being mined, water changing to ice, a pumpkin growing next to a pumpkin stem, etc.).\n\nBUDs react by producing a pulse, while T-BUDs (toggleable BUDs) react by toggling their output state.\n\nThese are generally based on subtle quirks or glitches in device behavior; current circuits most often depend on pistons.\n\nAs of Java Edition 1.11, many of the functions of BUDs were condensed into the observer, however, a BUD circuit can also detect other changes undetectable by observers, like a furnace finishing smelting or something being crafted in a crafting table.\n\nThe addition of this was made to move toward feature parity with Bedrock Edition versions.\n\nMore advanced circuits Main article: Tutorials/Advanced redstone circuits Many other complex circuits are possible.\n\n\u2191 Note: Some players refer to edge detectors as monostable circuits Redstone View at: Template:Redstone/content [edit ] Gameplay View at: Template:Gameplay/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Advanced redstone circuits",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Advanced_redstone_circuits",
    "content": "This article needs cleanup to comply with the style guide.\n\n[discuss ] Please help improve this page.\n\nThe talk page may contain suggestions.\n\nReason: Seems a bit chatty and very unformatted (messy); also there is too much whitespace.\n\nIt has been suggested that this page be split into Arithmetic logic, Passcode locks, and Base changers.\n\n[discuss ] If this split may potentially be controversial, do not split until a consensus has been reached.\n\nReason: There's already a tutorials section for this and it has become a disorganized mess.\n\nThe pages above are only a suggestion.\n\nThis article uses MCRedstoneSim schematics.\n\nThese should be converted to use {{schematic }} if possible.\n\nAdvanced redstone circuits encompass mechanisms that require complicated redstone circuitry.\n\nThey are usually composed of many simpler components, such as logic gates.\n\nFor simpler mechanisms, see electronic mechanisms, wired traps, and redstone.\n\nMain article: Tutorials/Redstone computers In Minecraft, several in-game systems can usefully perform information processing.\n\nThese systems include water, sand, minecarts, pistons, and redstone.\n\nOf all these systems, only redstone was specifically added for its ability to manipulate information, in the form of redstone signals.\n\nRedstone, like electricity, has high reliability and high switching-speeds, which has seen it overtake the other mechanical systems as the high-tech of Minecraft, just as electricity overtook the various mechanics such as pneumatics to become the high-tech of our world.\n\nIn both modern digital electronics and redstone engineering, the construction of complex information processing elements is simplified using multiple layers of abstraction.\n\nThe first layer is that of atomic components; redstone/ redstone torches / redstone repeaters /blocks, pistons, buttons, levers and pressure plates are all capable of affecting redstone signals.\n\nThe second layer is binary logic gates; these are composite devices, possessing a very limited internal state and usually operating on between one and three bits.\n\nThe third layer is high-level components, made by combining logic gates.\n\nThese devices operate on patterns of bits, often abstracting them into a more humanly comprehensible encoding like natural numbers.\n\nSuch devices include mathematical adders, combination locks, memory-registers, etc.\n\nIn the fourth and final layer, a key set of components are combined to create functional computer systems which can process any arbitrary data, often without user oversight.\n\nAn 8-bit register page would be in the third layer of component abstraction These circuits simply convert inputs of a given format to another format.\n\nConverters include Binary to BCD, Binary to Octal, Binary to Hex, BCD to 7-Segment, etc.\n\nYou can understand this design as a combination of AND gates.\n\nDemultiplexer is a circuit that uses the following logic: Output 0 = (~bit2) & (~bit1) & (~bit0) Output 1 = (~bit2) & (~bit1) & (bit0)...\n\nThe most obvious way to implement a demultiplexer would be to put a whole bunch of logic gates and connect them together, but even with 3 or 4 bits it turns into a mess.\n\nIf you look at the binary numbers table, you can notice a pattern.\n\nIf the number of bits is Q, the most significant bit reverses every Q/2 numbers, the next bit reverses every Q/4 numbers an so on until we get to the Qth bit.\n\nTherefore, we should make a circuit that looks like this: Where the green triangles are non-reversing and red triangles are reversing.\n\nThe black lines are imaginary AND gates.\n\nWe can easily implement this using 3 \"punch cards\" that consist of solid blocks and air.\n\nThe \"punch cards\" or the masks are being moved by pistons with slime blocks.\n\nSo the signal is only being propagated if all three layers of masks align in a specific way.\n\nOpen the picture to see the layers.\n\nAs you can see, this system is very compact and comprehensible.\n\nYou can use this in reverse as well (not as a multiplexer, but if you reverse the repeaters the signal from every ex-outptut (0\u20137) will only propagate if it matches the current state of the demultiplexer, so it works like \"Output3 = (Input3) AND (Demux=011)\").\n\n3-bit Binary to 1-of-8 gates.\n\nA series of gates that converts a 3-bit binary input to a single active line out of many.\n\nThey are useful in many ways as they are compact, 5\u00d75\u00d73 at the largest.\n\nAs there are many lines combined using implicit-ORs, you have to place diodes before each input into a circuit to keep signals from feeding back into other inputs.\n\nRequirements for each output line (excluding separating diodes): A series of gates that converts a 4-bit binary input to a single active line out of many (e.g.\n\n0-9 if the input is decimal or 0-F if the input is hexadecimal).\n\nThey are useful in many ways as they are compact, 3\u00d75\u00d72 at the largest.\n\nAs there are many lines combined using implicit-ORs, you have to place diodes before each input into a circuit to keep signals from feeding back into other inputs.\n\n4-bit Binary to 1-of-16 gates.\n\nRequirements for each output line (excluding separating diodes): You also can convert a 1-of-16 signal to a 4-bit binary number.\n\nYou only need 4 OR gates, with 8 inputs each.\n\nThese have to be isolating ORs to prevent signals from feeding back into other inputs.\n\nFor every output line, make an OR gate with the inputs wired to the input lines where there is a '1' in the table below.\n\nLogic for a 3-digit key log, with digits 0-9.\n\nIt's order-sensitive The example on the right uses ORs (>=1), XNORs (=), RS NOR latches (SR) and some delays (dt*).\n\nFor the XNORs I would prefer the C-design.\n\nThe example on the right uses a 4-bit design, so you can handle a hexadecimal key.\n\nSo you can use 15 various digits, [1,F] or [0,E].\n\nYou only can use 15, because the state (0) 16 = (0000) 2 won't activate the system.\n\nIf you want to handle 16 states, you edit the logic, to interact for a 5-bit input, where the 5th bit represents the (0) 16 state.\n\nIn the following we'll use (0) 16 = (1111) 2.\n\nAnd for [1,9] the MUX-table upon.\n\nSo the key uses decimal digits.\n\nTherefore, we have to mux the used buttons to binary data.\n\nHere look through the first two columns.\n\nThe first represents the input-digit in (hexa)decimal, the second represents the input-digit in binary code.\n\nHere you can add also buttons for [A,E], but I disclaimed them preferring a better arranging.\n\nThe /b1\\-box outputs the first bit, the /b2\\-box the second, and so on.\n\nNow you see Key[i] with i=1..3, here you set the key you want to use.\n\nThe first output of them is the 1-bit, the second the 2-bit and so on.\n\nYou can set your key here with levers in binary-encryption.\n\nUse here the MUX-table upon, and for (0) h:= (1111) 2.\n\nIf we enter the first digit, we have to compare the bits by pairs (b1=b1, b2=b2, b3=b3, b4=b4).\n\nIf every comparison is correct, we set the state, that the first digit is correct.\n\nTherefore, we combine (((b1=b1 & b2=b2) & b3=b3) & b4=b4) =: (b*=b*).\n\nIn Minecraft we have to use four ANDs like the left handside.\n\nNow we save the status to the RS-latch /A\\.\n\nThe comparison works the same way for Key[2], and Key[3].\n\nNow we have to make sure, that the state will be erased, if the following digit is wrong.\n\nTherefore, we handle a key-press-event (--/ b1 OR b2 OR b3 OR b4 \\--/ dt- \\--/ dt- \\--).\n\nSearch the diagram for the three blocks near \"dt-\".\n\nHere we look, if any key is pressed, and we forward the event with a minor delay.\n\nFor resetting /A\\, if the second digit is wrong, we combine (key pressed) & (not B).\n\nIt means: any key is pressed and the second digit of the key is entered false.\n\nTherewith /A\\ will be not reset, if we enter the first digit, /A\\ only should be reset, if /A\\ is already active.\n\nSo we combine (B* & A) =: (AB*).\n\n/AB*\\ now resets the memory-cell /A\\, if the second digit is entered false and the first key has been already entered.\n\nThe major delay /dt+\\ must be used, because /A\\ resets itself, if we press the digit-button too long.\n\nTo prevent this failure for a little bit, we use the delay /dt+\\.\n\nThe OR after /AB*\\ is used, for manually resetting, i.e.\n\nby a pressure plate.\n\nNow we copy the whole reset-circuit for Key[2].\n\nThe only changes are, that the manually reset comes from (not A) and the auto-reset (wrong digit after), comes from (C).\n\nThe manual reset from A prevents B to be activated, if the first digit is not entered.\n\nSo this line makes sure, that our key is order-sensitive.\n\nThe question is, why we use the minor-delay-blocks /dt-\\.\n\nVisualize /A\\ is on.\n\nNow we enter a correct second digit.\n\nSo B will be on, and (not B) is off.\n\nBut while (not B) is still on, the key-pressed-event is working yet, so A will be reset, but it shouldn't.\n\nWith the /dt-\\-blocks, we give /B\\ the chance to act, before key-pressed-event is activated.\n\nFor /C\\ the reset-event is only the manual-reset-line, from B.\n\nSo it is prevented to be activated, before /B\\ is true.\n\nAnd it will be deactivated, when a pressure-plate resets /A\\ and /B\\.\n\nPros You can change the key in every digit, without changing the circuit itself.\n\nYou can extend the key by any amount of digits, by copying the comparison-circuit.\n\nDependencies from previous output only.\n\nYou can decrease the amount of digits by one by setting any digit (except the last) to (0000) 2.\n\nYou can open the door permanently by setting the last digit to (0000) 2 Cons The bar to set the key will be get the bigger, the longer the key you want to be.\n\nThe hard-coded key-setting is a compromise for a pretty smaller circuit, when using not too long keys.\n\nIf you want to use very long keys, you also should softcode the key-setting.\n\nBut mention, in fact the key-setting-input will be very small, but the circuit will be much more bigger, than using hard-coded key-setting.\n\nNot really a con: in this circuit the following happens with maybe the code 311: 3 pressed, A activated; 1 pressed, B activated, C activated.\n\nTo prevent this, only set a delay with a repeater between (not A) and (reset B).\n\nSo the following won't be activated with the actual digit.\n\nIf you fix this, the circuit will have the following skill, depending on key-length.\n\n(digit = 2 n -1, possibilities: digit Length) Main article: Tutorials/Combination locks Combination locks are a type of redstone circuit.\n\nThey generally have a number of components which must be set in the right combination in order to activate something such as a door.\n\nCombination locks can be very useful in creating adventure maps.\n\nNote that if you are playing in survival multiplayer, other players will still be able to break into the mechanism and cause it to activate without knowing the password.\n\nThis is a device which sorts the inputs, putting 1s at the bottom and 0s at the top, in effect counting how many 1s and how many 0s there are.\n\nIt is designed so that it is easily expandable, as shown in the diagram.\n\nThe 5\u00d75 center square is tileable.\n\nThe inputs are at the bottom and right and the outputs are at the top and left Truth table for a three-bit sorting device: Timers can detect the time difference between the first input and the second.\n\n2 1 A timer.\n\nThe extra repeater at the bottom is to compensate for the delay of the upper repeaters.\n\nExample of a timer in action.\n\nThis one determines the time difference between the input and output of a 2-tick repeater.\n\nThe amount of time can be determined by how far the signal travels.\n\nFor example, if 5 of the locked repeaters are powered, it means the time difference was 0.4-0.5 seconds, ignoring lag.\n\nIf the time difference is exactly 0.4 seconds, 4 repeaters will be powered.\n\nThe repeaters that will lock can be set to different delays.\n\nFor example, if they are set to 4 ticks and the first 3 are active, it means the time difference was 0.8-1.2 seconds.\n\nYou can even have a mix, which can be handy if you know what the range is likely to be.\n\nHowever, you will need to be careful when reading these timers.\n\nIf you are measuring higher scales, the second signal might not reach all of the repeaters.\n\nYou will need repeaters to replenish the signal.\n\nA section of the timer that replenishes the signal.\n\nSince the upper repeater has a delay, another repeater is required in the lower section.\n\nIf the signals are short times (like if you are using observers), you may not have time to read the data.\n\n2 1 An input modifier.\n\nWhen the inputs are applied, the timer will treat them as active until the button is pressed.\n\nYou can also measure how long a signal lasts.\n\nA timer that measures the duration of a stone button.\n\nPlease note the following when making a duration timer: Because of the delay that the redstone torch adds, the delay of the initial repeater, the one that stays unlocked, must be increased to 2 ticks.\n\nThe data from the timer will be preserved.\n\nBecause the repeaters will still be powered when the timer is used again, the circuit must be obstructed between uses in order to unlock the repeaters.\n\nTo do this mine the redstone torch, wait for all of the repeaters to deactivate, and put the redstone torch back.\n\nD flip-flop is an electronic component that allows you to change its output according to the clock.\n\nIt's and RS NOR latch that sets its value to the D input when the \">\" (clock) input is changing its state from low to high (in some cases from high to low).\n\nBasically, it's equivalent to the expression: \"Set the output Q to the input D when the input C goes from 0 to 1\".\n\nFor example, you can use D flip-flops to shift the value from left to right.\n\nIn this lock, the > signal propagates from the rightmost flip-flop to the leftmost, so the signal shifts to the right.\n\nThis circuit allows you to input a 4-bit number with two levers.\n\nYou can use any number of bits, but this configuration is already pretty secure even if someone figures out what a lock it is.\n\nSo, if you want to input the combination 1-0-1-0, follow these steps: D = 1 > = 1 > = 0 D = 0 > = 1 > = 0 D = 1 > = 1 > = 0 D = 0 > = 1 > = 0 In theory, you can program the lock from this serial interface as well.\n\nJust attach 4 RS NOR latches and a hidden place for the programming levers.\n\nThis design is not very practical as a lock, but might be a nice feature on something like a puzzle challenge map.\n\nRedstone circuits Mechanisms Traps Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Block update detector",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Block_update_detector",
    "content": "\"Block update detector\" redirects here.\n\nFor the block, see Observer.\n\nThe Block Update Detector, or BUD switch, is a redstone mechanism that uses quirks in the game in order to detect changes in nearby blocks.\n\nThere are many different designs that are all based on the same general idea: a redstone circuit is put in a state where it should be following a mechanic, but the game has not updated the block to follow this rule.\n\nThis unupdated block then functions as the \"sensor\".\n\nWhen an adjacent block changes state in some way, the game updates all adjacent blocks - including the sensor block - and powers them up.\n\nThe circuit then performs some other action and, with most designs, goes back into standby.\n\nNote: Most of the BUD switches listed below do not work on Bedrock Edition, since redstone is largely separate from block updates.\n\nThe BUD switch detects the following events when they happen next to the sensor block: Placement of blocks Destruction of blocks Water or lava level changes Freezing of water or melting of ice and frosted ice A gravity-affected block (e.g.\n\na sand block) landing after falling Movement of blocks by pistons, including piston heads Endermen picking up and putting down blocks Saplings growing into trees Mushrooms growing into huge mushrooms Growth and spread of plants, including: cacti, flowers, grass, mushrooms, melons, pumpkins, and sugar canes, cocoa beans, bamboo, crops (e.g.\n\nmelon stems), nether wart, and vines) Leaf growth and decay Growth and death of grass blocks Dirt becoming farmland, farmland becoming hydrated, farmland reverting to dirt Fire igniting or burning out A furnace beginning or ceasing to smelt A redstone ore block beginning or ceasing to glow Changes in redstone state or power level, and activation of redstone devices Changing the delay of a repeater Rails changing orientation Powered rails and activator rails getting powered or depowered TNT igniting and becoming an entity Silverfish entering a block Cake being eaten The opening or closing of a chest or trapped chest The activation of a tripwire (even if not attached to a tripwire hook).\n\nVines, crops (e.g.\n\nmelon stems), nether wart, or cocoa beans growing The upper block of a 2-block tall plant (e.g.\n\ntall grass, rose bush) replacing/being replaced by an air block when that plant is placed or broken A dragon egg replacing an air block when it teleports to a location after a player tries to break it A grass block changing to dirt due to sheep \"eating\" the grass A chorus flower growing into a chorus plant A dry sponge absorbing water Switching a comparator between comparison and subtraction modes Playing a note block Changing the number of layers in a snow layer block Leaf distance from a log changing Scaffolding distance changing Composter fill level changing Block and block state changes that some BUDs may not be able to detect, include: Opening or closing a shulker box or ender chest Inserting or removing a music disc in/from a jukebox Placing or removing of a bottle / potion in/from a brewing stand Changing the contents of a chest, trapped chest, shulker box, ender chest, dispenser, dropper, brewing stand, or furnace.\n\nBelow is a comprehensive video from SethBling (outdated), which showcases a variety of compact block update detectors, mostly making use of the redstone block.\n\nThe BUD switch now has a compact block form in-game and it was added in 1.11 snapshot 16w39a called the ' Observer '.\n\nThe observer does not detect block updates, instead it detects block state changes.\n\nMany BUD switch designs exploit a property of pistons called quasi-connectivity.\n\nA piston can receive power through a space one block above itself.\n\nIn this case, the power source is either above and to the side of the piston, or two blocks above it.\n\nHowever, when powered in this way, the piston does not immediately notice changes in the state of the power source.\n\nWhen some other block update happens next to the piston, it will \"wake up\" and react to the change.\n\nBy forming a feedback loop, where the state of the piston controls the state of its power source, it becomes the sensor of a simple BUD switch: In this design, the piston will only extend in response to an adjacent block update, but after extending it will immediately retract because the arm of the piston notices the repeater next to it turning off.\n\nThis is how a piston BUD resets itself: by having the power run next to the extended piston arm, with a delay.\n\nNote: If the block diagonally adjacent to the sticky piston becomes horizontally adjacent, the circuit will constantly pulse instead.\n\nThis design can be extended with multiple sensor blocks.\n\nAll of the pistons in this design are sensors.\n\nA piston-based \"BUD array\", with multiple sensor blocks.\n\nAll the pistons are sticky.\n\nA 1-wide tileable design using redstone blocks: Alternative method: if players take a sticky piston facing parallel to the ground, then place a Block of Redstone on its face, and connect the block of redstone out to the side of the piston through a repeater that goes into a block diagonally adjacent to the piston, it works a fully functional BUD.\n\nThen, if you set a delay of any number of ticks other than the default 1-tick delay on the repeater, it turns into a T-BUD.\n\nThis process can also be reversed by setting the repeater back to its default 1-tick setting.\n\n(It only works since release of Redstone Blocks, though players could theoretically use a normal block and a redstone torch to mimic its effects.) An extremely compact one-time design that is easily hidden and therefore ideal for traps is as follows: Place a piston, a sticky piston is most useful, parallel to the ground.\n\nPlace a block one block to any side except the piston head and one block above the piston.\n\nOn the side of the block facing the piston, place a redstone torch.\n\nThen place a lever on any other side of the block and switch it on.\n\nThe redstone torch will go out but the piston will remain extended.\n\nYou can then break everything except for the piston, but make sure to break the lever after you break the torch.\n\nA block update will then cause the piston to retract, possibly pulling the floor out from under the victim.\n\nRemember, though, that after the detector is tripped, it has to be rebuilt to be used again.\n\nThe design looks something like this: Or, for it being smaller: The player can make a 2\u00d71 (3\u00d71 when extended) BUD by having a 2 sticky pistons (stacked) both facing any direction except up and down, then on both of those sticky pistons add Redstone Blocks.\n\nWhenever a block is updated, (destroyed, placed etc.) it will switch the bottom piston outwards.\n\nGood for traps, as the BUD may need to be compact.\n\nThe only con to this is that it has to be reset.\n\nAnother extremely compact design involves using 1 sticky piston facing up with a slime block and redstone block stacked on top of it.\n\nThis design is 1\u00d73 (1\u00d74 when extended) and allows the piston to be updated from 5 of its sides.\n\nIt does not need to be reset after triggering, but players do need to make sure that the slime block isn't grabbing a wall in order to activate in the first place.\n\nThe following designs works because pistons can't be pushed by other pistons while extended.\n\nAlso, when a piston retracts, it doesn't notify any other pistons that were trying to push it.\n\nThe piston with the block attached to it is sticky and acts as the sensor.\n\nThis design has the advantage of a low profile, and also that the quirk it exploits is less \"buggy\" and less likely to be fixed in the future.\n\nA perpendicular \"stuck piston\" BUD switch.\n\nThe piston with the block attached to it is sticky.\n\nA perpendicular \"stuck piston\" BUD switch.\n\nThe piston with the block attached to it is sticky.\n\nAn in-line \"stuck piston\" BUD switch.\n\nLeft piston is sticky.) The latter design above can also be extended to an array in a variety of ways, including a one-wide design.\n\nA very compact \"in-line\" BUD array.\n\nEvery piston is a sensor except the one next to the obsidian.\n\nNone of the pistons are sticky.\n\nA one-wide BUD array.\n\nEvery piston is a sensor except the one next to the obsidian.\n\nNone of the pistons are sticky.\n\nThe stuck-piston principle can also be used to hide a BUD completely underground, as shown by this video: Here is a video about this.\n\n[needs testing ] As of 14w25a (with the fix of MC-56541), a burned-out redstone torch can be used as a reliable BUD.\n\nOnce burned-out, a redstone torch will reset upon an update from any adjacent block.\n\nThis is the smallest and simplest BUD, only requiring a single torch and redstone dust (plus two repeaters for a solid output signal.) A burned torch BUD with a solid output.\n\nA redstone torch on the side of a block and put redstone dust make the redstone signal loops with itself is also a BUD.\n\nThe place around the redstone torch (include upside and downside) is the detecting place, but not the redstone dust.\n\nThe redstone torch will blink for 16 ticks, and finally burn down.\n\nIt has a 56 ticks cool down.\n\nIt can't detect sleeping in a bed.\n\nAn example of a redstone torch based BUD.\n\nAn example of a redstone torch based BUD.\n\nThis works in the Bedrock Edition of Minecraft, as shown in the video below.\n\nA simple redirection bud When redstone dust redirects, it does not send out block updates, so a piston can have its power removed by redirecting redstone dust away from it to remove power.\n\nWhen the piston receives a block update, it will update its state accordingly and the redirection bud will reset.\n\nOther devices can be built using the same underlying principle as the BUD switch.\n\nThis method no longer works in 1.14.1.\n\nBy using a waterlogged block that is not allowed to flow (through the use of trapdoors or other techniques) and an observer clock, if the player updates the waterlogged block rapidly and the observer clock is in the same chunk the clock will break and give a constant output out of both sides.\n\nThen whenever the block is next updated, one side of the clock will pulse off for one tick.\n\nYou can create a BUD switch using this by linking up using both sides as the output of the BUD.\n\nVideo describing this phenomenon: By eliminating the reset mechanism of a BUD switch, it becomes a T-BUD or Toggle-BUD.\n\nThis device has two stable states, which it switches between when it detects a block update next to the piston.\n\nThis is equivalent to a normal BUD connected to a T Flip-Flop, but much simpler to build.\n\nIt is useful for tracking the state of blocks like furnaces, grass block, dirt, and beds.\n\nHowever, it has useful capabilities for placing some blocks two blocks away.\n\nWhen placing a piece of redstone dust two blocks away, the T-BUD activates when it is destroyed only.\n\nWhen placing a repeater two blocks away, the T-BUD activates only on the placement.\n\nT-BUD in first state T-BUD in second state Note: As of Java Edition 1.7.4, [note 1] the repeater in the picture must be set to a two tick delay.\n\nIf the repeater is left at one tick, it will work as a BUD.\n\n\u2191 It is unconfirmed in which version this has become a requirement.\n\nThe earliest known BUD switch is on the Minecraft Forums.\n\n[1] The term \"BUD switch\" was later coined by YouTuber EthosLab.\n\n[2] \u2191 Redstone Modification Detector \u2191 https://youtu.be/rZUPXs1TZD4 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Comparator update detector",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Comparator_update_detector",
    "content": "A comparator update detector or CUD switch is a redstone mechanism that exploits a feature in the game in order to detect comparator updates.\n\nComparator updates are updates that only update comparators, for example, interacting with a container.\n\nBlock update detectors cannot detect comparator updates, but CUDs can detect block updates.\n\nThere are many different designs, but they are all based on the same general idea: a comparator is turned on while it should be turned off, or the other way around.\n\nTo get a comparator in such a state, the player have to make sure that it doesn't realize that it should change.\n\nThis can be done in several ways.\n\nWhen the comparator gets an update, it will realize that it should change state.\n\nThis update can be a block update, or a comparator update.\n\nCUDs can detect comparator updates next to the comparator, but also 1 block in between, provided that the block in between is a solid block.\n\nThe CUD switch detects everything a BUD detects, however the CUD can detect updates from the following blocks 2 blocks away from the comparator horizontally (but only if a solid block exists between the comparator and the target block).\n\nThis means that the player can have a CUD behind a wall that detects the following updates in front of the wall: The CUD can be only based on a comparator because only comparators can detect comparator updates.\n\nEach time players does one of the actions listed above, a comparator update is being sent 2 blocks away in all the 4 directions.\n\nThis method uses the mechanics of a chest.\n\nWhen a chest is locked, the comparator doesn't realize that it shouldn't be turned on anymore.\n\nWhen the player updated the comparator, it realizes, and resets the system.\n\nIt's also possible to block the chest with an ocelot.\n\nWhen ocelot sits on a chest, the player can't open it.\n\nThe player can move them using pistons, minecarts or water.\n\nUsing minecarts, players can make a silent CUD, besides the meow-sound of the ocelot or cat.\n\nA cauldron based CUD.\n\nThis method uses a filled cauldron that is being pushed by a piston, the comparator doesn't notice that the cauldron has been pushed down and stays powered until it gets an update.\n\nNote that the cauldron should contain water.\n\nA redirecting based CUD.\n\nThe redstone is redirected by a detector rail.\n\nNote that the lever should always be turned on.\n\nThis method is often used in BUD's.\n\nThe player can turn any repeater-based BUD into a CUD by replacing the repeater with a comparator.\n\nThey can redirect redstone with a detector rail, redstone block or a solid block, blocking 2 redstone diagonal to each other.\n\nAgain, the comparator doesn't realize that the redstone isn't pointing the right direction anymore and it will stay turned on until it receives an update.\n\nAn Item-frame based CUD.\n\nAnother item-frame based CUD.\n\nComparators can take a redstone output from an item frame, but only if the item frame's position isn't occupied by a block.\n\nMany blocks will break the item frame, if they are in the same position, but some blocks don't.\n\nExamples are water, fence gates, skulls and flowers.\n\nOther devices can be built using the same underlying principle as the CUD switch.\n\nCUDs can be made stackable and even tile-able.\n\nThey can be turned into a toggle-CUD.\n\nCUDs can be made pistonless using ocelots.\n\nA T-CUD toggles between 2 states.\n\nThe first update will turn the comparator off, and the second update will turn the comparator on again.\n\nThe earliest known CUD-switch was made by RedsMiners.\n\n[1] The bug it was based on has been fixed in 1.5.\n\nDvirWi found out that it can detect the clicking inside of chests.\n\n[2] Short time later, NiceMarkMC made a version that used DvirWi's technique, despite not knowing it was a CUD.\n\n[3] Redstone Sheep then found out that it would detect most block entity changes and had a chat with NiceMarkMC, giving it the name Tile Entity Data Update Detector (TEDUD).\n\n[4] NiceMarkMC then uploaded a video of DvirWi's version and called it Tile Entity Update Detector (TEUD) to keep it shorter, and viewers suggested calling it Data Update Detector (DUD) which became a widely used name.\n\nNiceMarkMC accepted the name DUD, but then renamed it to CUD because the other names were technically incorrect.\n\nIn Java Edition 1.13 (17w47a), CUDs can no longer detect note blocks, since it is no longer a block entity.\n\n\u2191 https://youtu.be/DiUcSTQfCvk \u2191 https://youtu.be/729o_Xwg1WU \u2191 https://youtu.be/R_cSJCzHfZc \u2191 https://pastebin.com/raw.php?i=Y5jM1idd Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock",
    "content": "A clock circuit is a redstone circuit that produces a clock signal: a pattern of pulses that repeats itself.\n\nClock generators are devices where the output is toggling between on and off constantly.\n\nThe customary name x -clock is derived from half of the period length, which is also usually the pulse width.\n\nFor example, a classic 5-clock produces the sequence...11111000001111100000...\n\non the output.\n\nUsing only redstone torches and wire, it is possible to create clocks as short as a 3-clock.\n\nUsing repeaters or pistons allows easy construction of any clock down to 1-clocks, and other devices can also be pressed into service.\n\nThere are also special circuits called \"rapid pulsers\", which produce rapid pulses like a 1 tick clock, but inconsistently due to torches burning out.\n\nIndeed, torch based rapid pulses can be too fast for repeaters.\n\nEven with repeaters in use, 1-clock signals are difficult to handle in other circuits, as many components and circuits do not respond in a timely fashion.\n\nCreating long clocks (more than a few ticks) can be more difficult, as adding repeaters eventually gets unwieldy.\n\nHowever, there are a number of approaches here, which are discussed in a separate section.\n\nClocks without an explicit toggle can often have one retrofitted, by wiring a lever or other switch to the controlling block of an inverter, or even to a redstone loop.\n\nIn general, forcing the delay loop high eventually stops the clock, but the output may not respond until the current pulse has made its way through the loop.\n\nWhether the output gets stopped high or low depends on the clock and where in the loop players force it.\n\nAnother option is to use a lever-controlled piston to open or close one of those loops, using either a solid block to transmit power, or a block of redstone to supply it.\n\nWhile it isn't much discussed in the circuit builds below, there is one additional concept that is occasionally important: Phase.\n\nThe phase of a running clock is the point it has reached in its cycle.\n\nFor example, at one moment a 5 clock might be 3 ticks into its ON phase, 4 ticks later, it is 2 ticks into its OFF phase.\n\nA long-period clock might be noted as 2 minutes past the start of its ON phase.\n\nThe exact beginning of a cycle depends on the clock, but it is usually the start of either the OFF phase or the ON phase.\n\nFor most cases, phase doesn't matter because they just need pulses every 7 ticks or so.\n\nHowever, in-game computing circuits are more demanding, and if they are doing a daily clock, they should care whether the on phase is day or night.\n\nSchematic Gallery: Rapid Pulsar View at: Mechanics/Redstone/Clock circuit/Torch rapid pulsers [edit ] Redundancy can be used to maintain a 1-clock, even as the torches burn out; the result is the so-called \"Rapid Pulsar\" (designs X, Y and (vertical) Z).\n\nHowever, the signal may not be consistent.\n\nDevice R creates energy in an irregular sequence.\n\nIt is a variant of the \"Rapid Pulsar\" design shown above, except that each torch pulses in an irregular pseudo-random pattern as each torch coming on turns the other three (and itself) off.\n\nOccasionally torches burn out for a few seconds (until reset by a block update), during which time other torches blink.\n\nAs of version 1.5.1, this is likely to favor one pair of torches, such as the east and west torches, which blink while the others stay dark.\n\nOutput can be taken anywhere on the circuit.\n\nAlthough \"pulser\" is the correct spelling for any general circuit that produces pulses, the traditional spelling of a clock circuit created from short-circuited redstone torches is \"rapid pulsar\".\n\nRandom Short Generator Random Short Generator from top Vertical Torch 5-clock (G) View at: Redstone circuits/Clock/Vertical torch 5-clock [edit ] Compact Torch 5-clocks (B and C) View at: Redstone circuits/Clock/Compact torch loops [edit ] Basic 5-clock pulser (A) The basic torch pulser is the oldest clock circuit in Minecraft, simply an odd number of inverters (NOT gates) joined in a loop.\n\nThe design has been mostly replaced by repeater-based clocks, but still works.\n\nDesign A shows a 5-clock, which had historically been the shortest clock that can easily be made this way.\n\nIts pulse length can be extended by adding pairs of torches, while the inclusion of repeaters would turn it into a torch-repeater clock.\n\nDesigns B and C show torch 5-clocks with a smaller footprint, while design G is a vertical version of the 5-clock.\n\nUsing this principle, it is possible to create 1-clocks and 3-clocks, but the first one is unstable and erratic as the torch would \"burn out\" and require a block update to reactivate it.\n\nThe same used to apply to 3-clocks before an unknown Minecraft version.\n\nTorch 4-clock (D) View at: Redstone circuits/Clock/Torch 4-clocks [edit ] Design D uses a different method to produce a torch-only 4-clock.\n\nHere, each torch's output is fed into two other torches, instead of only one as in a basic torch loop.\n\nIt resembles a pair of interconnected RS-NOR latches.\n\nA clock signal can be generated by introducing a pulse into a loop of repeaters.\n\nRepeater Loop 1-Clock Repeater Loop 1-Clock \u2013 The torch and block of redstone can be removed after the clock is running.\n\n2\u00d73\u00d72 (12 block volume) flat, silent clock output: 1 tick on, 1 tick off The simplest repeater clock is simply two repeaters connected with redstone dust in a loop.\n\nThe tricky part is introducing a 1-tick pulse into the loop.\n\nIf the pulse is too long, the repeaters are powered permanently and the only way to fix it is to break and then fix the circuit.\n\nA simple solution to this is to use a lever; flipping it on and then off 1 tick later.\n\nThe most common method seems to be to place a redstone torch next to the clock, then quickly break it.\n\nThis may take several attempts to do correctly, requiring the clock be broken and fixed between attempts.\n\nA more reliable method (shown right) is to place the torch on a powered block (a block of redstone, or any block powered by another torch or other power source) \u2013 the torch is on when placed, but turns off 1 tick later because it's attached to a powered block.\n\nThe torch and powered block can then be removed, but stopping the clock later still requires breaking it.\n\nVariations: The dust in front of the repeaters can be replaced with blocks to save on redstone.\n\nAdditional repeaters can be added to the loop, increasing the clock period.\n\nAs long as all the repeaters are kept to a 1-tick delay, the pulse remains only 1 tick long no matter how many repeaters are added.\n\nIf the delay is increased on any of the repeaters, the pulse length increases to match the longest repeater delay.\n\nSwitchable Repeater Loop 1-Clock Switchable Repeater Loop 1-Clock \u2013 The piston is sticky.\n\n3\u00d74\u00d72 (24 block volume) flat, silent (while running) clock output: 1 tick on, 1 tick off This repeater loop can be switched on and off, by moving a block to complete or break the circuit loop.\n\nHow it works: When the lever turns on (t = 0 redstone ticks), the sticky piston begins to extend.\n\nAt t=1, the torch turns off, but the left repeater stays powered for 1 more tick.\n\nAt t=1.5, the piston finishes extending and the moved block gets powered by the left repeater.\n\nAt t=2, the left repeater turns off.\n\nAt t=2.5, the right repeater begins to output the power passed to it by the block.\n\nFrom here on, it just continues as a 1-clock until the lever is turned off, breaking the loop.\n\nRepeater Loop 10 Hz Clock Repeater Loop 10 Hz Clock 3\u00d74\u00d72 (24 block volume) flat, silent clock output: 1 tick on, 0 ticks off This clock produces a 10 Hz clock signal (10 activations per second) consisting of 1-tick on-pulses separated by 0-tick off-pulses (the off-pulse exists, but it is replaced by an on-pulse in the same game tick).\n\nStart the clock with a 1-tick pulse (for example, by placing a torch on a powered block).\n\nStop the clock by breaking a piece of redstone dust.\n\nAlternatively, the switchable method described above may be used.\n\nA 10 Hz clock runs too fast for some redstone components to respond to.\n\nCommand blocks and note blocks can handle the rapid activation.\n\nDoors, trapdoors, and fence gates produce sounds as if being activated and deactivated that quickly, but appear and act as if constantly activated.\n\nPistons act as if constantly activated, but the 0-tick off-pulses produce the flickering appearance of a deactivated piston overlapping the activated piston.\n\nOther redstone components simply act as if constantly powered.\n\nA compact torch-repeater clock, set to three ticks Since the introduction of the repeater, the torch-loop clocks have been generally replaced with torch-repeater loops.\n\nIn these clocks, most of the delay comes from repeaters, with a single torch to provide oscillation.\n\nSuch clocks can't be shorter than a 3-clock (or the torch burns out), but they can be extended almost indefinitely (subject to space and material limits).\n\nHowever, once the loop reaches 9-16 repeaters (delays of 36-64 ticks), a TFF or clock multiplier can increase the period more cheaply (and compactly) than adding huge numbers of repeaters.) These examples are all (R+1)-clocks where R is the total repeater delay (that is, they spend R+1 ticks OFF, then the same time ON.\n\nAll have at least one potential input that turns the clock OFF within half a cycle (after any current ON-phase passes the output).\n\n(Feeding an ON signal into the output also stops the clock, but of course then the output is high.) When the power turns off, the clock automatically restarts.\n\nBasic Torch-repeater Clock View at: Mechanics/Redstone/Clock circuit/Basic torch-repeater clock [edit ] Design A shows a basic loop clock.\n\nThe repeaters must have a total delay of at least 2 ticks, or the torch burns out.\n\nPowering the block turns off the clock.\n\nAs many repeaters as needed can be added, and the loop can be expanded as needed with dust for cornering.\n\nThe circuit as shown is flat, but large loops can be run onto multiple levels, to cut down on sprawl.\n\nVertical Extended Clock View at: Mechanics/Redstone/Clock circuit/Vertical extended clock [edit ] Design E is an extensible vertical clock.\n\nIts minimum size is 1\u00d75\u00d74, but it can be extended indefinitely, adding 2 repeaters (up to 8 ticks delay) for each block of extension.\n\nAs shown, it has a minimum delay of 5 ticks.\n\n(This can be reduced to 3 or 4 by replacing repeaters with dust, or by using D instead.) A lever or redstone signal behind the torch stops the clock with output OFF (once any current ON-phase passes the output).\n\nThe pink and magenta wool blocks or redstone trails can be used for output; the magenta side is inverted.\n\nVertical Compact Clock View at: Mechanics/Redstone/Clock circuit/Vertical compact clock [edit ] Design D is a tiny vertical clock, a compressed form of E, that can output a 3, 4, or 5-tick cycle.\n\nEarliest Known Publication: June 30, 2011 [1] The period is the repeater's delay plus 1, but the repeater must be set to at least 2 ticks or the torch burns out.\n\nThis circuit is formally 1\u00d73\u00d73, but is most commonly built as a \"V\" on the ground, and can easily be buried entirely.\n\nA lever on, or redstone signal to, any of the four solid blocks can stop the clock.\n\nThe torch is forced \"off\" while the dust is lit.\n\nOutput can be taken almost anywhere, with a few exceptions: The blocks \"crosswise\" from the redstone dust (pistons work, but dust or a repeater is likely to jam the clock).\n\nThe block under the repeater (a repeater or piston next to it is out-of-phase, and dust does not light).\n\nOutput from the dust side is reverse phase.\n\nComparators can be used to make fast clocks and slow pulsers.\n\nSubtraction 1-Clock Subtraction 1-Clock 2\u00d72\u00d72 (8 block volume) flat, silent clock output: 1 tick on, 1 tick off A subtraction 1-clock toggles on and off every tick.\n\nIt uses a redstone comparator in subtraction mode, with the output feeding to the comparator's side input.\n\nWhen the comparator first receives full power, it outputs strength 15 to the block in front of it, which passes the same signal strength to the dust next to it.\n\nThe signal strength then declines by 1 (to 14) as it moves to the dust next to the comparator.\n\nIn the next tick, the comparator subtracts 14 from its 15 input to output only signal strength 1.\n\nThis is enough to barely power the block and the dust next to the block, but isn't strong enough to reach back to the dust next to the comparator, so on the next tick the comparator subtracts 0 from its input and the cycle starts again.\n\nInline Subtraction 1-Clock 2\u00d73\u00d72 (12 block volume) Only the redstone dust next to the comparator actually toggles between on and off \u2014 the comparator, the block in front of it, and the dust next to the block toggles between signal strength 15 and 1.\n\nAdd additional dust lines to these points to take output from them and allow the signal strength to decline to at least 14 and 0.\n\nA subtraction clock doesn't require full power for input \u2014 it works even with an input strength as small as 2.\n\nVariations: Players can use any full container as the \"input\" if a power source would be inconvenient in that location (such as right next to the output).\n\nEarliest Known Publication: February 9, 2013 [2] Subtraction N-Clock Subtraction N-Clock 2\u00d73\u00d72 (12 block volume) flat, silent clock output: 2-5 ticks on, 2-5 ticks off With the repeater set to a 1-tick delay, this is a 2-clock (2 ticks on, 2 ticks off).\n\nIncrease the repeater delay to slow the clock down, or even add additional repeaters.\n\nIf the input strength is higher than 1, the block behind the repeater can be replaced with redstone dust; if higher than 2, the block in front of the comparator can also be replaced with redstone dust.\n\nOutput can be taken from anywhere as long as the dot of redstone dust can power the block behind the repeater.\n\nA fader pulser is useful for making small clocks with periods less than 15 seconds (for longer periods, hopper clocks can be smaller), but they are difficult to adjust to a precise period.\n\nThey use a fader circuit (aka \"fader loop\" \u2013 a comparator loop where the signal strength declines with every pass through the loop because it travels through at least one length of two or more redstone dust), renewed by a redstone torch every time it fades out.\n\nFader 9-Pulser \u2192 \u2192 Fader 9-Pulser 1\u00d74\u00d74, 1-wide, silent clock output: 1 tick on, 8 ticks off When the input turns off, the redstone torch initially \"charges\" the fader loop at signal strength 15.\n\nThere's only one comparator in the loop so each cycle through the loop takes only 1 tick, and the signal strength declines by 2 each time through the loop, so the fader loop remains charged for 8 ticks.\n\nThe redstone torch then turns on for only one tick because it short-circuits itself (the torch does not burn out because it's held off most of the time by the fader circuit).\n\nFader 29-Pulser Fader 29-Pulser 2\u00d74\u00d72, flat, silent clock output: 2 ticks on, 27 ticks off When the input turns off, the redstone torch initially \"charges\" the fader loop at signal strength 14 at the dust next to the block (the signal strength declined by 1 getting there from the torch).\n\nThere are two comparators in the loop so each cycle takes 2 ticks, and the signal strength declines by 1 each time through the loop, so the fader loop remains charged for 28 ticks.\n\nOne tick later, the redstone torch turns back on, re-powering the fader loop (it stays on for 2 ticks so it overlaps the fader loop's on time by one tick).\n\nVariations: \u2190 Fader 29-pulser vertical version Add more comparators to increase the clock's period.\n\nAdd redstone between the first set of comparators to limit the on ticks to 2 Skip the redstone torch for a non-repeating version (pulse extender).\n\n1.16+ vertical version doesn't work because of redstone changes Alternates between two different signal strengths every other tick.\n\nCan be used to compact circuits that require lockstep timing.\n\nA hopper clock (a.k.a.\n\n\"hopper timer\") uses the movement of items between at least two hoppers to create a clock signal.\n\nGeneral aspects: flat/tileable noisy/silent clock output: from 4 ticks on, 4 ticks off to hours and days or short impulses clock period: from 8 ticks to hours and days Go to #Hopper clock schematics for details.\n\nHopper-Loop Clock N-Hopper-Loop Clock Shown: 4-Hopper-Loop Clock.\n\nEthonian Hopper Clock (EHC) \u2013 Both pistons are sticky.\n\n1-Wide Compact EHC 1-Wide Tileable EHC 1-Wide Upside-Down EHC Non-stick EHC \u2013 doesn't require sticky pistons Hopper Timer (self-locking EHC with trigger input) RS NOR Latch Hopper Clock 1-Wide RS NOR Latch Hopper Clock Hopper-Latch Hopper Clock Sethbling's Hopper Clock SethBling's Hopper Clock (Simplified) SethBling's Hopper Clock (Amputated) Multiplicative Hopper-Dropper Clock 3-Stage Vertical MHDC \u2014 72 block volume, clock period up to 10.7 years This sub-page contains ~24 schematics.\n\nOpen it only if needed.\n\nHopper clock details and schematics View at: Mechanics/Redstone/Clock_circuit/Hopper_clocks [edit ] Or open the same page on its own: Hopper clocks \u2074 \u00b2 \u00b2 \u2074 Dropper-Dropper Clock Variation 7\u00d74\u00d73 (84 block volume) different timings Dropper-Dropper Clock 7\u00d74\u00d72 (56 block volume) clock period: 4 ticks/item (up to 230 seconds) Earliest known publication: Apr 24, 2018 [3] Simple design that does not require iron, because it uses no hoppers or pistons.\n\nHowever, it does require nether quartz.\n\nPulsing output can be taken from the long dust trails in the top-right and bottom-left corners, while stable output can be taken from 1-tile dusts at top-left and bottom-right.\n\nThe repeaters at the top and bottom are set to 3 ticks.\n\nThe clock may need resetting after reloading the world.\n\nA despawn clock uses item despawn timing to create a clock signal.\n\nSimply approaching a despawn clock can interfere with its timing, because any player might accidentally pick up the despawning item.\n\nDropper Despawn Clock \u2192 \u2192 Dropper Despawn Clock Additional blocks are required on each side of the pressure plate.\n\nThe dropper is filled with items.\n\n3\u00d73\u00d72 (18 block volume) clock output: 5 minutes off, 3-7 ticks on Start the clock by turning off the input.\n\nThe torch turns on, the dropper drops an item on the pressure plate turning the torch off.\n\nAfter 5 minutes, the item despawns (disappear) and the pressure plate deactivates, allowing the torch to turn on, causing the dropper to eject another item onto the pressure plate.\n\nIf completely filled with items, the dropper must be re-filled every 48 hours, or continually supplied with items from a hopper pipe.\n\nTwo chickens constrained above a hopper can keep a dropper despawn clock supplied with eggs indefinitely.\n\nVariations: Longer clock periods can be achieved by chaining multiple despawn clocks together, so that each torch triggers the next dropper instead of its own.\n\nWhen chaining multiple despawn clocks, the dropper must be placed so that it is activated only by the previous torch and not the previous pressure plate.\n\nA dispenser can also be used, instead of a dropper, but is slightly more resource-expensive (and not advised with use of eggs).\n\nSummon Despawn Clock Note: This circuit uses command blocks, which cannot be obtained legitimately in Survival mode.\n\nThis circuit is intended for server ops and adventure map builds.\n\n\u2192 \u2192 Summon Despawn Clock 1\u00d72\u00d72 (4 block volume) clock output: up to 32 minutes off, 1.5 ticks on The command block executes a command to summon an item onto the pressure plate.\n\nThe exact command can vary, but looks something like this: / summon Item ~1 ~ ~ {Age:X,Item:{id:\"minecraft:stick\",Count:1b }} The command above summons an item entity (an item in the world, rather than in a player or container inventory), one block in the +x direction (west) from the command block, and specifies that the item is a stick and has an \"age\" of X.\n\nReplace X with a value that determines how long the item should last before despawning: 6000 - 20 \u00d7 <seconds> (for example, 5940 for a 3-second despawn).\n\nEvery game tick, this value increases by 1, and the item despawns when the value reaches 6,000.\n\nNormally, items start at 0 and last 5 minutes (6000 game ticks = 300 seconds = 5 minutes), but setting the item entity's initial Age changes that.\n\nWhen calculating X for a specific clock period, note that pressure plates stay active for a short period after the item despawns.\n\nA wooden pressure plate takes 10 ticks (1 second) to deactivate after the item despawns and a weighted pressure plate takes 5 ticks (0.5 seconds).\n\nThis also limits how fast a summon despawn clock can be made to run.\n\nX can be negative for clock periods greater than 5 minutes (for example, -6000 for a 10-minute despawn).\n\nThe maximum time possible is a little over 32 minutes, with X = -32768 (-32768 = 27.3 minutes, plus another 5 minutes to get to +6000).\n\nStart the clock by turning off the input.\n\nNote: These circuits use command blocks, which cannot be obtained legitimately in Survival mode.\n\nThese circuits are intended for server ops and adventure map builds.\n\nA setblock clock works by replacing a block of redstone or a redstone torch repeatedly with a command block activated by the block of redstone it places.\n\nA / setblock command takes 0.5 ticks to place a block, so these clocks are capable of producing 20 0-tick pulse per second.\n\nOnly redstone dust, note blocks, and other command blocks can activate that rapidly \u2013 other mechanism components and repeaters powered by a setblock clock usually pulse only 5 times per second (like a 1-clock), while comparators may activate once and then stay on or not activate at all.\n\nTo prevent the destroyed blocks from dropping items use / gamerule doTileDrops false.\n\nTo prevent the clock from spamming the chat use / gamerule commandBlockOutput false.\n\nTo prevent the clock from spamming the server log use / gamerule logAdminCommands false.\n\nBoth of these clocks begin running as soon as they're built.\n\nTo turn them off, activate the command block setting the block of redstone from a secondary source.\n\nTo turn them back on, remove the source of secondary activation and replace the block of redstone.\n\nSetblock Clock \u2192 Setblock Clock 1\u00d71\u00d72 (2 block volume) 1-wide clock output: 0-tick pulse every 0.5 ticks.\n\nThe command block should have the following command: setblock ~ ~1 ~ minecraft:redstone_block 0 destroy.\n\nVariations: The command block and block of redstone can be configured in any direction.\n\nSilent Setblock Clock \u2192 S R Silent Setblock Clock 1\u00d71\u00d72 (4 block volume) 1-wide, silent clock output: 0-tick pulse every 0.5 ticks.\n\nCommand block \"R\" should have the following command: setblock ~ ~-1 ~ redstone_block.\n\nCommand block \"S\" should have the following command: setblock ~ ~1 ~ stone (or any other solid opaque block that doesn't cause light updates when replacing the block of redstone).\n\nVariations: The command blocks and block of redstone can be configured in any way that the block of redstone can power both command blocks simultaneously, but command block \"S\" executes before command block \"R\" (command blocks that are powered simultaneously activate from lowest coordinate to highest coordinate on each axis).\n\nFill Clock R a a a a S a a a a Fill Clock A fill clock works just like either version of the setblock clock, except it uses the / fill command to setblock an entire volume with blocks of redstone.\n\nThis allows the clock to activate or power many locations at once without lines of redstone dust requiring support blocks.\n\nCommand block \"R\" should have the following command: fill ~ ~-1 ~ ~4 ~-1 ~ redstone_block.\n\nCommand block \"S\" should have the following command: fill ~ ~1 ~ ~4 ~1 ~ stone (or any other solid opaque block that doesn't cause light updates when replacing the block of redstone).\n\nAdjust the commands for the number of blocks of redstone required and the direction they are oriented.\n\nPositions \"a\" could be command blocks, note blocks, etc.\n\nPistons can be used to create clocks with a modifiable pulse delay without the use of pulse generators.\n\nIn Java Edition pistons can be clocked in a fashion that leaves the arm extended only for the time required to push an adjacent block.\n\nHowever, note that if sticky pistons are regularly used this way (that is, as a 1-clock), they can occasionally \"drop\" (fail to retract) their block, which usually stops the clock.\n\n(Specifically, if the setup allows for a pulse less than 1 tick long, that causes a sticky piston drop its block.\n\nThis can be useful, notably for toggles.) Piston clocks in general can be easily turned off or on by a \"toggle\" input T.\n\nMinimal Piston Clock (A) View at: Mechanics/Redstone/Clock circuit/Minimal piston clock [edit ] Design A requires only a sticky piston and redstone wire, and is controllable.\n\nIt runs as long as the toggle line (its power source) is on, and turns off when the toggle line is off.\n\nRepeaters can be added to increase its delay.\n\nIf the repeater is replaced with wire, it can be used as a 1-tick clock, but it is prone to \"dropping\" its block.\n\nMinimal Dual-Piston Clock (B) View at: Mechanics/Redstone/Clock circuit/Minimal dual-piston clock [edit ] Design B shows how to counter block dropping with an optional, non-sticky, piston.\n\nThe non sticky piston (the bottom one) is needed for the 1 tick clock as a self repair mechanism.\n\nIt prevents detaching of the moving block from the sticky piston.\n\nIf using it only for a 1-tick cycle, the repeater (under the extended piston) can be replaced with redstone wire.\n\nThe toggle line stops the clock on a high signal.\n\nDual Block Piston Clock (C) View at: Mechanics/Redstone/Clock circuit/Dual block piston clock [edit ] Design C requires two sticky pistons, and can be easily stopped by just setting one side of the redstone high.\n\nThe repeaters can be indefinitely extended to make a long delay clock.\n\nCompact Sticky Piston Clock (D) View at: Mechanics/Redstone/Clock circuit/Compact sticky piston clock [edit ] Design D needs just one sticky piston, but at the repeater must be set to 2 or more ticks.\n\nIf it is set to one tick, the torch burns out.\n\nThe output signal can be taken from any part of the circuit.\n\nThis design can also be controlled; a high input on the toggle line stops the clock.\n\nAdvanced 1-tick Piston Clock (F) View at: Mechanics/Redstone/Clock circuit/Advanced 1-tick piston clock [edit ] Design F is an unusual, stable, 1-tick piston clock.\n\nUnlike most repeater-based 1-clocks, its signal is fast enough to make a sticky piston reliably toggle its block, dropping and picking it up on alternate pulses.\n\nFor the clock to work, the block the piston moves must be placed last.\n\nThe piston extends and retracts quickly.\n\nThe output wire appears to stay off, because it's changing state faster than the game visually updates.\n\nHowever, attaching a redstone lamp, dispenser, dropper, piston, etc.\n\nto the output shows that it is working.\n\nThe clock can be turned off by a redstone signal (e.g.\n\nthe lever shown on the block below it) to the piston.\n\nThis clock is 2 blocks high, 3 wide, and 5 long.\n\nThere is a solid block under the piston.\n\nThe redstone torch between the repeater and the output line is at ground level.\n\nSimple 1-tick Piston Clock (G) View at: Mechanics/Redstone/Clock circuit/Simple 1-tick piston clock [edit ] Design G is the simplest design and can be used to create rapid clocks.\n\nHowever, it is not controllable, so the only way to stop such a circuit, without adding additional parts, is to break one component (one redstone wire is recommended).\n\nPlace a block of redstone on a sticky piston, then lay down redstone so that the block powers the piston.\n\nThen, once the piston is powered and moves the block, the redstone current stops, pulling the block back to the original position, which causes the block to power the wire again, and so on.\n\nThis clock creates a 0-tick pulse every 3-gameticks.\n\nOverview of design H This feature is exclusive to Java Edition.\n\nDesign H is the simplest and the only one used vertically.\n\nTo make this design, place a sticky piston facing up with a redstone wire next to it on one edge.\n\nNext to the redstone wire but still 1 block away from the piston, place a solid block and place redstone wire on top of it.\n\nThen, next to that block, but still 1 block away from the piston, place obsidian two blocks up with a redstone wire on top of it.\n\nAbove the sticky piston place a slime block.\n\nFinally, on top of that, place a redstone block.\n\nThe clock activates immediately.\n\nIt works on the principle of quasi-connectivity, and the wire directly next to the piston is used to update it.\n\nPlayers can also add on to this design and make it toggleable.\n\nTo do this simply make a sticky piston push a solid block blocking the path from the redstone block to the piston.\n\nBecause solid blocks stop redstone from connecting with a block diagonally, this stops the piston from powering on again and starting the clock again.\n\nPlayers can connect a lever to finish this addition.\n\n0-tick clocks make use of 0-tick pulses and 0-tick chaining to create 0-tick pulses on a regular basis.\n\nSimplest reliable 3-gt clock Every 3 gameticks, the redstone block is 0-ticked to left and then 0-ticked back, creating a 0-tick pulse.\n\nThe clock can be toggled by cutting the redstone line on the right Front half of the clock Back half of the clock This redstone clock create two 0-tick pulses every 3 gameticks.\n\nThe 0-tick pulses are timed with the correct block event delay to allow the pulses to reliably chain two 0-tick pulses.\n\nWhen the repeater is powered, the back sticky piston starts extending.\n\nThis un-cuts a redstone wire below the block, causing the front sticky piston to be powered and extend, causing the back piston to 0-tick tick block.\n\nThis then causes the top block to get 0-ticked back, cutting the bottom wire again, and outputing a 0-tick pulse on the left.\n\nThis causes the front piston to get 0-ticked, which then gets 0-ticked back, creating the second 0-tick output on the right.\n\nA 1-gt clock This clock makes use of three modules that output a signal every 3 gameticks, offset from each other by 0 gameticks, 2 gameticks, and 4 gameticks respectively.\n\nThis outputs a pulse every gameticks, or 20 times a second.\n\nA basic minecart clock A vertical minecart clock (outputs out the sides) Rail Clock C View at: Mechanics/Redstone/Clock circuit/Rail clock C [edit ] Rail Clock B View at: Mechanics/Redstone/Clock circuit/Rail clock B [edit ] Rail Clock A View at: Mechanics/Redstone/Clock circuit/Rail clock A [edit ] Minecart clocks are simple, easy to build and modify, but are somewhat unreliable.\n\nA minecart clock is made by creating a small track rails with one or more powered and detector rails, arranged so that a minecart can run forever either around the track (A), or back and forth from end to end (B, C).\n\n(These need not be sloped\u2014properly placed powered rails lets a minecart \"bounce\" off solid blocks \u2014 but the player get some extra time as the cart slows down.) The redstone torch can also be placed in the center of the rails, making it more compact.\n\nA larger vertical track (design C) is claimed to produce an exceptionally stable clock.\n\nNote that the minecart never quite hits the top of the track.\n\nWhen running an empty minecart on the loop or back-and-forth, the cart generates redstone signals as it passes over the detector rail(s).\n\nMinecart clocks can be extended or shortened easily by adding and removing track, to adjust the delay between signals.\n\nOn the flip side, they are easily disrupted by wandering players or mobs, and a long clock can take a fair bit of space.\n\nAlso, the exact period is generally not apparent from the design.\n\nThe need for gold in the booster rails can also be a problem for some players.\n\nTwo observers watching each other makes for a compact rapid clock.\n\ncreating a 1 redstone tick clock (2gt).\n\nA single observer could also be used as output, creating a 2 redstone tick (4gt) clock.\n\nOne observer with redstone to let it watch itself can also be used.\n\nWrap the redstone from the observing point over the top and around one side of the observer to the input.\n\nBreak and replace the redstone being observed.\n\nYou can add repeaters for longer periods.\n\nTo switch the clock on of off, a lever can force the circuit high as usual, or a piston can be used to move one of the observers.\n\nAlternating piston clock.\n\nIn one tick, the other observer senses that there is a red stone signal in the first one and output its own redstone signal.\n\nThe first observer then senses this the next tick, and so on.\n\nCreating long repeater loops can be expensive.\n\nHowever, there are several sorts of clocks that are naturally quite long, or can easily be made so, and some are described above: Devices can send item entities through the world: Items flowing on a stream, falling through cobwebs, or just waiting to despawn (that's a 5-minute timer provided by the game).\n\nDroppers or dispensers, and hoppers with comparators, can be quite useful here.\n\nAdditional stages added to the multiplicative hopper-dropper clock each multiplies the previous clock period by up to 1,152, quickly increasing the clock period beyond any reasonable use.\n\nA simple despawn clock is shown above.\n\nThese do have a couple of liabilities: If the pressure plates are not fully enclosed, the trigger item may fall to one side, stopping the clock.\n\nThe droppers eventually run out of items.\n\nA droppers full of (e.g.) seeds serve for 48 hours, that is 2 days of real time.\n\nIf this is insufficient, hoppers and chests can be added to refill the dropper (12 days per chest's worth).\n\nAlternately, a pair of chickens can provide enough eggs to keep the clock going indefinitely.\n\nA small full-auto melon or pumpkin farm can also serve to fill the hoppers.\n\nBoats and minecarts can be used with pressure plates or tripwires.\n\nPseudoclocks can even be based on plant growth.\n\nFor these, timing isn't exact, but they can still be useful for getting occasional signals over long periods.\n\n\"Factorial stacking\" of clocks: Precise clocks (that is, repeater or repeater-torch loops) with different periods may be connected to an AND gate in order to generate larger periods with much less expense.\n\nOne way to make a 60-second (600 ticks) would be to use 150 repeaters set on 4-ticks of delay, or players could connect two clocks with the periods of 24 and 25 ticks (that's 13 repeaters) to an AND gate.\n\nNote that if the input clocks' on state is longer than 1 tick, they must filter them with an Edge Detector or Long Pulse Detector, to prevent overlapping on imperfect syncs.\n\nThe disadvantages here are: The circuitry can be fairly finicky, and players may need a circuit just to start all the clocks simultaneously.\n\nThe lengths of the sub-clocks need to be chosen to avoid common factors in their periods.\n\nThis list of the first few prime numbers may be useful: 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103.\n\nAny one of the clocks can be an integer power of a different prime, and they do not share factors or they occasionally \"beat\" together, causing an extra or missed pulse.\n\nA cycle of 1 Minecraft day (24000 game ticks, but 12000 redstone ticks) can be produced by stacking clocks of periods 125, 32, and 3.\n\nA multiplier (as described below) may be helpful for the longest of these.\n\nThen there's the obvious: the daylight detector acts as a clock with a period of one in-game day.\n\nThe duty cycle can be adjusted by using comparators at different threshold values.\n\nKeep in mind that weather may interfere with this, and of course the phase is fixed.\n\nThe daylight sensor does offer a unique feature: Since it responds to the actual progress of the game day, it does not lose time if its chunk is unloaded.\n\nNaturally if its chunk is not loaded, it can't actually activate any circuitry, but when a player comes by later, the clock remains in sync with the daily cycle.\n\nBy comparison, suppose that (say) an MHDC with TFFs extending it to 20 minutes is started at dawn, but the chunk is then unloaded.\n\nWhen the player comes back to reload the chunk (say, at dusk), the clock continues counting its 20 minutes from wherever it left off.\n\nThere are also a couple of extension techniques that apply to any clock whatsoever, including irregular pseudoclocks: A T flip-flop can be used to double the period of any clock.\n\nThis also converts the pulse to have the same length ON and OFF, if it didn't before.\n\n(Pseudoclocks are not completely regularized, but they get smoothed out.) Latched repeaters allow production of a general clock multiplier, detailed below.\n\nThis can be used to multiply the period of any clock, and they can be used in series.\n\nLatching Clock multiplier View at: Mechanics/Redstone/Clock circuit/Clock multiplier [edit ] This nearly-flat circuit (also known as a ring counter) takes a clock input of period P and any pulse length, and outputs as a clock of period N\u00d7P, where N is the number of latches used; the output is on for a pulse length of P, and off for the remaining (N-1)\u00d7P.\n\nN is limited to 12 or so by redstone signal attenuation; however, the design can simply be repeated to multiply the period again, e.g.\n\na 21-multiplier can be made by chaining a 7-multiplier and a 3-multiplier.\n\nThis can be continued indefinitely, and unlike factorial stacking there is no restriction on the multipliers.\n\nThe build is somewhat tricky: The multiplier loop is in fact a torchless repeater-loop clock.\n\nThis needs to be started separately, before the latches are engaged.\n\nThe easiest way to start it is probably to add a temporary \"startup circuit\" starting 4 blocks from the dust part of the loop: Place a power source, then dust and a block for it to power.\n\nFinally place a redstone torch on the block, positioned to power the redstone loop.\n\nThe torch flashes on for one tick before \"realizing\" it is powered, and this starts the loop as a clock, which cycles until the latches are powered.\n\nThis startup rig can then be removed.\n\nThe latches are driven by an edge detector, which takes a rising edge and produces an OFF pulse; the pulse length must match the delays of the latched repeaters, so that the multiplier's pulse advances one repeater per edge.\n\nThe delay/pulse length must also be no longer than the input clock, so it's probably best to keep them both at 1.\n\nNote that the delays of the latched repeaters are not actually part of the output period; the latches count off input edges.\n\nThe circuit's output is ON while the last repeater is lit and lighting the dust loop.\n\nThis circuit need not be fed with a regular clock.\n\nWith any varying input, it counts N rising edges and output HIGH between the (N-1) th and N th rising edge.\n\nVariations: A T flip-flop can be used to \"normalize\" the pulse to half on/half-off, while doubling the output period.\n\nDesign L5 from that page is suitable and compact.\n\nBy separating the latched repeaters with redstone dust (to read their signals individually), this circuit could be generalized into a \"state cycler\", which can activate a series of other circuits or devices in order, as triggered by input pulses.\n\nThe return line can be run underneath the clock, making the build higher but narrower, or the entire repeater-latch loop can be extended to run backward on a lower level, similar to Torch-Repeater Clock design E.\n\nIf used as a state cycler, this also makes the dust between the steps more accessible.\n\nEfficiency: An efficient approach to making long-period clocks is to start with a repeater loop of 9 to 16 repeaters (up to 64 ticks), then add multiplier banks with N of 7, 5, and 3 (bigger is more efficient).\n\nDoublings should be done with T flipflops, as 2 of those are cheaper and perhaps shorter than a 4-multiplier.\n\nA couple of notes: Using two 7-multipliers (\u00d749) is slightly more expensive, but shorter, than getting \u00d750 with 5\u00d75\u00d72, or getting \u00d748 with 3\u00d74\u00d74 or 6\u00d78;.\n\nAn 8-multiplier is slightly more expensive, but shorter, than separate 2- and 4-multipliers.\n\nHowever, two of them are both longer and more expensive than three 4-multipliers.\n\nEarliest Known Publication: October 22, 2012 [4] By using a ring of redstone repeaters tapped at specific intervals and an OR gate set in a feedback loop extremely long durations can be created.\n\nDurations of minutes, hours, even days can be created using a minimal amount of parts.\n\nClock cycle time = 0.4 \u00d7 (2 n - 1) seconds.\n\nHence each time the player add a single redstone repeater, they can effectively double the cycle time.\n\nThe same circuit can be used to create long duration clocks and delays of any duration in 0.4s increments.\n\nSuper Delay on YouTube [1] Copy of working minecraft save game [2] Below is an example of a free running 10 element clock that takes 409.2 seconds (6.82 minutes) to cycle.\n\nIt outputs from the XOR Gate a unique stream of 0's and 1's that repeats every 409.2 seconds.\n\nTo turn it into a clock all we need to do is add a 10-Input Decoder that looks for one of those unique sequences.\n\nA NAND gate goes low when all redstone repeaters are outputting high.\n\nBy adding a RS flip-flop, we can reset our clock.\n\nHere is a version where the decoder resets the clock at the 3 minute mark.\n\nIn electronics this device is commonly known as a \"Linear Feedback Shift Register\" (LFSR), players can make them count up, count down, create psudo-random binary sequences for testing logic circuits.\n\nIn TCP/IP a 32-bit 'Linear Feedback Shift Register' is used to perform data integrity checks ie CRC-32.\n\nLFSR's also create the codes for CDMA phones and GPS (Global Positioning System).\n\nNote that the XOR gate takes it inputs (Taps) from redstone repeater 7 and 10.\n\nFor simplicity sake, these have been listed 2 tap LFSR sequences.\n\nIn Minecraft, one could make a 1-many delay line structure to create more complicated clocks.\n\n\u2191 \"ZirumsHeroTWR\" (June 30, 2011).\n\n\"Cobblestone Factory\" (Video).\n\nYouTube.\n\n\u2191 \"plzent3r\" (February 9, 2013) \"Easy and Fast Clock using Comparators - Minecraft\" \u2191 \"SapioStevey\" (Apr 24, 2018).\n\n\"Minecraft Redstone - Dropper-Dropper clock\" (Video).\n\nYouTube.\n\n\u2191 \"ftheriachab\" (October 22, 2012) \u2014 \"Redstone Timer Multiplier\" Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic",
    "content": "This article is about a specific category of redstone circuits.\n\nFor other circuits, see redstone circuit.\n\nA logic gate can be thought of as a simple device that will return a number of outputs, determined by the pattern of inputs and rules that the logic gate follows.\n\nFor example, if both inputs in an AND gate are in the 'true'/'on'/'powered'/'1' state, then the gate will return 'true'/'on'/'powered'/'1'.\n\nThere are many different kinds of logic gates, each of which can be implemented with many different designs.\n\nEach design has various advantages and disadvantages, such as size, complexity, speed, maintenance overhead, or cost.\n\nThe various sections will give many different designs for each gate type.\n\nThe output of each logic circuit reflects the state of its inputs at all times (though possibly with some delay incurred by the circuit).\n\nSwapping inputs For most of these gates, A and B can be swapped without changing the output.\n\nSwapping the inputs of the IMPLIES gate will affect its output, and the NOT gate has only one input.\n\nStacking inputs The AND, OR, and XOR gates can each be used in arrays to perform their operation on more than two inputs, by combining two inputs at a time, then combining the results with each other and/or other inputs.\n\nFor these gates, the order in which the inputs are combined doesn't matter.\n\nWhen an XOR gate is combined in this way, its output is on when an odd number of inputs is on.\n\nChoosing a logic gate When unsure which logic gate to use, try building a table like the one down below but with just one row of outputs.\n\nList the known inputs coming in and the possible combinations of power, and for each combination write down what the output should be for the structure to work.\n\nThen compare that to the table on the right and see which gate matches the desired outputs.\n\nIf the the output needs to change when the input is stable, or needs to be remembered after the input has ended, the player may also need to look at pulse circuits or memory circuits.\n\nA logic gate is a basic logic circuit.\n\nA NOT gate (A \u00af {\\displaystyle \\overline{A}}), also known as an inverter, is a gate used when an opposite output is wanted from the input given.\n\nFor instance, when the switch, or input, is set to \"on\", the output will be toggled to \"off\", and when the switch is toggled to \"off\", the output will be toggled to \"on\".\n\nTorch Inverter 1-wide, flat (horizontal only), silent, tileable circuit delay: 1 tick The torch inverter is the most commonly used NOT gate, due to its small size, versatility, and easy construction.\n\nOne drawback of the torch inverter is that it will \"burn out\" if run on a clock cycle faster than a 3-clock (3 ticks on, 3 ticks off).\n\nA burnt out torch inverter will turn back on after it receives a block update.\n\nSubtraction Inverter flat, silent circuit delay: 1 tick The subtraction inverter offers little advantage over the torch inverter except that it can run on a 2-clock cycle without burning out.\n\nFaster clocks will not work though \u2014 the comparator simply won't react to them.\n\nVariations: The powered lever can be replaced with another always-on power component (e.g., redstone torch, block of redstone), or with a full container if a power component would be inconvenient in that location.\n\nThe repeater is required to ensure the input signal is strong enough to overcome the comparator's rear source, but can be removed in a number of ways.\n\nIf the input power level is known (because the circuit design is fixed, so it can be calculated), the repeater can be removed by replacing the powered lever with a container which will produce the same power level.\n\nAlternatively, the repeater can be removed if the output continues to a length of redstone wire which will reduce the subtracted signal enough that the signal is inverted eventually.\n\nInstant Inverter instant circuit delay: 0 ticks The instant inverter is a basic building block of larger instant circuits.\n\nThe \"ground\" version has the largest volume, but is shorter and fits easily with flatter circuits.\n\nThe 1-wide version is the smaller in total volume and 2-tileable.\n\nBehavior (i.e., how it works): An instant inverter has two functional elements, and a piston, or pistons, that activate them: a constant power source with output that can be instantly powered off (but powering it on takes time): either a redstone block that ceases to provide power as soon as piston starts moving it (within the same tick the piston receives or loses power) or a solid block in front of a powered repeater or comparator, powering redstone dust; as soon as the block starts moving the dust is unpowered.\n\na signal line with output that can be instantly powered on but not necessarily off, its input delayed by and sustained for 2 ticks.\n\nThe \"instant on\" is achieved by the dust-cut technique: a solid block placed against edge of a block over which a redstone line is running, disconnects that line from line below.\n\nStart of motion of that block instantly reconnects the line and provides power.\n\nThe delay is achieved by running the input through a 2 tick repeater, two torches or similar means.\n\nThat means, when power appears on input, the block moved by piston is able to cut the line before signal passes through the delay.\n\nWith input unpowered, the output is instantly activated and the line still provides power \"stored\" in the repeater for two ticks, which time is sufficient to reactivate the constant power source from previous point.\n\nPiston, or pistons, to move the block/blocks activating the elements from point 1 or 2.\n\nSchematic gallery: NOT gate View at: Redstone circuits/Logic/NOT [edit ] An OR gate (A + B {\\displaystyle A + B}) is a gate which uses two or more inputs and whenever any input is \"on\", the output is also \"on\".\n\nThe only time the output is \"off\" is when all inputs are \"off\".\n\nNote that since the OR operation is associative and commutative, OR gates can be combined freely: The player can compare huge numbers of inputs by using small OR gates to collect groups of inputs, then comparing their results with more OR gates.\n\nThe result will not depend on the arrangement of the inputs, or on which ones were combined first.\n\nThe simplest version of the OR gate is design A: merely a wire connecting all inputs and outputs.\n\nHowever, this causes the inputs to become \"compromised\", so that they can only be used in this OR gate.\n\nThe introduction's example, using a solid block instead of wire, does not suffer the same hazard.\n\nIf players need to use the inputs elsewhere, the inputs need to be \"isolated\", by passing them through a block as above, or a device such as a torch or repeater.\n\nTorches yield version B.\n\nNote that this is in fact a NOR gate with an inverter on the output.\n\nVersion C isolates the inputs with repeaters.\n\nIt can be expanded horizontally up to 15 inputs.\n\nBesides the isolated inputs, it is one tick faster than B.\n\nAdditional repeaters can be used to add new groups of inputs, or to strengthen the output signal.\n\nThis design is more expensive, as each repeater costs 3 redstone dust to craft (along with smooth stone).\n\nVersion D is a 1-wide version designed for vertical use, such as in walls.\n\nThe repeater serves to isolate the outputs from the inputs.\n\nThis version can only take two inputs, though of course the inputs can be stacked with multiple gates.\n\nVersion E utilizes the properties of light-transparent blocks: glowstone, and upside-down stairs or slabs.\n\nThese send signals up, but not down.\n\nIt is expandable, like design C.\n\nSchematic gallery: OR gate View at: Redstone circuits/Logic/OR [edit ] A NOR gate (A \u2193 B {\\displaystyle A \\downarrow B} or A + B \u00af {\\displaystyle \\overline{A + B}}) is the opposite of the OR gate.\n\nWhenever at least one switch is toggled to \"on\", the output is toggled to \"off\".\n\nThe only time the output is \"on\" is when all inputs are toggled to \"off\".\n\nThis gate also uses two or more inputs.\n\nAll logic gates can be made from some combinations of the NOR gate.\n\nIn Minecraft, NOR is a basic logic gate, implemented by a torch with two or more inputs.\n\n(A torch with 1 input is the NOT gate, and with no inputs is the TRUE gate, that is, a power source.) A torch can easily accommodate 3 mutually isolated inputs, as in design A.\n\nDesign B goes to greater lengths to squeeze in a fourth input.\n\nIf more inputs are necessary, it is simplest to use OR gates to combine them, then use an inverter (NOT) at the end.\n\nIt is also possible to combine OR and NOR gates, by using the inversion of OR gates as inputs to NOR gates.\n\nFor inverted output when A is OFF, use redstone torch for B and result is: Schematic gallery: NOR gate View at: Redstone circuits/Logic/NOR [edit ] An AND gate (A \u22c5 B {\\displaystyle A \\cdot B}) is used with two or more switches or other inputs.\n\nThe output is toggled to \"on\" only when all inputs are \"on\".\n\nOtherwise, the output will remain \"off\".\n\nIn reality, the usual implementation is a NOR gate with inverted inputs (A \u00af + B \u00af \u00af {\\displaystyle \\overline{\\overline{A}+\\overline{B}}}).\n\nTaking the inputs A {\\displaystyle A} and B {\\displaystyle B}, the first two torches (at the top and bottom of Schematic (A) below) invert them into A \u00af {\\displaystyle \\overline{A}} and B \u00af {\\displaystyle \\overline{B}}.\n\nThe redstone wire between these torches serves as an OR gate, and is therefore in state A \u00af + B \u00af {\\displaystyle \\overline{A}+\\overline{B}}, which can be interpreted as A \u22c5 B \u00af {\\displaystyle \\overline{A \\cdot B}} by De Morgan's Law.\n\nFinally, the third torch (the center-right one) applies a NOT to that statement; thus it becomes A \u00af + B \u00af \u00af = A \u22c5 B \u00af \u00af = A \u22c5 B {\\displaystyle \\overline{\\overline{A}+\\overline{B}} = \\overline{\\overline{A \\cdot B}} = A \\cdot B}.\n\nA 3-input AND gate is shown, but, like OR gates, AND gates can be freely \"ganged\", combining groups of inputs and then combining the results.\n\nA typical use for an AND gate would be to build a locking mechanism for a door, requiring both the activating button and the lock (typically a lever) to be on.\n\nPiston AND gates act similarly to a \"tri-state buffer\", in which input B acts like a switch, connecting or disconnecting input A from the rest of the circuit.\n\nSuch designs have one input feeding a circuit, which is opened or closed by a sticky piston driven by the other input.\n\nThe difference from real-life tri-state buffers is that one cannot drive a low current in Minecraft.\n\nSchematic gallery: AND gate View at: Redstone circuits/Logic/AND [edit ] A NAND gate (A \u2191 B {\\displaystyle A \\uparrow B} or A \u22c5 B \u00af {\\displaystyle \\overline{A \\cdot B}}) turns the output off only when both inputs are on, the reverse of an AND gate.\n\nAll logic gates can be made from NAND gates.\n\nAs with NOR, large numbers of inputs are probably best handled by stacking up AND gates, then inverting the result.\n\nBy De Morgan's Law, A \u22c5 B \u00af {\\displaystyle \\overline{A \\cdot B}} is identical to A \u00af + B \u00af {\\displaystyle \\overline{A}+\\overline{B}}.\n\nAll logic gates can be made from some combinations of the NAND gate.\n\nSchematic gallery: NAND gate View at: Redstone circuits/Logic/NAND [edit ] An XOR gate (A \u22bb B {\\displaystyle A \\veebar B}, A \u21ae B {\\displaystyle A \\not\\leftrightarrow B} or A \u2295 B {\\displaystyle A \\oplus B}) is a gate that uses two inputs and the output is toggled to \"on\" when one switch is \"on\" and one switch is \"off\".\n\nXOR is pronounced \"zor\" or \"exor\", a shortening of \"exclusive or\", because each input is mutually exclusive with the output.\n\nIt is useful for controlling a mechanism from multiple locations.\n\nBecause of these properties, XOR gates are commonly found in complex redstone circuits.\n\nIn some cases, it is possible to get an OR gate output and an AND gate output on different channels.\n\nDesign F is composed of AND gates, OR gates and NOT gates.\n\nThe whole circuit is (A \u22c5 B) + A \u00af \u00af + (A \u22c5 B) + B \u00af \u00af {\\displaystyle \\overline{(A \\cdot B) + \\overline{A}} + \\overline{(A \\cdot B) + \\overline{B}}}, which can be further simplified into (A \u00af \u22c5 B) + (A \u22c5 B \u00af) {\\displaystyle (\\overline{A} \\cdot B) + (A \\cdot \\overline{B})} (or, equivalently, (A + B) \u22c5 A \u22c5 B \u00af {\\displaystyle (A + B) \\cdot \\overline{A \\cdot B}}).\n\nA useful feature is that an XOR (or XNOR) gate will always change its output when one of its inputs changes, hence it is useful for controlling a mechanism from multiple locations.\n\nWhen controls (such as levers) are combined in an XOR gate, toggling any control will toggle the XOR gate's output (like a light bulb controlled by two light switches \u2014 players can flip either one to turn the light on or off, or either of which can always open or close a door, or turn some other device on or off.\n\nLike AND and OR gates, XOR gates can freely be \"stacked\" together, with gates gathering groups of inputs and their outputs being gathered in turn.\n\nThe result of XORing more than two inputs is called \"parity\" \u2014 the result is 1 if and only if an odd number of inputs are 1.\n\nDesign D is tiny, but only useful if players want the levers to be fixed to the circuit.\n\nThe shaded block indicates the block the levers and the lit torch are attached to, along with the block that one is resting on.\n\nDesign F is the most widely used of the torch-only designs, but newer components can do much better.\n\nDesign H uses pistons, and is both faster and more compact.\n\nBeyond torches and pistons, various diodes can be used to produce fairly compact and cheap XOR gates.\n\nDesign I can have its input repeaters coming in from either side or underneath, changing its size accordingly to fit tight spaces.\n\nDesign J uses transparent blocks for a cheaper option.\n\nSchematic gallery: XOR gate View at: Redstone circuits/Logic/XOR [edit ] The introduction of the comparator allows for several variations of a new design, the \"subtraction XOR gate\", which is flat, fast and silent (also easy to remember).\n\nThe cons in Survival mode is that making comparators requires the access to the Nether to obtain nether quartz.\n\nEach input is the same distance to the rear and side of the comparator closest to it, so will suppress its own signal there, but travels farther to get to the side of the further comparator, so won't suppress its signal in the further comparator.\n\nOnly if both inputs are on will both comparators get suppressed by a side input.\n\nHowever, that is only true if the inputs are the same power level (or at least not different by more than 1), otherwise one signal could overwhelm the other's attempt to suppress its signal.\n\nIf this circuit is sure to receive inputs of the same power level (because the system it's part of has been designed that way), then the \"basic\" version can be used.\n\nOtherwise, some method should be used to ensure the inputs are equal \u2014 for example, with repeaters (the \"repeated\" version) or with torches (the \"inverted\" version).\n\nSchematic gallery: subtraction XOR gate View at: Redstone circuits/Logic/subtraction xor gate [edit ] An XNOR gate (A \u2194 B {\\displaystyle A \\leftrightarrow B} or A \u2299 B {\\displaystyle A \\odot B}) is the opposite of an XOR gate.\n\nThis is commonly referred to as \"if and only if\" (\"iff\" [sic ] for short), \"bi-conditional\", or \"equivalence\".\n\nIt uses two inputs.\n\nWhen both switches are in the same state (both switches are \"on\" or both switches are \"off\"), then the output is toggled to \"on\".\n\nOtherwise, if the switches differ, the output is toggled to \"off\".\n\nSimilar to the XOR gate, when either input changes, the output changes.\n\nAn XNOR gate can be built by inverting either the output, or one input, of an XOR gate.\n\nDesign A is a pure-torch design.\n\nIf external input isn't needed, the back-facing torches can be replaced with levers, yielding B.\n\nDesign F is larger but highlights the logic, while I is an inverted variant of XOR gate H.\n\nNote that the output inverter can also be placed in line with the rest of the gate, or even in a pit attached to one of the output redstone's support blocks.\n\nSchematic gallery: XNOR gate View at: Redstone circuits/Logic/XNOR [edit ] An IMPLY gate (A \u2192 B) turns on either if both inputs are on, or if the first input is off.\n\nUnlike the other gates here, the inputs are not interchangeable; it is not commutative.\n\nThis represents material implication or a conditional statement, \"if A then B \", or \" A implies B \".\n\nThe output is off only if the antecedent A is true, but the consequent B is false.\n\nIt is the logical equivalent of B \u2228 \u00acA, and the mathematical equivalent of A \u2264 B.\n\nDesign C has a speed of 2 ticks if output is 1, but 1 tick if the output is 0.\n\nSimilarly, the other designs take 1 tick if the output is 0, but are immediate (and not isolated) if the output is 1.\n\nIf the player must synchronize (or isolate) the output, consider placing a 1-tick repeater in front of the \"fast\" input (input A for C, input B for the others).\n\nSchematic gallery: IMPLY gate View at: Mechanics/Redstone/Logic circuit/IMPLIES [edit ] AND gate example.\n\nSome Compact Redstone Logic Circuits, Redstone Lamp Is Output, Levers Are Input.\n\nA collection of logic circuits based on repeaters and comparators Logic gates on Wikipedia Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory",
    "content": "This article is about a specific category of redstone circuits.\n\nFor other circuits, see redstone circuit.\n\nNote: This page uses many schematics, which are loaded individually for performance reasons.\n\n[Schematic Help ] Latches and flip-flops are effectively 1-bit memory cells.\n\nThey allow circuits to store data and deliver it at a later time, rather than acting only on the inputs at the time they are given.\n\nAs a result of this, they can turn an impulse into a constant signal, \"turning a button into a lever\".\n\nDevices using latches can be built to give different outputs each time a circuit is activated, even if the same inputs are used, and so circuits using them are referred to as \"sequential logic\".\n\nThey allow for the design of counters, long-term clocks, and complex memory systems, which cannot be created with combinatorial logic gates alone.\n\nLatches are also used when a device needs to behave differently depending on previous inputs.\n\nThere are several basic categories of latches, distinguished by how they are controlled.\n\nFor all types, the input lines are labeled according to their purpose (S et, R eset, T oggle, D ata, C lock).\n\nThere are also more arbitrary labels: The output is commonly labeled Q {\\displaystyle Q} for historical reasons.\n\nSometimes there is also an \"inverse output\" Q \u00af {\\displaystyle \\overline{Q}}, which is always ON when Q {\\displaystyle Q} is OFF and vice versa.\n\nIf both Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}} are available, we say the circuit has \"dual outputs\".\n\nMost of the following types can be built as a \"latch\" that responds to the level of a signal, or as a \"flip-flop\" triggered by a change in the signal.\n\nA RS latch has separate control lines to s et (turn on) or r eset (turn off) the latch.\n\nMany also have dual outputs.\n\nThe oldest form of RS latch in Minecraft is the RS-NOR latch, which forms the heart of many other latch and flip-flop designs.\n\nA T latch has only one input, the toggle.\n\nWhenever the toggle is triggered, the latch changes its state from OFF to ON or vice versa.\n\nThere are also SRT latches, combining the inputs and abilities of the RS and T latches.\n\nA D latch has a d ata input and a c lock input.\n\nWhen the clock is triggered, the data input is copied to the output, then held until the clock is triggered again.\n\nA JK latch has three inputs: A c lock input, and the j ump and k ill inputs.\n\nWhen the clock is triggered, the latch's output can be set, reset, toggled, or left as is, depending on the combination of J and K.\n\nWhile these are common in real-world electronics, in Minecraft they tend to be bulky and impractical \u2014 most players would use an SRT latch instead.\n\nAn RS latch has two inputs, S {\\displaystyle S} and R {\\displaystyle R}.\n\nThe output is conventionally labeled Q {\\displaystyle Q}, and there is often an optional \"inverse output\" Q \u00af {\\displaystyle \\overline{Q}}.\n\n(Having both Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}} is called \"dual outputs\").\n\nWhen a signal comes into S {\\displaystyle S}, Q {\\displaystyle Q} is s et on and stays on until a similar signal comes into R {\\displaystyle R}, upon which Q {\\displaystyle Q} is r eset to \"off\".\n\nQ \u00af {\\displaystyle \\overline{Q}} indicates the opposite of Q {\\displaystyle Q} \u2014 when Q {\\displaystyle Q} is high, Q \u00af {\\displaystyle \\overline{Q}} is low, and vice versa.\n\nWhere a Q \u00af {\\displaystyle \\overline{Q}} output is available, the player can often save a NOT gate by using it instead of Q {\\displaystyle Q}.\n\nNote that the proper name for this category of latch is \"SR latch\".\n\nHowever, in real-world electronics as in Minecraft, the classic implementation of such latches starts by inverting the inputs; such a latch is the proper \"RS latch\", but they're so common that the term is commonly used also for what \"should\" be called SR latches.\n\nTypical uses include an alarm system in which a warning light stays on after a pressure plate is activated until a reset button is pushed, or a rail T-junction being set and reset by different detector rails.\n\nRS latches are common parts of other circuits, including other sorts of latches.\n\nSetting both inputs high simultaneously is a \"forbidden\" condition, generally something to avoid.\n\nIn the truth table, S=1, R=1 breaks the inverse relationship between Q {\\displaystyle Q} and Q {\\displaystyle Q}.\n\nIf this happens, the player will get \"undefined behavior\" \u2014 various designs can do different things, and especially Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}} can be high or low at the same time.\n\nIf the forbidden state is co-opted to toggle the output, the circuit becomes a JK latch, described in its own section.\n\nIf there is instead a third input which t oggles the output, the circuit becomes an \"RST latch\".\n\nAny RS latch with dual outputs is functionally symmetrical: pulsing each input turns on \"its\" output, and turns off the other one.\n\nThus R {\\displaystyle R} and S {\\displaystyle S} are interchangeable, if the outputs is swapped: Which input players pick as S {\\displaystyle S} chooses which of the outputs is Q {\\displaystyle Q}, then the other input will be R and the other output will be Q \u00af {\\displaystyle \\overline{Q}}.\n\n(If the original circuit only had a Q {\\displaystyle Q} output, then swapping the inputs will turn it into Q \u00af {\\displaystyle \\overline{Q}}.) In several designs (A, B, C, D, E, F, I) the functional symmetry is reflected by the circuit's physical symmetry, with each input energizing the torch it leads to, while turning off the other.\n\nRS latches can be built in a number of ways: Two NOR gates can be linked so that whichever is lit, the other will be off.\n\nThe RS NOR latch is the \"original\" RS latch, and still among the smallest memory devices that can be made in vanilla Minecraft.\n\nWhile they can be built with just torches and redstone dust, repeaters can also be used.\n\nMany of these designs have \"duplex I/O\"\u2014the same locations can be used to read or set the latch state.\n\nIt is also possible to construct an RS NAND latch, using NAND gates instead of NOR gates.\n\nThese will be larger and more complex than an RS NOR latch, but may be useful for specialized purposes.\n\nTheir inputs are inverted (see below for details).\n\nOther RS latches can be created by fitting an \"input sustaining circuit\" with a reset switch, say by adding a pair of NOT gates or a piston, placed so as to interrupt the circuit when triggered.\n\nSuch a construction can be nearly as compact as an RS NOR latch (and often with better I/O isolation and/or timing), but they will usually not have a natural Q \u00af {\\displaystyle \\overline{Q}} output.\n\nOther devices can also be involved.\n\nPistons can be used to physically toggle a block's location, while hoppers or droppers can pass around an item entity.\n\nThese circuits can be very fast and small, with little redstone dust.\n\nBasic RS-NOR Latches View at: Redstone circuits/Memory/Basic RS-NOR [edit ] Designs A and B are the most fundamental RS-NOR latches.\n\nIn both cases, their inputs and outputs are \"duplex\"\u2014the latch state can be read (Q {\\displaystyle Q}) or set (S {\\displaystyle S}) on one side of the circuit, while on the other side, the latch can be reset (R {\\displaystyle R}), or the inverse output read (Q \u00af {\\displaystyle \\overline{Q}}).\n\nIf separate lines for input and output are needed, opposite ends of B can be used, or A can be elaborated into A' with separate locations for all four lines.\n\nIsolated RS-NOR Latches View at: Redstone circuits/Memory/Isolated RS-NOR [edit ] These can be modified to provide separate, even isolated, input and output.\n\nC and D use torches and repeaters respectively to isolate the outputs, though the inputs can still be read.\n\nE expands the circuit slightly to isolate all four I/O lines.\n\nVertical RS-NOR Latches View at: Redstone circuits/Memory/Vertical RS-NOR [edit ] Design F provides a vertical (1-wide) option; again, the I/O is duplex, though isolated outputs can be taken at alternate locations.\n\nDesign G takes up more room than F, but may be preferable, as both the set and reset are on the same side.\n\nAlso, be sure to compensate for the extra tick on (Q \u00af {\\displaystyle \\overline{Q}}), caused by the last torch.\n\nDesign H is smaller than design F in term of height, input and output are on the same height, but it is longer and a bit slower due to the repeater.\n\nFurthermore, it is easily stacked vertically and horizontally (with a shift of 2 blocks on the Y axis).\n\nDesign I is similar to design G as it has both set and reset on the same side,but takes up less space.\n\nThe I/O is duplex, though isolated outputs can be taken at alternate locations.\n\nDesign J is similar to design G as it has both set and reset on the same side, but has no slowness due to not having any extra repeaters or torches.\n\nThis may be more preferable to G, although the outputs (Q {\\displaystyle Q} / Q \u00af {\\displaystyle \\overline{Q}}) are not level with the inputs (R/S).\n\nAn RS latch can also be designed using NAND gates.\n\nIn Minecraft, these are less efficient than the RS NOR latch, because a single Redstone torch acts as a NOR gate, whereas several torches are required to create a NAND gate.\n\nHowever, they can still be useful for specialized purposes.\n\nSuch an \"RS NAND latch\" is equivalent to an RS NOR, but with inverters applied to all the inputs and outputs.\n\nThe RS NAND is logically equivalent to the RS NOR, as the same R and S inputs give the same Q {\\displaystyle Q} output.\n\nHowever, these designs take inverse R and S (R\u0305, S\u0305) as inputs.\n\nWhen S\u0305 and R\u0305 are both off, Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}} are on.\n\nWhen S\u0305 is on, but R\u0305 is off, Q \u00af {\\displaystyle \\overline{Q}} will be on.\n\nWhen R\u0305 is on, but S\u0305 is off, Q {\\displaystyle Q} will be on.\n\nWhen S\u0305 and R\u0305 are both on, it does not change Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}}.\n\nThey will be the same as they were before S\u0305 and R\u0305 were both turned on.\n\nRS-NAND Latches View at: Redstone circuits/Memory/RS-NAND [edit ] This table summarizes the resources and features of the RS latches which use only redstone dust, torches, and repeaters.\n\nQ R S Analog RS latch This latch will maintain the highest signal level that arrived from input S if R is off, and fade (reduce memorized signal strength) by strength of R every two redstone ticks.\n\nFor maximum strength (15) signals it behaves like any other RS latch, but it can also memorize intermediate signal levels, and since 2-tick pulses on R will subtract their strength from its memorized state, it makes a nice element of counter or countdown circuits.\n\nI Cake Cake D S / Q Analog counter This variant of the analog RS latch adds an \"increment\" (I) and \"decrement\" (D) input.\n\nWhile input I is active, memorized signal strength is increased by 1 every two redstone ticks until reaching maximum (15) signal strength.\n\nWhile input D is active, signal strength is decreased by 1 every two redstone ticks until output Q is unpowered.\n\nOutput Q is duplex and can also be used as an input (S); the highest signal strength at this block will be memorized.\n\nInput Stabilization Circuit An \"Input-Stabilizing Circuit\" responds to an input pulse by turning its input on and leaving it on.\n\nThis can be built up into an RS Latch by adding a means to turn it off.\n\nThese circuits usually don't offer a \"natural\" Q \u00af {\\displaystyle \\overline{Q}} output.\n\nDesign J adds a pair of NOT gates, with the reset going to the second torch.\n\nDesign K uses its piston to block the circuit where it goes up onto the solid block.\n\nDesign L shows the reverse approach, breaking the circuit by withdrawing a power-carrying block.\n\nRS-ISR Latches View at: Redstone circuits/Memory/RS-ISR [edit ] Other RS Latches View at: Redstone circuits/Memory/RS Devices [edit ] A pair of non-sticky pistons can be used to physically push a block back and forth.\n\nThis can make or break a circuit from a torch, producing an RS latch with no inverse output (M).\n\nIf the block being pushed is a block of redstone, the circuit can be even smaller, with dual outputs (N).\n\nBoth of these have isolated inputs and outputs.\n\nPutting two blocks between the pistons produces an SRT latch O, with an extra input to toggle the latch state.\n\nAnd droppers can also be pressed into service, as in design P: Small, tileable, but it does require a comparator.\n\nExpand an RS latch easily into a monostable circuit, which automatically disables itself some time after activation.\n\nTo do this, split the output redstone path into two parts.\n\nThe new path should run through some repeaters, and in to the reset input.\n\nWhen players turn on the latch, redstone feeds a signal through the delay before turning off the latch.\n\nThis works not only for Q {\\displaystyle Q} and R, but for Q \u00af {\\displaystyle \\overline{Q}} and S as well.\n\nA more complex delay mechanism, such as a water clock, can replace the repeaters.\n\nAn \"Enable/Disable RS latch\" can be made by adding a pair of AND gates in front of the inputs, testing each of them against a third input, E.\n\nNow if E is true, the memory cell works as normal.\n\nIf E is false, the memory cell will not change state.\n\nThat is, E latches (or equivalently, clocks) the RS latch itself.\n\nNote that for design Q, the outputs are not isolated, and a signal to them can set the latch regardless of E.\n\nAlternatively, repeaters could be used to latch the inputs, but this costs more and saves no space.\n\nAs noted above, if it is possible to add a \"toggle\" input, the RS latch becomes an RST latch.\n\nIf the \"forbidden\" state is used for the toggle, then it's a JK latch.\n\nAllows a lot of flexibility in geometry \u2014 the droppers can be read from 3 sides each and activated from 5 sides each; can be oriented vertically too and content can be read with comparators through solid blocks.\n\nHowever, always power it through an adjacent block; if players power the dropper directly, they will activate the other dropper too and the order is unpredictable.\n\nActivates on rising edge, meaning they can apply S even while R is still active or vice versa.\n\nEnable/Disable RS Latch View at: Redstone circuits/Memory/RS Clocked [edit ] A D (\"data\") flip-flop or latch has two inputs: The data line D, and the \"clock\" input C.\n\nWhen triggered by C, the circuits set their output (Q {\\displaystyle Q}) to D, then hold that output state between triggers.\n\nThe latch form, a \"gated D latch\", is level triggered.\n\nIt can be high- or low-triggered; either way, while the clock is in the trigger state, the output will change to match D.\n\nWhen the clock is in the other state, the latch will hold its current state until triggered again.\n\nA D flip-flop is edge triggered; it sets the output to D only when its clock input changes from \"off\" to \"on\" (rising edge) or vice versa (falling edge), according to the circuit.\n\nAn edge trigger can turn a gated D latch into a D flip-flop.\n\nBuilding these devices with torches is fairly unwieldy, though some older designs are given below.\n\nRepeaters have a special latching ability, which drastically simplifies the problem.\n\nNow a gated D latch can be made with two repeaters, and a D flip-flop with four repeaters and a torch: Design G uses the repeater's latching feature, which is added to the game in Java Edition 1.4.2.\n\nIt holds its state while the clock is high, and is by far the most compact of the D latch designs.\n\nDesign H combines two such latches, one high and one low triggered, to create a rising edge-triggered D flip-flop.\n\nThe block and redstone torch can be reversed for a falling edge-triggered design.\n\nThe design is based on a real life implementation of an edge-triggered D flip-flop called a \"Master-Slave\" configuration.\n\nQ C D Modern Gated D Latch (G) (High level) Q C D Modern D Flip-flop (H) (rising edge) Q Latch C D Digital D latch (J) (Low level) 6\u00d72\u00d71 (12 block volume) flat, silent, digital circuit delay: 1 tick This design is a digital version of a low-triggered D latch.\n\nIt is most frequently used for storing data in digital redstone circuits.\n\nIt is based on the S-R latch, but it doesn't have an \"undefined\" or \"invalid\" state problem.\n\nQ C D Analog D latch (J) (Low level) 6\u00d74\u00d72 (48 block volume) flat, silent circuit delay: 3 ticks Earliest Known Publication: May 26, 2018 [2] Design J is an analog version of a low-triggered D latch.\n\nThe signal strength of the output Q {\\displaystyle Q} is the same as input D when the latch is triggered.\n\nFor maximum strength (15) signals for D, this latch behaves like a normal (digital) low-triggered D latch.\n\nFor historical interest, here are several older designs, not dependent on latched repeaters, along with a table of their resource needs and other characteristics.\n\nA few of these designs also have the additional inputs and inverse output of an RS latch.\n\nThis basic level-triggered gated D latch (design A) sets the output to D as long as the clock is set to OFF, and ignores changes in D as long as the clock is ON.\n\nHowever, on a rising clock edge, if D is low, the output will pulse high for 1 tick, before latching low.\n\nDesign B includes a rising-edge trigger and it will set the output to D only when the clock goes from OFF to ON.\n\nThe torch-based edge trigger could also be replaced with one of the designs from the Pulse circuit page.\n\nThese are RS latch-based circuits with appropriately set front-ends.\n\nDirectly trigger the RS latch using the R and S inputs to override the clock, forcing a certain output state.\n\nSending signals into the Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}} lines works similarly, because the output is not isolated.\n\nTo isolate the outputs, add inverters and swap the labels.\n\nD Latch A View at: Redstone circuits/Memory/Old D Latch A [edit ] D Latch B View at: Redstone circuits/Memory/Old D Latch B [edit ] Design C is a one block wide vertical version of A, except for using a non-inverted clock.\n\nIt sets the output to D while the clock is ON (turning the torch off).\n\nThis design can be repeated in parallel every other block, giving it a much smaller footprint, equal to the minimum spacing of parallel data lines.\n\nA clock signal can be distributed to all of them with a wire running perpendicularly under the data lines, allowing multiple flip-flops to share a single edge-trigger if desired.\n\nThe output Q \u00af {\\displaystyle \\overline{Q}} is most easily accessed in the reverse direction, toward the source of input.\n\nAs in design A, the un-isolated Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}} wires can do double duty as R and S inputs.\n\nQ {\\displaystyle Q} can be inverted or repeated to isolate the latch's Set line.\n\nD Latch C View at: Redstone circuits/Memory/Old D Latch C [edit ] D Latch D View at: Redstone circuits/Memory/Old D Latch D [edit ] Design E provides a more compact (but more complex) version of A, while still affording the same ceiling requirement.\n\nE' allows the latch to act on a high input.\n\nDesign F holds its state while the clock is high, and switches to D when the clock falls low.\n\nThe repeater serves to synchronize the signals that switch out the loop and switch in D.\n\nIt must be set to 1 to match the effect of the torch.\n\nD Latch E View at: Redstone circuits/Memory/Old D Latch E [edit ] D Latch F View at: Redstone circuits/Memory/Old D Latch F [edit ] D Q C BUD-based D Flip-flop (I) (low level) Piston BUD based D Flip-flop Design I represents an entirely different form of the D flip-flop, based on the principle of the block update detector.\n\nThis flip-flop is small so it can be used multiple times at large integrated redstone circuits.\n\nNote that no blocks that are adjacent to the piston can be used as circuit components except flip-flop itself.\n\nThe lever in the screenshot shown is the D input.\n\nThe redstone wire in the middle is trigger signal input.\n\nThe trapdoor is part of the BUD \u2013 it can be replaced by a note block, an activator rail, etc.\n\nA JK flip-flop is another memory element which, like the D flip-flop, will only change its output state when triggered by a clock signal C.\n\nThey can be edge-triggered (designs A, D, E) or level-triggered (C).\n\nEither way, the two inputs are called J and K.\n\nThese names are arbitrary, and somewhat interchangeable: if a Q \u00af {\\displaystyle \\overline{Q}} output is available, swapping J and K will also swap Q {\\displaystyle Q} and Q \u00af {\\displaystyle \\overline{Q}}.\n\nWhen the flip-flop is triggered the effect on the output Q {\\displaystyle Q} will depend on the values of the two inputs: If the input J = 1 and the input K = 0, the output Q = 1.\n\nWhen J = 0 and K = 1, the output Q = 0.\n\nIf both J and K are 0, then the JK flip-flop maintains its previous state.\n\nIf both are 1, the output will complement itself \u2014 i.e., if Q = 1 {\\displaystyle Q = 1} before the clock trigger, Q = 0 {\\displaystyle Q = 0} afterwards.\n\nThe table summarizes these states \u2014 note that Q (t) {\\displaystyle Q(t)} is the new state after the trigger, while Q (t \u2212 1) {\\displaystyle Q(t-1)} represents the state before the trigger.\n\nThe JK flip-flop's complement function (when J and K are 1) is only meaningful with edge-triggered JK flip-flops, as it is an instantaneous trigger condition.\n\nWith level-triggered flip-flops (e.g.\n\ndesign C), maintaining the clock signal at 1 for too long causes a race condition on the output.\n\nAlthough this race condition is not fast enough to cause the torches to burn out, it makes the complement function unreliable for level-triggered flip-flops.\n\nThe JK flip-flip is a \"universal flip-flop\", as it can be converted to any of the other types: It's already an RS latch, with the \"forbidden\" input used for toggling.\n\nTo make it a T flip flop, set J = K = T, and to make it a D flip-flop, set K to the inverse of J, that is J = K\u0305 = D.\n\nIn the real world, mass production makes JK latches useful and common: a single circuit to produce in bulk, that can be used as any other sort of latch.\n\nIn Minecraft, however, JK latches are generally larger and more complex than the other types, and using their toggle function is awkward.\n\nIt's almost always easier to build the specific latch type needed.\n\nNotably, an SRT Latch has all the same abilities, but gets the toggle function from a separate input.\n\nDesign E is a vertical JK Flip-Flop from the basis of design A.\n\nAside from these redstone designs, it is also possible to make a JK flip-flop by modifying a rail toggle, or with newer components such as hoppers and droppers.\n\nJK Latch A View at: Redstone circuits/Memory/JK Latch A [edit ] JK Latch C View at: Redstone circuits/Memory/JK Latch C [edit ] JK Latch D View at: Redstone circuits/Memory/JK Latch D [edit ] JK Latch E View at: Redstone circuits/Memory/JK Latch E [edit ] T flip-flops are also known as \"toggles\".\n\nWhenever T changes from OFF to ON, the output will toggle its state.\n\nA useful way to use T flip-flops in Minecraft could, for example, be a button connected to the input.\n\nWhen players press the button the output toggles (a door opens or closes), and does not toggle back when the button pops out.\n\nThese are also the core of all binary counters and clocks, as they function as a \"period doubler\", releasing one pulse for every two received.\n\nThere are many ways to build a T flip-flop, ranging from torches and dust through pistons to more exotic devices.\n\nMany designs depend on a quirk in sticky-piston behavior, namely that after pushing a block, a sticky piston will let go of it if the activating pulse was 1 tick or less.\n\nThis allows short pulses to toggle the position of a block, which is very useful here.\n\nThese are designs which seem markedly superior in various categories.\n\nT Latch L3 View at: Redstone circuits/Memory/TFF L3 [edit ] T Flip-flop L4 View at: Redstone circuits/Memory/TFF L4 [edit ] T Flip-flop L5 View at: Redstone circuits/Memory/TFF L5 [edit ] T Flip-flop L6 View at: Redstone circuits/Memory/TFF L6 [edit ] T Flip-flop L7 View at: Redstone circuits/Memory/TFF L7 [edit ] L3 is a latch, which responds to a high level.\n\nLike most T latches, if the toggle line is held high too long, it will \"oscillate\", toggling repeatedly.\n\nA stone button will produce a single pulse, while wooden button's pulse is long enough to cause oscillation.\n\nL5 is a true flip-flop with the same footprint as the L3 (but higher), which triggers on a rising edge.\n\nBoth are extremely compact, thanks to the use of latched repeaters.\n\nL6 is a compact 1-high adaptation of D flip-flop H.\n\nThe video shows L6 and a similar T flip-flop.\n\nL4 and L7 are basically two opposite halves of the same machine \u2014 both are extremely compact and customizable tick-wise but L4 is made for off-pulses with durations ranging from 2 to 8 redstone ticks while L7 is made for on-pulses with durations that are 9+ redstone ticks long which includes the 10-tick stone button.\n\nCustomizing each requires changing the repeater delay or adding repeaters to match the trigger duration.\n\nTo customize L4 for your use, adjust the top most repeater according to the duration of your trigger, as shown in the table below: L6 and another TFF (view on YouTube) This design doesn't use the quasi-connectivity effect, so it works in both Bedrock and Java editions.\n\nIt uses a pulse generator that feeds into repeaters that power the piston through a solid block and an underground redstone dust patch.\n\nThe redstone block position is the output value of the TFF.\n\nThis design requires one sticky piston (for the repeater) and two non-sticky pistons, and a 6\u00d76 area, which is linear-tilable so that the output of one TFF feeds into the next TFF.\n\nBedrock Edition Piston TFF View at: Redstone circuits/Memory/TFF Piston Bedrock [edit ] The following designs work in Java Edition but may present difficulties in Bedrock Edition.\n\nLinear tilable TFF M View at: Redstone circuits/Memory/TFF M [edit ] 3\u00d73 piston TFF N View at: Redstone circuits/Memory/TFF N [edit ] 2 piston QC TFF O View at: Redstone circuits/Memory/TFF O [edit ] TFF R View at: Redstone circuits/Memory/TFF R [edit ] Design M is a 1-wide dual-piston design, which can be tiled adjacent to each other for compact circuitry.\n\n(If they don't have to be right next to each other, dust can be used instead of the input and output repeaters.) The hidden piston forms a simple monostable circuit that cuts off the button signal (10 ticks or so) as soon as a 1-tick signal has passed through to the second repeater.\n\nDue to the piston quirk mentioned above, this 1-tick signal lets the main piston toggle the position of its mobile block, to set or unset the latch and the output.\n\nIt can be made more compact by removing the last block, the repeater and the torch and replacing the block in front of the last piston with a redstone block.\n\nThat linear design can also be bent into a 3\u00d73 square, as N.\n\n(The \"any\" blocks can be air, and that torch can just as well be on the ground.) Tiling design N is a little tricker, but it can be done in either horizontal direction, by mirroring adjacent copies.\n\nNote that the output can be taken from whichever side of that corner is free, but the player will need repeaters to keep adjacent outputs from cross-connecting.\n\nDesign O, based on the quasi-connectivity effect that works only in Java Edition, uses a redstone block that swaps positions when the top dust receives a signal; it is a dual piston design that uses only two pistons, two torches, two dust, and two solid blocks and a redstone block.\n\nWhile one of the most compact designs; using only 10 blocks of space before inputs and outputs in addition to being 1 wide and vertical, it also requires no slime balls and uses few resources aside from the redstone block while allowing for four areas to input and 4 areas to output (if repeaters are used for the output, 2 if not), in addition it can be built in the air since it doesn't have any redstone or repeaters that require placement on the ground.\n\nThe design toggles on a falling edge.\n\nDesign R is a variation of design O, and it adds the ability to reset the output to 0, using the input R.\n\nT Flip-flop O1 View at: Redstone circuits/Memory/TFF O1 [edit ] T Flip-flop O2 View at: Redstone circuits/Memory/TFF O2 [edit ] T Flip-flop O3 View at: Redstone circuits/Memory/TFF O3 [edit ] Those designs make use of observers and the quasi-connectivity effect.\n\nDesigns O1 and O2 work for a rising signal, while the O3 toggles on a falling signal.\n\nThis section needs cleanup to comply with the style guide.\n\n[discuss ] Please help improve this page.\n\nThe talk page may contain suggestions.\n\nReason: There are many designs here which are not well documented, and some may be redundant or broken.\n\nAny help in describing or testing circuits would be appreciated.\n\nT Flip-flop A View at: Redstone circuits/Memory/TFF A [edit ] T Flip-flop B View at: Redstone circuits/Memory/TFF B [edit ] T Latch D View at: Redstone circuits/Memory/TFF D [edit ] T Flip-flop E View at: Redstone circuits/Memory/TFF E [edit ] T Flip-flop J View at: Redstone circuits/Memory/TFF J [edit ] T Flip-flop K View at: Redstone circuits/Memory/TFF K [edit ] T Flip-flop P View at: Redstone circuits/Memory/TFF P [edit ] Design A demonstrates that a TFF can be made solely with redstone dust and torches, but it sprawls over 9\u00d77\u00d73 blocks.\n\nDesign B is slightly unreliable for very long pulses; while the input is on, the piston will toggle every time the block below the piston arm is updated.\n\nDesign D (another torches-and-dust design, but vertical) does not have an incorporated edge trigger and will toggle multiple times unless the input is passed through one first.\n\nDesign E adds such a trigger (and a repeater).\n\nDesigns J and K make more use of repeaters, but not as latches, and they are still quite large.\n\nT Flip-flop L1 View at: Redstone circuits/Memory/TFF L1 [edit ] T Flip-flop L2 View at: Redstone circuits/Memory/TFF L2 [edit ] Design L2, (also L3, L4, and L5 above) relies on the redstone repeater locking mechanic introduced in Java Edition 1.4.2.\n\nL4 is the smallest, but requires a piston and activates on a falling edge.\n\nT Flip-flop Z3 View at: Redstone circuits/Memory/TFF Z3 [edit ] T Flip-flop Z4 View at: Redstone circuits/Memory/TFF Z4 [edit ] T Flip-flop Z5 View at: Redstone circuits/Memory/TFF Z5 [edit ] These tables are incomplete, and need more data.\n\nSize \"In a void\", that includes required blocks supporting redstone.\n\nDelay The number of ticks from the trigger to switching the output.\n\nCycle time How often the latch can toggle, including any recovery time.\n\nThis is the period of the fastest clock that can drive it.\n\nOther Devices P == normal piston, SP == sticky piston, C == comparator, H == hopper, D == dropper.\n\nTrigger rising edge (the usual), falling edge, high or low level.\n\nLevel-triggered TFFs oscillate on long pulses.\n\nPressure-Plate Rail TFF (B) View at: Redstone circuits/Memory/TFF Rail B [edit ] Basic Rail TFF (A) View at: Redstone circuits/Memory/TFF Rail A [edit ] The rail T flip-flop is a T flip-flop which uses rails and redstone.\n\nThe general design uses a length of track that is stopped by a block at both ends.\n\nWhen the T flip-flop is in a stable state, the minecart is at either end of the track (depending on the state).\n\nAn input pulse turns on powered rails at both ends of the track, causing the minecart to move to the other end.\n\nAlong the track, there are two separate detector elements (e.g.\n\ndetector rails).\n\nThese two detectors are each connected to an input of an RS NOR latch, and hence serve to translate minecart motion into a state transition.\n\nWhen the minecart moves, depending on its direction of motion, one detector will turn on (and off) before the other; the second detector to be hit is what determines which input of the RS NOR latch stays on last and hence what the new state of the RS NOR latch is.\n\nDesign A uses detector rails, while design B uses pressure plates.\n\n(A minecart triggers a pressure plate on the inside of a turn, including diagonals.) Note that for B, the other side of the latch isn't a true Q \u00af {\\displaystyle \\overline{Q}}, as the passage of the cart turns on Q {\\displaystyle Q} before actually switching the latch.\n\nThis type of T flip-flop is slower than traditional redstone-only circuits, but this may be desirable in certain situations.\n\nWith T flip-flop designs that are level-triggered (as opposed to clocked or edge-triggered), a long input pulse will cause the flip-flop to continuously switch state (oscillate) while the pulse is present.\n\nIn pure redstone circuits, this is only limited by the redstone circuit delays, and hence a relatively short input pulse can cause several state transitions.\n\nPure redstone T flip-flops usually include an edge-trigger or pulse-limiting circuit to the design, since the input pulse usually can't be guaranteed to be short enough without the use of that kind of circuit.\n\nWith rail-based designs, the speed at which the output can flip is limited by the time needed for the cart to move from one end of its rail to the other, which allows for a much longer pulse to be applied to a level-triggered input without needing an edge-trigger or pulse limiter circuit.\n\nHowever, the delay between the input pulse and the output transition is also longer.\n\nGrizdale's Compact TFF View at: Redstone circuits/Memory/TFF Grizdale [edit ] This hopper/dropper design is not only compact, but tileable in three dimensions.\n\nThe only hitch (for survival mode) is that the player needs access to nether quartz for the comparator.\n\nThe A variant has a size of 1\u00d72\u00d73.\n\nThe B variant puts the input and output inline, but changes the footprint to 2\u00d72\u00d72, or 4\u00d72\u00d72 if players want fully powered input and output.\n\nThe B design can also be tiled in line, side by side, vertically (by reversing alternate rows), or all three at once.\n\nOnce built, place a single item inside any of the containers and it will work as a T flip-flop, with the item cycling between the two droppers.\n\nThe core has a 1 tick delay between input and turning off or on, but the optional repeaters would raise this to 3.\n\nThis T Flip Flop can be turned into an SRT latch by only powering the bottom dropper to set, and the top to reset.\n\nHowever, it won't be as tileable as the original TFF.\n\nT Flip-flop Z1 View at: Redstone circuits/Memory/TFF Z1 [edit ] T Flip-flop Z2 View at: Redstone circuits/Memory/TFF Z2 [edit ] Designs Z1 and Z2 do not work as of Java Edition 1.5.2 \u2014 in both cases, their pulse generator does not cause the piston to toggle its block as apparently intended.\n\n\u2191 JavaChef (March 24, 2024) \"Minecraft: Analog Counter / Memory Latch \" \u2191 R.K.F.\n\nWalter (May 26, 2018) \"Tutorial: Simple, Analogue Gated Memory & Long Delay Circuits\" Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Mechanisms",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Mechanisms",
    "content": "This article needs to be rewritten.\n\n[discuss ] It may contain inappropriate or inaccurate information.\n\nPlease help us by rewriting it.\n\nReason: The article should be about types of mechanisms, not a list of specific examples.\n\nThis article uses MCRedstoneSim schematics.\n\nThese should be converted to use {{schematic }} if possible.\n\nA door wired to a lever, one of the simplest redstone mechanisms Mechanisms are systems of blocks used to perform certain tasks, such as opening a door from afar or revealing a hidden staircase.\n\nThese systems are built from simple components and normally involve some kind of user input, such as breaking a torch, which generates some kind of result, like a door being revealed.\n\nMechanisms can range from simple switches that open and close doors from a safe distance, to complex devices such as combination locks that prevent intruders from entering your fort.\n\nThese are the basic, modular parts that can be combined to form any complex mechanism.\n\nPlease note that individual items in the game are not considered components.\n\nAlso, not all of these components have to be used when making a mechanism.\n\nWater Channel: A channel in which water can flow.\n\nWater is commonly used to break torches, causing things to fall, or washing away crops, as well as to transport items or mobs.\n\nTube: A long three by three structure that can be used for launching TNT.\n\nPiston Switch: Block 1 above ground level with redstone on top, with a piston that moves across to stop circuit.\n\nUsed so pressing a button or lever will stop another circuit.\n\nPipe: A pipe of hoppers or clock-fed droppers used to transport items.\n\nSee redstone circuits for an overview of simple components and advanced redstone circuits for more complicated redstone mechanisms.\n\nMechanisms are useful devices made from the combination of components.\n\nHere are some examples: This is a storage system that allows a user to call a minecart and return them.\n\nYouTube Video (view on YouTube) For this device, you can stand on a pressure plate and make splash potions shoot out of a dispenser.\n\nSee the following steps for how to make it: First, make a dispenser dispense splash potions.\n\nThen, place a dispenser one block over the floor level.\n\nPlace a fence on the side the dispenser will shoot the potion out from.\n\nFinally, put pressure plates on top of the fence.\n\nSee the following video for a better demonstration: YouTube Video (view on YouTube) Vending machine View at: Tutorials/Mechanisms/Vending machine [edit ] This is a customizable vending machine that is relatively easy to make.\n\nUnfortunately, it does require a lot of iron.\n\nNotes: The leftmost top hopper in the side view is the \"input/output\" hopper.\n\nPut items into this hopper and get items out.\n\nThe droppers hold the \"purchase\" items.\n\nThe chest at the bottom collects the \"payment\" items.\n\nFill the leftmost bottom hopper with 19- <price> items in the first slot, and 1 in each remaining slot.\n\nThese items will be payment items.\n\nRepeat the upper-right 2 tall by 4 wide section upwards to add more items to the number purchased.\n\n(The number of droppers is this number.) Delay the signal from the redstone torch to the hopper by 4*(price)-5 ticks (if the price is 1, simply don't delay it).\n\nThe repeater here is showing 1 tick as an example.\n\nThis is fairly easy to make.\n\nBelow the floorboard's blocks, you put a face-up sticky piston that is powered when off, done by a redstone torch, and then the next block in the floor has a double-piston extender, also powered when off, and then a triple piston extender, and so on, so when the sticky pistons are powered off, then the blocks will be pulled down into a staircase.\n\nYouTube Video (view on YouTube) This design features a hidden staircase in the wall, revealed by triggering a redstone signal in some way, such as interacting with a lever or button.\n\nThere are many ways of making this.\n\nLook at the following videos for some examples: YouTube Video (view on YouTube) YouTube Video (view on YouTube) To make this design, make a dispenser attached to a redstone clock mechanism and hopper to feed it items.\n\nIn front of the dispenser, place a powered rail on a block of redstone and fill a chest above the hopper with minecart with TNT.\n\nThis will rapidly dispense those TNT minecarts onto a powered rail and into a massive crater of their own.\n\nIt can even tunnel down to bedrock given enough carts.\n\nThis is a system that will let you program what items you want to sell, how many you will give, what you want to be paid and how many of those to be paid.\n\nIt will lock when it's empty.\n\nThis is a very compact system that is also tile-able.\n\nYouTube Video (view on YouTube) With a lot of repeaters and AND-gates it is possible to control multiple outputs with only two wires.\n\nIt can be very tricky to get the timing right.\n\nYou need a pulse generator in both wires to get a pulse with a defined length and in most cases, the output pulse needs to be made longer.\n\nAs shown in this video you have a top wire and a bottom wire with repeater.\n\nOn one side you have repeater between the buttons on the top wire and none (or as needed) in the bottom wire.\n\nOn the other side none (or as needed) on the top wire and matching repeater (to the other top side) on the bottom one.\n\nbetween which you place AND-gates (matching the buttons).\n\nThe idea is that the signals only meet at one AND gate at the same time.\n\nVideo tutorial: YouTube Video (view on YouTube) Example use: YouTube Video (view on YouTube) Main article: Tutorials/Piston doors 1x2 flush with the wall piston door.\n\nFitting in a 2x4x4 space.\n\nYouTube Video (view on YouTube) 1x2 Hidden Piston Door YouTube Video (view on YouTube) These \"Jeb doors\" can also be referred to as flush-inset piston doors.\n\nHere is an example of one of these, with a redstone torch key system added on.\n\nOnce broken down, it's not extremely difficult to build.\n\nYouTube Video (view on YouTube) For an easy piston door with no sticky pistons: YouTube Video (view on YouTube) YouTube Video (view on YouTube) This design allows one to get a great view on the surroundings and enables you to connect and stop on any floor you want.\n\nThe video also contains horizontal piston transport.\n\nYouTube Video (view on YouTube) or YouTube Video (view on YouTube) This design is even more compact than the previous one; however, it blocks sight.\n\nIt's great for building elevators in shafts.\n\nNote: you need to set the pistons to 3 instead of 2.\n\nThe first is still to be set on 4.\n\nTwo-way elevators can be built, but they are slower and much more complex than the previous ones.\n\nThey also require a lot more space and resources.\n\nYouTube Video (view on YouTube) The two-way elevator can be built the following way: The engine shown below of this text uses wool between the pistons and the fence gates/trapdoors.\n\nHowever, instead of wool any other block can be put there, as long as pistons can push it.\n\nThe engine Front view schematic of the elevator The schematics for the wiring assuming that you know how to make a 1 tick long impulse.\n\nA 1 tick long impulse can be obtained using a pulse limiter.\n\nIn both of the schematics, empty squares represent air blocks, and repeaters all have the minimum delay possible.\n\nWiring that makes the elevator go down Wiring that makes the elevator go up A screenshot of an implementation of this design: Screenshot of a two-way elevator using this design Also, see this video for a larger two-way elevator: YouTube Video (view on YouTube) Quick item incinerator (view on YouTube) This is a quick video tutorial on how to make a compact block swapper.\n\nCompact block swapper (view on YouTube) This is a simple bank system using powered rails, which should be helpful for Minecrafters less experienced with redstone.\n\nYouTube Video (view on YouTube) This silent BUD switch design updates not only when there is an update going on adjacent to it, but also updates when there is redstone wire placed 1 block away from the BUD switch.\n\nYouTube Video (view on YouTube) This is the in-game build, which is very simple.\n\nThis is intended to be used in narrow passageways.\n\nSince a piston takes 1 tick to extend, you can make a tiny monostable circuit that is activated by a pressure plate.\n\nThen, place a sticky piston with a block attached one block away from the monostable circuit, in which the sticky piston is connected to another pressure plate, one block away from the other.\n\nThen connect the blocks on the bottom layers with repeaters.\n\nThe output is the block that is pushed by the sticky piston.\n\nThe output is on when a player walks from one pressure plate to the other, but only in one direction.\n\nIn the diagram, it looks like this (the inputs are below pressure plates): Self-destruct mechanisms are useful when destroying critical buildings or creating secret areas.\n\nLay TNT under critical areas of your base, about two blocks deep.\n\nThis will prevent torches and other redstone contraptions from detonating your system early.\n\nThen, lay TNT to the surface in a 1x1 area and add a lever or button above it to complete the basic self-destruct system.\n\nIn creative mode, one could use dispensers filled with enderman spawn eggs wired to a 5-clock redstone circuit to release endermen into your house, slowly assuring a semi-complete destruction of your base provided that it is made from blocks that enderman can manipulate.\n\nRemote dispensers could be wired to release fire charges upon your wood structures.\n\nPistons could be placed to release the floor below sand walls to quickly remove the walls of a structure.\n\nThis can also be done by supporting the sand with scaffolding and breaking the main support scaffolds with pistons.\n\nA dispenser with a lava bucket could be used to flood your base with lava.\n\nConnect a mob farm to your base, and open it up.\n\nThe mobs will cover your house.\n\nCreepers will detonate whenever anyone unwanted comes by, and the other mobs will fight and probably kill any intruders.\n\nUse command blocks to really wreak havoc upon any sensitive areas.\n\nUse commands such as /fill, /summon PrimedTnt, or if you're really thorough, use /summon ~ ~ ~ wither.\n\nWARNING: These methods can and will destroy your base and anything near it.\n\nThis is the False3D Monitor, if you place a second row of sticky pistons above the first row you can produce 2x2 pixels.\n\nTo complete the look of the monitor, you need to place blocks in front of the sticky pistons to determine what color the pixels are, example: wool.\n\nThis happens because when the sticky piston pushes the \"pixel block\" and then the shading and the 3D cause the pixel to be visible by the player(s).\n\nThis can generally be used for any purpose regarding visuals, it can also be used for a mob trap if used properly.\n\nAnd there you have it.\n\nA redstone wired sequence of redstone lamps to mimic the lighting of a working floor.\n\nIt is pretty easy and very good looking.\n\nYouTube Video (view on YouTube) A compact \"flying\" machine to make a thin basalt bridge across a lava lake.\n\nYouTube Video (view on YouTube) Mechanics/Redstone/Circuit Traps Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/1-high circuit",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/1-high_circuit",
    "content": "A 1-high circuit is a redstone circuit which is exactly one block high.\n\nThis limits the redstone components which can be used primarily to pistons and blocks of redstone, with the occasional lever, button, dispenser, etc.\n\n1-high circuits cannot use redstone components which require support blocks, including redstone dust, redstone repeaters, redstone comparators, etc.\n\nRedstone torches can be attached to the side of a block, but there's no way to power the block it's attached to in a 1-high circuit except for buttons or levers, limiting the use of redstone torches to the beginning of a player-activated circuit (or activated by arrows hitting a wooden button).\n\n1-high circuits currently have limited practical use.\n\nThe fact that pistons can be activated by quasi-connectivity from diagonally above means that most 1-high circuits cannot be stacked on top of each other, but need a 1-block gap in between them -- and in a 2-high space, regular circuits with dust, repeaters, etc.\n\nare usually more horizontally compact (smaller footprints).\n\n1-high circuits can be useful, however, underwater (due more to the components used than the height), or where do you do not want to waste vertical space on support blocks (such as in a multi-floor mob system).\n\n1-High Wall Stuck-Piston BUD 1-High Wall Stuck-Piston BUD 2\u00d79\u00d71 (18 block volume), 1-high, flat, flush \u2026 Earliest Known Publication: 21 June 2013 [1] 1-High Wall Stuck-Piston BUD 1-High Wall Stuck-Piston BUD 3\u00d77\u00d71 (21 block volume), 1-high, flat, flush \u2026 Earliest Known Publication: 29 March 2013 [2] 1-High Wall Stuck-Piston BUD 1-High Wall Stuck-Piston BUD 5\u00d77\u00d71 (35 block volume), 1-high, flat, flush \u2026 Earliest Known Publication: 21 June 2013 [3] \u2026 \u2026 1-High SR Latch S Q' Q R S R S Q' Q R 1-High SR Latch 1\u00d74\u00d71, 1-high, 1-wide, instant (reset only) circuit delay: 1.5 ticks (set) and 0 ticks (reset) Unlike most other 1-high circuits which use sticky pistons, this circuit requires regular pistons.\n\n1-High RS NOR Latch S Q S / Q\u0305 Q Q' R / Q Q' R 1-High RS NOR Latch 2\u00d74\u00d71, 1-high, instant (reset only) circuit delay: 1.5 ticks (rising edge) and 0 ticks (falling edge) Earliest Known Publication: 6 January 2013 [4] 1-High Dropped-Block T Flip-Flop 1-High Dropped-Block T Flip-Flop 3\u00d78\u00d71 (24 block volume), 1-high circuit delay: 1.5 ticks Uses a 0.5-tick rising edge detector to force a sticky piston to drop its block at the output.\n\n1-High Pulse Generator 1-High Pulse Generator 2\u00d75\u00d71 (10 block volume), 1-high circuit delay: 2.5 ticks, output pulse: 0.5 ticks Earliest Known Publication: 5 January 2013 [5] 1-High Rising-Edge Detector 1-High Rising-Edge Detector 3\u00d77\u00d71 (21 block volume), 1-high circuit delay: 1.5 ticks, output pulse: 0.5 ticks Earliest Known Publication: 5 January 2013 [5] 1-High Falling-Edge Detector 1-High Falling-Edge Detector 2\u00d74\u00d71 (8 block volume), 1-high circuit delay: 1.5 ticks, output pulse: 0.5 ticks Earliest Known Publication: 5 January 2013 [5] 1-High Dual-Edge Detector 1-High Dual-Edge Detector 4\u00d74\u00d71 (16 block volume), 1-high circuit delay: 1.5 ticks, output pulse: 0.5 ticks (rising edge) or 1.5 ticks (falling edge) Earliest Known Publication: 5 January 2013 [5] Basic 1-High Transmission Basic 1-High Transmission 1\u00d7N\u00d71, 1-high, 1-wide, instant (falling edge only) circuit delay: 1.5 ticks per 3 blocks (rising edge) and 0 ticks (falling edge) Fast 1-High Transmission Fast 1-High Transmission 2\u00d7N\u00d71, 1-high circuit delay: 1.5 ticks (rising edge) and 0 ticks (falling edge) This circuit uses the instant falling edge behavior of a secondary line to activate the primary line all at once.\n\nThis circuit inverts the input, so an additional inverter will be required if this is not desired.\n\nEarliest Known Publication: 2 August 2013 [6] \u2191 \"Sidney600MC\" (21 June 2013).\n\nSmallest 1 High BUD Switch!\n\n[18 Blocks!] (Video).\n\nYouTube.\n\n\u2191 \"TT Lemon\" (29 March 2013).\n\nSmallest 1 High BUD Switch!\n\n- Minecraft Redstone Tutorial (Video).\n\nYouTube.\n\n\u2191 \"fennoman\" (21 June 2013).\n\n\"One block high BUD | Redstone with Fenno\" (Video).\n\nYouTube.\n\n\u2191 \"Redstone Miku\" (6 January 2013).\n\n\"[Minecraft 1.5] Small RSNOR Latch (2x4x1)\" (Video).\n\nYouTube.\n\n\u2191 a b c d \"DvirWi\" (5 January 2013).\n\n\"Concept Showcase: 1 Tall creations (Snapshot 13w01a)\" (Video).\n\nYouTube.\n\n\u2191 \"IceAndMc\" (2 August 2013).\n\n\"Minecraft Proof Of Concept - 1 High Vanilla Circuits!\" (Video).\n\nYouTube.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/BUD circuit",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/BUD_circuit",
    "content": "You can edit this page.\n\nAlthough this page is in my userspace, please feel free to make productive contributions \u2014 though I reserve the right to edit your contributions mercilessly.:) \u2014 munin \u00b7 \u00b7 18:18, 3 October 2014 (UTC) Stuck-Piston BUD \u2192 Stuck-Piston BUD 1\u00d73\u00d75 (15 block volume), 1-wide, flush circuit delay: 1.5 ticks output pulse: 1 tick Earliest Known Publication: 12 June 2013 [1] Stuck-Piston BUD \u2192 Stuck-Piston BUD 1\u00d74\u00d73 (12 block volume), 1-wide, flush circuit delay: 1 tick output pulse: 3 ticks Earliest Known Publication: 17 March 2013 [2] Keyhole Slime-Block Piston BUD \u2192 Keyhole Slime-Block Piston BUD 1\u00d74\u00d72 (8 block volume) circuit delay: 1 tick.\n\nMake sure there are no movable blocks next to the slime blocks both when extended and retracted.\n\nVariations: If the output is taken from the topmost block of redstone (for example, from the side), then the rightmost block of redstone can be replaced with any movable block (removing it will cause the circuit to cycle repeatedly like a clock circuit).\n\nA quasi-connectivity BUD (QC BUD) puts a piston or dropper into a state where it should be activated by quasi-connectivity but hasn't been updated of this state yet.\n\nWhen it does get updated, it reacts then returns to its original state.\n\nTower Slime-Block Piston BUD \u2192 Tower Slime-Block Piston BUD 1\u00d71\u00d74 (4 block volume) circuit delay: 1 tick.\n\nMake sure there are no movable blocks next to the slime block both when extended and retracted.\n\nLike pistons, droppers can also be activated by quasi-connectivity, allowing the creation of silent BUDs.\n\nFor all dropper BUDs, the fastest output comes directly from the comparator (as shown in the schematics below).\n\nHowever, the comparator's output will only have a signal strength of 1 or 3 depending on the item used in the dropper (1 for a stackable item, 3 for a non-stackable item), so a repeater may be required to boost the signal strength.\n\nThe earliest known publication of a silent dropper BUD was on 18 March 2013 [3], but better designs have been published since.\n\nDropper QC BUD \u2192 Dropper QC BUD The dropper contains a single item.\n\n1\u00d73\u00d75 (15 block volume) 1-wide, flush, silent circuit delay: 3 ticks output pulse: 4 ticks Earliest Known Publication: 12 April 2013 [4] Tileable Dropper QC BUD 1\u00d75\u00d75 (25 block volume) 1-wide, flush, silent, tileable (alternating) circuit delay: 3 ticks output pulse: 4 ticks Earliest Known Publication: 12 April 2013 [4] A dust-reconfiguration BUD (aka \"DR-BUD\") works by using dust reconfiguration to put other redstone components into an invalid state which will correct itself when updated.\n\nWhen redstone dust reconfigures itself due to changing adjacent blocks, it doesn't update its neighbors of the change unless it changed its power level as well.\n\nRedstone dust can be reconfigured by moving power components (blocks of redstone or detector rails) or by opaque blocks which cut or allow its connection to other redstone dust.\n\nDust-Cut DR-BUD Dust-Cut DR-BUD 2\u00d75\u00d73 (30 block volume) output pulse: 2 ticks The repeater is in an invalid state and will change state when updated.\n\nThe lever is used only to power the dust and make it point towards the repeater while the piston is extended (it shouldn't be activated by a player) -- a block of redstone could be used instead.\n\nOff-Pulse DR-BUD Off-Pulse DR-BUD 2\u00d75\u00d72 (20 block volume) flat output pulse: 2 ticks (off) The repeater is in an invalid state and will change state when updated.\n\nThe lever is used only to power the dust and make it point towards the repeater while the piston retracts (it shouldn't be activated by a player) -- a block of redstone could be used instead.\n\n\u2191 \"Goldmas\" (12 June 2013).\n\n\"Smallest Vertical BUD Switch Ever?\n\n[1x2x6]\".\n\nMinecraft Forum.\n\n\u2191 \"DicoTheRedstoner\" (17 March 2013).\n\n\"[Tutorial] Tiny 3x4x1 Flush Wall BUD Switch!\" (Video).\n\nYouTube.\n\n\u2191 \"LifeOnNova\" (18 March 2013).\n\n\"Silent BUD switch in Minecraft 1.5 [Showcase]\" (Video).\n\nYouTube.\n\n\u2191 a b \"gundershot\" (12 April 2013).\n\n\"Silent Dropper BUDs Tutorial\" (Video).\n\nYouTube.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit",
    "content": "You can edit this page.\n\nAlthough this page is in my userspace, please feel free to make productive contributions \u2014 though I reserve the right to edit your contributions mercilessly.:) \u2014 munin \u00b7 \u00b7 18:23, 3 October 2014 (UTC) This article covers three categories of random circuits: Random Selector Turns on one random output of many.\n\nRandom Number Generator Generates a random sequence of numbers.\n\nRandom Pulse Generator Outputs a pulse at random intervals.\n\nA random selector has one input and multiple outputs \u2013 when the input turns on, one random output turns on.\n\nOther random selectors include: A dropper pushes a random item into an item sorter.\n\nThe sorted item triggers an output, then it recycles to the dropper.\n\nA mob spawner spawns a random block of redstone FallingSand entity with specific location tile entity data.\n\nAn analog-decoder random selector (ADRS) consists of an analog random number generator, and an a2o decoder to convert the analog signal into a one-hot encoding (i.e., only one powered output).\n\n1d2 Analog-Decoder Random Selector 1 2 1d2 ADRS Dropper: 3\u00d75\u00d72 (30 block volume) flat, silent circuit delay: 4 ticks Outputs 1 or 2 while on, nothing while off.\n\nThe dropper and hopper create an analog random number generator which generates a signal strength of 1 or 3 when activated (and 0 when inactive).\n\nIf the signal strength is 1, the top repeater powers output #1 but the signal can't reach the bottom output.\n\nIf the signal strength is 3, output #2 is powered (but may require a repeater to go further), but the top repeater gets locked in an unpowered state before the signal can get through it, preventing output #1 from being powered.\n\n1d3 Analog-Decoder Random Selector 3 1 2 3 1d3 ADRS Dropper: Hopper: 5 4\u00d78\u00d73 (96 block volume) silent circuit delay: 6 ticks Outputs 1 to 3 while on, nothing while off.\n\nThe dropper and hopper create an analog random number generator which generates a signal strength of 1, 2, or 4 \u2013 but an extra loop of redstone dust subtracts 1 from this output only when signal strength 4 was generated, resulting in final signal strengths of 1, 2, or 3.\n\nThese signal strengths are then put through an opposed-power analog decoder to power a random output.\n\n1d3 Analog-Decoder Random Selector (Double-Spaced) 4 1 2 3 1d3 ADRS (Double-Spaced) Dropper: Hopper: 5 5\u00d76\u00d73 (90 block volume) silent circuit delay: 5 ticks Outputs 1 to 3 while on, nothing while off.\n\nThe dropper and hopper create an analog random number generator which generates a signal strength of 1, 2, or 4.\n\nThese signal strengths are then put through an opposed-power analog decoder, designed for these particular signal strengths, to power a random output.\n\n1d6 Analog-Decoder Random Selector 6 1 2 3 4 5 5 6 1d6 ADRS Top Dropper: Bottom Dropper: Both Hoppers: 5 6\u00d79\u00d73 (162 block volume) silent circuit delay: 7 ticks Outputs 1 to 6 while on, nothing while off.\n\nThis circuits uses two analog random number generators, one which generates either 0 or 3 and another which generates 1, 2, or 3.\n\nThese are both subtracted from 6 to produce an even spread of probabilities between 0 and 5.\n\nThis final value is put through an opposed-power analog decoder to power a random output.\n\nHopper-Loop Random Selector 1 2 N Hopper-Loop Random Selector Every hopper contains one item (anything), except for two hoppers at opposite corners (top-right and bottom-left shown above) which are empty.\n\n1\u00d75\u00d73 (15 block volume) per output silent circuit delay: 2 ticks Outputs 1 to N while on, nothing while off.\n\nDeactivate the hoppers (by powering them) before putting items in, to keep the items from moving around while the circuit is being constructed.\n\nWhile the input is off, the items cycle around the hopper loop, but the output from their comparators is suppressed by the line of dust on the output torch blocks.\n\nWhen the input turns on, the items stop moving and the suppression line turns off, producing a single output.\n\nVariations: A zero-signal (while off only) can be taken by adding a repeater next to the first output torch, to take power from the suppression line.\n\nA random number generator (aka RNG) is a circuit that can generate a sequence of numbers with no recognizable pattern.\n\nAll of the RNGs below depend on the stack maximums of the items they move around: A 64-stackable item is any item with a stack maximum of 64 items (for example, apples, sticks, cobblestone, etc.).\n\nA 16-stackable item is any item with a stack maximum of 16 items (for example, ender pearls, signs, snowballs, etc.).\n\nA non-stackable item is any item which cannot be stacked (for example, tools, weapons, armor, doors, boats, minecarts, etc.).\n\nTwo basic random number generators are used as components in more complex RNGs.\n\nBasic 2-RNG \u2192 \u2192 Basic 2-RNG The dropper contains one stackable item and one non-stackable item.\n\n1x3x2 (6 block volume), 1-wide, flat, silent circuit delay: 3 ticks (rising) and 1 tick (falling) Outputs either power level 1 or 3 while on, power level 0 while off.\n\nWhen the input turns on, the dropper will randomly choose to push either the stackable item or the non-stackable item into the hopper, causing the comparator to output either power level 1 or 3.\n\nBecause the powered dropper is a solid/opaque block, it will also deactivate the hopper, preventing it from pushing the item back to the dropper until the input turns off.\n\nThe output power level can be used as is (for example, to subtract 1 or 3 from a comparator in subtraction mode), but more often the output is connected to a line of two redstone dust so that the output is 0 or not 0 (to randomly power a repeater, activate a mechanism component, etc.).\n\nVariations: If the dropper is powered indirectly (for example, by quasiconnecitvity or an adjacent powered block), the hopper won't be deactivated and will immediately push the item back into the dropper.\n\nThis turns the circuit into a monostable rising edge detector with a 3.5-tick output pulse (still with a random power level of 1 or 3).\n\nWith only two items in the dropper, both output power levels will be chosen with equal probability.\n\nThe probability of the output levels can be changed by adding additional stackable and non-stackable items to the dropper (which must all be different from each other so they won't stack).\n\nFor example, with two different stackable items and three different non-stackable items, the RNG will output power level 1 40% of the time and power level 3 60% of the time.\n\nEarliest Known Publication: 14 March 2013 [1] Basic 3-RNG \u2192 \u2192 Basic 3-RNG The dropper contains one 64-stackable item, one 16-stackable item, and one non-stackable item.\n\nThe hopper contains five 16-stackable items in the far right slot.\n\n5 1x3x3 (9 block volume), 1-wide, silent circuit delay: 3 ticks (rising) and 1 tick (falling) Outputs power levels 1, 2, or 4 while on, power level 1 while off (but see variations below).\n\nWhen building this circuit, wait until the hopper is deactivated by the powered dust before putting five 16-stackable items in its far right slot.\n\nThen put a 64-stackable item, a 16-stackable item, and a non-stackable item in the dropper.\n\nBefore the input turns on, the hopper's five 16-stackable items are enough to produce a power level 1 output from its comparator (even a single 64-stackable item would be enough for that).\n\nThese five items should never be returned to the dropper, so the comparator's output will never drop below power level 1.\n\nWhen the input turns on, the dropper will push an item into the hopper, which will be placed in the hopper's left slot.\n\nIt takes 23 64-stackable items (or five 16-stackable items and three 64-stackable items, or six 16-stackable items) to produce power level 2, so if the 64-stackable item is pushed that won't be enough to increase the output power level, but if the 16-stackable item is pushed the output power level will increase to 2.\n\nAnd if the non-stackable item is pushed, the output power level will increase to 4.\n\nThe hopper is held deactivated by the powered dust when the circuit is off, and by the powered dropper when the circuit is on.\n\nBut, when the input turns off, there is a brief 1-tick moment when the dropper has just turned off, but the torch attached to it hasn't turned on again.\n\nThis allows the hopper to activate for 1 tick, pushing an item back into the dropper.\n\nA hopper always pushes items from its left slots first, so the hopper will push back the item the dropper pushed into it, rather than any of the 16-stackable items in its far right slot, allowing the circuit to reset itself.\n\nVariations: You can remove one of the items from the dropper to create a 2-RNG with different power level outputs than the regular 2-RNG: removing the 64-stackable item outputs power levels 2 or 4, removing the 16-stackable item outputs power levels 1 or 4, and removing the non-stackable item outputs power levels 1 or 2.\n\nYou can add additional redstone dust leading from the hopper to a block next to it, and then down to the side of the comparator.\n\nThis 2-wide variation will keep the comparator's output off while the input is off.\n\nWith only three items in the dropper, all three output power levels will be chosen with equal probability.\n\nThe probability of the output levels can be changed by adding additional 64-stackable, 16-stackable, and non-stackable items to the dropper (which must all be different from each other so they won't stack).\n\nFor example, with one 64-stackable item, one 16-stackable item, and two different non-stackable items, the RNG will output power level 1 25% of the time, power level 2 25% of the time, and power level 4 50% of the time.\n\nAdditional items can be added to the hopper to increase all of the output power levels.\n\nEarliest Known Publication: 16 April 2013 [2] Diminished 3-RNG 1 Diminished 3-RNG The dropper contains one 64-stackable item, one 16-stackable item, and one non-stackable item.\n\nThe hopper contains five 16-stackable items in the far right slot.\n\n5 2x4\u00d73 (24 block volume), silent circuit delay: 4 ticks (rising) and 2 tick (falling) Outputs power levels 0, 2, and 4 while on, 0 while off.\n\nThe side comparator will subtract 1 from the hopper's output, unless the hopper's output is enough to suppress the side comparator\u2014the net effect is that only power level 1 gets reduced to 0, while 2 and 4 get through unchanged.\n\nVariations: The 16-stackable item can be removed to get a 0 or 4 output (removing other items will get 0 or 2 and 2 or 4, but those are more easily obtained with a basic 2-rng or basic 3-rng).\n\nLike the basic 3-rng, additional items can be added to the hopper to increase all of the output power levels.\n\n1d2 ARNG Schematic: 1d2 ARNG View at: User:Munin295/Random circuit/1d2 arng [edit ] 2\u00d73\u00d73 (18 block volume), silent circuit delay: 3 ticks Outputs power levels 1 or 2 while on, 0 while off.\n\nThis is a basic 3-rng with the non-stackable item removed.\n\n1d3 ARNG Schematic: 1d3 ARNG View at: User:Munin295/Random circuit/1d3 arng [edit ] 4\u00d74\u00d73 (48 block volume), silent circuit delay: 4 ticks Outputs power levels 1 to 3 while on, 0 while off.\n\nThe basic 3-rng outputs power levels 1, 2, or 4, which is almost correct for a 1d3 RNG.\n\nTo correct it, another line is added to subtract 1 from the output when it should be 4.\n\nThe additional comparator is added to the output line to make sure the two lines are calculated at the same time (otherwise it would be power level 4 for 1 tick, then power level 3 as desired).\n\n1d4 ARNG Schematic: 1d4 ARNG View at: User:Munin295/Random circuit/1d4 arng [edit ] 4\u00d76\u00d73 (72 block volume), silent circuit delay: 6 ticks Outputs power levels 1 to 4 while on, 0 while off.\n\n1d5 ARNG Schematic: 1d5 ARNG View at: User:Munin295/Random circuit/1d5 arng [edit ] 6\u00d76\u00d73 (108 block volume), silent circuit delay: 7 ticks Outputs power levels 1 to 5 while on, 0 while off.\n\n1d6 ARNG Schematic: 1d6 ARNG View at: User:Munin295/Random circuit/1d6 arng [edit ] 6\u00d76\u00d73 (108 block volume), silent circuit delay: 6 ticks Outputs power levels 1 to 6 while on, 0 while off.\n\n1d10 ARNG Schematic: 1d10 ARNG View at: User:Munin295/Random circuit/1d10 arng [edit ] 8\u00d78\u00d73 (192 block volume), silent circuit delay: 9 ticks Outputs power levels 1 to 10 while on, 0 while off.\n\nAnalog 16-RNG 5\u00d78\u00d74 (160 block volume) circuit delay: 8.5 ticks Outputs power levels 0 to 15 while on, power level 0 while off.\n\nUses four 2-RNGs to subtract 1, 2, 4, and/or 8 from 15.\n\nReducing the number of 2-RNGs reduces the possible outputs: three 2-RNGs produces an 8-RNG, and two 2-RNGs produces a 4-RNG (the exact power levels depend on the power level provided to the subtraction comparators).\n\nEarliest Known Publication: 10 June 2013 [3] Schematic: Analog 16-RNG View at: Mechanics/Redstone/Miscellaneous circuits/analog 16-rng [edit ] \u2026 Binary RNG \u2026 Schematic Gallery: Binary RNG View at: User:Munin295/Random circuit/binary rng [edit ] A tally rng is a random number generator that generates a random number in a tally encoding (N outputs on of many).\n\n\u2026 A unary rng is a random number generator that generates a random number in a unary encoding.\n\nA random number is rarely needed encoded as a unary number -- however, choosing one random output from many is useful and is basically the same circuit: a random selector.\n\nA random pulse generator (RPG) outputs a pulse at random intervals.\n\nA chicken trapped above a hopper will produce an egg every 5 to 10 minutes.\n\n\u2026 A clock RPG produces a pulse when a clocked random number generator produces an output in the correct range.\n\n\u2026 An update RPG produces a pulse when a specific block tick occurs.\n\nBlock ticks only occur in a 15\u00d715 chunk area around each player, which may either limit the usefulness of update rpgs, or might be taken advantage of to limit activity to player locations.\n\nBUD Random Pulse Generator \u2192 BUD RPG 1\u00d75\u00d73 (15 block volume) 1-wide average pulse interval: 68.3 seconds output pulse: 2.5 ticks When the tripwire hook receives a block tick, it will \"wake up\" the sticky piston, causing the BUD circuit to activate and output a pulse.\n\nVariations: The interval between pulses can be reduced by placing additional tripwire hooks so that they, or the blocks they are attached to, can update the sticky piston.\n\nUp to 14 tripwire hooks can be placed, reducing the average pulse interval to as little as 4.9 seconds (see Multiple Tripwire Hooks Table below).\n\nThe interval between pulses can be increased by using multiple BUD RPGs and combining their outputs in an AND gate (the AND gate will only produce an output pulse when both or all of the BUD RPGs happen to pulse at the same time).\n\nTo determine the average pulse interval of multiple BUD RPGs, multiply together their update probabilities (see Multiple Tripwire Hooks Table above), invert, and divide by 20 to get seconds.\n\nNo more than three BUD RPGs can be combined per chunk section (multiple BUD RPGs in a chunk section will change the probabilities above), but additional BUD RPGs can be combined from other chunk sections.\n\nMinecraft divides the world up into 16\u00d716\u00d7256-block chunks, and divides chunks up into 16\u00d716\u00d716-block chunk sections.\n\nOn each game tick \u201420 times per second (load permitting)\u2014it executes a block tick on three block positions in each chunk section (but it might select the same block twice or even three times in one game tick).\n\nThus, on each game tick, any particular block has a [1 - (4095/4096) 3 ] = 0.07322% chance to be selected for a block tick.\n\nA circuit which can react to block ticks in multiple locations has a [1 - ((4096-N)/4096) 3 ] chance to be activated (where N is the number of locations it can react to).\n\nMany blocks do not react to block ticks\u2014for example, stone isn't going to do anything.\n\nBut other blocks may react some of the time, or will react every time: Dirt may grow grass (with light level 4 or more, and nearby grass blocks with light level 9 or more).\n\nFire may spread (with other nearby fire).\n\nGrass Block may die to dirt (with light level 3 or less, and covered by opaque or semi-transparent block).\n\nIce may melt into water (with block light level of 12 or more).\n\nWater may freeze into ice (in an ice plains or taiga biome, exposed to the sky, with block light level of 11 or less).\n\nPlants may grow.\n\nOf particular interest for random pulse generators are plants whose growth can be repeated automatically: Cactus growth can be recycled automatically just by placing a block next to the space the cactus will grow into.\n\nMelon growth can be detected with a BUD circuit and then removed with a piston.\n\nPumpkin growth can be detected with a BUD circuit and then removed with a piston.\n\nSugar Cane growth can be detected with a BUD circuit and then removed with a piston.\n\nA Redstone Torch will update other redstone components within two spaces.\n\nA Tripwire Hook will update other redstone components adjacent to it, or adjacent to the block it is attached to.\n\n\u2026 \u2191 \"HiFolksImAdam\" (14 March 2013).\n\n\"Minecraft 1.5 Tutorial: Simple Random Number Generator!\" (Video).\n\nYouTube.\n\n\u2191 \"Kwin van der Veen\" (16 April 2013).\n\n\"Video response: Sharing is Caring #010: 1 Bit Randomizer & Silent BUD \" (Video).\n\nYouTube.\n\n\u2191 \"Entity\" (10 June 2013).\n\n\"Calling All Redstone Geniuses, I need Help.\n\n- advanced randomizer.\".\n\nMinecraft Forum.",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/1d10 arng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/1d10_arng",
    "content": "5 A 10 A 4 A B 1d10 ARNG Droppers A each contain one 64-stackable item, and one non-stackable item: Dropper B contains four different 64-stackable items, and one non-stackable item:",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/1d2 arng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/1d2_arng",
    "content": "1d2 ARNG The dropper contains one 64-stackable item and one 16-stackable item.\n\nThe hopper contains five 16-stackable items in the far right slot.\n\n5",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/1d3 arng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/1d3_arng",
    "content": "1d3 ARNG The dropper contains one 64-stackable item, one 16-stackable item, and one non-stackable item.\n\nThe hopper contains five 16-stackable items in the far right slot.\n\n5",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/1d4 arng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/1d4_arng",
    "content": "4 4 1d4 ARNG The top dropper contains one 64-stackable item, and one non-stackable item: The bottom dropper contains one 64-stackable item, and one 16-stackable item: The bottom hopper contains five 16-stackable items in the far right slot: 5 The top hopper is empty.",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/1d5 arng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/1d5_arng",
    "content": "5 5 1d5 ARNG The top dropper contain one 64-stackable item, and one non-stackable item: The middle dropper contains one 64-stackable item, and one 16-stackable item: The bottom dropper contains four different 64-stackable items, and one non-stackable item: The middle hopper contains five 16-stackable items in the far right slot: 5 The top and bottom hoppers are empty.",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/1d6 arng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/1d6_arng",
    "content": "6 6 1d6 ARNG The top dropper contains one 64-stackable item, and one non-stackable item: The bottom dropper contains one 64-stackable item, one 16-stackable item, and one non-stackable item: The hoppers each contain five 16-stackable items in the far right slot: 5",
    "category": "Mechanics"
  },
  {
    "title": "User:Munin295/Random circuit/binary rng",
    "url": "https://minecraft.fandom.com/wiki/User:Munin295/Random_circuit/binary_rng",
    "content": "b1 b2 bN Close Binary RNG 1\u00d76\u00d72 (12 block volume) per output silent circuit delay: 3 ticks b1 b2 bN Spaced Binary RNG 2\u00d75\u00d72 (20 block volume) per output silent circuit delay: 3 ticks",
    "category": "Mechanics"
  },
  {
    "title": "User:MentalMouse42/Sandbox/Other Circuits",
    "url": "https://minecraft.fandom.com/wiki/User:MentalMouse42/Sandbox/Other_Circuits",
    "content": "This user page is about Redstone circuitry.\n\nFor other Redstone related articles, or to learn the basics, see Redstone.\n\nHere we discuss several \"tricks of the trade\" and redstone circuits.\n\nThis page demonstrates the use of a bug to make a contraption.\n\nBugs of this nature may be fixed at any time without warning.\n\nWhen this happens, the contraption will cease to work.\n\nUse at your own risk.\n\nFig.\n\n1 - The two possible orientations.\n\nFig.\n\n2 - Equal-delay inverse outputs.\n\nA specific arrangement of torches which would normally be expected to behave identically to a traditional 2-torch repeater, causing a 2-tick delay in signal transmission, instead causes only a 1-tick delay.\n\n(See figure 1.) When constructed with the torches facing east and west, this arrangement causes the expected 2-tick delay, but when facing north and south, the second (top) torch changes state at the same time as the first, after only a single tick.\n\nThe quirk can cause unexpected bugs in complicated circuit designs when not accounted for, but before the introduction of redstone repeaters, it had several practical uses.\n\nEven now, if you are using the torches anyway, this trick can be used to synchronize circuits that are 1 tick apart, or conversely delay one side of a circuit.\n\nAnother application is in creating a clock circuit (see below) with an even pulse width and period.\n\nThe North/South Quirk can still be used to obtain two signals which are always inversely related without the additional 1-tick delay a NOT gate normally causes in the second signal.\n\n(See figure 2.) This can be especially useful in circuits where precise timing is important, such as signal processing that relies on the transition of an input from high to low and low to high (on to off and back), for example by sending each of the inverse signals through separate edge detectors (see pulse generators below) and then O-Ring their outputs.\n\nTorch Delay Circuit A, levels 1/2 (A-1) Torch Delay Circuit A, levels 2/3 (A-2) Torch Delay Circuit B Sometimes it is desirable to induce a delay in your Redstone circuitry.\n\nFormerly this was done with a series of torches, but, in Beta 1.3 the single-block Redstone Repeater was introduced, which effectively rendering these delay circuits obsolete.\n\nThe historical circuits are shown here for completeness, and will still work should you choose to build one.\n\nThese two delay circuits utilize torches heavily in favor of compactness, but in doing so the builder must be aware of the North/South Quirk.\n\nFor maximum signal delay, construct these designs so that the stacked torches face east and west.\n\nFor a fine-tuned delay, adjust the design to rotate one of the alternating-torch stacks to face north and south, or add an additional stack in that orientation.\n\nDesign A gives a 4 tick delay, while design B gives a 3 tick delay.\n\nB A T Classic ABBA switch (A) Many piston creations require them to fire sequentially in one order, and close in the opposite.\n\nSuch as in secret piston doors, the circuits for them can often be huge.\n\nABBA switch is named so as the compact circuit is designed to turn on output A, then B, and later turn off output B, then A.\n\nDesign A is a typical ABBA switch.\n\nThe upper two rows can simply be repeated for additional outputs C, D, etc..\n\nThe settings of the repeaters can also be increased, to increase the delay between turning successive switches on or off.\n\nHowever doing either of these lengthens the total time that much more, and to maintain the proper order, the activating pulse must light the entire circuit before turning off.\n\nT A B Expandable Vertical ABBA switch (C) T A B Variant of Vertical ABBA switch (D) A 1 Wide compact design (C and D) can be seen in this video.\n\nThis design is faster and cheaper than the previous vertical ABBA.\n\nDelay can be added at the repeaters, and the design can easily be extended to more inputs by repeating the last two columns.\n\nThe delay for an output can be extended even farther than 4 ticks by duplicating a repeater column, at the cost of some unevenness in timing.\n\nAgain, the power must hold long enough to light the entire circuit, or the ordering will fail.\n\nSometimes it's necessary or desirable to transmit a Redstone state vertically (e.g.\n\nto have a central control or status for several circuits from a single observation point.) However, doing so in narrow spaces can be non-trivial -- there are several ways, but each has their own limits and drawbacks.\n\n2\u00d72 redstone stair Forward row is transparent 2\u00d71 redstone ladder signal upwards glowstone works too For fairly short distances, a 2\u00d72 spiral of blocks with Redstone can be used to transmit power in either direction, and the spiral is internally navigable -- that is, one can climb or descend the stairs, even if they're enclosed in a tower.\n\nThis method is instantaneous, but quickly runs into the redstone signal-length limit, so you will need to switch in another method at intervals, to introduce repeaters or even torch pairs.\n\nFor upward transmission only, you can also put redstone on a 1\u00d72 \"staircase\" of glowstone, or of upside-down slabs/staircases.\n\nAll of these are transparent blocks, so the level above does not block diagonal transmission.\n\nHowever, despite the apparent connection, power and signal will not go down these stairs.\n\nThere is a small purely visual difference, in that with slabs or stairs, the redstone will visibly \"connect\" to the redstone on the next block up, while dust on glowstone will remain as an unconnected \"dot\".\n\ntransmission]] 1\u00d71 signal upwards (A) 2\u00d71 signal downwards (B) 3\u00d71 signal downwards (C) If greater distance or narrower confines are necessary, there is a 1x1 design A for transmitting a state upward, and a 1x2 design B for transmitting a state downward.\n\nNote that every other torch will have the signal inverted, which can complicate output a bit.\n\nYou can take a non-inverted signal by wire at any block underneath any non-inverted torch.\n\nFor the block underneath an inverted torch, you can put a torch on the block's side as shown.\n\nBoth A and B can be combined with staircases to restrengthen the signal -- even inside a 2x2 tower interior, you can use a few ladders to climb past them so the tower is still navigable.\n\nDesign C for downwards transmission is slightly larger (3x1) and uses repeaters instead of torches.\n\nThe advantage to this design is the output can be easily extracted at any height without inversion.\n\nOn the other hand, it's more expensive and not as easy to navigate as B.\n\nThere currently exists a rather exotic method of 1x1 downward vertical transmission, an example of which is shown in this video.\n\nThis requires stacking a repeating unit of (from top down): a sticky piston, a minecart, a detector rail, and a redstone lamp.\n\nYou also need to arrange brief low-pulse signalling by adding a Dual Edge Detector at the beginning and a T-Flip-Flop at the end.\n\nFurthermore, this design involves rails being in mid-air for 2 tick each, while an off-pulse is being transmitted.\n\nThat is an invalid state for a rail block, so the rail can \"pop\" and cut the signal path, in any of several situations: game/chunk reload directly adjacent blocks that lead to the rail updating itself (redstone powder etc.) any other directly adjacent block updates redstone updates that are 2 blocks away in a straight, non-diagonal line For any of these situations to actually break a rail, they have to occur while the off-pulse is being sent and during the 2 tick in which the rail in question is in mid-air.\n\nA multiplexer (MUX) is a device that selects one of two or more inputs and outputs the selected input.\n\nThis multiplexer can be chained together, allowing for multiple bit multiplexing.\n\nFor these designs, the inputs are labelled A and B.\n\nC is the \"control\" input: whether A or B passes through depends on whether C is powered or not.\n\nO A B Old-style Multiplexer levels 1/2 (A-1) C Old-style Multiplexer levels 2/3 (A-2) A C O B Piston Multiplexer (B) C A O B Vertical Piston Multiplexer (C) Design A represents an old-style multiplexer based on torches.\n\nAs with many other circuits, repeaters and pistons have produced far simpler and more compact multiplexers.\n\nDesign B reacts as quickly as the older version, but only requires as little as 3\u00d71;\u00d74 cells.\n\nDesign C represents a vertical option.\n\nI C A B Modern relay (A) A B C I Old-style compact relay core (B) The relay is the reverse of the multiplexer.\n\nIt allows you to have one input be sent to either of two different outputs, A or B depending if a clock input C is off or on.\n\nThe clock input is commonly controlled by a latch, so that it can be set or reset by pulses.\n\nThe modern version A simply reverses the modern (piston) multiplexer.\n\nThe traditional way to build a relay is with two AND gates bound by an RS latch ].\n\nDesign B represents a more compact version of the core logic, with the latch separated out to an external input.\n\nThe relay defaults to one output, and by setting the control signal you can change to the secondary output.\n\nUnlike a simple latch, the relay allows you to send a non-constant signal, including none at all.\n\nIt is useful for sequential locks, and any other application where you want a non-constant signal to go to one output, switched to another by an external trigger.\n\nA random number generator is a device that can give numbers to the user without him or her noticing any sort of pattern in them.\n\nThere also is a way to use the random delay of Redstone torches to turn back on after they have been burned out.\n\nIf you combine more of these torches and check which one was the first to recover, you have yourself a random 'number'.\n\nyou can also make a compact time based randomizer by adding a clock to lots of rs NOR latches.\n\nit will only have the same outcome twice in a row if you perfectly time when you press the buttons.\n\nA short-term randomizer consists of a bat inside a Minecart.\n\nPlace rails in a loop.\n\nPlacing Detector Rails at random points along the rail will yield completely random outputs and pulse durations.\n\nHowever, using too many rails can cause some outputs to be triggered more often than others.\n\nThis circuit is powered by the bat, as bats can move Minecarts slowly.\n\nThe cons of this circuit are that you must remain nearby, to avoid the despawning of the bat, and that it can't have many outputs.\n\nFurthermore, for the odds of each number to be equal, there can only be two outputs.\n\nThe Block Update Detector switch, or BUD, detects any time an adjacent block receives an update.\n\nAn update is anything that changes that block's state: block placed, destroyed, door opened, repeater delay changed, cake eaten, grass growing, snow falling, furnace used (or turns off), and so on (chests opened and crafting tables used do not cause updates, sleeping in a bed does).\n\nWhen a block is updated, all adjacent blocks are also eligible for an update, and this can be used to produce a redstone signal or for other purposes.\n\nBUDs have been used for all kinds of things, from traps to detecting daylight to locking mechanisms on hidden doors.\n\nCurrent BUD switches take advantage of a quirk where pistons can receive power, but not updates, from blocks adjacent to the space the piston head occupies when extended.\n\nThat is: blocks adjacent to the extended state and not adjacent to the retracted state provide power to extend the piston, but as they are not adjacent to the retracted state do not cause the piston to update when that power state changes.\n\nThere was formerly a similar quirk that allowed BUDs made with just redstone torches, but this quirk was removed in 1.3.2.\n\nThere are many models of auto resetting BUDs.\n\nThis is done by having the firing of the BUD switch somehow cause the BUD switch to restore the pre-fired state often when fired it cuts the power to the piston, allowing it to retract.\n\nThis is done either by extra circuitry or, as in the example below, by the properties of blocks themselves.\n\nGlass-and-sand BUD switch (A) Design A, taken from this video, works by powering a block diagonal to the piston, by way of a block of sand.\n\nWhen a block next to the piston is updated, the piston \"notices\" it is powered, and extends.\n\nHowever, that pushes a block of glass into the sand's place, so the piston is no longer powered.\n\nAccordingly, the piston retracts, resetting the switch.\n\nThis switch as given produces an off-pulse; of course, a NOT gate can easily be added to the output.\n\nNote that the video also shows \"clocking\" behavior when two such switches are put next to each other in opposite directions.\n\nThat behavior has changed as of 1.5.1; now the triggered switch disables the other, by extending it so briefly as to leave the glass in the upward position.\n\nA Redstone-Liquid Kinetic Converter It is possible to use update mechanics to make water or lava shift its flow: Water and lava normally flow toward the closest drop in elevation within 5 blocks (lava can flow toward blocks it cannot reach).\n\nHowever, once they have \"settled\" into a constant flow, they don't actually check for such drops unless a liquid block is updated.\n\nIn order to make use of this, set up your flow in an the initial pattern and run a Redstone wire to the block adjacent to the water/lava source.\n\nThen change blocks nearby (but not next to the liquid blocks) so that the \"closest drop\" is different.\n\nWhenever the Redstone wire toggles state, the water/lava source will update and change course.\n\nThis can in turn be used to wash away redstone wire or other components, producing a signal that can be read somewhere else (a one-shot BUD).\n\nHowever, newer versions of Minecraft allow for much better means of controlling liquids (and more convenient BUD switches), rendering this trick mostly obsolete.\n\nAs of Beta 1.7, pistons provide multiple-use liquid control -- the extended piston blocks liquids, and can easily be extended or retracted as desired.\n\nVersion 1.3.1 also gave dispensers the ability to place and collect lava and water source blocks, providing another means to control where fluids flow.\n\nWorking item button.\n\nThere are several ways to produce a redstone signal based on the presence of an item.\n\nThe first way was to simply drop the item on a wooden pressure plate, but that would leave the signal on until the item despawned or was manually removed.\n\nMore recent versions of minecraft have provided ways to get a more manageable signal.\n\nAs of version 1.0, a pressure plate can be placed on a solitary fencepost (seen as \"tables\" in villages).\n\nThe fence has a very small collision box, so if you drop an item on the side of a pressure plate, it will pass through, activating it only for a split second.\n\nItem button diagram: A - drop shaft; B - Redstone output; C - disposal shaft.\n\nTo be sure that the item will be dropped on the side of a pressure plate, feed it to the plate using a water slope instead of placing the drop shaft directly above a plate.\n\nAlso make sure the fence is not connected to other blocks -- fence bars can interfere with falling items.\n\nSo be sure that you place a non-solid block (like glass) on the side of the fence that is directly below the water slope.\n\nAnd to be completely confident that the item won't land on the fence after dropping from the water slope (though, even with minimal length of slope at 2 blocks I've never encountered this) keep the water level near the pressure plate as low as possible.\n\nSee the diagram for the final arrangement.\n\nStarting with official release version 1.3, tripwires will also react to items, and are perhaps less finicky than pressure plates.\n\nStarting with official release version 1.5, substituting a hopper for the lava disposer will retain the item instead of destroying it.\n\nEven more useful, the hopper itself can be tested with a comparator to see if it contains an item, providing a durable test.\n\nA redstone current to the hopper will prevent it from passing the item on to a container until the signal has been received, after which you can turn off the current long enough for the hopper to empty itself (resetting the detector).\n\nIn a different direction, version 1.5 also introduced Weighted Pressure Plates, which respond only to items, and can also report how many items are present.\n\nHowever, as with the original wooden pressure plate, the items can't easily be cleared until they despawn.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston",
    "content": "Pistons have allowed players to design circuits that are smaller and/or faster than the standard, redstone-only counterparts.\n\nAn understanding of standard redstone circuits is helpful, as this tutorial is focused on the circuit design rather than the function.\n\nThere are three benefits of piston circuitry: Neither repeaters nor pistons 'burn out', unlike redstone torches.\n\nPiston circuits tend to be smaller than their redstone counterparts.\n\nThe resources used are much easier to find and mine.\n\nThe main components of piston circuits are sticky pistons, redstone wire, repeaters, and redstone torches.\n\nUnless otherwise stated, all pistons are sticky pistons.\n\nPower and Repeaters View at: Mechanics/Redstone/Piston circuits/Power 1 [edit ] Power is transmitted in several ways that are useful to pistons.\n\nThe first thing to note is that there are two types of blocks; transparent and solid.\n\nTransparent blocks are things such as glass, slabs, or air, while solid blocks are more common materials such as dirt, stone, or wool.\n\nThe key is that redstone power can be transmitted through solid blocks, but not transparent blocks.\n\nHowever, power can pass through only one solid block at a go, it cannot be passed from one solid block to another.\n\nA solid block can power wire leading from it only if it was \"strongly powered\" (by a redstone torch, repeater, or comparator, but not by redstone wire).\n\nRedstone dust can be placed on some transparent blocks, but then it transmits power only upward, not downward (that is, not through the transparent block).\n\nRedstone torches are considered logic components only if they change states as the gate is used.\n\n(Otherwise they're just power supplies.) If they change state too often, they are susceptible to burning out.\n\nIf a solid block is on top of a redstone torch, any wire connected to the block becomes powered.\n\nIf, however, the block is transparent, the torch does not power the wires.\n\nIn Creative mode, using torches as power-supplies for blocks above is mostly deprecated by the introduction of redstone blocks, which are permanently powered.\n\nThey have a higher cost in Survival, though.\n\nWhen a repeater is directed at a solid block, it passes power into that block in the same way redstone torches do.\n\nA repeater can also take power from a solid block that is powered, even weakly powered (that is, it turns a weakly powered signal into a strong one).\n\nPower cannot be transmitted by transparent blocks.\n\nPistons extend if powered, but it's notable that they can take power from the block above them \u2013 that is, even if the block is air, if that block would have been powered, then the piston is powered.\n\nThey can also be powered through their extended piston, which produces several useful quirks that are commonly used in circuits.\n\nA piston can push up to 12 blocks when it extends; however, a sticky piston can pull back only one block when it retracts.\n\nSome blocks are immune to being pushed or pulled, notably obsidian and any block with a GUI or inventory (except crafting tables).\n\nOther blocks drop as items if a piston tries to push them; this includes most \"attached\" blocks such as either sort of torch, or doors, but also a few others such as jack-o-lanterns.\n\nMain article: Logic circuit Pistons can produce alternate designs for many of the classic logic gates.\n\nPiston gates may also use redstone torches to supply a constant signal (in which case they can often be replaced by levers), or for other purposes.\n\nPiston NOT gate View at: Mechanics/Redstone/Piston circuits/Piston NOT [edit ] The piston-only NOT gate, also called an inverter, is slightly larger than a standard redstone NOT gate, so it is rarely used alone.\n\nHowever, it demonstrates an important concept used in many piston mechanisms, namely that torches below solid blocks create a current in any surrounding wire.\n\nWhen an input is triggered, the piston extends, uncovering the torch hole removing the signal from the output line.\n\nThe input can power the piston from almost any direction.\n\nAlternatively, a block of redstone can be used in to shrink the design.\n\nPiston OR gate View at: Mechanics/Redstone/Piston circuits/Piston OR [edit ] This design is slightly faster than the standard redstone OR gate, with a comparable size.\n\nIt uses one piston that covers a torch when extended by any of the inputs.\n\nPiston AND gate View at: Mechanics/Redstone/Piston circuits/Piston AND [edit ] Incredibly fast AND gate.\n\nWhen unpowered, the sticky piston pulls the block over the hole, breaking the circuit.\n\nWhen powered, it extends and lets the current flow in and out of the hole.\n\nOne input feeds the piston, the other feeds the circuit it interrupts; both must be ON to release a signal.\n\nPiston IMPLIES gate View at: Mechanics/Redstone/Piston circuits/Piston IMPLIES [edit ] Comparable size and speed to some of the basic redstone IMPLIES gate.\n\nThis gate represents material implication.\n\nReturns false only if the implication A \u2192 B is false.\n\nThat is, if the conditional A is true, but the consequent B is false.\n\nIt is often read \"if A then B.\" It is the logical equivalent of \"B or NOT A\".\n\nThe torch under the mobile block is in a hole.\n\nPiston XNOR gate View at: Mechanics/Redstone/Piston circuits/Piston XNOR [edit ] Pronounced \"ex-nor\", this device activates when both inputs are equal.\n\nA useful attribute is that a XOR or XNOR gate always changes its output when one of its inputs changes, allowing for 2 switches to be combined to open or close a door, or activate another device.\n\nThis design is significantly smaller than the redstone-only equivalent and slightly faster.\n\nAdding a NOT gate to the end or to either input produces an XOR gate, which activates when the inputs are different.\n\nPiston XOR gate View at: Mechanics/Redstone/Piston circuits/Piston XOR [edit ] Pronounced \"ex-or\" (a shortening of \"exclusive or\"), this device activates when only one of the inputs is on.\n\nThis design, like the XNOR gate, is smaller and faster than the redstone-only equivalent.\n\nMain article: Memory circuit Latches are memory circuits.\n\nNaturally, pistons' ability to physically move blocks to new locations make them a natural tool for these.\n\nPiston RS Latches View at: Mechanics/Redstone/Piston circuits/Piston RS Latches [edit ] The basic piston RS Latch is small and easy to make.\n\nThe pistons used here are regular pistons, not sticky pistons, and push a block over one of two holes containing a Redstone Torch.\n\nOne hole can be omitted if only one output is required.\n\nUsing a Block of Redstone lets the circuit become even smaller, and adds the inverse output.\n\nThese T flip-flops use one input to switch between two states.\n\nSticky pistons behave strangely when they receive a 1-tick signal.\n\nIf a block is directly next to the piston, the piston pushes the block but does not pull it back when the signal ends.\n\nIf the piston receives another 1-tick signal, the piston extends and retract the block.\n\nThis can be used to toggle the position of blocks.\n\nPiston Toggle A View at: Mechanics/Redstone/Piston circuits/Piston Toggle A [edit ] Design A, 4\u00d72\u00d74.\n\nUses regular pistons.\n\nBoth of the pistons are regular pistons.\n\nThis flip flop is quite fast and quite small.\n\nIt toggles when the input changes from ON to OFF.\n\nInverting the input increases the speed of the circuit.\n\nPiston Toggle B View at: Mechanics/Redstone/Piston circuits/Piston Toggle B [edit ] Design B (5\u00d73\u00d72) is actually an RST latch, combining the functionality of both the Set/Reset (RS) and toggle (T) latches.\n\nUses regular pistons.\n\nThis flip flop doesn't use torches for logic so it can work with signals of any length.\n\nThe dust on level 1 is there to redirect the redstone wire away from block X, which powers the piston.\n\nHowever, this circuit does not have an inverse output.\n\nPiston Toggle C View at: Mechanics/Redstone/Piston circuits/Piston Toggle E [edit ] Design C is a combination pulse limiter and downward edge detector.\n\nWhen the signal turns off, the first sticky piston retracts the second, which receives a 1-tick signal.\n\nThe 1-tick signal toggles the mobile block.\n\nIt is sensitive to timing.\n\n1-wide Sticky Piston TFF View at: Mechanics/Redstone/Piston circuits/Sticky Piston Compact TFF [edit ] The 1-wide Sticky Piston TFF design is 5\u00d71\u00d73.\n\nIt depends on the fact that a sticky piston leaves the block after extending when given a short pulse of 0.5 ticks of delay.\n\nA circuit breaker is used to give a 0.5 ticks pulse to the sticky piston.\n\nThis makes the sticky piston leave the redstone block, which then provides power to the output.\n\nWhen powered again, the sticky piston pulls the redstone block switching the output off.\n\nIt is possible to make this TFF tileable.\n\nThis section needs schematic(s) or diagram(s) instead of YouTube video links.\n\nPlease remove this notice once you've added suitable diagram(s) to the article.\n\nA simple ring of blocks, rotated by pistons.\n\nThe reading head is on the right side of the ring.\n\nThe rightmost circuit is a clock that drives the pistons This is a ring of blocks attached to regular pistons at the corners so it can rotate.\n\nThe blocks are usually a combination of solid and non-solid blocks.\n\nThe pistons are often connected to a clock so that they rotate the ring.\n\nMost (if not all) rings have a reading head consisting of a repeater pointing at the ring and a redstone torch powering the repeater.\n\nBy using redstone on the other side of a ring, one can see which type of block is in front of the reading head (1 = Solid; 0 = Non-solid).\n\nThis information now can be passed to a circuit.\n\nBy using a comparator and reading a cauldron's fill level, 3 additional memory cell states are available.\n\nFor repeater-based reading heads those act as zeroes.\n\nAdding multiple rings together in a row creates a band.\n\nA band stores even more information and works similar to punched tape.\n\nExamples include music machines, combination locks, and memory.\n\nMain article: Mechanics/Redstone/Clock circuit Rapidfire Piston Clock View at: Mechanics/Redstone/Piston circuits/Rapidfire Piston Clock [edit ] This rapidfire clock is fairly simple to build.\n\nIt requires 2 non-sticky pistons, 2 repeaters, and 6 redstone, and 5 solid blocks.\n\nThe repeaters must be set to at least 2 ticks, and they must match.\n\nPlace the mobile block last to start the clock, and take output from either end or any wire.\n\nNote that this clock is not switchable, and if it does stop for any reason, it's difficult to restart by a redstone signal.\n\nThe player can restart it by breaking and replacing the mobile block, or by changing the repeater delays (both of them; the clock restarts when they match and are set to at least 2 ticks).\n\nAlternate Rapidfire Piston Clock View at: Mechanics/Redstone/Piston circuits/Alternate Rapidfire Piston Clock [edit ] This piston clock is a simple way of repeating a circuit that goes at high speed without burning out.\n\nIt does not require repeaters or redstone torches.\n\nA tutorial is available here.\n\nIt requies a single sticky piston, one lever, a small amount of redstone, and some solid blocks.\n\nFrom the lever, the redstone has to be placed so it goes up a block, before linking up to the piston.\n\nThe piston has to be placed in a way that, when it is extended, it blocks the redstone from going up the side of the block without breaking the redstone.\n\nThis breaks the circuit, removing power from the piston and thus retracting it, causing the circuit to open again.\n\nThe signals are too fast to affect lighting sources such as lamps and redstone torches.\n\nDoors and dispensers both work well at this speed.\n\nPiston Pulser View at: Mechanics/Redstone/Piston circuits/Piston pulser [edit ] A small, stable pulser in a space of 2\u00d73\u00d72.\n\nThe period can be adjusted with the repeater, and the clock can be turned off or on with the lever.\n\n(Turning the lever ON stops the clock, and vice versa.) The lever can be placed on any of the solid blocks.\n\nAnother way of doing this is placing a sticky piston with a redstone block on its face and a line of redstone dust connecting the redstone block and the sticky piston.\n\nIt must be two long to prevent lockup.\n\nTo make it toggleable, connect the dust with a lever.\n\nThis is useful for traps.\n\nA rising edge detector creates a brief signal when the input turns on.\n\nConversely, a falling edge detector creates a brief signal when the input is turned off, and a dual-edge (aka \"zero-crossing\") detector responds to both.\n\nSwitchable Edge Detector (A) View at: Mechanics/Redstone/Piston circuits/Edge Detector A [edit ] Design A can be a rising- or falling-edge detector depending on the delays of the repeaters.\n\nFor a rising edge, set both repeaters to 1-tick.\n\nFor a falling edge, set the left repeater to four-ticks and the right repeater to one-tick.\n\nThis creates a 2-tick signal.\n\nDouble-Edge Detector (B) View at: Mechanics/Redstone/Piston circuits/Edge Detector B [edit ] Design B is a variant of the piston XOR gate, and a dual-edge detector.\n\nThe right-hand repeater can be adjusted to output a longer or shorter pulse.\n\nInline Edge Detectors View at: Mechanics/Redstone/Piston circuits/Edge Detectors Inline [edit ] Designs D, E, and F are straight-line versions, 1\u00d72\u00d72.\n\nDesign D is a rising edge detector; design F, a falling edge detector; both with an output pulse of 2 ticks.\n\nDesign E is a zero crossing detector, activating on both rising and falling edges.\n\nHowever, it produces only a single-tick pulse output.\n\nThis can be moderated by adding a 2-tick repeater to the output, producing a 2-tick pulse, same as the other two.\n\nBasic Double Extender View at: Mechanics/Redstone/Piston circuits/Double Extender 1 [edit ] This design pushes and pull a block two spaces instead of one.\n\nThe first and second repeaters must be set to delays of 2 and 4 respectively.\n\nThe pistons are sticky and the device correctly pushes and retracts the block.\n\nThe main trick is properly sequencing the retraction because the back piston does not pull back the forward piston when it is extended.\n\nAdditionally, the back piston retract only the forward piston, not the block.\n\nTo handle these issues the forward piston must be retracted, pulled back, then extended and retracted again.\n\nTriple extenders and so forth are possible, but involve more complex circuitry.\n\nAs more pistons are added to the circuit, the logic becomes more complex.\n\nIn an ideal circuit the extension and retraction of the pistons are governed by the number of pistons, denoted P.\n\nThen, the time to extend the pistons equals P ticks.\n\nThe time to retract the pistons equals 3P\u22122 ticks.\n\nThis relationship is linear, and implies that the time for the circuit to execute goes up proportionately with the number of pistons.\n\nThis relationship is achieved by moving multiple pistons per tick rather than only one at time.\n\nThis relationship applies to both horizontal and vertical extenders.\n\nDue to the pistons limit to pushing 12 blocks at a time, an 11 piston extender is the largest possible extender.\n\nAssuming the design is constructed ideally, this needs 11 ticks to extend and 31 ticks to retract.\n\nA player built design would likely use more delays for ease of construction.\n\nPiston-Safe Double Extender View at: Mechanics/Redstone/Piston circuits/Double Extender 2 [edit ] A more advanced (and much larger) circuit can double-push pistons, without extending them (and stopping the system).\n\nThis circuit can also can be powered with torches from below, to hide all the wiring.\n\nEither way, input to any of the green-marked squares, so the signal reaches all the way round without needing extra repeaters.\n\nThe design can be mirrored to push a pair of pistons on the same switch.\n\nVertical Double Extender (side view) View at: Redstone_circuits/Piston/Double_Extender_4 [edit ] Vertical double extenders are more difficult to make than horizontal extenders; the release of observers in 1.11, however, has greatly simplified the design of vertical double extenders.\n\nDesign A is a 3\u00d73 tileable design that extends upward.\n\nDesign B is a 4\u00d73 tileable design that extends downward.\n\nThe repeater in both designs are set to 1-tick.\n\nLonger vertical extenders require complex circuitry, and are often used as elevators.\n\nTo slightly simplify the required circuits, a gravity-affected block like gravel or sand can be used as the elevator platform.\n\nThis avoids the need for the top piston to be sticky and for it to execute multiple extensions to pull down the top block at each stage of descent.\n\nIf more than two pistons are used in total, multiple extensions of lower sticky pistons are still required to pull down the pistons higher in the stack, which are not gravity-affected.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse",
    "content": "A pulse circuit is a redstone circuit which generates, modifies, detects, or otherwise operates on redstone pulses.\n\nA pulse is a temporary change in redstone power that eventually reverts to its original state.\n\nAn on-pulse is when a redstone signal turns on, then off again.\n\nOn-pulses are usually just called \"pulses\" unless there is a need to differentiate them from off-pulses.\n\nAn off-pulse is when a redstone signal turns off, then on again.\n\nThe pulse length of a pulse is how long it lasts.\n\nShort pulses are described in redstone ticks (for example, a \"3-tick pulse\" for a pulse that turns off 0.3 seconds after it turns on) while longer pulses are measured in any convenient unit of time (for example, a \"3-second pulse\").\n\nThe rising edge of a pulse is when the power turns on \u2013 the beginning of an on-pulse or the end of an off-pulse.\n\nThe falling edge of a pulse is when the power turns off \u2013 the end of an on-pulse or the beginning of an off-pulse.\n\nPulse logic is a different approach to binary logic than standard redstone power binary (power present = 1, power absent = 0).\n\nIn pulse logic, the pulse is a toggle of logic level of the contraption: (first pulse = 1, second pulse = 0).\n\nThis approach allows implementing computational logic that operates not only on redstone signal, but also on block updates, and block positions; in particular implementation of mobile logical circuits in flying machines, and significant reduction of server-side lag through avoiding redstone dust, transporting signals through block updates instead - e.g.\n\nover Powered Rail.\n\nIn many cases use of pulse logic also results in more compact circuitry, and allows building 1-tileable modules where classic redstone power would \"spill\" to the neighbor modules.\n\nConversion from classic redstone binary to pulse logic is performed through dual edge detectors, (usually just an Observer observing redstone dust or other power components), and conversion back is performed through T flip-flop circuits, in particular the block-dropping behavior of sticky pistons.\n\nThat behavior is also utilized as memory storage in pulse logic, position of the block encoding state of memory cell.\n\nSome redstone components react differently to short pulses: In Java Edition, a piston or sticky piston usually takes 1.5 ticks to extend.\n\nIf the activation pulse ends before this (because it's only 0.5 ticks or 1 tick long), the piston or sticky piston \"aborts\" \u2013 it places the pushed blocks at their pushed position and return to its retracted state instantly.\n\nThis can cause sticky pistons to \"drop\" their block \u2013 they push a block and then return to their retracted state without pulling it back.\n\nA redstone comparator does not always activate when given a pulse of 1 ticks or less.\n\nA redstone lamp can be deactivated only by an off-pulse of minimum 2 ticks.\n\nA redstone repeater does increase the length of pulses which are shorter than its delay to match its delay (for example, a 4-tick repeater changes any pulse shorter than 4 ticks into a 4-tick pulse).\n\nIn Java Edition, a redstone torch cannot be activated by pulses shorter than 1.5 ticks.\n\nWhen building circuits, it can sometimes be helpful to observe the pulses being produced to confirm their duration or spacing.\n\n\u2192 Oscilloscope 1\u00d7N\u00d72, flat, silent An oscilloscope allows you to watch pulses as they move through the repeaters.\n\nA pulse can be measured with 1-tick precision with an oscilloscope (see schematic, right).\n\nAn oscilloscope simply consists of a line of 1-tick repeaters (aka a \"racetrack\").\n\nAn oscilloscope should be constructed to be at least as long as the expected pulse, plus a few extra repeaters (the more repeaters, the easier it is to time capturing a pulse).\n\nFor periodic pulses (as from clock circuits), an oscilloscope should be at least as long as the clock period (both the on and off parts of the pulse).\n\nAn oscilloscope can be frozen to aid reading by: using an oak sign next to the design.\n\npositioning the oscilloscope on the screen so that it can be viewed when the player pauses the game, or taking a screenshot with F2, or running repeaters into the side of the oscilloscope and powering them simultaneously to lock the repeaters of the oscilloscope.\n\nAn oscilloscope is not capable of displaying fractional-tick pulses directly (0.5-tick pulses, 1.5-tick pulses, etc.), but for fractional-tick pulses greater than 1 tick, the pulse length may appear to change as it moves through the oscilloscope.\n\nFor example, a 3.5-tick pulse may sometimes power 3 repeaters and sometimes 4 repeaters.\n\nHalf-tick pulses do not vary between powering 0 or 1 repeaters (they just look like 1-tick pulses), but half-tick and 1-tick pulses can be differentiated with a redstone comparator \u2013 a 1-tick pulse can activate a comparator, but a half-tick pulse cannot in most cases.\n\nMultiple oscilloscopes can be laid in parallel to compare different pulses.\n\nFor example, you can determine a circuit's delay by putting the circuit's input signal through one oscilloscope and the circuit's output through another and counting the difference between the input and output signal edges.\n\nOscilloscopes are useful but sometimes require you to be in an inconvenient position to observe them.\n\nIf you just need to observe the simultaneity of multiple pulses it can be useful to use pistons or note blocks and observe their movement or note particles from any angle.\n\nRedstone lamps are less useful for this purpose because they take 2 ticks to turn off.\n\nA circuit is monostable if it has only one stable output state (\"mono-\" means \"one\", so \"monostable\" means \"one stable state\").\n\nA circuit's output can be powered or unpowered.\n\nIf an output stays in the same state until the circuit is triggered again, that output state is called \"stable\".\n\nAn output state that changes without the input being triggered is not stable (that doesn't necessarily mean it's random \u2013 it may be an intentional change after a designed delay).\n\nIf a circuit has only one stable output state then the circuit is called \"monostable\".\n\nFor example, if a powered state inevitably reverts to the unpowered state, but the unpowered state doesn't change until the input is triggered.\n\nWhen someone says \"monostable circuit\" in Minecraft, they usually mean a pulse generator or a pulse limiter.\n\nHowever, any redstone circuit which produces a finite number of pulses is technically a monostable circuit (all the circuits in this article, in fact, as well as some others), so instead of saying monostable circuit, it can be helpful to be more specific: A pulse generator generates a pulse A pulse limiter reduces the duration of long pulses A pulse extender increases the length of short pulses A pulse multiplier produces multiple output pulses in response to a single input pulse A pulse divider produces an output pulse after a specific number of input pulses An edge detector produces an output pulse when it detects a specific edge of an input pulse A pulse length detector produces an output pulse when it detects an input pulse of a specific length A block update detector produces an output pulse when a specific block is updated (for example, stone is mined, water turns to ice, etc.) A comparator update detector produces an output pulse when a specific comparator is updated by an inventory update Clock circuits also produce pulses, but they aren't monostable because they have no stable output states (they are \"astable\") unless forced into one by external interference (for example, when they're turned off).\n\nLogic and memory circuits aren't monostable because both of their output states are stable (they are \"bistable\") \u2013 they don't change unless triggered by their input.\n\nSee also: Wikipedia:Monostable A pulse generator creates an output pulse when triggered.\n\nMost pulse generators consist of an input and a pulse limiter.\n\nA pulse extender can be added on to generate a longer pulse.\n\nSchematic Gallery: Pulse Generator View at: Redstone_circuits/Pulse/pulse_generator [edit ] Circuit Breaker Pulse Generator \u2013 Left: Sticky piston.\n\nRight: Regular piston.\n\n[schematic] 1\u00d73\u00d73 (9 block volume), 1-wide circuit delay: 1 tick output pulse: 1 tick The circuit breaker is one of the most commonly used pulse generator due to its small size and adjustable output.\n\nVariations: The output repeater may be set to any delay, which also lengthens the output pulse to equal the delay.\n\nWhen oriented north-south, the output repeater may be replaced by any mechanism component, causing the mechanism component to receive a 0 tick pulse.\n\ncommon observer pulse generator 1\u00d71\u00d73 (3 block volume), 1-wide, 1 high, tileable circuit delay: 2 ticks output pulse: 1 tick The observer pulse generator is one of the most common pulse generators due to its adaptability.\n\nIt can be oriented in almost any direction, and the observer can be oriented in almost any direction, allowing for lots of flexibility.\n\nAnd depending on where the output is taken from, it can be a rising or falling edge pulse generator.\n\nThe observer can also be updated by other circuitry to send more pulses from the output.\n\nVariations: The piston base can be oriented in any way; the same is true for the observer except for facing the piston itself.\n\nOutput can be taken from either the extended or retracted position to change which edge it activates on.\n\nDust-Cut Pulse Generator \u2013 [schematic] 1\u00d74\u00d73 (12 block volume), 1-wide circuit delay: 0 ticks output pulse: 1.5 ticks when the output is a piston, 1 tick for everything else A dust-cut pulse generator limits the output pulse by moving a block so that it cuts the output dust line.\n\nNOR-Gate Pulse Generator \u2013 [schematic] 1\u00d74\u00d73 (12 block volume), 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick A NOR-gate pulse generator compares the current power to the power from 2 ticks ago \u2013 if the current power is on and the previous power was off, the output torch flashes on briefly.\n\nThis design uses a trick to limit the output pulse to a single tick.\n\nA redstone torch cannot be activated by a 1-tick pulse from exterior sources, but a torch activated by a 2-tick exterior pulse can short-circuit itself into a 1-tick pulse.\n\nTo increase the output pulse to 2 ticks, remove the block over the output torch.\n\nTo then increase it to 3 ticks, increase the delay on the repeater to 4 ticks.\n\nLocked-Repeater Pulse Generator \u2013 [schematic] 2\u00d73\u00d72 (12 block volume), flat, silent circuit delay: 2 ticks output pulse: 1 tick When the lever is turned off, the locked repeater allows a pulse through.\n\nVariations: The locked repeater and the input repeaters can be set to any delay.\n\nThis increases the output pulse length, but also the circuit delay.\n\nComparator-Repeater Pulse Generator - [schematic] 2\u00d74\u00d72 (15 block volume), flat, silent circut delay: 1 tick output pulse: 2 ticks The dust first powers the comparator, turning on the output, then the delayed pulse (with the repeater) shuts off the output.\n\nVariations: The repeater can be set to any number of ticks, increasing only the output pulse length.\n\nAn off-pulse generator has an output which is usually on, but generates an off-pulse when triggered.\n\nOR-Gate Off-Pulse Generator \u2013 [schematic] 1\u00d73\u00d73 (9 block volume), 1-wide, silent circuit delay: 1 tick output pulse: 1 tick (off) When triggered, the bottom torch turns off, but the top torch doesn't turn on until 1 tick later, allowing a 1-tick off-pulse output.\n\nA pulse limiter (aka \"pulse shortener\") reduces the length of a long pulse.\n\nAn ideal pulse limiter would allow shorter pulses through unchanged, but in practice the range of input pulse can often be determined (or guessed) and it is sufficient to use a circuit which produces a specific pulse shorter than expected input pulses.\n\nAny rising edge detector can also be used as a pulse limiter.\n\nSchematic Gallery: Pulse Limiter View at: Redstone_circuits/Pulse/pulse_limiter [edit ] Circuit Breaker Pulse Limiter Circuit Breaker Pulse Limiter \u2013 [schematic] 1\u00d73\u00d73 (9 block volume), 1-wide circuit delay: 1 tick output pulse: 1 tick The circuit breaker is the most commonly used pulse limiter due to its small size and adjustable output.\n\nVariations: The output repeater may be set to any delay, which also lengthens the output pulse to equal the delay.\n\nThe output repeater may be replaced by any mechanism component, causing the mechanism component to receive a 0.5-tick activation pulse.\n\nDust-cut pulse limiter Dust-Cut Pulse Limiter \u2013 [schematic] 1\u00d75\u00d73 (15 block volume), 1-wide, instant circuit delay: 0 ticks output pulse: 1.5 ticks A dust-cut pulse limiter limits the output pulse by moving a block so that it cuts the output dust line.\n\nThe dust-cut pulse limiter doesn't \"repeat\" its input (boost it back up to full power), so a repeater may be needed before or after it (adding delay).\n\nThe dust-cut pulse limiter is an \"ideal\" pulse limiter (see above).\n\nPulses shorter than 1.5 ticks (its maximum output pulse) are allowed through unchanged.\n\nMoved-block pulse limiter Moved-Block Pulse Limiter \u2013 [schematic] 3\u00d73\u00d72 (12 block volume), flat circuit delay: 1 tick output pulse: 1 tick Uses the same principle as the circuit breaker pulse limiter \u2013 power the output through a block, then remove the block to keep the output pulse short.\n\nVariations: The bottom repeater can be set to a longer delay to produce output pulses of 2 or 3 ticks.\n\nThe repeater powering the piston can be replaced with a comparator to generate a 0-tick pulse NOR-gate pulse limiter NOR-Gate Pulse Limiter \u2013 (1-wide) [schematic] NOR-Gate Pulse Limiter \u2013 Top: 1-tick.\n\nBottom: Flat.\n\n[schematic] features vary (see schematics) A NOR-gate pulse limiter compares the current power to the power from 2 ticks ago \u2013 if the current power is on and the previous power was off, the output torch flashes on briefly.\n\nThe \"1-wide\" and \"1-tick\" designs use a trick to limit the output pulse to a single tick.\n\nA redstone torch cannot be activated by a 1-tick pulse from exterior sources, but a torch activated by a 2-tick exterior pulse can short-circuit itself into a 1-tick pulse.\n\nRemove the block over an output torch to increase the output pulse to 2 ticks.\n\nLocked-repeater pulse limiter Locked-Repeater Pulse Limiter \u2013 [schematic] 2\u00d74\u00d72 (16 block volume), flat, silent circuit delay: 3 ticks output pulse: 1 tick Uses repeater locking to shut pulses off after 1 tick.\n\nVariations: The output repeater can set to any delay.\n\nThis increases the output pulse, but also increases the circuit delay.\n\nIf the input doesn't have to be at the same height as the output, you can move the torch so that it's attached to the top of the block it's currently above, and run the input into that block (making the circuit only 2\u00d73\u00d72).\n\nDropper-hopper pulse limiter Dropper-Hopper Pulse Limiter \u2013 [schematic] 1\u00d74\u00d72 (8 block volume), 1-wide, flat, silent circuit delay: 3 ticks output pulse: 3.5 ticks When the input turns on, the dropper pushes an item into the hopper, activating the comparator until the hopper pushes the item back.\n\nThe initial block is required to activate the dropper without powering it (which would deactivate the adjacent hopper, preventing it from returning the item to turn off the output pulse).\n\nBecause the output comes from a comparator used as an inventory counter, the output power level is 1 (with a stackable item) or 3 (with a non-stackable item) \u2013 add a repeater for a higher power level output.\n\nVariations: If the input and output don't need to be at the same height, you can reduce the size of the circuit by putting the hopper on top of the dropper (making the circuit 1\u00d73\u00d72).\n\nAn off-pulse limiter (aka \"inverted pulse limiter\") has an output which is usually on, but which shortens the length of long off-pulses.\n\nAny inverted falling edge detector can also be used as an off-pulse limiter.\n\nOR-gate off-pulse limiter OR-Gate Off-Pulse Limiter \u2013 Top: 1-tick.\n\nBottom: Flat.\n\n[schematic] OR-Gate Off-Pulse Limiter \u2013 Instant.\n\n[schematic] features vary (see schematics) An or-gate off-pulse limiter combines the input with a delayed inverted input to limit off-pulses.\n\nThe \"instant\" version doesn't repeat its input (boost it back up to full power), so a repeater may be needed before or after it (adding delay).\n\nVariations: The bottom repeater of the flat version can be adjusted to any delay, increasing the length of the off-pulse to match the repeater's delay (this doesn't actually increase the circuit delay).\n\nThe bottom redstone dust in the \"instant\" version can be replaced with a repeater to increase the length of its off-pulse.\n\nMoving-block off-pulse limiter Moving-Block Off-Pulse Limiter \u2013 [schematic] 1\u00d74\u00d72 (8 block volume), 1-wide, instant circuit delay: 0 ticks output pulse: 2.5 ticks (off, 3 if the output is a piston) When the input turns off, the piston begins to retract.\n\n1 tick later, the torch turns on, which re-activates the sticky piston by quasi-connectivity, causing it to extend again.\n\nA pulse extender (a.k.a.\n\n\"pulse sustainer\", \"pulse lengthener\") increases the duration of a pulse.\n\nThe most compact options are: Up to 4 ticks: Repeater Up to 4 ticks per repeater: Repeater-Line Pulse Extender 1 second to 4 minutes: Dropper-Latch Pulse Extender or Hopper-Clock Pulse Extender 5 minutes to 81 hours: MHDC Pulse Extender Schematic Gallery: Pulse Extender View at: Redstone_circuits/Pulse/pulse_extender [edit ] Redstone repeater 1\u00d71\u00d72 (2 block volume) 1-wide, flat, silent circuit delay: 1 to 4 ticks output pulse: 1 to 4 ticks For any input pulse shorter than its delay, a redstone repeater increases the duration of the pulse to match its delay.\n\nFor example, a 3-tick repeater turns a 1-tick pulse or a 2-tick pulse into a 3-tick pulse.\n\nAdditional repeaters only delay the pulse, not extend it (but see the repeater-line pulse extender below).\n\nRepeater-line pulse Extender Repeater-Line Pulse Extender \u2013 Top: Delayed (1.4 second).\n\nBottom: Instant (1 second).\n\n[schematic] 2\u00d7N\u00d72 flat, silent, instant circuit delay: 0 ticks (instant) or 4 ticks (delayed) output pulse: up to 4 ticks per repeater For the instant version, the input must be a pulse at least as long as the longest-delay repeater in the line (usually 4 ticks) \u2013 if not, use the delayed version.\n\nDropper-latch pulse extender Dropper-latch pulse extender \u2013 [schematic] 2\u00d76\u00d72 (24 block volume) flat, silent circuit delay: 5 ticks output pulse: 5 ticks to 256 seconds Each stackable item, 16-stackable item and unstackable item in the middle hopper adds 8 ticks (0.8 seconds), 32 ticks or 256 ticks to the output pulse respectively.\n\nThe output pulse can be fine-tuned by increasing the delay on the 1-tick repeater by up to 3 ticks, decreasing the delay on the 4-tick repeater by up to 3 ticks, or by replacing the 4-tick repeater with a block to decrease the delay by 4 ticks (these adjustments affect the total pulse duration, not per item, allowing pulse durations of any tick amount from 5 ticks to 256 seconds).\n\nVariations: If the input pulse might be longer than half the output pulse, add a block before the dropper to keep it from deactivating the hopper.\n\nA 1-wide version is possible by using two droppers (adjustable only in increments of 8 ticks): \u2192 \u2192 1-wide dropper-latch pulse extender 1\u00d77\u00d73 (21 block volume) 1-wide circuit delay: 4 ticks output pulse: 4 ticks to 256 seconds The left dropper contains a single item and the left hopper contains one to 320 items.\n\nHopper-clock pulse extender Hopper-Clock Pulse Extender \u2013 Top: 1-wide.\n\nBottom: Flat.\n\nIn both, the left piston is sticky and the right is regular.\n\n[schematic] features vary (see schematics) circuit delay: 1 tick output pulse: 4 ticks to 256 seconds A hopper-clock pulse extender is a hopper clock with one of the sticky pistons replaced with a regular piston so that it doesn't pull the block of redstone back, but instead wait for the input to trigger a new clock cycle.\n\nA hopper-clock pulse extender with a single item in its hoppers produces a 4-tick output pulse.\n\nEach additional item adds 8 ticks to the output pulse (unlike the dropper-latch pulse extender, the output of a hopper-clock pulse extender can be adjusted only in 8-tick increments).\n\nWhile waiting for the input to turn on, the sticky piston is actually in a state where it is powered but doesn't know it (like a stuck-piston BUD circuit) until \"woken up\" by the input changing its power level.\n\nThis works as long as the input power level is different than the resting output of the powered comparator (unintuitively, it even works if the input power level is less than the comparator output).\n\nCaveats: - Any block or redstone update near the powered & stuck sticky piston can trigger it, so care should be taken to keep other circuit activity away from the sticky piston.\n\n- The timer/counter part starts after the rising edge of the input pulse.\n\n-> At worst the output pulse is only \" input_pulse + extender_time/2 \" not \" input_pulse + extender_time \".\n\nFor \" input_pulse < extender_time/2 \" it's always just \" extender_time \".\n\nEarliest known publication: 4 May 2013 CodeCrafted: \"Minecraft QASI: Compact adjustable pulse extender\" (based on the ethonian hopper clock) RS latch pulse extender RS NOR Latch Pulse Extender (3 seconds) \u2013 There is redstone dust under the raised block.\n\n[schematic] features vary (see schematics) output pulse: up to 8 ticks per repeater An RS latch pulse extender works by setting the output on with a latch, then resetting the latch after some delay.\n\nBoth of the circuits below use a trick to double the delay produced by the repeaters, by first powering the output from the latch, then from the repeaters.\n\nThis means that any 1-tick adjustment to the repeater loop produces a 2-tick adjustment in the output pulse.\n\nFader pulse extender Fader Pulse Extender (6 seconds) \u2013 [schematic] 2\u00d7N\u00d72 flat, silent circuit delay: 0 ticks output pulse: up to 14 ticks per comparator The delay depends on the input's signal strength \u2013 for input signal strength S, the delay is (S-1) ticks per comparator.\n\nThe signal strength of the output gradually decays, so should usually be boosted with a repeater.\n\nBecause this uses comparators, this pulse extender does not work with most 1 tick or shorter pulses.\n\nMHC pulse extender MHC Pulse Extender \u2013 All pistons are sticky.\n\n[schematic] 6\u00d76\u00d72 (72 block volume) flat circuit delay: 3 ticks output pulse: up to 22 hours \"MHC\" stands for \"multiplicative hopper clock\" (a hopper counter multiplies the clock period of a hopper clock).\n\nWhen the input turns on, the torch turns off, allowing both clocks to cycle into a state where the bottom clock continues to hold the torch off until it's completed one full cycle.\n\nThe number of items in the top hoppers determines the top clock's cycle period, and its block of redstone moves every half-cycle, allowing the bottom clock to move one item.\n\nThe half-cycle is equal to the number of items in the top hoppers times 4 ticks (or 0.4 seconds per item) \u2013 up to 128 seconds for 320 items.\n\nThe bottom clock keeps the output on for a number of half-cycles equal to twice the number of items in the bottom hoppers, minus 1.\n\nThus, the output pulse equals 0.4 seconds \u00d7 <top items> \u00d7 (2 \u00d7 <bottom items> - 1).\n\nMHDC pulse extender MHDC Pulse Extender \u2013 All pistons are sticky.\n\n[schematic] 5\u00d77\u00d72 (70 block volume) flat circuit delay: 5 ticks output pulse: up to 81 hours \"MHDC\" stands for \"multiplicative hopper-dropper clock\" (a dropper counter multiplies the clock period of a hopper clock).\n\nWhen the input turns on, the torch turns off, allowing both clocks to cycle into a state where the bottom clock continues to hold the torch off until it's completed one full cycle.\n\nThe hoppers can hold up to 320 items (X) and the droppers can hold up to 576 items (Y).\n\nThe duration of the output pulse is X \u00d7 (2Y-1) \u00d7 0.8 seconds.\n\nCooldown pulse extender Note: This circuit uses command blocks which cannot be obtained legitimately in survival mode.\n\nThis circuit is intended for server ops and adventure map builds.\n\n\u2192 \u2192 Cooldown pulse extender \u2014 The dropper contains a single item.\n\n1\u00d74\u00d72 (8 block volume) circuit delay: 3 ticks output pulse: up to 27 minutes This pulse extender uses a command block to slow the hopper transfer rate.\n\nThe exact command depends on the direction the pulse extender is facing, but for a pulse extender facing the positive X direction it look something like this: /data modify block ~2 ~ ~ TransferCooldown set value X, where X is the number of game ticks (up to 32,767) to hold the item in the hopper (20 game ticks = 1 second, lag permitting).\n\nWhen the command block is powered directly it activates the adjacent dropper, pushing the item into the hopper to power the output, and simultaneously changes the hopper's cooldown time to delay when it pushes the item back to the dropper.\n\nA pulse multiplier turns one input pulse into multiple output pulses.\n\nThere are three primary strategies for designing pulse multipliers: Split the input pulse into multiple paths that arrive at the output at different times Enable a clock to run while the input pulse is on Trigger a clock that runs for a finite number of cycles, independent of the input pulse length In case the player requires only the pulse frequency to be doubled, usually a simple dual edge detector is often sufficient: Observer pulse doubler Observer pulse doubler 1\u00d71\u00d71 (1 block), flat, silent, 1-tileable circuit delay: 1 tick output pulses: 2 1-tick pulses the length of input pulse apart.\n\nAn observer watching the input signal (redstone dust, button, repeater set to 1 tick, etc) produces a pulse on each of the edges of the input, producing two 1-tick pulses on each edge of the input pulse, providing the input pulse is sufficiently long (3 redstone ticks minimum).\n\nIf the pulse is shorter than this, a redstone lamp can be put infront of the observer to remedy this issue.\n\nSchematic Gallery: Pulse Multiplier View at: Redstone_circuits/Pulse/pulse_multiplier [edit ] A split-path pulse multiplier produces multiple pulses by splitting the input signal into multiple paths and having them arrive at the output at different times.\n\nThis usually requires first reducing the length of the input pulse with a pulse limiter to reduce the delay required between each output pulse.\n\nDispenser double-pulser Dispenser Double-Pulser \u2013 [schematic] 1\u00d76\u00d73 (18 blocks), 1-wide circuit delay: 1 tick output pulses: 1 tick and 2 ticks This circuit is useful for double-pulsing a dispenser, to quickly dispense then retract water or lava.\n\nFirst it powers a block on one side of the dispenser, then the other side.\n\nAn enabled-clock pulse multiplier runs a clock for as long as the input stays on, thus producing a number of pulses relative to the input pulse length.\n\nSubtraction 1-clock pulse multiplier Subtraction 1-Clock Pulse Multiplier \u2013 [schematic] 2\u00d73\u00d72 (12 blocks), flat, silent circuit delay: 1 tick output pulses: 1 tick This pulse multiplier does not repeat its input signal, so may need a repeater before or after (increasing the circuit delay).\n\nThis circuit produces 5 pulses when enabled with a stone button, or 7 pulses when enabled with a wooden button.\n\nFor other number of pulses, consider a pulse extender to lengthen the input pulse.\n\nSubtraction N-clock pulse multiplier Subtraction N-Clock Pulse Multiplier \u2013 [schematic] 2\u00d73\u00d72 (12 blocks), flat, silent circuit delay: 1 tick output pulses: 2+ ticks The output pulses are 1 tick longer than the delay set on the repeater (so, 2 to 5-tick output pulses).\n\nFor even longer pulses, replace the dust next to the repeater with another repeater.\n\nThis pulse multiplier does not repeat its input signal, so may need a repeater before or after (increasing the circuit delay).\n\nThe table below shows the number of output pulses produced with various combinations of button inputs and repeater delays (for more pulses, consider a pulse extender to lengthen the input pulse): Torch-repeater N-clock pulse multiplier Torch-Repeater N-Clock Pulse Multiplier \u2013 [schematic] 2\u00d74\u00d72 (16 blocks), flat, silent circuit delay: 2 ticks output pulses: 3+ ticks The output pulses are 1 tick longer than the delay set on the repeater (so, 3 to 5-tick output pulses).\n\nThe repeater can't be set to a 1-tick delay or the right torch burns out (which could be useful for limiting the number of pulses to 8 maximum).\n\nA triggered-clock pulse multiplier consists of a clock circuit that is allowed to run for a specific number of cycles once triggered.\n\nStrategies for designing a triggered-clock pulse multiplier include using a latch to turn the clock on and have the clock itself reset the latch back off after one or one-half clock cycles, or using a pulse extender to run a clock.\n\nDropper-latch 2-clock pulse multiplier Dropper-Latch 2-Clock Pulse Multiplier \u2013 The top dropper contains a single item.\n\nThe bottom dropper contains a number of items equal to the desired pulse count.\n\n[schematic] 3\u00d74\u00d72 (24 blocks), flat, silent circuit delay: 3 ticks output pulses: 1 to 320 2-tick pulses This pulse multiplier produce one 2-tick pulse for every item placed in the bottom dropper (with a 2-tick off-pulse between each on-pulse).\n\nAfter it has finished its pulses, it requires a reset time equal to 0.4 seconds \u00d7 pulse count.\n\nIf it is reactivated during this time, it produces fewer pulses.\n\nIf the input pulse is longer than the output pulses, the powered dropper prevents the clock from turning off because the disabled hopper can't push its item back.\n\nIf a long input pulse is possible, place a solid block between the input and the dropper so that it activates without being powered.\n\nEarliest known publication: 4 September 2013 [1] Dropper-Latch 2-Clock Pulse Multiplier (Updated) Added a repeater for the lower hopper to compensate and lock the items while active As of 1.11, it the lower hopper needs a longer pulse from the clock.\n\nTo compensate, we add a repeater facing down to a block next to the, now below the dropper, hopper, and set it to 3 ticks.\n\nIf you want a longer clock, use the formula: 2n - 1 where n is the clock pulse, for the delay of the lower repeater Dropper-latch 1-clock pulse multiplier Dropper-Latch 1-Clock Pulse Multiplier \u2013 The dropper contains a single item.\n\nThe middle hopper contains one or more items depending on the desired pulse count (the first and last items should be non-stackable items).\n\n[schematic] 2\u00d79\u00d72 (36 blocks), flat, silent circuit delay: 5 ticks output pulses: 2 to 777 1-tick pulses This pulse multiplier allows a wide range of pulses, with no reset time required.\n\nThe first and last items placed in the middle hopper should be non-stackable items (to give the output enough signal strength to run the subtraction clock).\n\nUp to three stacks of stackable items may be placed between the two non-stackable items.\n\nThe circuit produces four 1-tick pulses for every item placed in the middle hopper (with a 1-tick off-pulse between each on-pulse).\n\nThe total number of pulses may be reduced by 1 by changing the 4-tick repeater to 2 ticks, or reduced by 2 by replacing the 4-tick repeater with a block, or increased by 1 by changing the 1-tick repeater to 3 ticks.\n\nIf the input pulse is longer than the output pulses, the powered dropper prevents the clock from turning off because the disabled hopper can't push its item back.\n\nIf a long input pulse is possible, place a solid block between the input and the dropper so that it activates without being powered.\n\nA pulse divider (a.k.a.\n\n\"pulse counter\") produces an output pulse after a specific number of input pulses \u2013 in other words, it turns multiple input pulses into one output pulse.\n\nBecause a pulse divider must count the input pulses to know when to produce an output pulse, it has some similarity to a ring counter (an n -state memory circuit with only one state on).\n\nThe difference is that a ring counter's output state changes only when its internal count is changed by an input trigger, while a pulse divider produces an output pulse and then returns to the same unpowered output it had before its count was reached (in other words, a pulse divider is monostable but a ring counter is bistable).\n\nAny ring counter can be converted into a pulse divider just by adding a pulse limiter to its output (making it monostable).\n\nIn addition to the circuits here, a clock multiplier can function as a pulse divider (or a ring counter, for that matter); unlike these circuits, its output remains ON until the next input pulse turns it off.\n\nSchematic Gallery: Pulse Divider View at: Redstone_circuits/Pulse/pulse_divider [edit ] Hopper-Loop Pulse Divider \u2013 [schematic] Hopper-loop pulse divider 2\u00d7(3 + pulse count/2)\u00d73 output pulse: 3 ticks This is a hopper-loop ring counter with an incorporated pulse limiter on the output.\n\nEach input pulse turns the redstone dust off for 1 tick, allowing the item to move to the next hopper.\n\nWhen the item reaches the dropper it turns on the output briefly, until the redstone dust turning back on activates the dropper to push the item to the next hopper.\n\nTo count an even number of pulses, replace another hopper with a dropper.\n\nPutting the second dropper right before the first dropper changes the output pulse to 6 ticks.\n\nThe output is signal strength 1 or 3 (with a stackable or non-stackable item in the hoppers) so may need to be boosted with a repeater.\n\nVariations: Removing the dust from on top of the dropper and replacing the dropper with a hopper increases the output pulse to 4 ticks but makes the entire circuit silent.\n\nDropper-hopper pulse divider Dropper-Hopper Pulse Divider \u2013 The dropper contains a number of items equal to the pulse count.\n\nThe bottom-left hopper contains a single item.\n\n[schematic] 3\u00d74\u00d72 (24 block volume) flat output pulse: (4 \u00d7 pulse count) ticks The dropper-hopper pulse divider can count up to 320 pulses.\n\nEach input pulse pushes an item from the dropper to the hopper next to it.\n\nWhen the dropper is finally emptied, its comparator turns off, allowing the item in the bottom-left hopper to move to the right, starting the reset process.\n\nWhen the top hopper has finished moving items back to the dropper, the item in the bottom hoppers moves back to the left, ending the reset process.\n\nOnce it has begun its output pulse, the pulse divider goes through a reset period of (4 \u00d7 pulse count) ticks (the same length as the output pulse).\n\nAny new input pulses during the reset period is not counted, but only extends the reset period.\n\nBecause of this reset period, this pulse divider is best when the typical interval between input pulses is greater than the reset period, or you can run a line back from the output to suppress inputs while it is resetting.\n\nThe output is signal strength 1 or 3 (with a stackable or non-stackable item in the bottom hoppers) so may need to be boosted with a repeater.\n\nThe output pulse length is also proportional to the pulse count, so may need to be shortened with a pulse limiter.\n\nDropper-dropper pulse divider Dropper-Dropper Pulse Divider \u2013 The left dropper contains a number of items equal to the pulse count.\n\nThe left hopper contains a single non-stackable item.\n\n[schematic] 3\u00d76\u00d72 (36 block volume) flat output pulse: (2 \u00d7 pulse count) ticks The dropper-dropper pulse divider can count up to 576 pulses.\n\nEach input pulse pushes an item from the left dropper to the right dropper.\n\nWhen the left dropper is finally emptied, its comparator turns off, allowing the item in the bottom-left hopper to move to the right, starting the subtraction 1-clock driving the reset process (although the subtraction clock pulses the dropper, the circuit's output alternates only in signal strength, staying on the whole time \u2013 subtraction clocks can be tricky that way!).\n\nWhen the right dropper has finished moving items back to the left dropper, the item in the bottom hoppers moves back to the left, ending the reset process.\n\nOnce it has begun its output pulse, the pulse divider goes through a reset period of (2 \u00d7 pulse count) ticks (the same length as the output pulse).\n\nAny new input pulses during the reset period is not counted, but only extends the reset period.\n\nBecause of this reset period, this pulse divider is best when the typical interval between input pulses is greater than the reset period, or you can run a line back from the output to suppress inputs while it is resetting.\n\nThe output alternates between signal strength 1 and 3 so may need to be boosted with a repeater.\n\nThe output pulse length is also proportional to the pulse count, so may need to be shortened with a pulse limiter.\n\nInverted binary divider or counter Binary Counter (Tall) \u2013 Three dividers stacked to make an 8-counter.\n\n[schematic] Binary Counter with Reset [schematic] 3\u00d75\u00d72 (30 block volume) flat, silent, 3-wide stackable (alternating) input: 2 off-ticks, use a pulse limiter if necessary output pulse: 2 off-ticks delay: 3 ticks (per unit in stack) The inverted binary divider or counter uses the latching feature of redstone repeaters to create a two-state (binary) counter.\n\nMultiple counters can be stacked to construct an n -bit counter, giving 2 n input pulses per output pulse.\n\nIt is called 'inverted' because it counts the number of off pulses, rather than on-pulses.\n\nNote that it triggers every two off-ticks, so holding the input low causes it to count multiple times then burn out a redstone torch.\n\nYou may want to use a pulse limiter on the input signal to prevent this.\n\nUsed purely as a pulse divider or counter this circuit is somewhat inefficient, since it would have to be stacked nine times to be able to count almost as many pulses (512) as the dropper-dropper divider.\n\nHowever, the stacking binary design means that the pulse count value can be easily read out by simply taking an output line from each stack element.\n\nIn combination with OR or NOR gates, this can be used to trigger an output after an arbitrary number of pulses, or to create a divider for any number when combined with the reset circuit below.\n\n'Tall' binary counter 2\u00d75\u00d73 (30 block volume) silent, 2-wide stackable (alternating) Functionally the same as the flat (3\u00d75\u00d72) binary counter, but takes one extra vertical block and one less horizontally, which may be an advantage when stacking them together.\n\nRequires an extra torch compared to the flat circuit.\n\nBinary counter reset circuit Adding this to the binary counter circuit allows it to be reset at any time; this can be used to create a counter for any desired number, or even a programmable counter (with extra circuits to select the number).\n\nThis can be applied to either version, though the schematic shows it connected to the 'tall' version.\n\nLike the counter itself, the reset circuit is active low; it requires at least three off-ticks to perform the reset, although the actual reset does not take place until the rising edge (end) of the off-pulse.\n\n(A standard button followed by an inverter works fine, as seen in the screenshot.) 1-tick binary counter/divider  [Java Edition only ] 1\u00d73\u00d72n+1 (1-tick input) or 1\u00d73\u00d72n+3 (for input longer than 1 tick) 1-wide, tileable 2 n divider output pulse: 1-4 ticks Binary 1-tick pulse divider (1/32 divider, 3 tick output example) A cheap, noisy option to output 1 out of 2 n pulses (1 in 2, 4, 8, 16, 32 etc.), indefinitely extensible - each next module (repeater-piston pair) doubling the divider.\n\nDepends on the Java Edition's quirk of sticky pistons 'spitting out' their payload when activated with 1-tick pulses and quasi-connectivity.\n\nIf the input pulse is longer than 1 tick, the first module acts as pulse limiter instead of a 'memory cell', so the only modification needed for this sort of input is adding one more module vs 1-ticked input (e.g.\n\nfrom an observer).\n\nThe output pulse can be extended up to 4 ticks by increasing the tick count on the last repeater.\n\nUse as a binary counter requires reading position of the blocks moved by the pistons, e.g.\n\nthrough repeaters one block above the 'rest' position.\n\nIf the input has mixed length pulses, both 1-tick and longer, set the first repeater to 2 ticks and treat the first piston as pulse limiter, not counter module.\n\nAn edge detector outputs a pulse when it detects a specific change in its input.\n\nA rising edge detector outputs a pulse when the input turns on.\n\nA falling edge detector outputs a pulse when the input turns off.\n\nA dual edge detector outputs a pulse when the input changes.\n\nAn inverted edge detector is usually on, but outputs an off-pulse (it turns off, then back on again) when it detects a specific change in its input.\n\nAn inverted rising edge detector outputs an off-pulse when the input turns on.\n\nAn inverted falling edge detector outputs an off-pulse when the input turns off.\n\nAn inverted dual edge detector outputs an off-pulse when the input changes.\n\nA rising edge detector (RED) outputs a pulse when its input turns on (the rising edge of the input).\n\nAny rising edge detector can also be used as a pulse generator or pulse limiter.\n\nSchematic Gallery: Rising Edge Detector View at: Redstone_circuits/Pulse/red [edit ] Circuit breaker Circuit Breaker \u2013 [schematic] 1\u00d73\u00d73 (9 block volume) 1-wide circuit delay: 1 tick output pulse: 1 tick The circuit breaker is one of the most commonly used rising edge detector due to its small size and adjustable output.\n\nVariations: The output repeater may be set to any delay, which also lengthens the output pulse to equal the delay.\n\nWhen oriented north-south, the output repeater may be replaced by any mechanism component, causing the mechanism component to receive a 0-tick activation pulse.\n\nMoved observer RED Moved Observer RED variants (vertical, straight, angled) 1x1x3, 1x1x1, 1x2x2 1-wide, 1-wide flat, flat circuit delay: Java: 2 ticks, Bedrock: 4 ticks output pulse: 1 tick This observer pulse edge detector is one of the most common edge detectors due to its modifyablity.\n\nIt can be oriented in almost any direction, and the observer can be oriented in almost any direction, allowing for lots of flexibilty.\n\nAnd depending on where the output is taken from, it can be a rising or falling edge pulse generator.\n\nThe observer can also be updated by other circiutry to send more pulses from the output.\n\nVariations: The piston base can be oriented in any way, the observer can be oriented in any way except for facing the piston.\n\nOutput can be taken from either the extended or retracted postion to change which edge it activates on.\n\nWorks both with standard binary and pulse logic.\n\n [Java Edition only ] Dust-cut rising edge detector Dust-Cut RED (Unrepeated) \u2013 [schematic] Dust-Cut RED (Repeated) \u2013 [schematic] 1\u00d75\u00d73 (15 block volume) 1-wide, instant circuit delay: 0 ticks (\"Unrepeated\") or 1 tick (\"Repeated\") output pulse: 1 tick, 1.5 ticks if the output is a piston A dust-cut rising edge detector works by moving a block so that it cuts the output dust line after only one tick.\n\nBecause of the output's fractional length, a 1-tick repeater may be needed to force a sticky piston to drop its block.\n\nSubtraction rising edge detector Subtraction RED (Unrepeated) \u2013 [schematic] Subtraction RED (Repeated) \u2013 [schematic] 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 1 tick (\"Unrepeated\") or 2 ticks (\"Repeated\") output pulse: 1 tick A subtraction rising edge detector works by using the subtraction mode of a redstone comparator to shut off the output pulse.\n\nThis design uses a trick to limit the output pulse to a single tick.\n\nA comparator can't produce a 1-tick pulse by subtraction from an exterior source (such as if the repeater was set to a 1-tick delay), but if the external source would usually produce a 2-tick pulse or more, the comparator can short-circuit itself into a 1-tick pulse by incorporating it into a subtraction 1-clock (the block and parallel dust after the comparator), but allowing the clock to run for only one cycle.\n\nVariations: Remove the final block and dust to increase the output pulse to 2 ticks.\n\nThen increase the delay on the subtraction repeater to increase the output pulse length further.\n\nEarliest known publication: 7 January 2013 (basic concept) [2] and 3 May 2013 (1-tick output refinement) [3] Locked-repeater rising edge detector Locked-Repeater RED (Corner) \u2013 [schematic] Locked-Repeater RED (In-line) \u2013 [schematic] 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 3 ticks output pulse: 1 tick Uses repeater locking to shut pulses off after 1 tick.\n\nVariations: If the input doesn't have to be at the same height as the output, you can move the torch so that it's attached to the top of the block it's currently above, and run the input into that block.\n\nDropper-hopper rising edge detector Dropper-Hopper RED \u2013 [schematic] 1\u00d74\u00d72 (8 block volume) 1-wide, silent circuit delay: 3 ticks output pulse: 3.5 ticks When the input turns on, the dropper pushes an item into the hopper, activating the comparator until the hopper pushes the item back.\n\nThe initial block is required to activate the dropper without powering it (which would deactivate the adjacent hopper, preventing it from returning the item to turn off the output pulse).\n\nBecause the output comes from a comparator used as an inventory counter, the output power level is 1 (with a stackable item) or 3 (with a non-stackable item) \u2013 add a repeater for a higher power level output.\n\nVariations: You can reduce the size of the circuit by putting the hopper on top of the dropper.\n\nMoved-block rising edge detector Moved-Block RED \u2013 [schematic] 3\u00d73\u00d72 (18 block volume) flat circuit delay: 1 tick output pulse: 1 tick Uses the same principle as the circuit breaker \u2013 power the output through a block, then remove the block to keep the output pulse short.\n\nVariations: To increase the output pulse length, increase the delay on the repeater powering the piston.\n\nTo get a 0-tick pulse, replace the repeater powering the piston with a comparator Other variations start with the piston powered.\n\nThe output of the \"offset\" variation is weakly-powered and requires a repeater or comparator to do anything other than activate a mechanism component.\n\nMoved-Block RED (In-line) Moved-Block RED (Offset) Earliest known publication: 14 March 2013 [4] and 29 March 2013 [5] NOR-gate rising edge detector NOR-Gate RED \u2013 [schematic] 1\u00d74\u00d73 (12 block volume) 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick A NOR-gate rising edge detector compares the current power to the power from 2 ticks ago \u2013 if the current power is on and the previous power was off, the output torch flashes on briefly.\n\nAll of these designs use a trick to limit the output pulse to a single tick.\n\nA redstone torch cannot be activated by a 1-tick pulse from exterior sources, but a torch activated by a 2-tick exterior pulse can short-circuit itself into a 1-tick pulse.\n\nRemove the block over an output torch to increase the output pulse to 2 ticks.\n\nEarliest known publication: 10 December 2013 [6] A falling edge detector (FED) outputs a pulse when its input turns off (the falling edge of the input).\n\nSchematic Gallery: Falling Edge Detector View at: Redstone_circuits/Pulse/fed [edit ] Dust-cut falling edge detector Dust-Cut FED \u2013 [schematic] 1\u00d74\u00d73 (12 block volume) 1-wide, instant circuit delay: 0 ticks output pulse: 2 ticks When the input turns off, the piston immediately retracts the block, allowing the still-powered repeater to output a signal for 2 ticks.\n\nWhen the input turns on again, the piston cuts the connection before the signal can get through the repeater.\n\nMoved-block falling edge Detector Moved-Block FED \u2013 [schematic] 1\u00d73\u00d73 (9 block volume) 1-wide circuit delay: 1 ticks output pulse: 1 ticks For some directions and input methods, the repeater may be needed to be set to 3 ticks to operate mechanism components.\n\nEarliest known publication: 27 May 2013 [7] Moved-observer FED Moved Observer FED - 1-wide 1\u00d72\u00d73 (6 block volume) 1-wide circuit delay: Java: 2 ticks, Bedrock: 4 ticks output pulse: 1 tick This circuit uses a sticky piston and an observer to separate the rising from the falling edge of a signal.\n\nThe rising edge powers the piston, lifting the observer above the redstone where it has no effect.\n\nThen, at the falling edge of the input signal, the piston retracts and the observer sends a 1-tick pulse via the redstone on the glass block.\n\nNote that the glass block is required to prevent this from turning into a clock.\n\nMoved Observer FED - flat Variations: The piston base can be oriented in any way, the observer can be oriented in any way except for facing the piston.\n\nOutput can be taken from either the extended or retracted postion to change which edge it activates on.\n\nLocked-hopper falling edge detector Locked-Hopper FED \u2013 [schematic] 1\u00d74\u00d72 (8 block volume) 1-wide, silent circuit delay: 1 tick output pulse: 4 ticks When the input turns off, it takes 1 tick for the torch to turn back on, giving hopper A a chance to push its item to the right and activate the output.\n\nThis circuit requires time to reset (to push the item back into hopper A), so the fastest input clock it can handle is a 4-clock.\n\nBecause the output comes from a comparator used as an inventory counter, the output power level is 1 (with a stackable item) or 3 (with a non-stackable item).\n\nAdd a repeater for a higher power level output.\n\nVariations: This circuit can be snaked around in many different ways as long as the input dust is able to deactivate the first hopper.\n\nEarliest known publication: 22 May 2013 [8] Locked-repeater falling edge detector Locked-Repeater FED \u2013 [schematic] 2\u00d73\u00d72 (12 block volume) flat, silent circuit delay: 2 ticks output pulse: 1 tick When the input turns on, the output repeater is locked before it can be powered by the block behind it.\n\nWhen the input turns off, the output repeater is unlocked and is briefly powered by the block behind it, producing a 1-tick output pulse.\n\nVariations: Increase the delay on the output repeater to increase the output pulse length (up to 4 ticks), but also the circuit delay.\n\nSubtraction falling edge detector Subtraction FED \u2013 [schematic] 2\u00d75\u00d72 (20 block volume) flat, silent circuit delay: 1 tick output pulse: 1 tick This design uses a trick to limit the output pulse to a single tick.\n\nA comparator can't produce a 1-tick pulse by subtraction from an exterior source (such as if the repeater was set to a 1-tick delay), but if the external source would usually produce a 2-tick pulse or more, the comparator can short-circuit itself into a 1-tick pulse by incorporating it into a subtraction 1-clock (the block and parallel dust after the comparator), but allowing the clock to run for only one cycle.\n\nVariations: Remove the final block and the dust next to it for a 2-tick pulse, then increase the delay on the repeater for a 3 or 4-tick pulse.\n\nNOR-gate falling edge detector NOR-Gate FED \u2013 [schematic] 2\u00d74\u00d73 (24 block volume) silent circuit delay: 1 tick output pulse: 1 tick This circuit compares the current power to the power from 2 ticks ago \u2013 if the current power is off and the previous power was on, the output torch flashes on briefly.\n\nThis designs uses a trick to limit the output pulse to a single tick.\n\nA redstone torch cannot be activated by a 1-tick pulse from exterior sources, but a torch activated by a 2-tick exterior pulse can short-circuit itself into a 1-tick pulse.\n\nVariations: Remove the block over the output torch to increase the output pulse to 2 ticks, then increase the delay on the repeater to increase the output pulse further.\n\nObserver FED / RED Observer FED - flat \u2013 [schematic] Observer FED - 1-wide Observer FED - tileable 2x4x2, 1\u00d74\u00d73 or 1x5x3 (16, 12 or 15 block volume) 1-wide or flat, silent (tileable) circuit delay: 2 or 5 rs-tick (afaik) output pulse: 1 rs-tick For some reason the observer in this circuit (only) triggers when the input turns off.\n\nIt works in Java version 1.17.1 thou I'm not sure why (Redstone torch and repeater have the same delay, don't they?).\n\nThe \"trick\" is to keep the same distance between the observer to the repeaters output and the torch.\n\nThus the power level in front of the observer always stays the same and yet the observer triggers on one of the two input changes.\n\nVariations: - Both flat and 1-wide versions allow for four different observer orientations.\n\n- Increase the repeater delay of the non-tileable variants to turn this FED into a RED.\n\n- The blue block in the tileable version is an inverted input to turn it into a RED.\n\n(by Nilbadimo) A dual edge detector (DED) outputs a pulse when its input changes (at either the rising edge or the falling edge of the input).\n\nThe simplest way to do is using an observer.\n\nSchematic Gallery: Dual Edge Detector View at: Redstone_circuits/Pulse/ded [edit ] Moving-block dual edge detector The block of redstone moves when the signal turns on and when it turns off.\n\nWhile it is moving it cannot power the redstone dust, so the output torch turns on until the block of redstone stops moving.\n\nIn the 1-wide version the block over the output torch short-circuits it into a 1-tick pulse \u2013 remove the block and take the output directly from the torch to increase the output pulse to 1.5 ticks.\n\nTo get an output on the same side as the input, the torch can be placed on the other side of the bottom blocks (but without the block above it, which would clock the piston).\n\nThe piston and block of redstone can be moved to the side of the dust, rather than on top of the dust, producing a shorter but wider circuit.\n\nEarliest known publication: 28 January 2013 [9] Dust-cut dual edge detector features vary (see schematics) The simple version splits the difference between a rising edge detector and a falling edge detector to produce an output of 1 tick on each edge.\n\nThe instant version adds an unrepeated rising edge detector to reduce the rising edge circuit delay to 0 ticks.\n\nLocked-repeater dual edge detector features vary (see schematics) A locked-repeater dual edge detector uses the timing of repeater locking to detect signal edges.\n\nThe nor-gate design uses a trick to limit the output pulse to a single tick.\n\nA redstone torch cannot be activated by a 1-tick pulse from exterior sources, but a torch activated by a 2-tick exterior pulse can short-circuit itself into a 1-tick pulse.\n\nRemove the block over the output torch (and the dust on the block it's attached to) to increase the output pulse to 3 ticks.\n\nEarliest known publication: 16 April 2013 (NOR-gate locked-repeater FED) [10] and 1 May 2013 (OR-gate locked-repeater FED) [11] Piston OR-gate dual edge detector 3\u00d74\u00d72 (24 block volume) flat circuit delay: 1.5 ticks output pulse: 1.5 ticks A piston OR-gate dual edge detector moves a block between repeaters that change states shortly after the piston moves.\n\nThis causes a pulse to be sent to a wire behind the moving block.\n\nSubtraction dual edge detector features vary (see schematics) A subtraction dual edge detector powers a comparator with an ABBA circuit, cutting the pulse short with subtraction.\n\nEarliest known publication: 3 August 2013 [12] Twin NOR-gate dual edge detector The most trivial way to build a dual edge detector is to OR the outputs of a NOR-gate rising edge detector and a NOR-gate falling edge detector.\n\nA useful feature of this approach is that you get the rising- and falling-only pulses for free if you need them.\n\nIf rsource or space usage is more important than timing, parts of the components of the 2 single edge detectors can be shared (the middle row of the example in the Schematic Gallery: Dual Edge Detector).\n\nAgain, the blocks above the torches limit the output pulse to 1 tick.\n\nAn inverted rising edge detector (IRED) is a circuit whose output is usually on, but which outputs an off-pulse on the input's rising edge.\n\nSchematic Gallery: Inverted Rising Edge Detector View at: Redstone_circuits/Pulse/ired [edit ] OR-gate inverted rising edge detector OR-Gate IRED \u2013 [schematic] 1\u00d73\u00d73 (9 block volume) 1-wide, silent circuit delay: 1 tick output pulse: 1 to 3 ticks (off-pulse) An OR-gate inverted rising edge detector compares the current and previous input \u2013 if the current input is on and the previous input was off, the output turns off for a brief period.\n\nVariations: The \"adjustable\" version takes up the same space, but its output pulse can be adjusted from 1 to 3 ticks.\n\nThe \"flat\" version can also be adjusted from 1 to 3 ticks.\n\nOR-Gate IRED (Adjustable) OR-Gate IRED (Flat) Earliest known publication: 1 June 2013 [13] Moving-block inverted rising edge detector Moving-Block IRED \u2013 [schematic] 1\u00d74\u00d73 (12 block volume) 1-wide, instant circuit delay: 0.5 ticks output pulse: 1 tick (off-pulse) This is a moving-block inverted dual edge detector with a repeater added to suppress the output on the falling edge.\n\nDropper-hopper inverted rising edge detector \u2192 \u2192 Dropper-hopper IRED \u2013 The dropper contains a single item.\n\n1\u00d73\u00d73 (9 block volume) 1-wide, silent circuit delay: 3 ticks output pulse: 4 ticks (off-pulse) When the input turns on, the dropper pushes the item up into the hopper, deactivating the comparator until the hopper pushes the item back down.\n\nThe initial block is required to activate the dropper without powering it (which would deactivate the adjacent hopper, preventing it from returning the item to turn the output pulse back on).\n\nBecause the output comes from a comparator used to measure inventory, the output power level is 1 (with a stackable item) or 2 (with a non-stackable item) \u2013 add a repeater for a higher power level output.\n\nVariations: The input block can be moved to the side of or underneath the dropper, and the hopper can be moved to the side of the dropper.\n\nAn inverted falling edge detector (IFED) is a circuit whose output is usually on, but which outputs an off-pulse on the input's falling edge.\n\nSchematic Gallery: Inverted Falling Edge Detector View at: Redstone_circuits/Pulse/ifed [edit ] OR-gate inverted falling edge detector features vary (see schematics below) The input has two paths to the output, timed so that the output blinks off briefly when the input turns off.\n\nMoved-block inverted falling edge detector Moved-Block IFED \u2013 [schematic] 1\u00d74\u00d72 (8 block volume), 1-wide, instant circuit delay: 0 ticks, output pulse: 2.5 ticks (off-pulse) Earliest known publication: 4 June 2013 [14] Locked-repeater inverted falling edge detector 2\u00d73\u00d72 (12 block volume), flat, silent circuit delay: 2 ticks, output pulse: 1 tick (off-pulse) When the input turns on, the output repeater is locked before it can turn off.\n\nWhen the input turns off, the output repeater is unlocked and is briefly un-powered by the block behind it, producing a 1-tick output off-pulse.\n\nAn inverted dual edge detector (IDED) is a circuit whose output is usually on, but which outputs an off-pulse when its input changes.\n\nSchematic Gallery: Inverted Dual Edge Detector View at: Redstone_circuits/Pulse/ided [edit ] Moving-block inverted dual edge detector 1\u00d73\u00d73 (9 block volume), 1-wide, instant circuit delay: 0 ticks, output pulse: 1.5 ticks (off-pulse) Variations: The piston and block of redstone can be moved to the side of the dust, rather than on top of the dust, producing a flat 2-wide circuit.\n\nThe sticky piston can be oriented vertically if the redstone dust is run around the side in a 2\u00d72\u00d74 configuration.\n\nOR-gate inverted dual edge detector 3\u00d74\u00d72 (24 block volume), flat, silent circuit delay: 2 ticks, output pulse: 3 ticks (off-pulse) Uses the timing of repeater locking to detect pulse edges.\n\nSlime BUD inverted dual edge detector 1\u00d73\u00d74 (12 block volume) circuit delay: instant, output pulse: 1 tick (off-pulse) The Slime BUD made possible by Minecraft 1.8 works great as an instant inverted dual-edge detector.\n\nSimply put a block of obsidian, a hopper, afurnace, etc.\n\nright next to the slime block, and run redstone from its top to your output, and put a piece of redstone dust on the same plane as the piston, with one block space between.\n\nThat's your input.\n\nVariations: move the obsidian (or whatever you used) -- and the redstone on top of it -- up one block to get a normal (non-inverted) dual edge detector, but with 1.5 ticks delay.\n\nSometimes it is useful to be able to detect the length of a pulse generated by another circuit, and specifically whether it is longer or shorter than a given value.\n\nThis has many uses, such as special combination locks (where the player have to hold down the button), or detecting Morse code.\n\nLong pulse detector Long pulse detector 2\u00d76\u00d73 (36 block volume) silent To test for a long pulse, we use an AND gate between the beginning and end of a line of redstone repeaters.\n\nThese allow the signal to pass through only if it has a signal length longer than the delay of the repeaters.\n\nA pulse that does get through is shortened by the delay amount, possibly down to 1 tick.\n\nLong pulse detector Long pulse detector 2\u00d75\u00d72 (20 block volume) flat Similar to the design above, but using a piston-based AND gate which shuts off the output as soon as the input turns off.\n\nPulse length differentiator Input at gray wool, short output at orange wool, long output at purple wool.\n\nA pulse length differentiator has two outputs and one input.\n\nLong pulses go through one output, while short pulses go to the other.\n\nIt also keeps the tick length of the signals, which is why all the repeaters are set to one tick (i.e., a 1-tick signal remains a 1-tick signal).\n\nThis is useful in a telegraph machine, in order to split up dashes and dots.\n\nSome basic circuits exploiting the pulse logic.\n\nSee the reference link for more advanced use of pulse logic circuitry.\n\n[15] Rail update transport Transport line in pulse logic 1-tileable Typically, in pulse logic circuitry, signal is sent over Powered Rail or Activator Rail.\n\nSince the two don't propagate the updates to each other, this allows for tight tiling of modules.\n\nNOT gate NOT gate in pulse logic 1-tileable Negation of signal depends only on initial position of blocks, or often - only on interpretation of the signals by the creator.\n\nAND gate AND gate in pulse logic 1-tileable OR gate OR gate in pulse logic 1-tileable The OR gate in pulse logic differs from AND gate only by initial positions of the blocks.\n\nXOR gate XOR gate in pulse logic 1-tileable Generic redstone OR in pulse logic acts as XOR.\n\nLeaf block update transport Leaf block update transport 1-wide The \"greenstone\" or \"leafstone\" transport depends on updates of leaf blocks depending on changing distance from the nearest log block.\n\nThis transport is particularly helpful in transporting signal upward and downward.\n\nUpdates do propagate to neighboring blocks though, and take 1 game tick to progress to next block.\n\nIt makes it useful in creating 1 gametick resolution timing source though.\n\nScaffolding block update transport Scaffolding update transport The Scaffolding propagates updates containing distance from supported scaffolding block.\n\nBy moving a block under a suspended section of scaffolding, the player can send a signal an arbitrary distance upward and up to six blocks horizontally in any direction.\n\nThe signal propagates at 1 block per redstone tick.\n\nWall block update transport Wall update transport (side view) 1 tick regardless of distance, 1-tileable (see caveat) Wall blocks (cobblestone wall etc.) instantly transmit signal arbitrary distance down by turning themselves and all wall block below from smooth wall segment to a pillar segment if certain blocks are placed on them or attached from a side.\n\nTo form a smooth segment, a wall needs two other wall blocks or other blocks wall can attach to, adjacent to it from two opposite sides.\n\nIf they are other wall blocks though, it doesn't matter if they are smooth or pillars - so the solution is 1-tileable, but requires uninterrupted columns of full blocks (or wall) on far ends.\n\nProbably the most practical way to toggle a wall between these states is a redstone-controlled trapdoor.\n\nThe readout through an observer is possible only from below though, as the wall connects to an observer from a side.\n\n\u2191 \"RedsMiners\" (4 September 2013).\n\n\"Pulse multiplier 2.0\" (Video).\n\nYouTube.\n\n\u2191 \"CarlitoxGamex\" (7 January 2013).\n\n\"Limitador de pulso Snapshot 1.5.2 / 1.5.1 con Redstone Comparator\" (Video).\n\nYouTube.\n\n\u2191 \"NiceMarkMC\" (3 May 2013).\n\n\"Minecraft - Silent 1 Tick Pulse Generator\" (Video).\n\nYouTube.\n\n\u2191 \"Goklayeh\" (14 March 2013).\n\n\"looking for Ver 1.5 pulse limiter designs\" (Post #3).\n\nMinecraft Forum.\n\n\u2191 \"RamblinWreckGT\" (29 March 2013).\n\n\"Monostable Circuits and Sticky Pistons in 1.5.1\" (Post #3).\n\nMinecraft Forum.\n\n\u2191 \"TheBlackBeltPanda\" (10 December 2013).\n\n\"Silent Compact 1-Tick Pulse Generators - Rising and Falling Edge Detectors - Redstone Tutorial\" (Video).\n\nYouTube.\n\n\u2191 \"fennoman12\" (27 May 2013).\n\n\"Extremely small falling edge monostable | Redstone with Fenno\" (Video).\n\nYouTube.\n\n\u2191 \"shufflepower\" (22 May 2013).\n\ncompact falling edge detector i created/ \"A compact falling edge detector I created...\".\n\nReddit.\n\n\u2191 \"Redstone Sheep\" (28 January 2013).\n\n\"Super simple dual edge monostable\" (Video).\n\nYouTube.\n\n\u2191 \"\"Selulance\" (16 April 2013).\n\n\"Dual Edge Detector using locking repeaters\" (Post #5).\n\nMinecraft Forum.\n\n\u2191 \"sfpeterm\" (1 May 2013).\n\nflat dual edge detector extremely simple/ \"Silent & Flat Dual Edge Detector [extremely simple]\".\n\nReddit.\n\n\u2191 \"\"leetmoaf\" (3 August 2013).\n\nbelieve what i made is a pulse limiter but im/ \"I believe what I made is a pulse limiter.\n\nBut I'm not 100% sure.\".\n\nReddit.\n\n\u2191 \"Cozzmy13\" (1 June 2013).\n\n3x1x2 pulse shortener/ \"Small 3x1x2 pulse shortener\".\n\nReddit.\n\n\u2191 \"ImETtheAlien\" (4 June 2013).\n\n\"How to make simple compact fast redstone pulsers in Minecraft 1.5.2!\n\n[Tutorial] Works in 1.6!\" (Video).\n\nYouTube.\n\n\u2191 Pallapalla (2 December, 2017).\n\n\"Observer logic: 1 Wide tillable logic gates + most compact adder?\" (Video).\n\nYouTube.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Advanced 1-tick piston clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Advanced_1-tick_piston_clock",
    "content": "Advanced 1-tick clock",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Basic torch-repeater clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Basic_torch-repeater_clock",
    "content": "Torch+Repeater clock (A)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Clock multiplier",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Clock_multiplier",
    "content": "Clock Multiplier, 5\u00d7(3+N), lengthwise tileable",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Compact sticky piston clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Compact_sticky_piston_clock",
    "content": "T Another Piston Clock",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Compact torch loops",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Compact_torch_loops",
    "content": "Compact Torch 5-clock (B) Narrow Compact Torch 5-clock (C)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Dual block piston clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Dual_block_piston_clock",
    "content": "Dual Block Piston Clock.\n\nThe dark block is two-high.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/hopper clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/hopper_clock",
    "content": "Hopper-Loop Clock 1\u00d73\u00d72 (6 block volume) 1-wide, flat, silent clock output: 4 ticks on, 4 ticks off clock period: 8 ticks The left hopper contains 1 item.\n\nN-Hopper-Loop Clock 2\u00d7(N/2+1)\u00d72 (2\u00d7N+4 block volume) flat, silent clock output: 4 ticks on, 4\u00d7N-4 ticks off clock period: 4\u00d7N ticks The bottom-right hopper contains 1 item.\n\nEthonian Hopper Clock 2\u00d76\u00d72 (24 block volume) flat clock period: 8 ticks to 256 seconds (4m16s) The right hopper contains multiple items.\n\nEthonian Hopper Clock (1-Wide Compact) 1x6x3 (18 block volume) 1-wide The right hopper contains multiple items.\n\nSmallest hopper clock.\n\nEthonian Hopper Clock (1-Wide Tileable) 1x8x3 (24 block volume) 1-wide, tileable The right hopper contains multiple items.\n\nModified Ethonian Hopper Clock (No sticky pistons) 1x8x3 (24 block volume) 1-wide, tileable The right hopper contains multiple items.\n\nEthonian Hopper Clock (1-Wide \"Upside-Down\") 1x8x3 (24 block volume) 1-wide The right hopper contains multiple items.\n\nRS NOR Latch Hopper Clock 4\u00d76\u00d72 (48 block volume) flat, silent clock period: 8 ticks to 256 seconds (4m16s) [note 1] The right hopper contains multiple items.\n\n1-Wide RS NOR Latch Hopper Clock 1x7x5 (35 block volume) 1-wide, silent clock period: 8 ticks to 256 seconds (4m16s) [note 1] The right hopper contains multiple items.\n\nSethBling's Hopper Clock 6\u00d76\u00d72 (72 block volume) flat, silent clock period: 1.6 seconds to 512 seconds (8 minutes, 32 seconds) [note 1] The top-left hopper contains multiple items.\n\nSethBling's Hopper Clock (Simplified) 6\u00d76\u00d72 (72 block volume) flat, silent clock period: 1.6 seconds to 512 seconds (8 minutes, 32 seconds) [note 1] The top-left hopper contains multiple items.\n\nSethBling's Hopper Clock (\"Amputated\") 2\u00d76\u00d72 (24 block volume) flat, silent clock period: 1.6 seconds to 256 seconds (4 minutes, 16 seconds) [note 1] The bottom-left hopper contains multiple items.\n\n2-Stage MHDC 5\u00d76\u00d72 (60 block volume) flat clock period: up to 81.9 hours (3.4 real-life days) [note 1] The right hopper and right dropper contain multiple items.\n\n2-Stage MHDC (Without Sticky Pistons, Compressed) 10x4x1 (40 block volume) flat clock period: up to 81.9 hours (3.4 real-life days) [note 1] The right hopper and right dropper contain multiple items.\n\n\u2191 a b c d e f g h Time varies depending on how many items are in the hopper.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Hopper clocks",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Hopper_clocks",
    "content": "A single-item hopper clock simply moves a single item in a loop of hoppers.\n\nHopper-Loop Clock The left hopper contains 1 item.\n\n1\u00d73\u00d72 (6 block volume), 1-wide, flat, silent clock output: 4 ticks on, 4 ticks off clock period: 8 ticks This clock just bounces an item back and forth between the two hoppers every 4 ticks.\n\nThis clock runs while the input is off, and turns its clock signal output off when the input turns on.\n\nTechnically, the pulse is only 3.5 ticks long (and 4.5 ticks off), but for most purposes this can be treated as a simple 4-clock.\n\nVariations: Another comparator can be added to the other hopper to get another clock signal inverted from the other.\n\nN-Hopper-Loop Clock The bottom-right hopper contains 1 item.\n\n2\u00d7(N/2+1)\u00d72 (2\u00d7N+4 block volume), flat, silent clock output: 4 ticks on, 4\u00d7N-4 ticks off clock period: 4\u00d7N ticks An n-hopper-loop clock consists of a loop of hoppers moving a single item around which occasionally powers a comparator output.\n\nThis clock runs while the input is off, and turns its clock signal output off when the input turns on.\n\nThe clock period will be N \u00d7 0.4 seconds, where N is the number of hoppers.\n\nVariations: Other comparators can be added to the other hoppers to get other clock signals out-of-phase with each other.\n\nNote: This circuit uses command blocks which cannot be obtained legitimately in survival mode.\n\nThis circuit is intended for server ops and adventure map builds.\n\n\u2192 Cooldown Hopper Clock (Torch Output) A \u2192 B Cooldown Hopper Clock (Adjustable Pulse) \u2192 Cooldown Hopper Clock 1\u00d75\u00d72 (10 block volume) clock output: up to 27 minutes off, 4 ticks on This clock uses a command block to slow the hopper transfer rate.\n\nThe exact command will depend on the direction the clock is facing, but for clocks facing the positive X direction it will look something like this: blockdata ~2 ~ ~ {TransferCooldown:X}, where X is the number of game ticks (up to 32,767) to hold the item in the back hopper.\n\nHoppers usually have an 8 game tick cooldown between transfers (4 redstone ticks).\n\nThe command block gets activated 2 game ticks after the item enters the back hopper (due to the comparator delay), so setting X to 6 would produce no change.\n\nThus, this clock will have a clock period of 8 game ticks for the front hopper, plus X+2 game ticks for the back hopper, for a total of X+10 game ticks (X/2+5 redstone ticks).\n\nVariations: The output comparator can be replaced with a redstone torch on the command block, producing a signal strength 15 output.\n\nAn additional command block can then be activated by the torch to set the cooldown of the other hopper to change the pulse length.\n\nEarliest known publication: February 2, 2014 [1] A multi-item hopper clock achieves longer clock periods by using multiple items in the hoppers, and using a latch to keep the items flowing first one way then the other (rather than just bouncing back and forth between two hoppers).\n\nFor most of the multi-item hopper clocks, see the Items Required for Common Clock Periods table (right).\n\nEthonian Hopper Clock The right hopper contains multiple items.\n\nThis compact timer was invented by Minecraft YouTuber EthosLab (also known as Etho), hence the name.\n\n2\u00d76\u00d72 (24 block volume) flat clock period: 8 ticks to 256 seconds (4m16s) [note 1] When the items finish moving in one direction, the empty hopper's comparator turns off, allowing the associated sticky piston to pull the block of redstone to the other hopper, reversing the direction of item movement.\n\nThe movement of the block of redstone also updates the other sticky piston (which has been powered for a while) causing it to extend and prevent the first sticky piston from extending again when its comparator turns back on.\n\nPowering the hoppers will freeze the clock.\n\nPowering one of the blocks or the redstone dust will allow the clock to finish its current cycle before halting.\n\nWith a single item in the hoppers, the clock has a period of 7.5 ticks (0.75 seconds).\n\nEach additional item adds 8 ticks (0.8 seconds) to the clock period.\n\nThere are a number of useful outputs from this clock: Clock: A regular on/off clock signal can be taken from one position of the block of redstone.\n\nThe signal will last for half the clock period.\n\nCycle Off-Pulse: Either block faced by a comparator stays powered most of the time, but will turn off for 3.5 ticks every full cycle (but at half-cycle intervals from each other).\n\nThe power level of the block may vary, so an output repeater may be needed to keep the power level constant.\n\nCycle Pulse: By placing a torch on one of the blocks powered by a comparator, the off-pulse is turned into a regular 3.5-tick on-pulse, once per cycle.\n\nHalf-Cycle Off-Pulse: By placing two redstone dust alongside or under the positions of the block of redstone, a 1.5-tick off-pulse is generated every half-cycle when the block of redstone moves.\n\nMulti Clock: by attaching 4 interconnected hoppers next to the redstone block, every full cycle will run an item(s) through these hoppers once, before stopping by the redstone block.\n\nAttaching a comparator and then a repeater to the other end of these added hoppers makes a signal that is 1 tick on, N\u00d72-1 tick off, where N is the amount of items in the Ethonian clock.\n\nThe amount in the clock\u00d72 equals the total clock ticks.\n\nThe amount of items in the 4 hoppers determines how much of that time is powered.\n\nEarliest known publication: January 19, 2013 [2] (note that hopper transfer rates were changed soon after this video was made) Smoothed EHC Modified EHC (No sticky pistons) 1x8x3 (24 block volume) 1-wide, tileable The right hopper contains multiple items.\n\n1-Wide \"Upside-Down\" EHC 1x8x3 (24 block volume) The right hopper contains multiple items.\n\n1-Wide Tileable EHC 1x8x3 (24 block volume) The right hopper contains multiple items.\n\n1-Wide Compact EHC 1x6x3 (18 block volume) The right hopper contains multiple items.\n\nSmallest hopper clock.\n\nVariations: For highly precise hopper clocks, the missing half-tick of the first item can be smoothed out with a repeater set to 3 ticks or more.\n\nAdditional repeaters can change the clock period to something other than a multiple of 8 ticks.\n\nOther configurations are possible.\n\nThe \"1-Wide Compact\" version is 1\u00d76\u00d73 (18 block volume).\n\nThe \"1-Wide Tileable\" and \"1-Wide Upside-Down\" versions are both 1\u00d78\u00d73 (24 block volume).\n\nH P p F Hopper timer Specs: 9x5x2 (90 block volume) flat clock period: 8 ticks to 256 seconds (4m16s) [note 1] the right hopper contains the counter items (of the stackable-to-64 type).\n\nfour different pulse outputs possible: F once after the whole timer period.\n\nH at the half way point.\n\nP / p every time the related comparator measures a level change in its hopper.\n\nThis Hopper timer is basically just a self-locking EHC with trigger input and a FED to detect the end of the full timer period.\n\nSo it needs to be started by activating the input (= interrupting the self-locking circuit) and will stop on its own after one full clock period.\n\nUnless of course the input is powered continuously which will turn it into a regular EHC but with trigger outputs.\n\n(improved by Nilbadimo) Quick Reset Hopper Timer Using the Ethonian clock as a base, a timer can be created to allow a shorter cool-down time than the clock period.\n\nNormally, a hopper timer would require all items to be transferred back to the original container to be triggered again.\n\nThis design uses both sides of the Ethonian clock and a T flip-flop to create a timer that will be available to use again almost immediately after it has stopped.\n\nThus, a \"quick reset\" effect is achieved, without actually resetting the position of the items.\n\nRS NOR Latch Hopper Clock The right hopper contains multiple items.\n\n4\u00d76\u00d72 (48 block volume) flat, silent clock period: 8 ticks to 256 seconds (4m16s) [note 1] A silent multi-item hopper clock which uses an RS NOR Latch to control the direction of item movement.\n\nEarliest known publication: January 19, 2013 [2] 1-Wide RS NOR Latch Hopper Clock The right hopper contains multiple items.\n\n1\u00d77\u00d75 (35 block volume) 1-wide, silent clock period: 8 ticks to 256 seconds (4m16s) [note 1] A 1-wide version of the RS NOR Latch hopper clock.\n\n2\u00d74\u00d73 (24 block volume) silent clock period: 8 ticks to 256 seconds (4m16s) The top hopper in the bottom layer contains 1 item.\n\nThe top hopper in the top layer contains multiple items.\n\nA silent multi-item hopper clock which uses a hopper latch to control the direction of item movement.\n\nEarliest Known Publication: March 18, 2013.\n\n[3] SethBling's Hopper Clock (\"Amputated\") 2\u00d76\u00d72 (24 block volume) flat, silent clock period: 1.6 seconds to 256 seconds (4 minutes, 16 seconds) [note 1] The bottom-left hopper contains multiple items.\n\nSethBling's Hopper Clock (Simplified) 6\u00d76\u00d72 (72 block volume) flat, silent clock period: 1.6 seconds to 512 seconds (8 minutes, 32 seconds) [note 1] The top-left hopper contains multiple items.\n\nSethBling's Hopper Clock 6\u00d76\u00d72 (72 block volume) flat, silent clock period: 1.6 seconds to 512 seconds (8 minutes, 32 seconds) [note 1] The top-left hopper contains multiple items.\n\n6\u00d76\u00d72 (72 block volume) flat, silent clock period: 1.6 seconds to 512 seconds (8m32s) A loop of hoppers with multiple items, where each hopper prevents the next hopper from pushing items further until the previous hopper has emptied.\n\nThis clock can create a clock signal twice as long as the other multi-item hopper clocks.\n\nHowever, in less space players could build a multiplicative hopper-dropper clock with a clock period hundreds of times longer.\n\nVariations: The \"simplified\" version uses slightly fewer resources, by simply replacing the repeaters with blocks.\n\nThe \"amputated\" version (two \"arms\" have been removed) only goes up to 256 seconds, but is one-third the size.\n\nEarliest known publication: January 22, 2013 [4] A multiplicative hopper clock uses a hopper clock to regulate the item flow of secondary stages to produce very long clock periods (the secondary stages \"multiply\" the clock period of the first hopper clock).\n\nMultiplicative Hopper Clock 5\u00d76\u00d72 (60 block volume) flat clock period: up to 45 hours The repeaters in the middle keep the bottom hopper clock from transferring items except for the brief period when the top hopper clock reverses direction.\n\nThus, the bottom hopper clock will transfer 1 item every time the top hopper clock completes a full cycle (except when the bottom clock reverses direction, when the bottom clock transfers an item after only half a cycle).\n\nThe bottom clock will have a clock period of X \u00d7 (2Y - 1) \u00d7 0.8 seconds, where X is the number of items in the top clock and Y is the number of items in the bottom clock (both max.\n\n320 items).\n\n2-Stage MHDC (Without Sticky Pistons, Compressed) 10x4x1 (40 block volume) flat clock period: up to 81.9 hours (3.4 real-life days) [note 1] The right hopper and right dropper contain multiple items.\n\n2-Stage MHDC 5\u00d76\u00d72 (60 block volume) flat clock period: up to 81.9 hours (3.4 real-life days) [note 1] The right hopper and right dropper contain multiple items.\n\n5\u00d76\u00d72 (60 block volume) flat clock period: up to 81.9 hours (3.4 real-life days) The top part is a regular ethonian hopper clock.\n\nOnce per cycle, the block of redstone will move left and activate both of the droppers in the second stage (the left dropper is powered directly, while the right dropper is activated because it's next to a powered block: the left dropper).\n\nThe block of redstone in the second stage ensures that only one dropper will actually push an item, forcing the items to move in one direction until the block of redstone moves.\n\nThe dropper clock multiplier will have a clock period of X \u00d7 Y \u00d7 1.6 seconds, where X is the number of items in the hoppers (max.\n\n320 items) and Y is the number of items in the droppers (max.\n\n576 items).\n\nVariations: The most compact version of this circuit (2\u00d76\u00d74 = 48 block volume) can be achieved by moving the first stage above the second stage, and rotated 180\u00b0, with a single piece of redstone on one of the droppers.\n\nEach additional dropper stage should be rotated 180\u00b0 to the one above.\n\nEach additional dropper stage can multiply the previous stage's clock period by up to 1,152 (twice the number of items a dropper can hold).\n\nAdding just one additional dropper stage increases the maximum clock period to over 10 years.\n\nIn practice, this may only be needed for clock periods measured in weeks or months (longer than the 2-stage version can provide), generally on servers.\n\nMultiplicative Hopper-Latch Clock 4\u00d75\u00d73 (60 block volume) silent clock period: up to 81.9 hours (3.4 real-life days) The MHLC uses hopper-latch hopper clocks for each stage, replacing the top hoppers in the secondary stage with droppers, and connecting the stages with a comparator to pulse the secondary stage.\n\nThe MHLC uses the same number of items as the MHDC for the same clock periods, with a similar volume, but is silent.\n\nVariations: Each additional dropper stage can multiply the previous stage's clock period by up to 1,152 (twice the number of items a dropper can hold).\n\n\u2191 a b c d e f g h i j Time varies depending on how many items are in the hopper.\n\n\u2191 \"Pertsa2000\" (February 2, 2014 \u2014 \"Minecraft: Fully Adjustable Hopper Clock (command block)\" \u2191 a b \"Ethoslab\" (January 19, 2013) \u2014 \"Minecraft - Tutorial: Hopper Timer\" \u2191 \"TitiSurMinecraft\" (March 18, 2013) \"Minecraft Tutorial - Silent Hopper Timer\" \u2191 \"SethBling\" (January 22, 2013) \u2014 https://youtu.be/ThsaI0iOZGg \"7.5 Minute Hopper Timer -- Minecraft Tutorial",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Minimal dual-piston clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Minimal_dual-piston_clock",
    "content": "T Dual Piston 1-clock There is a repeater under the piston arm.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Minimal piston clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Minimal_piston_clock",
    "content": "T Basic Piston Clock",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Rail clock A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Rail_clock_A",
    "content": "Minimal minecart clock (A) This works best for a more compact clock.\n\nIt will work for a slow or fast repeat rate, depending on how you want it.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Rail clock B",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Rail_clock_B",
    "content": "Small vertical minecart clock (B) Top view of design B This works best for a faster clock repeat rate.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Rail clock C",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Rail_clock_C",
    "content": "Larger vertical minecart clock (C) This works best for a longer clock repeat rate.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Shamrock piston clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Shamrock_piston_clock",
    "content": "Shamrock Piston Clock",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Torch 4-clocks",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Torch_4-clocks",
    "content": "Torch 4-clock (D)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Torch rapid pulsers",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Torch_rapid_pulsers",
    "content": "Rapid Pulser (X) Rapid Pulser (Y) Vertical Rapid Pulser (Z) Random Short Generator (R)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Vertical compact clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Vertical_compact_clock",
    "content": "Vertical Compact Clock (D)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Vertical extended clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Vertical_extended_clock",
    "content": "Extended Vertical Clock.\n\nThe pulse goes clockwise.\n\nRepeat the ellipsis-marked column to extend the clock.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Clock/Vertical torch 5-clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Clock/Vertical_torch_5-clock",
    "content": "Vertical clock (G)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/AND",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/AND",
    "content": "Basic AND Gate (A) 2\u00d72\u00d73 (12 block volume) silent, tileable circuit delay: 2 ticks Basic AND Gate Adjacent-input AND Gate (B) 3\u00d72\u00d72 (12 block volume) silent circuit delay: 2 ticks Piston AND Gate with Repeater (C) 2\u00d73\u00d72 (12 block volume) 1-tick, flat circuit delay: 1 tick [Bedrock Edition only ], or 1 tick except when deactivating the top input (instant)  [Java Edition only ] Vertical AND Gate (D) 1\u00d74\u00d74 (16 block volume) silent, 1-wide circuit delay: 2 ticks Vertical AND Gate with Repeater (E) 1\u00d75\u00d73 (15 block volume) silent, 1-wide circuit delay: 2 ticks Piston AND Gate (F) 2\u00d73\u00d73 (18 block volume) 1-tick circuit delay: 1 tick (off) / instant (on) The mobile block (un)covers the hole with redstone dust.\n\nVertical Piston AND Gate (G) 1\u00d73\u00d73 (9 block volume) 1-tick, 1-wide circuit delay: 2 ticks for the top, 1 tick for the bottom input [Bedrock Edition only ], or 1 tick except when activating the top input (2 ticks)  [Java Edition only ] 3-input AND Gate (H) 1\u00d73\u00d73 (9 block volume) silent, 3-input circuit delay: 2 tick Subtraction AND Gate (I) 3\u00d73\u00d72 (18 block volume) silent, flat circuit delay: 2 ticks The bottom input only has a 1-tick delay.\n\n3-input Subtraction AND gate with Repeater (J) 2\u00d75\u00d72 (20 block volume) silent, flat circuit delay: 3 ticks The middle input only has a 2-tick delay.\n\nThe repeaters are sometimes unnecessary.\n\nMulti-input AND Gate 3\u00d72\u00d7(N+1) 2-tick",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/IMPLIES",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/IMPLIES",
    "content": "A B Basic IMPLY gate (A) A B IMPLY gate (B) A B IMPLY gate (C) A B IMPLY gate (D)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/NAND",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/NAND",
    "content": "Basic NAND gate (A) Adjacent-input NAND gate (B) Vertical NAND gate (C)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/NOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/NOR",
    "content": "Basic NOR Gate (A) Basic NOR Gate 4-input NOR Gate, levels 1-2 (B-1) 4-input NOR Gate, levels 2-3 (B-2)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/NOT",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/NOT",
    "content": "Horizontal Torch Inverter 1\u00d72\u00d71 (2 block volume) 1-wide, 1-high, silent, tileable circuit delay: 1 tick Horizontal Torch Inverter Vertical Torch Inverter 1\u00d71\u00d73 (3 block volume) 1-wide, silent, tileable circuit delay: 1 tick Vertical Torch Inverter In-line Subtraction Inverter 2\u00d72\u00d72 (8 block volume) flat, silent circuit delay: 2 ticks In-line subtraction Inverter Corner Subtraction Inverter 2\u00d72\u00d72 (8 block volume) flat, silent circuit delay: 2 ticks Corner Subtraction Inverter Ground Instant Inverter 2\u00d75\u00d73 (30 block volume) instant circuit delay: 0 ticks 1-Wide Instant Inverter 1\u00d73\u00d76 (18 block volume) 1-wide, instant circuit delay: 0 ticks; cooldown 2 ticks",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/OR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/OR",
    "content": "Minimal OR Gate (A) 1\u00d71\u00d72 (2 block volume) flat, silent, instant circuit delay: 0 ticks Minimal OR Gate Torch-isolated OR Gate (B) 1\u00d73\u00d72 (6 block volume) silent, flat, isolated-input circuit delay: 2 ticks Torch-isolated OR Gate Repeater-isolated OR Gate (C) 2\u00d7n\u00d73 (12+ block volume) flat, silent, isolated-input circuit delay: 1 tick By staggering heights, n inputs can be added.\n\nNote that a block is above the darkened input.\n\nRepeater-isolated OR Gate Vertical OR Gate (D) 1\u00d74\u00d74 (16 block volume) 1-wide, silent, isolated-input circuit delay: 2 ticks Slab-isolated OR Gate (E) 3\u00d7n\u00d73 (12+ block volume) silent, isolated-input, instant circuit delay: 0 ticks The design can be expanded to fit n inputs by increasing the length.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/XNOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/XNOR",
    "content": "Basic XNOR gate (A) Lever XNOR gate (B) XNOR gate (F) Compact Piston XNOR gate (I)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Logic/XOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Logic/XOR",
    "content": "XOR gate for two levers (D) Common XOR gate (F) XOR gate with repeaters and piston (H) XOR gate with input repeaters (I) Transparency-based XOR gate, level 1/2 (J-1).\n\nThe block covered by the central pillar is optional.\n\nTransparency-based XOR gate, level 2/2 (J-2).\n\nT-flip flop XOR gate.\n\n(requires signals not to change simultaneously, and signal strength not to change in operation)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Basic RS-NOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Basic_RS-NOR",
    "content": "S Q R Q\u0305 Opposite Duplex RS Latch (A) R Q\u0305 S Q R Q\u0305 S Q Adjacent Duplex RS NOR latch (B) Q S R Q\u0305 Diagonal RS Latch (A')",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Isolated RS-NOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Isolated_RS-NOR",
    "content": "Q\u0305 S R Q Perpendicular RS NOR latch (C) R Q Q\u0305 S Torch/Repeater RS Latch (D) S Q\u0305 Q R Isolated Perpendicular RS Latch (E)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/JK Latch A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/JK_Latch_A",
    "content": "K Q C J Torch-based JK Latch (A)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/JK Latch C",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/JK_Latch_C",
    "content": "J C K Q 4-level JK Latch levels 1/2 (C-1) (darkened blocks are two-high) Q\u0305 J C K 4-level JK Latch levels 3/4 (C-2)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/JK Latch D",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/JK_Latch_D",
    "content": "Q Q\u0305 J C K Repeater-based JK Latch (D)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/JK Latch E",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/JK_Latch_E",
    "content": "J Q C K Vertical JK Latch (E)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Old D Latch A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Old_D_Latch_A",
    "content": "R D Q\u0305 C Q S Low-triggering Gated D Latch (A)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Old D Latch B",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Old_D_Latch_B",
    "content": "R D Q\u0305 Q S C Rising-edge D Flip-flop (B)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Old D Latch C",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Old_D_Latch_C",
    "content": "Q\u0305 D Q C Vertical Gated D Latch (C) (high level)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Old D Latch D",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Old_D_Latch_D",
    "content": "C D 1 2 3 4 Q Vertical Gated D Latch, 4 levels (D) (???\n\nedge)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Old D Latch E",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Old_D_Latch_E",
    "content": "Q\u0305 Q D C Compact Gated D Latch (E) (low level) Q\u0305 Q D C Compact Gated D Latch (E') (high level)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Old D Latch F",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Old_D_Latch_F",
    "content": "Q C D Compact Gated D Latch (F) (low level)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/RS Clocked",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/RS_Clocked",
    "content": "Q Q\u0305 R E S Clocked RS Latch (Q)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/RS Devices",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/RS_Devices",
    "content": "S R Q Piston RS Latch (M) Q\u0305 S R Q Redstone Block RS latch (N) Q T Compact SRT latch level 1 (O-1) S R Compact SRT latch level 2 (O-2) R Q S Q\u0305 Dropper SR Latch 1\u00d73\u00d72, 1-wide, flat, tileable (P)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/RS-ISR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/RS-ISR",
    "content": "S Q R Modified-IS (Torches) RS Latch (J) Q R S Input Stabilizer with piston reset (K) R S Q Input Stabilizer with piston reset (L) R S Q Input Stabilizer with piston reset (L)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/RS-NAND",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/RS-NAND",
    "content": "Q R\u0305 S\u0305 Q\u0305 Simple RS NAND latch (G) R\u0305 Q Q\u0305 S\u0305 Long RS NAND Latch (H)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_A",
    "content": "Q T Torch-only T Flip-flop (A)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF B",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_B",
    "content": "Q T Sticky-piston T Flip-flop (B) The greenish block is two-high.\n\nThis build doesn't work as of 1.7.10.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF D",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_D",
    "content": "Q Q T Vertical T Latch (D)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF E",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_E",
    "content": "Q Q T Another Vertical T Flip-flop (E)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Grizdale",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Grizdale",
    "content": "Grizdale's Compact TFF (A) To toggle the T flip-flop, the top dropper must be directly powered.\n\nGrizdale's Compact TFF (B) Level 1 (bottom) Grizdale's Compact TFF (B) Level 2 (top) [Schematic Help ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF J",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_J",
    "content": "Q\u0305 Q T Narrow T Flip-flop (J)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF K",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_K",
    "content": "Q T Narrow T Flip-flop (K)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L1",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L1",
    "content": "T Q Q\u0305 T Flipflop L1",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L2",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L2",
    "content": "Q T T Flipflop L2",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L3",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L3",
    "content": "T Q T Flipflop L3",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L4",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L4",
    "content": "Q T\u0305 Customizable Low-Level T Flip-Flop (L4) (Consult Table for Customization Rules)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L5",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L5",
    "content": "Q\u0305 Q T T Flipflop L5",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L6",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L6",
    "content": "Q T T Flipflop L6",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF L7",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_L7",
    "content": "Q 3 T 2 1 Customizable High-Level T Flip-Flop (L7) (Consult Table for customization rules even though this table doesnt exist; numbers are only labels)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF M",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_M",
    "content": "T Q T One-wide tileable dual-sticky-piston T Flipflop (M,M.1)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF N",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_N",
    "content": "T Flip-flop N level 0 T Q T Flip-flop N level 1",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF O",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_O",
    "content": "Q Q Q Q Dual-piston T Flip-flop (O) level 1 Dual-piston T Flip-flop (O) level 2 T T T T Dual-piston T Flip-flop (O) level 3",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF O1",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_O1",
    "content": "T Q T Flip-flop O1 (horizontal) Q T T Flip-flop O1 (vertical)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF O2",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_O2",
    "content": "Q T T Flip-flop O2",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF O3",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_O3",
    "content": "Q T T Flip-flop O3",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF P",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_P",
    "content": "Q\u0305 Q T T Small Torch-only T Flip-flop (P) Input can be 1 or 2 tick pulse only",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Piston Bedrock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Piston_Bedrock",
    "content": "Piston T flip-flop level 0 (below ground) Q T Piston T flip-flop level 1 (ground level)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF R",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_R",
    "content": "Q Q Q R TFF R level 1 TFF R level 2 T T T TFF R level 3 TFF R level 4",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Rail A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Rail_A",
    "content": "T Rail Flip-Flop A",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Rail B",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Rail_B",
    "content": "T Q Rail Flip-Flop B",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Z1",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Z1",
    "content": "T T Flip-flop Z1 level 1 Q T Flip-flop Z1 level 2",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Z2",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Z2",
    "content": "T Q T Flip-flop Z2 (reported broken in 1.5.1)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Z3",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Z3",
    "content": "T Q T Flip-flop Z3",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Z4",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Z4",
    "content": "Q T T Flip-flop Z4 level 1 Q T T Flip-flop Z4 level 2",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/TFF Z5",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/TFF_Z5",
    "content": "T Q T Flip-flop Z5",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Memory/Vertical RS-NOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Memory/Vertical_RS-NOR",
    "content": "S Q Q\u0305 R Q\u0305 Q Vertical RS NOR Latch (F) R Q S Q\u0305 Vertical RS NOR Latch (G) R Q\u0305 S Q Vertical RS NOR Latch (H) R Q\u0305 S Q Vertical RS NOR Latch (I) Q\u0305 R S Q Vertical RS NOR Latch (J)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Miscellaneous",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Miscellaneous",
    "content": "This article covers types of circuits with insufficient content to justify their own articles.\n\nAn ABBA circuit has one input and multiple outputs.\n\nWhen the input turns on, the outputs turn on in order (e.g., A then B), but when the input turns off, the outputs turn off in reverse order (e.g., B then A).\n\nThe timing of the output activation and deactivation can be changed by adjusting the delay on the repeaters.\n\nAll of these designs can be extended indefinitely.\n\nEarliest Known Publication: 5 July 2011 (basic concept), [1] 20 June 2012 (Floor ABBA), [2] and 18 July 2012 (Ceiling ABBA).\n\n[3] Schematic Gallery: ABBA Circuit View at: Redstone circuits/Miscellaneous/abba [edit ] See also: Tutorials/Block update detector The block update detector switch, or simply BUD, detects any time an adjacent block receives an update.\n\nAn update is anything that changes that block's state: block placed, destroyed, door opened, repeater delay changed, cake eaten, grass growing, snow falling, furnace used (or turns off), and so on (chests opened and crafting tables used do not cause updates, sleeping in a bed does).\n\nWhen a block is updated, all adjacent blocks are also eligible for an update, and this can be used to produce a redstone signal or for other purposes.\n\nBUDs have been used for all kinds of things, from traps to detecting daylight to locking mechanisms on hidden doors.\n\nCurrent BUD switches take advantage of a quirk where pistons can receive power, but not updates, from blocks adjacent to the space the piston head occupies when extended.\n\nThat is: blocks adjacent to the extended state and not adjacent to the retracted state provide power to extend the piston, but as they are not adjacent to the retracted state do not cause the piston to update when that power state changes.\n\nThere are many models of auto resetting BUDs.\n\nThis is done by having the firing of the BUD switch somehow cause the BUD switch to restore the pre-fired state often when fired it cuts the power to the piston, allowing it to retract.\n\nThis is done either by extra circuitry or, as in the example below, by the properties of blocks themselves.\n\nVersion 1.11 introduced the observer block, which sends a one-redstone-tick signal when the block it is facing is updated.\n\nHowever, many designs using BUDs still incorporate older piston variations.\n\nGlass-and-sand BUD \u2192 Glass-and-sand BUD 1\u00d73\u00d74 (12 block volume) 1-wide The sticky piston should be activated by quasi-connectivity, but it doesn't know that yet.\n\nWhen a block next to the piston is updated, the piston \"notices\" it should activate, and extends.\n\nHowever, that pushes a block of glass into the sand's place, so the piston is no longer activated by quasi-connectivity.\n\nAccordingly, the piston retracts, resetting the circuit.\n\nThis circuit outputs an off-pulse; invert the output for a regular on-pulse.\n\nEarliest Known Publication: 28 December 2011 [4] Boat-plate BUD Boat-plate BUD 1\u00d72\u00d74 (8 block volume) When placed on the sand, the boat overlaps the pressure plate, powering the block below, which should activate the piston by quasi-connectivity.\n\nWhen the piston is updated, it pushes the sand and boat up, unpowering the plate and block, deactivating the piston again.\n\nBy the time the boat lands on the pressure plate, the piston has stopped checking for activations, resetting the circuit.\n\nBoats are easily moved by passing mobs (including players) \u2014 use this BUD only in areas where mob movement is absent.\n\nSlime block BUD \u2192 Slime Block BUD 1\u00d71\u00d74 (4 block volume) 1-wide The piston should be activated by quasi-connectivity, but doesn't react until updated.\n\nIt takes 1 tick to give an output but 0 ticks to reset itself, so its a powerful and easy BUD.\n\nA multiplex circuit transmits multiple signals on a single transmission line by using a control line to choose which signal should be transmitted or received.\n\nThe control line may be either clocked, to transmit the signals sequentially, or selection, to simply choose which signal to transmit.\n\nThe control line(s) can also be substituted with two synchronized pulse generating clocks.\n\nThen only one line is necessary.\n\nHowever, they have to stay synchronized for the transmission to be correct.\n\nThis can be done using a daylight sensor.\n\nA multiplex circuit may consist of a multiplexer, a demultiplexer, or both.\n\nA multiplexer (a.k.a.\n\n\"mux\") is a device that selects one of two or more inputs and outputs the selected input.\n\nThis multiplexer can be chained together, allowing for multiple bit multiplexing.\n\nFor these designs, the inputs are labeled A and B.\n\nC is the \"control\" input: whether A or B passes through depends on whether C is powered or not.\n\nAND-Gate Mux 3\u00d75\u00d73 (45 block volume), silent circuit delay: 2 ticks When C is off, the A input can pass through but the B input is suppressed.\n\nWhen C is on, the B input can pass through but the A input is suppressed.\n\nHorizontal Dust-Cut Mux 3\u00d73\u00d73 (27 block volume) circuit delay: 0 ticks While the block is moving, both A and B can pass through at the same time -- in practice, this just means the transition takes 1.5 ticks when going from a high signal to a low, and instantly for all other cases.\n\nPiston Mux 4\u00d74\u00d72 (32 block volume), flat circuit delay: 1 tick Vertical Piston Mux 1\u00d74\u00d76 (24 block volume), 1-wide circuit delay: 1 tick Schematic Gallery: Multiplexer View at: Redstone circuits/Miscellaneous/Mux [edit ] AKA \"demultiplexer\" or \"DEMUX\".\n\nI C A B A 2-bit demultiplexer (A) Hopper\u2013dropper multiplexer (silent; hopper contains 1 64-stackable item) A B I C Another 2-bit demultiplexer (B) The demultiplexer is the reverse of the multiplexer.\n\nIt allows you to have one input be sent to either of one of two or more different outputs.\n\nHere is a schematic of a demultiplexer with 4 outputs.\n\n'I' represents the input, 'S' represents the selectors and 'f' the outputs.\n\nThe two selector wires, holding a two digit binary number (2 wires = 2 digits), are passed to a decoder.\n\nIf the input wire is on, then the output wire of the demultiplexer corresponding to the output of the decoder turns on.\n\nFor example, if the input is on and the binary number 10b is passed onto the select wires (S0=on,S1=off.\n\nStart counting at zero!), then the decoder turns on the third wire (10 in binary is two, but because we start count at zero it becomes the third).\n\nAn AND operation is performed between the input wire of the demultiplexer and each of the outputs of the decoder.\n\nAs stated earlier, because both the input wire and only the 3rd output of the decoder is on, only the third output of the whole demultiplexer is on.\n\nDemultiplexers are used as decoders with the option to have ALL outputs turned off (done by turning off the input wire).\n\nThe two schematics on this page are those of a 2 bit demultiplexer.\n\nA demultiplexer is not a relay.\n\nA relay is an old electronic component that was replaced by transistors in the 70s.\n\nEven though a 1-pole relay is the same as a 2 bit demultiplexer, a more complex demultiplexer would be made of many relays (and in the current century of transistors).\n\nThe closest thing in Minecraft resembling a relay or transistor is the Redstone torch.\n\nSee also: Tutorials/Randomizers A random number generator (aka RNG, or \"randomizer\") is a circuit that can generate numbers with no recognizable pattern.\n\nThe RNGs below depend on the stack maximums of the items they push: A 64-stackable item is any item with a stack maximum of 64 items (for example, sticks, cobblestone, etc.).\n\nA 16-stackable item is any item with a stack maximum of 16 items (for example, signs, snowballs, ender pearls, etc.).\n\nA non-stackable item is any item that cannot be stacked (for example, tools, weapons, armor, boats, etc.).\n\nAnalog 2-RNG \u2192 \u2192 Analog 2-RNG The dropper contains one stackable item and one non-stackable item.\n\n1\u00d73\u00d72 (6 block volume), 1-wide, flat, silent circuit delay: 3 ticks (rising) and 1 tick (falling) Outputs either power level 1 or 3 while on, power level 0 while off.\n\nWhen the input turns on, the dropper randomly chooses to push either the stackable item or the non-stackable item into the hopper, causing the comparator to output either power level 1 or 3.\n\nBecause the powered dropper is a solid/opaque block, it also deactivates the hopper, preventing it from pushing the item back to the dropper until the input turns off.\n\nThe output power level can be used as is (for example, to subtract 1 or 3 from a comparator in subtraction mode), but more often the output is connected to a line of two redstone dust so that the output is 0 or not 0 (to randomly power a repeater, activate a mechanism component, etc.).\n\nVariations: If the dropper is powered indirectly (for example, by quasiconnecitvity or an adjacent powered block), the hopper is not be deactivated and immediately pushes the item back into the dropper.\n\nThis turns the circuit into a monostable rising edge detector with a 3.5-tick output pulse (still with a random power level of 1 or 3).\n\nWith only two items in the dropper, both output power levels are chosen with equal probability.\n\nThe probability of the output levels can be changed by adding additional stackable and non-stackable items to the dropper (which must all be different from each other so they don't stack).\n\nFor example, with two different stackable items and three different non-stackable items, the RNG outputs power level 1 40% of the time and power level 3 60% of the time.\n\nEarliest Known Publication: March 14, 2013 [5] Analog 3-RNG \u2192 \u2192 Analog 3-RNG The dropper contains one 64-stackable item, one 16-stackable item, and one non-stackable item.\n\nThe hopper contains five 16-stackable items in the far right slot.\n\n5 1\u00d73\u00d73 (9 block volume), 1-wide, silent circuit delay: 3 ticks (rising) and 1 tick (falling) Outputs power levels 1, 2, or 4 while on, power level 1 while off (but see variations below).\n\nWhen building this circuit, wait until the hopper is deactivated by the powered dust before putting five 16-stackable items in its far right slot.\n\nThen put a 64-stackable item, a 16-stackable item, and a non-stackable item in the dropper.\n\nBefore the input turns on, the hopper's five 16-stackable items are enough to produce a power level 1 output from its comparator (even a single 64-stackable item would be enough for that).\n\nThese five items should never be returned to the dropper, so the comparator's output never drops below power level 1.\n\nWhen the input turns on, the dropper pushes an item into the hopper, which is placed in the hopper's left slot.\n\nIt takes 23 64-stackable items (or five 16-stackable items and three 64-stackable items, or six 16-stackable items) to produce power level 2, so if the 64-stackable item is pushed that isn't sufficient to increase the output power level, but if the 16-stackable item is pushed the output power level increases to 2.\n\nAnd if the non-stackable item is pushed, the output power level increases to 4.\n\nThe hopper is held deactivated by the powered dust when the circuit is off, and by the powered dropper when the circuit is on.\n\nBut, when the input turns off, there is a brief 1-tick moment when the dropper has just turned off, but the torch attached to it hasn't turned on again.\n\nThis allows the hopper to activate for 1 tick, pushing an item back into the dropper.\n\nA hopper always pushes items from its left slots first, so the hopper pushes back the item the dropper pushed into it, rather than any of the 16-stackable items in its far right slot, allowing the circuit to reset itself.\n\nVariations: The player can remove one of the items from the dropper to create a 2-RNG with different power level outputs than the regular 2-RNG: removing the 64-stackable item outputs power levels 2 or 4, removing the 16-stackable item outputs power levels 1 or 4, and removing the non-stackable item outputs power levels 1 or 2.\n\nYou can add additional redstone dust leading from the hopper to a block next to it, and then down to the side of the comparator.\n\nThis 2-wide variation keeps the comparator's output off while the input is off.\n\nWith only three items in the dropper, all three output power levels are chosen with equal probability.\n\nThe probability of the output levels can be changed by adding additional 64-stackable, 16-stackable, and non-stackable items to the dropper (which must all be different from each other so they don't stack).\n\nFor example, with one 64-stackable item, one 16-stackable item, and two different non-stackable items, the RNG outputs power level 1 25% of the time, power level 2 25% of the time, and power level 4 50% of the time.\n\nAdditional items can be added to the hopper to increase all of the output power levels.\n\nEarliest Known Publication: 16 April 2013 [6] Analog 16-RNG 5\u00d78\u00d74 (160 block volume) circuit delay: 8.5 ticks Outputs power levels 0 to 15 while on, power level 0 while off.\n\nUses four 2-RNGs to subtract 1, 2, 4, and/or 8 from 15.\n\nReducing the number of 2-RNGs reduces the possible outputs: three 2-RNGs produces an 8-RNG, and two 2-RNGs produces a 4-RNG (the exact power levels depend on the power level provided to the subtraction comparators).\n\nEarliest Known Publication: June 10, 2013 [7] Schematic: Analog 16-RNG View at: Redstone circuits/Miscellaneous/analog 16-rng [edit ] Main article: Tutorials/Randomizers Random Selector A random selector is a circuit that selects an available output at random.\n\nThe random selector (right) depends on the random flight of an item from a dropper.\n\nThe input (button) in this random selector turns off the torch, deactivating the piston.\n\nIt also powers a redstone dust directed into the block, powering the repeater and activating the dropper.\n\nThe piston then reactivates to push the stuck item (if any).\n\nA hopper collects the item and puts it back into the dropper, activating a comparator.\n\nNOTE: The dropper must be facing up.\n\nIf facing down, the item glitches out of the machine.\n\nEarliest Known Publication: 24 September 2014 [8] An old kind of random selector is the \"chicken randomizer\", which uses a chicken walking on multiple pressure plates in a containment chamber.\n\nFor this and other improved randomizers, view the randomizers tutorial.\n\nAnother way to construct a random selector is to feed the output of a digital randomizer into a demuxer.\n\nYou can create a 1-bit digital randomizer from an analog 2-RNG by discarding one of the outputs, and then combine N of them for an N-bit digital randomizer.\n\nA thyristor is a bit like a D flip-flop but has a different functionality.\n\nIt has two inputs: the \"gate\" line G and the \"anode\" line A, and has one output: the \"cathode\" line K.\n\nWhen triggered by G, the circuit sets its output K to A if A is high, then holds that output state until A goes low.\n\nOtherwise K stays low.\n\nDesign A is the simplest form of the circuit.\n\nThe hopper is initially empty so K stays low regardless of whether A is high or low.\n\nWhen G goes high, the item in the dropper moves to the hopper so K goes high as well.\n\nThe hopper is suspended by A so as long as A is high, the item doesn't go back to the dropper so K is kept high.\n\nBut there is a downside to this design.\n\nWhen triggered by G while A is low, a 1 tick on-pulse is emitted from K.\n\nDesign B is an improved form at the cost of complexity / size / delay.\n\nThere is an AND gate between G and A so the gate input gets completely discarded when A is low.\n\nEarliest Known Publication: 28 March 2016 [9] Schematic Gallery: Thyristor View at: Mechanics/Redstone/Miscellaneous circuits/Thyristor [edit ] This is an automatic item disposer with a start button.\n\nPut items in the chest, then push the button behind it.\n\nAll the items in the chest are thrown into lava via clocked dropper below the chest.\n\nWhile design B is used in this screenshot, design A is fine too because the bogus 1-tick output would activate only the empty disposer.\n\nHysteresis circuit a.k.a.\n\nSchmitt trigger is a circuit that activates the output if input signal power reaches the 'high' threshold, switches it off if power drops to 'low' threshold, and sustains previous state if power remains between the two.\n\nTypical use is activation of disposal from storage overflows (which tends to be noisy, so this allows keeping the run-time short), activation of automatic farms to re-fill storage if it's running low, and various storage systems where startup and shutdown are comparably heavy-weight relative to continued operation itself.\n\n0 \u2013 15 hysteresis circuit.\n\nn 0 \u2013 n+1 hysteresis circuit.\n\nContainer has enough items for the comparator to produce power level n.\n\nn n-1 \u2013 n+1 hysteresis circuit.\n\nm n m \u2013 n+1 hysteresis circuit.\n\nEarliest Known Publication: May 20, 2017 [10] \u2191 \"VioletTheGeek\" (5 July 2011).\n\n\"Minecraft Redstone Reverse-order deactivation sequencer\" (Video).\n\nYouTube.\n\n\u2191 \"VioletTheGeek\" (20 June 2012).\n\n\"Minecraft Redstone Vertical Reverse-Order Deactivation Circuit\" (Video).\n\nYouTube.\n\n\u2191 \"NiceMarkMC\" (18 July 2012).\n\n\"Minecraft - Tutorial: 1 Wide ABBA Switch\" (Video).\n\nYouTube.\n\n\u2191 \"Tatarize\" (28 December 2011).\n\n\"Compact Minecraft BUD switch.\n\n1x3x4.\n\nAuto-reset.\n\nMinecraft 1.0.0\" (Video).\n\nYouTube.\n\n\u2191 \"HiFolksImAdam\" (14 March 2013).\n\n\"Minecraft 1.5 Tutorial: Simple Random Number Generator!\" (Video) \u2013 YouTube.\n\n\u2191 \"Kwin van der Veen\" (16 April 2013).\n\n\"Video response: Sharing is Caring #010: 1 Bit Randomizer & Silent BUD \" (Video).\n\nYouTube.\n\n\u2191 \"Entity\" (June 10, 2013).\n\n\"Calling All Redstone Geniuses, I need Help.\n\n- advanced randomizer.\" \u2013 Minecraft Forum \u2191 \"MaNgAkA_fReAk\" (24 September 2014).\n\n\"Random Selector for 1.8\".\n\nMinecraft Forum.\n\n\u2191 depressed_pho (28 March 2016).\n\n\"Does anyone know the name of this circuit?\".\n\nMinecraft Forum.\n\n\u2191 \"R.K.F.\n\nWalter\" (May 20, 2017).\n\n\"Tutorial: Simple, adjustable Hysteresis Circuits (Schmitt Triggers)\" (Video).\n\n'YouTube.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Alternate Rapidfire Piston Clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Alternate_Rapidfire_Piston_Clock",
    "content": "Alternate Rapidfire Piston Clock, layers 1/2.\n\nThe darker items are on the bottom layer.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Double Extender 1",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Double_Extender_1",
    "content": "Basic Double Extender",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Double Extender 2",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Double_Extender_2",
    "content": "4 8 2 6 Piston-safe Double Extender.\n\nNumbers are total delay for the repeaters in that line.\n\nThe upward piston will be moved without triggering.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Double Extender 3",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Double_Extender_3",
    "content": "Vertical Double Extender, Levels 0/1.\n\nThe dark items are on level 0, in a hole.\n\nVertical Double Extender, Levels 1/2.\n\nVertical Double Extender, Levels 2/3.\n\nVertical Double Extender, Level 3/4.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Double Extender 4",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Double_Extender_4",
    "content": "Design B Design A",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Edge Detector A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Edge_Detector_A",
    "content": "Switchable Edge Detector",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Edge Detector B",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Edge_Detector_B",
    "content": "Dual-Edge Detector (B).\n\nThe rightmost repeater can be set to 2, 3, or 4.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Edge Detectors Inline",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Edge_Detectors_Inline",
    "content": "Rising Edge Detector (D) Zero Crossing Detector (E) Falling Edge Detector (F)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston AND",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_AND",
    "content": "Piston AND gate.\n\nThe mobile block (un)covers a hole containing redstone dust.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston IMPLIES",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_IMPLIES",
    "content": "A B Piston IMPLIES gate.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston NOT",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_NOT",
    "content": "Piston NOT Gate, top view Piston NOT Gate, side view One layer high version using a Redstone Block",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston OR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_OR",
    "content": "Piston OR gate.\n\n(6*5*3) The torch is in a hole, on the level below the mobile block Smaller Piston OR gate.\n\n(6*5*3)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston pulser",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_pulser",
    "content": "Piston Pulser, level 1 Piston Pulser, level 2",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston RS Latches",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_RS_Latches",
    "content": "S R Piston RS Latch Q\u0305 S R Q Simple Redstone Block RS latch",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston Toggle A",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_Toggle_A",
    "content": "T Piston Toggle A, level 2/3 Piston Toggle A, level 0/1.\n\nThe torch under the mobile block is in a hole",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston Toggle B",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_Toggle_B",
    "content": "R T S X Q Piston RST flipflop B, level 2 R T S Piston RST flipflop B, level 1",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston Toggle E",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_Toggle_E",
    "content": "Piston Toggle C The torch is in a hole.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston XNOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_XNOR",
    "content": "Piston XNOR Gate",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Piston XOR",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Piston_XOR",
    "content": "Piston XOR Gate",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Power 1",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Power_1",
    "content": "The top two lines work, the bottom doesn't.\n\nThe most efficient long distance lines are 18 blocks per tick.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Rapidfire Piston Clock",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Rapidfire_Piston_Clock",
    "content": "Rapidfire Piston clock, layers 1/2.\n\nSet repeaters to at least 2 ticks Rapidfire Piston clock Vertical cross section",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Piston/Sticky Piston Compact TFF",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Piston/Sticky_Piston_Compact_TFF",
    "content": "Sticky Piston 1-wide TFF side view",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/ded",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/ded",
    "content": "Observer Dual Edge Detector 1\u00d71\u00d71 (1 block volume) 1-wide circuit delay: 1 tick output pulse: 1 tick substitute repeater input if used after comparator fader \u2192 \u2192 1-wide Moving-Block Dual Edge Detector 1\u00d74\u00d73 (12 block volume) 1-wide circuit delay: 1 tick output pulse: 1 tick \u2192 \u2192 Moving-Block Dual Edge Detector 2\u00d73\u00d74 (24 block volume) circuit delay: 1 tick output pulse: 1 tick The dust on the bottom is to the side of the piston and output.\n\n\u2192 \u2192 Dust-Cut Dual Edge Detector (Simple) 1\u00d74\u00d73 (12 block volume) 1-wide circuit delay: 1 tick (rising edge) or 0 ticks (falling edge) output pulse: 1.5 ticks (rising edge) or 1 tick (falling edge) Dust-Cut Dual Edge Detector (Instant) 2\u00d75\u00d73 (30 block volume) instant circuit delay: 0 ticks output pulse: 1.5 ticks (rising edge) or 1 tick (falling edge) \u2192 \u2192 Dust-Cut Dual Edge Detector (1-Wide Instant) 1\u00d76\u00d75 (30 block volume) 1-wide, instant circuit delay: 0 ticks output pulse: 1.5 ticks (rising edge) or 1 tick (falling edge) \u2192 OR-Gate Locked-Repeater Dual Edge Detector 3\u00d75\u00d72 (30 block volume) flat, silent circuit delay: 3 ticks output pulse: 1 tick \u2192 NOR-Gate Locked-Repeater Dual Edge Detector 3\u00d75\u00d73 (45 block volume) silent circuit delay: 3 ticks output pulse: 1 tick Piston OR-Gate Dual Edge Detector 3\u00d74\u00d72 (24 block volume) flat circuit delay: 1.5 ticks output pulse: 1.5 ticks Basic Subtraction DED 3\u00d74\u00d72 (24 block volume) flat, silent circuit delay: 2 ticks (rising edge) and 4 ticks (falling edge) output pulse: 2 ticks Slab-Diode Subtraction DED 3\u00d75\u00d73 (45 block volume) silent circuit delay: 1 tick (rising edge) and 3 ticks (falling edge) output pulse: 1 tick Twin NOR-Gate Dual Edge Detector 3\u00d75\u00d73 (45 block volume) silent circuit delay: 3 ticks (rising edge) and 1 tick (falling edge) output pulse: 1 tick",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/fed",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/fed",
    "content": "\u2192 \u2192 Dust-Cut FED 1\u00d74\u00d73 (12 block volume) 1-wide circuit delay: 0 ticks output pulse: 2 ticks \u2192 \u2192 Moved-Block FED 1\u00d73\u00d73 (9 block volume) 1-wide circuit delay: 1.5 ticks output pulse: 0.5 ticks \u2192 \u2192 Locked-Hopper FED 1\u00d74\u00d72 (8 block volume) 1-wide, silent circuit delay: 1 tick output pulse: 4 ticks The left hopper contains one item.\n\nLocked-Repeater FED 2\u00d73\u00d72 (12 block volume) flat, silent circuit delay: 2 ticks output pulse: 1 tick Subtraction FED 2\u00d75\u00d72 (20 block volume) flat, silent circuit delay: 1 tick output pulse: 1 tick NOR-Gate FED 2\u00d74\u00d73 (24 block volume) silent circuit delay: 1 tick output pulse: 1 tick Observer FED 1-wide 1\u00d74\u00d73 (12 block volume) 1-wide, silent circuit delay: 2 rs-ticks output pulse: 1 rs-tick Observer FED flat 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 2 rs-ticks output pulse: 1 rs-tick \u2074 Observer FED tileable 1\u00d75\u00d73 (15 block volume) 1-wide, tileable, silent circuit delay: 5 rs-ticks output pulse: 1 rs-tick",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/ided",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/ided",
    "content": "\u2192 \u2192 Moving-Block Inverted Dual Edge Detector \u2192 \u2192 Moving-Block Inverted Dual Edge Detector (Vertical) The dust on the bottom is to the side of the piston and output.\n\nLocked-Repeater OR-Gate Inverted Dual Edge Detector Slime BUD Inverted Dual Edge Detector (Instant) The obsidian can be replaced with any block which cannot be moved by slime blocks, but can have redstone dust on top of it.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/ired",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/ired",
    "content": "OR-Gate IRED 1\u00d73\u00d73 (9 block volume) 1-wide, silent circuit delay: 1 tick output pulse: 1 tick (off) \u2192 \u2192 OR-Gate IRED 1\u00d73\u00d73 (9 block volume) 1-wide, silent circuit delay: 1 tick output pulse: 1 tick (off) OR-Gate IRED 2\u00d73\u00d72 (12 block volume) flat, silent circuit delay: 1 tick output pulse: 1 tick (off) \u2192 \u2192 Moving-Block IRED 1\u00d74\u00d73 (12 block volume) 1-wide circuit delay: 0 ticks output pulse: 1.5 ticks (off)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/nor-gate fed",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/nor-gate_fed",
    "content": "\u2192 \u2192 1-Wide NOR-Gate Falling Edge Detector 1\u00d74\u00d74 (16 block volume) 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick In-line NOR-Gate Falling Edge Detector 2\u00d74\u00d73 (24 block volume) silent circuit delay: 1 tick output pulse: 1 tick",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/pulse divider",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/pulse_divider",
    "content": "Hopper-Loop Pulse Divider 2\u00d7(3 + pulse count/2)\u00d73 output pulse: 3 ticks The bottom-right hopper contains a single item.\n\nDropper-Hopper Pulse Divider 3\u00d74\u00d72 (24 block volume) flat output pulse: (4 \u00d7 pulse count) ticks The dropper contains a number of items equal to the pulse count.\n\nThe bottom-left hopper contains a single item.\n\nDropper-Dropper Pulse Divider 3\u00d76\u00d72 (36 block volume) flat output pulse: (2 \u00d7 pulse count) ticks The left dropper contains a number of items equal to the pulse count.\n\nThe left hopper contains a single non-stackable item.\n\nInverted Binary Divider / Counter (wide) 3\u00d75\u00d72 (30 block volume) flat, silent, 3-wide stackable (alternating) output pulse: 2 off-ticks This circuit triggers on a 2-tick off-pulse input, and outputs a pulse for every two input pulses.\n\nIt can be stacked to obtain a divider for any power of 2 (2, 4, 8, 16, etc).\n\nInverted Binary Divider / Counter (tall) 2\u00d75\u00d73 (30 block volume) silent, 2-wide stackable (alternating) output pulse: 2 off-ticks This version of the circuit trades height and an extra torch to reduce the circuit width to two blocks for closer stacking, but is otherwise identical to the flat version.\n\nR\u0305 P\u0305 Binary Divider reset circuit (top view) Reset pulse: 3 ticks off or longer Counter reset circuit which can be added to the binary divider.\n\nParts of the divider circuit are overlaid in lighter color to show positioning; these will be located 2 blocks higher than the reset circuit (see side view).\n\nP\u0305 R\u0305 Binary Divider reset circuit (side view) Viewed from the side, this shows the location of the torches below the solid blocks of the main divider circuit, and the torch and blocks giving input to the comparator.",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/pulse extender",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/pulse_extender",
    "content": "Repeater-Line Pulse Extender (Instant) 2\u00d7N\u00d72 flat, silent circuit delay: 0 ticks output pulse: input pulse length (=IPL) + up to IPL ticks (max 4) per repeater Repeater-Line Pulse Extender (Delayed) 2\u00d7N\u00d72 flat, silent circuit delay: 4 ticks output pulse: IPL + up to 4 ticks per repeater (excluding first) Rising Edge Dropper-Latch Pulse Generator 2\u00d76\u00d72 (24 block volume) flat, silent circuit delay: 5 ticks output pulse: 5 ticks to 256 seconds (regardless of IPL as long as its shorter) The dropper contains a single item.\n\nThe middle hopper contains one or more items depending on the desired pulse duration.\n\nRising Edge Hopper-Clock Pulse Generator (Flat) 2\u00d76\u00d72 (24 block volume) flat circuit delay: 1 tick output pulse: 4 ticks to 256 seconds (regardless of IPL as long as its shorter) \u2192 \u2192 Rising Edge Hopper-Clock Pulse Generator (1-Wide) 1\u00d76\u00d73 (18 block volume) 1-wide circuit delay: 1 tick output pulse: 4 ticks to 256 seconds (regardless of IPL as long as its shorter) RS NOR Latch Pulse Extender 3\u00d73x(4+N) silent circuit delay: 2 ticks output pulse: input pulse length + 8 ticks per repeater Opposed-Piston SR Latch Pulse Extender 3\u00d7N\u00d72 flat circuit delay: 1 tick (1.5 tick if the output powers a piston) output pulse: 8 ticks per repeater (regardless of IPL as long as its shorter) Breaks itself and requires manual reset if the IPL is greater than the configured OPL (output pulse length)!\n\nFader Pulse Extender 2\u00d7N\u00d72 flat, silent circuit delay: 0 ticks output pulse: up to 14 ticks per comparator MHC Pulse Extender 6\u00d76\u00d72 (72 block volume) flat circuit delay: 3 ticks output pulse: up to 22 hours MHDC Pulse Extender 5\u00d77\u00d72 (70 block volume) flat circuit delay: 5 ticks output pulse: up to 81 hours",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/pulse generator",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/pulse_generator",
    "content": "\u2192 Sticky Circuit Breaker Pulse Generator \u2192 Sand Circuit Breaker Pulse Generator \u2192 Dust-Cut Pulse Generator \u2192 NOR-Gate Pulse Generator Locked-Repeater Pulse Generator \u2192 OR-Gate Off-Pulse Generator",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/pulse limiter",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/pulse_limiter",
    "content": "\u2192 \u2192 Circuit Breaker Pulse Limiter 1\u00d73\u00d73 (9 block volume) 1-wide circuit delay: 1 tick output pulse: 0.5 ticks \u2192 \u2192 Dust-Cut Pulse Limiter 1\u00d75\u00d73 (15 block volume) 1-wide, instant circuit delay: 0 ticks output pulse: 1.5 ticks Moved-Block Pulse Limiter 3\u00d73\u00d72 (18 block volume) flat circuit delay: 1 tick output pulse: 1-3 ticks \u2192 \u2192 NOR-Gate Pulse Limiter (1-wide) 1\u00d74\u00d73 (12 block volume) 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick NOR-Gate Pulse Limiter (1-tick) 2\u00d74\u00d73 (24 block volume) silent circuit delay: 2 ticks output pulse: 1 tick NOR-Gate Pulse Limiter (flat) 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 2 ticks output pulse: 2-3 ticks Locked-Repeater Pulse Limiter 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 3 ticks output pulse: 1-4 ticks \u2192 \u2192 Dropper-Hopper Pulse Limiter 1\u00d74\u00d72 (8 block volume) 1-wide, flat, silent, tileable circuit delay: 3 ticks output pulse: 3.5 ticks The dropper has a single item in it.\n\nOR-Gate Off-Pulse Limiter (1-tick) 2\u00d73\u00d72 (12 block volume) flat, silent circuit delay: 1 tick output pulse: 1 tick (off) OR-Gate Off-Pulse Limiter (flat) 2\u00d73\u00d72 (12 block volume) flat, silent circuit delay: 1 tick output pulse: 2-4 ticks (off) \u2192 \u2192 OR-Gate Off-Pulse Limiter (instant) 1\u00d74\u00d74 (16 block volume) 1-wide, instant, silent circuit delay: 0 ticks output pulse: 1 tick (off) \u2192 \u2192 Moving-Block Off-Pulse Limiter 1\u00d74\u00d72 (8 block volume) 1-wide, instant, tileable circuit delay: 0 ticks output pulse: 2.5 ticks (off) Ground Instant Off-Pulse Limiter 2\u00d75\u00d72 (20 block volume) instant circuit delay: 0 ticks output pulse: 0 or 0.5 ticks (off)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/pulse multiplier",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/pulse_multiplier",
    "content": "\u2192 Dispenser Double-Pulser Subtraction 1-Clock Pulse Multiplier Subtraction N-Clock Pulse Multiplier Torch-Repeater N-Clock Pulse Multiplier Dropper-Latch 2-Clock Pulse Multiplier The top dropper contains a single item.\n\nThe bottom dropper contains a number of items equal to the desired pulse count.\n\nDropper-Latch 1-Clock Pulse Multiplier The dropper contains a single item.\n\nThe middle hopper contains one or more items depending on the desired pulse count (the first and last items should be non-stackable items).",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Pulse/red",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Pulse/red",
    "content": "\u2192 \u2192 Circuit Breaker 1\u00d73\u00d73 (9 block volume) 1-wide circuit delay: 1 tick output pulse: 1 tick \u2192 \u2192 Dropper-Hopper Rising Edge Detector The dropper has a single item in it.\n\n1\u00d74\u00d72 (8 block volume) 1-wide, silent circuit delay: 3 ticks output pulse: 3.5 ticks \u2192 \u2192 Dust-Cut Rising Edge Detector (Unrepeated) 1\u00d75\u00d73 (15 block volume) 1-wide, instant circuit delay: 0 ticks output pulse: 1.5 ticks \u2192 \u2192 Dust-Cut Rising Edge Detector (Repeated) 1\u00d75\u00d73 (15 block volume) 1-wide circuit delay: 1 tick output pulse: 1.5 ticks Locked-Repeater Rising Edge Detector (Corner) 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 3 ticks output pulse: 1 tick Locked-Repeater Rising Edge Detector (In-line) 3\u00d73\u00d72 (18 block volume) flat, silent circuit delay: 3 ticks output pulse: 1 tick Moved-Block Rising Edge Detector 3\u00d73\u00d72 (18 block volume) flat circuit delay: 1 tick output pulse: 1 to 3 ticks Moved-Block Rising Edge Detector (In-line) 3\u00d73\u00d72 (18 block volume) flat circuit delay: 1 tick output pulse: 1 to 4 ticks Moved-Block Rising Edge Detector (Offset) 3\u00d73\u00d72 (18 block volume) flat circuit delay: 1 tick output pulse: 1 to 4 ticks \u2192 \u2192 NOR-Gate Rising Edge Detector 1\u00d74\u00d73 (12 block volume) 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick \u2192 \u2192 NOR-Gate Rising Edge Detector (Laid-back) 1\u00d74\u00d74 (16 block volume) 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick \u2192 \u2192 NOR-Gate Rising Edge Detector (Triple-Torch) 1\u00d75\u00d74 (20 block volume) 1-wide, silent circuit delay: 2 ticks output pulse: 1 tick NOR-Gate Rising Edge Detector (In-line) 2\u00d74\u00d73 (24 block volume) silent circuit delay: 2 ticks output pulse: 1 tick Subtraction Rising Edge Detector (Unrepeated) 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 1 tick output pulse: 1 tick Subtraction Rising Edge Detector (Repeated) 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 2 ticks output pulse: 1 tick \u00b2 Observer RED 1-wide 1\u00d74\u00d73 (12 block volume) 1-wide, silent circuit delay: 2 rs-ticks output pulse: 1 rs-tick \u00b2 Observer RED flat 2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 2 rs-ticks output pulse: 1 rs-tick",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Transmission",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Transmission",
    "content": "A transmission circuit is a redstone circuit that allows redstone signals to move from one place to another.\n\nRedstone signals can be transmitted from one place to another with redstone wire \u2013 a line of redstone dust.\n\nRedstone wire can transmit a signal only 15 blocks \u2013 after that it needs a repeater to boost the signal back up to full strength.\n\nWhen crossing each other, redstone wires must be kept isolated so they don't interfere with each other.\n\nRedstone bridge Redstone bridge The center element consists of powered redstone dust on top of a block over unpowered redstone dust.\n\n1\u00d73\u00d74 (12 block volume) 1-wide, instant, silent circuit delay: none The fastest method for crossing wires is by building a bridge to take one wire over the other.\n\nVariations: A common variation is to drop the center block one level, and cut a three-block passage into the ground under it for the north-south wire.\n\nRepeater bridge Repeater bridge 2\u00d73\u00d73 (18 block volume) silent circuit delay: 1 tick A repeater bridge takes up less vertical space than a redstone bridge, but it adds 1 tick of delay to both wires.\n\nWhile horizontal transmission can be relatively straightforward, vertical transmission requires trade-offs.\n\nSchematic Gallery: Vertical Digital Transmission View at: Mechanics/Redstone/Transmission circuit/vertical digital transmission [edit ] Redstone staircase Redstone Staircase \u2013 [schematic] Up or Down 1\u00d7N\u00d7N 1-wide, silent circuit delay: 1 tick per 15 blocks Redstone dust propagates a signal to adjacent redstone dust one block up or down as long as no opaque block \"cuts\" the signal.\n\nThis allows \"staircases\" of blocks to carry redstone signals up (actual blocks of stairs aren't required, but can be used if placed upside-down).\n\nVariation (Circular Staircase): By turning 90 degrees in the same direction each time the wire goes up a block, a \"circular\" staircase can be created in a 2\u00d72 footprint.\n\nThis variation is 2-wide tileable in both horizontal directions as long as the rotation direction is alternated in each direction (clockwise, anticlockwise, clockwise, etc.), or 2\u00d74 alternating tileable with repeaters.\n\nRedstone ladder Redstone Ladder \u2013 [schematic] Up Only 1\u00d72\u00d7N 1-wide, silent circuit delay: 1 tick per 15 vertical blocks Transparent blocks that support redstone dust do not \"cut\" redstone dust, so \"ladders\" of these blocks can be made zig-zagging back and forth upward.\n\nGlowstone and upside-down slabs are the most commonly used supporting blocks, but upside-down stairs, glass, and hoppers also can be used.\n\nRedstone ladders are 2\u00d72 alternating tileable for short runs, or 1\u00d74 alternating tileable with repeaters.\n\nTorch tower Left: torch tower Center Left: torch ladder Center right: torch cascade Right: piston tower [schematic] Up only 1\u00d71\u00d7N 1-wide, silent circuit delay: 1 tick per 2 vertical blocks Redstone torches can power blocks above them, allowing transmission upward.\n\nTorch towers are 1\u00d71 tileable.\n\nTorch ladder Up Only 1\u00d72\u00d7N 1-wide, silent circuit delay: 1 tick per vertical block Redstone torches can power redstone dust beneath them, allowing transmission downward.\n\nTorch ladders are 1\u00d72 tileable upward but 2\u00d72 alternating tileable downward.\n\nTorch cascade Down Only 1\u00d72\u00d7N 1-wide, silent circuit delay: 1 tick per 2 vertical blocks Piston tower Down Only  [Java Edition only ], Up or Down  [Bedrock Edition only ] 1\u00d71\u00d7N 1-wide circuit delay: 1.5 ticks per 5 vertical blocks (rising edge) and none (falling edge) A sticky piston pointing downward can push a block of redstone into the space above redstone dust that is placed on top of a solid block.\n\nThis can be repeated straight down, i.e.\n\nanother sticky piston placed underneath that solid block, pointing downward, then another redstone block, a space, redstone dust on a solid block, and so on, allowing 1\u00d71 downward transmission.\n\nBecause of the difference in rising and falling edge behavior, off-pulses are extended by 1.5 ticks per piston and on-pulses are shortened by 1.5 ticks per piston and may possibly be erased altogether.\n\nThis makes piston towers less useful for rapidly changing states.\n\nAn upward-directed transmission using pistons is not possible in Java Edition due to effects of quasi-connectivity, unless slime blocks are used to move the blocks of redstone.\n\nPiston-slime block tower Left: upward piston-slime block tower Right: downward piston-slime block tower [schematic] Up or down 1\u00d71\u00d7N 1-wide circuit delay: 1.5 ticks per piston (rising edge) and none (falling edge) This is a variation of the simple piston tower that uses slime blocks.\n\nUsing slime blocks together with a basic piston tower may drastically improve its performance, because less pistons are used for the same height in comparison to a simple piston tower, and piston moves more blocks.\n\nUp to 11 slime blocks per piston can be used.\n\nIf using more than two slime blocks per piston, the piston tower can transmit a signal upward.\n\nA simple piston tower can't transmit signals up because effects of quasi-connectivity cause the tower to freeze in its state and not disable upon falling edge.\n\nIf using only one slime block per piston, an upward piston tower turns into a block update detector. [Java Edition only ] Combined upward ladder Combined Upward Ladder \u2013 [schematic] Up Only 1\u00d73\u00d7N 1-wide, silent circuit delay: 2 tick per 17 vertical block A vertical transmission circuit can be made by combining both torch tower and redstone ladder, resulting in a ladder with maximum height and minimum delay, as seen in the schematic.\n\nAdditionally, the first torch can be moved to the middle replacing the top slab and the torch with redstone wire, and adding another top slab before the second torch, which adds one block of height (as seen in the picture).\n\nObserver wire Observers can also be used to create a vertical ladder.\n\nEach observer carries block updates to the next observer up or down.\n\nA more advanced observer wire can be made by alternating, in upward order, observers, solid blocks, and either hoppers (only in Java Edition) or Droppers (in any edition).\n\nEach observer powers the dropper/hopper above it through the solid block, which changes its block state, activating the observer above it.\n\nThe blocks can be removed to make a wire that is slower but does not power anything next to itself.\n\nAny of these can go horizontally or downward as well.\n\nThere is also a more efficient downward method that goes (in downward order) observer, solid block, redstone dust, solid block, hopper/dropper.\n\nObservers with walls/scaffolding Starting from Java Edition 1.16, a Wall with a tall center post (due to a protruding wall block over it) causes all walls directly below it to also have a tall center post.\n\nIn Java Edition, this change can be detected by observers, allowing for instantaneous downward transmission by moving a block over or away from the topmost wall.\n\nScaffolding provides the upward counterpart: Each scaffolding block tracks how far it is \"overhanging\", that is the distance from a column of scaffolding which is actually resting on a block.\n\nA trapdoor counts as support only when it is closed.\n\nPlace a column of scaffolding atop a trapdoor, and also next to another scaffolding block that can support it while the trapdoor is open.\n\nWhen the trapdoor is closed, the column isn't overhanging at all, when the trapdoor is open it is overhanging 1 more space than its support scaffold.\n\nThe difference propagates up the column, and can be detected by an observer.\n\n(Credit for scaffolding technique: ianxofour via Youtube) Observers with water Water streams can carry information up and down.\n\nFor a slow downward signal, a dispenser can place and pick up a water block (or even a lava block), and an observer can detect the changes in the flow downstream.\n\nFor upward signals, a column of water source blocks can have the solid block below it swapped out by pistons; switching to a magma or soul sand block instantly propagates a bubble column up the water column, while switching to a normal block removes the bubbles; an observer watching one of the water blocks detects these changes.\n\nFalling items A dropper can toss items down a shaft or into a water stream; the items can then land on a wooden pressure plate, or be picked up by a hopper and then detected by a comparator.\n\nIt is also possible to launch items upward by various means, but that is generally less reliable, as controlling their exact path can be tricky.\n\nAnother important aspect of signal transmission is making sure a signal doesn't go the wrong way.\n\nA \"diode\" is a redstone component or circuit that allows signals through in one direction but not the other.\n\nComponent diode Component diode 1\u00d71\u00d72 (2 block volume) 1-wide, flat, silent circuit delay: 1 tick Both the redstone repeater and the redstone comparator transmit signals in only one direction, but add 1 tick of delay.\n\nBlock diode Block diode 1\u00d72\u00d72 (4 block volume) 1-wide, flat, silent circuit delay: 1 tick By strongly-powering a block, a signal can transmit in only one direction.\n\nNone of the output lines can affect each other.\n\nTransparent diode \u2192 \u2192 Transparent diode 1\u00d72\u00d73 (6 block volume) 1-wide, instant, silent circuit delay: none Some transparent blocks can support redstone dust: hoppers, glowstone, upside-down slabs, and upside-down stairs.\n\nThese blocks have the property that redstone dust on them can propagate signals diagonally upward, but not diagonally downward (transparent blocks that cannot support redstone dust cannot be used for this purpose).\n\nThus, simply jumping the signal up one block to one of these transparent blocks creates a diode circuit.\n\nUpside-down slabs are the transparent block most commonly used for this purpose, but glowstone is used where light would be useful (to suppress mob spawning, etc.), upside-down stairs can be used where a full-side solid surface is required without light (for example, alongside a water channel transporting items over ice), and hoppers may be used in this way where they are already being used for item transport.\n\nTo get the output back to the same level as the input, run the line over an opaque block before dropping it.\n\nTo \"repeat\" a signal means to boost it back up to full strength.\n\nWhen redstone signals are transmitted through redstone dust, their signal strength fades and must be repeated after 15 blocks.\n\nRepeater components and circuits keep signals going over long distances.\n\nRedstone repeater \u2192 \u2192 Redstone repeater 1\u00d71\u00d72 (2 block volume) 1-wide, flat, silent circuit delay: 1 to 4 ticks The most basic and common method of repeating a signal is to use a redstone repeater.\n\nWhen transmitting signals over long distances, it is more efficient to use a block before and after the repeater \u2013 this method of repeating a signal averages 18 redstone used per 18 blocks (15 redstone dust, and 3 redstone per repeater) and 1 tick delay per 18 blocks.\n\nPiston repeater \u2192 \u2192 Piston repeater 1\u00d73\u00d72 (6 block volume) 1-wide, instant (falling edge) circuit delay: 1 tick (rising edge), 0 ticks (falling edge) A sticky piston can push a block into position to power the output.\n\nBecause of the differences in rising and falling edge delays, pulses are shortened by 1 tick per piston repeater (possibly erasing short pulses).\n\nOn the other hand, zero falling edge delay makes this repeater attractive for applications that need instantaneous falling-edge transmission but do not care about rising-edge delay\u2014 for example, a distant circuit that activates on a falling edge.\n\nA piston repeater cannot handle pulses shorter than 1.5 ticks  [Java Edition only ]; with shorter pulses, the block is left behind (not retracted by the sticky piston) and continues to power the output until a later input pulse ends (Note: A piston repeater can handle pulses shorter than 1.5 ticks in Bedrock Edition.) Variations: When transmitting signals over long distances, it is more efficient to place a block before the piston.\n\nThis method of repeating a signal averages 17 redstone used per 19 blocks (1 for the piston, 1 for the torch, and 15 redstone dust) and 1 tick delay per 19 blocks.\n\nThe moving block can be replaced with a block of redstone, which allows the removal of the lower block and redstone torch, reducing the circuit size to a 1-high 1\u00d73\u00d71 (3 block volume).\n\nDouble-torch repeater \u2192 \u2192 Double-torch repeater 1\u00d73\u00d72 (6 block volume) 1-wide, silent circuit delay: 2 ticks The double-torch repeater was the standard repeater circuit used before redstone repeater blocks were added to Minecraft.\n\nIn transmission lines, one double-torch repeater is required every 18 blocks (the 3-block circuit, plus 15 blocks of redstone dust), using 18 redstone per 18 blocks and adding 2 ticks delay per 18 blocks.\n\nSingle-torch repeater \u2192 \u2192 Single-torch repeater 1\u00d72\u00d71 (2 block volume) 1-high, 1-wide, flat, silent circuit delay: 1 tick When crossing long distances, redstone torches can be used singly, simply allowing the signal to be inverted an even number of times during its journey.\n\nSingle-torch repeaters use slightly less redstone than redstone repeaters (16 redstone per 17 blocks) but are slightly slower (1 tick delay per 17 blocks).\n\nAn instant repeater is a circuit that repeats a redstone signal change with no delay.\n\nA sequence of instant repeaters and redstone dust lines is known as instawire (or \" instant wire \").\n\nSee also: Instant Two-Way Repeater (below) and Tutorials/Instant repeaters Insta-drop instant repeater \u2192 \u2192 A Insta-drop instant repeater 1\u00d73\u00d72 (6 block volume) 1-wide, instant circuit delay: none Behavior (rising-edge): While the input is off, the block of redstone keeps the lower sticky piston activated by connectivity.\n\nWhen the input turns on, the upper sticky piston begins to extend the block of redstone.\n\nThe instant the block of redstone starts moving, the lower sticky piston deactivates and begins to retract block A, the reason the upper piston is extending \u2014 this turns the upper sticky piston's extension into a 0-tick extension/retraction (the \"insta-drop\": the sticky piston \"drops\" its grip on the block and leaves it behind when it retracts), leaving the block of redstone above the lower sticky piston and powering the output.\n\nAll of this happens instantly (in the same redstone tick), effectively allowing a rising edge to pass through the circuit with no delay.\n\nNow that the block of redstone is above the lower sticky piston, the lower sticky piston extends again, and two ticks later block A is back in position causing the upper sticky piston to extend again, ready to retract block A when the signal turns off.\n\nBehavior (falling-edge): When the input turns off, the upper sticky piston begins to retract the block of redstone, immediately cutting off power to the output, effectively allowing the falling edge to pass through the circuit with no delay.\n\nWhile the block of redstone is moving, the lower sticky piston deactivates, but then activates again when the block of redstone stops moving and can activate the lower sticky piston by connectivity again.\n\nEarliest known publication: February 14, 2013 [1] Dust-cut instant repeater A \u2192 \u2192 Dust-cut instant repeater The space under the first piston prevents the block of redstone from activating its own piston.\n\n1\u00d75\u00d74 (20 block volume) 1-wide, instant circuit delay: none Behavior (rising-edge): When the input turns on, the lower sticky piston begins to extend, causing the upper sticky piston to retract, allowing the powered redstone dust below block A to connect to the output.\n\nAll of this happens instantly (in the same redstone tick), effectively allowing a rising edge to pass through the circuit with no delay.\n\nThe moving block of redstone also instantly depowers the dust below it, but by the time that turns off the repeater's output, the block of redstone has arrived to continue powering the output.\n\nBehavior (falling-edge): When the input turns off, the lower sticky piston begins retracting the block of redstone, immediately cutting off power to the output, effectively allowing the falling edge to pass through the circuit with no delay.\n\nThe block of redstone then arrives at its retracted state and tries to power the output dust again, but it also powers the piston above it and block A arrives to cut the output before the repeater can output the signal from the block of redstone.\n\nVariation (2-wide): The two upper levels (including the dust on top of the block the repeater is facing) can be moved one block over and down, and the last block on the lower level and its dust removed, to make a 2-wide version that is shorter in height and length (but larger in volume: 2\u00d74\u00d73, 24 block volume).\n\nIn this version, to reduce the amount of redstone used, the block of redstone can be replaced with a regular block if redstone torches are placed under both its extended and retracted position.\n\nEarliest known publication: January 3, 2013 [2] observer-rail instant repeater observer-rail instant repeater 1\u00d712\u00d72 (24 block volume) 1-wide, silent, instant circuit delay: none Behavior: When the input changes at all, the observer powers the rail and instantly triggers the next observer, potentially triggering more rails.\n\nAll of this happens in the same game tick.\n\nA shorter version will work as a diode.\n\nInputs can be added by powering any rail in the chain, and outputs added by adding an observer anywhere.\n\nEarliest known publication: 2016, using a piston BUD instead [3] A two-way repeater (aka \"2WR\", \"bi-directional repeater\") is a circuit that can repeat a signal in either direction.\n\nTwo-way repeaters have two inputs that also act as outputs.\n\nTypically the problem to be solved in design is repeating the signal in either direction without repeating the signal back into the same input, which could create a clock, a RS latch or a permanently-powered repeater loop.\n\nEach circuit description below lists a transmission speed, the rate at which multiple circuits can transmit signals when placed at maximum distance from each other.\n\nMost circuits have their inputs offset from each other by one or two blocks \u2013 moving the wires in-line with each other reduces the transmission speed (because the signal has to move sideways to get to the correct input).\n\nCurrent designs also have a two-way reset time \u2013 when input from one side is turned on, and then input from the other side is also turned on, then the first input turned back off, there is a short time while the transmission on the first side remains off until the circuit can reset itself to allow the second input through.\n\nThus, the reset time can be seen as a spurious off pulse in a line that should be on.\n\nSchematic Gallery: Two-Way Repeater View at: Mechanics/Redstone/Transmission circuit/two-way repeater [edit ] Comparison two-way repeater Comparison two-way repeater \u2013 [schematic] 2\u00d75\u00d72 (20 block volume) flat, silent transmission speed: 8 blocks/tick circuit delay: 2 ticks fastest clock signal: 2-clock two-way reset time: 4 ticks When a signal comes in from either side, it blocks the other input by providing a strength 15 signal to its comparator's side.\n\nIt is possible to override or block this circuit with additional inputs from the comparators' other sides.\n\nVariations: Transmission speed can be increased by lengthening the circuit.\n\nPossibilities include placing opaque blocks before and after the repeaters, adding a segment of analog comparator wire before the repeaters, or using slab diodes to allow placing blocks before the comparators.\n\nComparison 2WR 2\u00d77\u00d72 (28 block volume) 9 blocks/tick Comparison 2WR 2\u00d79\u00d72 (36 block volume) 10 blocks/tick Comparison 2WR 2\u00d713\u00d73 (78 block volume) 10.5 blocks/tick Earliest known publication: February 16, 2013 [4] CodeCrafted's two-way repeater CodeCrafted's two-way repeater \u2013 [schematic] 2\u00d76\u00d73 (36 block volume) silent transmission speed: 9.5 blocks/tick circuit delay: 2 ticks fastest clock signal: 3-clock two-way reset time: 3 ticks The output on each side is produced by the redstone torch under the block, held unpowered by the input torch from the other side.\n\nWhen the other input signal turns on, the output torch turns on \u2013 this also turns off the input torch holding the other output torch off, but each output torch also holds the other output torch off, keeping the circuit from becoming permanently powered.\n\nVariations: If it's not necessary to get the signal back to the lowest level (such as if this is built in a 1-deep hole), then this circuit can be considered to be 2\u00d74\u00d73 (24 block volume) and thus only four blocks long.\n\nEarliest known publication: August 9, 2012 [5] Instant two-way repeater Instant two-way repeater \u2013 There is redstone dust under the blocks of diamond, and 1-tick repeaters under the sticky pistons facing away from the bottom torches.\n\n[schematic] 4\u00d74\u00d73 (48 block volume) instant transmission speed: instant circuit delay: 0 ticks fastest clock signal: 2-clock two-way reset time: 2.5 ticks When an input turns on, it (a) turns off the torch on the side of the block and (b) powers the block in front of the input, activating the sticky piston on the other side.\n\nWhen the piston starts moving its block, this instantly allows the powered dust underneath to connect to the output.\n\nBy the time the power from the torch and repeater have turned off, the block has arrived at its extended position where it connects the power from the other torch and repeater to the output.\n\nEarliest known publication: February 18, 2013 [6] Moved-block two-way repeater Moved-block two-way repeater \u2013 [schematic] 2\u00d75\u00d72 (20 block volume) flat transmission speed: 12 blocks/tick (18 blocks per 1.5 ticks) circuit delay: 1.5 ticks (rising edge) and 0 ticks (falling edge) fastest clock signal: 3-clock (but shortens pulses) two-way reset time: 1.5 ticks When an input turns on, a sticky piston pushes a block of redstone into position to power the other line, but that also reconfigures the dust on the other side to prevent it from powering the other sticky piston.\n\nBecause of the difference in rising and falling edge delays, pulses is shortened by 1.5 ticks per two-way repeater.\n\nEarliest known publication: September 8, 2013 [7] Classic two-way repeater Classic two-way repeater \u2013 [schematic] 3\u00d74\u00d73 (36 block volume) silent transmission speed: 8 blocks/tick circuit delay: 2 ticks fastest clock signal: 3-clock two-way reset time: 4 ticks This design offers few advantages over the other designs, but may be of historical interest.\n\nLocked-repeater two-way repeater Locked-repeater two-way repeater \u2013 [schematic] 3\u00d74\u00d72 (24 block volume) flat, silent transmission speed: 15 blocks/tick circuit delay: 1 tick fastest clock signal: 1-clock two-way reset time: 3 ticks When a signal comes in from either side, it blocks the other input with a repeater lock.\n\nThis circuit is locked in a permanent powered state if signals enter from both sides simultaneously.\n\nVariation (offset input): The circuit shown in the schematic to the right keeps the transmission lines in-line with each other, but reduces the signal strength by 1 in side movement in both input and output before continuing the transmission, so the circuits must be placed with only 11 dust between them to work.\n\nPlacing a block behind each of the input repeaters and moving the input/output lines closer to the repeaters' outputs means that signal strength is lost only in side movement at input, allowing an additional dust between the circuits (and thus a more efficient transmission), but requires that the transmission lines alternate which side they run on.\n\nEarliest known publication: December 21, 2012 [8] observer-rail instant two-way repeater observer-rail instant two-way repeater 1\u00d712\u00d74 (48 block volume) 1-wide, silent, instant transmission speed: instant circuit delay: 0 ticks fastest clock signal: 2-clock two-way reset time:?\n\nBehavior: The powered rails initially hold powered.\n\nWhen any input is given, the rails act as a BUD and depowers, spreading the pulse both ways.\n\nAll of this happens in the same game tick.\n\nInputs can be added by creating a block update anywhere in the chain, and outputs added by adding an observer anywhere.\n\nVariations: Can be coupled to a line of droppers for an instant item line (Inspector Talon, 2022).\n\nEarliest known publication: Aug 26, 2021 [9] For simple redstone structures, digital (\"on/off\") transmission is sufficient.\n\nFor complex redstone structures, with banks of inputs or outputs, more sophisticated forms of transmission may be required, such as analog, binary, or unary transmission.\n\nWhen numbers are represented by different types of transmission, they are said to be encoded.\n\nAn analog encoding in Minecraft (a.k.a.\n\nhexadecimal wire or simply hex wire) is a transmission that outputs the same signal strength it receives as input.\n\nBecause power levels can vary from 0 to 15, an analog transmission can convey 16 states in a single wire.\n\nAnalog vs.\n\nDigital in Real-Life \" Analog \" means \"continuously variable\".\n\nThis doesn't match Minecraft analog wires that have 16 discrete values (for example, a signal strength of 6.89 can't be in Minecraft).\n\nBut a term was needed to differentiate between signal strength transmissions and on/off transmissions, and the real-life distinction between digital electronics (which generally transmit either a high voltage or low voltage) and analog electronics (which operate on continuously varying voltage levels) was a close fit, so the two terms were adapted for use by the Minecraft community.\n\nAnalog comparator wire (ACW) Analog comparator wire flat, silent circuit delay: 1 tick per 4 blocks The simplest analog wire is a line of redstone comparators.\n\nHowever, like redstone repeaters, comparators can draw a signal from an opaque block and push a signal into an opaque block, thus it is usually more efficient in resources and in signal delay to place comparators every four blocks.\n\nHence, it is the best option for short distances and tricky turns.\n\nThe signal strength of an analog comparator wire (ACW) can be reduced or suppressed at some point along its length by feeding another signal into one of the comparators in subtraction mode.\n\nThe signal can be overridden by feeding a stronger signal into one of the opaque blocks.\n\nBecause the redstone dust is not adjacent to any power or transmission components, only opaque blocks, it does not configure itself to point in any particular direction.\n\nThis also causes the dust to power any opaque blocks or mechanism components to the side of the analog wire.\n\nTransmission components should not be placed adjacent to the wire's dust because that would cause the dust to configure itself in a way where it doesn't power the rest of the analog wire.\n\nEarliest known publication: January 9, 2013 [10] Analog repeater wire A B Analog repeater wire \u2014 One segment of analog repeater wire.\n\nThe signal strength output at B is the same as the signal strength input at A.\n\nflat, silent circuit delay: 1 tick per 14 blocks Signal strength can also be retained by using repeaters to repeat every possible signal strength at the correct distance from the output to convey the correct signal strength.\n\nIt is the fastest option for long distances.\n\nA single segment of analog repeater wire (ARW) consists of exactly 15 repeaters connecting an input line to an output line.\n\nTo connect multiple segments together without additional comparators, the segments must be arranged so that the output dust of the last repeater is the same as the input dust of the next segment (i.e., block B of the previous segment is block A of the next segment).\n\nThis causes the segments to overlap in distance by one block and causes each segment to be offset to the side from the previous segment by two blocks.\n\nVariations: To keep the segments in-line, or to turn against the direction the repeaters are facing, raise the final repeater by one block and drop the next segment underneath it.\n\nAnother option is to use a comparator and an opaque block between the segments, and alternate the direction the repeaters are facing.\n\nThis keeps the height to 2 blocks but increases the circuit delay to 2 ticks per 17 block.\n\nEarliest known publication: November 21, 2012 [11] Analog subtraction wire A 15 B 15 Analog Subtraction Wire \u2014 Shown: 10-state ASW (aka \"decimal wire\").\n\nFor a 10-state wire, the input signal strength must be between 6 and 15 (so should never actually be off).\n\nChests are completely full with any items.\n\nThe signal strength output at B is the same as the signal strength input at A.\n\nflat, silent circuit delay: 1 tick per (18-N) blocks (see below for N) If fewer than 15 states need to be transmitted (for example, output from a picture frame, composter or cauldron), it may be more efficient to encode those N states in the higher levels of signal strength, and then repeatedly subtract the transmitted value from 15 after (17-N) dust, an even number of times.\n\nHowever, it is complicated and infrequently useful.\n\nVariations: The chests can be replaced with any other full container.\n\nThe chests can also be replaced with regular power components (redstone torches, powered levers, etc.) if the redstone dust next to them is raised or lowered by one block, or if the subtraction comparator and its power source are moved so that the redstone dust runs straight into the comparator's side with the comparator perpendicular to the line still facing into the same block.\n\nTap-anywhere analog comparator wire Tap-anywhere analog comparator wire \u2014 A fragment of the line.\n\nThe signal strength at every output is the same as the highest signal strength at any input.\n\nflat, silent circuit delay: 1 tick per 2 blocks + 2 ticks always The tap-anywhere ACW is helpful with 1-tileable devices, both all requiring the same input, or collecting output from them (e.g.\n\nreadout from a memory bank), sustaining the strongest of the inputs all the way \"downstream\" from it, on all the outputs.\n\nThe vertical options for analog transmission are similar to the horizontal options.\n\nVertical ACW Vertical ACW Vertical comparator wire diagonally and straight downward.\n\nsilent circuit delay: 1 tick per 1 vertical block (up), 1 tick per 2 vertical blocks (down) A redstone comparator can power a block with dust on it, and that dust can power another comparator at its level, etc.\n\nVertical ACW travels two blocks sideways for every 1 block moved upward (or three blocks with an additional block between the dust and the comparator), but can also be bent at each block into a 3\u00d73 \"circular staircase\".\n\nThe downward variant can go two blocks down for two block sideways, and double back, for a 1x3 tower.\n\nVertical ARW Vertical ARW silent circuit delay: 1 tick per 14 vertical blocks Vertical ARW is an analog repeater wire built on redstone ladders.\n\nIt transmits signals only upward and in segments of 14 vertical blocks (use vertical ACW to close any gaps).\n\nLike horizontal ARW, the last dust of the previous segment must be the first dust of the next segment unless a short run of vertical ACW is used to connect the two segments.\n\nHorizontal ARW built on a 3-wide staircase can be used to transmit analog redstone signal diagonally downward.\n\nVertical ASW basically just consists of redstone staircases or ladders with occasional breaks for subtraction.\n\nO I Analog inverter An analog inverter is a circuit that inverts the signal strength, for example a signal with the strength of 6 becomes 9, and a full strength signal becomes 0.\n\nThis can be achieved by placing a redstone block at the back of a redstone comparator and the input signal at the side of the comparator, with the output signal at front of the comparator, or by making an analog repeater wire, but instead of the wire in front of the repeater, place a block with a redstone torch attached to the front.\n\nplace a wire in front of every torch, and the bottom-left redstone dust is the output.\n\nA binary encoding consists of multiple digital lines run in parallel, with each line representing a different digit in a single binary number.\n\nFor example, three lines might individually represent binary 001 (decimal 1), binary 010 (decimal 2), and binary 100 (decimal 4), allowing them together to represent any value from decimal 0 to 7 (by summing the represented values of the powered lines).\n\nAn individual digital line of a binary transmission is referred to by the value it can add to the total number (for example, the 1-line, the 2-line, the 4-line, the 8-line, the 16-line, etc.) When a binary encoding is intended to carry only decimal numbers (encoding only values 0 to 9), it is known as binary-coded decimal (BCD).\n\n4-bit binary encoding A 4-bit binary encoding contains the same amount of information as an analog line, i.e.\n\n16 states.\n\nCompared to the analog version, binary lines are easier to transmit since no concerns about singal strenth is needed.\n\nThey can also be handled with logic circuits.\n\nConverting between digital and analog, i.e.\n\nbuilding a digital-analog converter (DAC), can be complicated.\n\n8-bit and 16-bit 8-bit (a.k.a.\n\n\"byte bus\") and 16-bit binary encodings are also used in the construction of computer recreations.\n\nA one-hot encoding consists of multiple digital lines run in parallel, where a value is represented by which line is on (for example, the number 5 might be represented by having only the fifth line on, and all other lines off).\n\nA common alternative to one-hot encoding is one-cold encoding, where a number is represented by which line is off instead of which line is on.\n\nWhile a strict one-hot encoding would always have precisely one line hot, a useful alternative is to eliminate the \"0\" line and represent the number 0 with no lines hot.\n\nOne-hot and one-cold encoding are rarely used for transmitting values over distance, but may be used for inputs (e.g., which button is pressed) or outputs (e.g., which dispenser is activated), with conversion to or from a more efficient transmission encoding in between.\n\nThey are also used as a transitional encoding \u2014 for example, it is relatively complicated to decode from analog to binary directly, but relatively simple to first decode from analog to one-cold, then encode from one-cold to binary.\n\nA unary encoding consists of multiple digital lines run in parallel, where a value is represented by the number of lines on (for example, the number 5 might be represented by having 5 of 16 lines powered).\n\nA unary encoding might use a convention that lines must be powered starting from one side (allowing values to be determined from the transition from powered lines to unpowered lines) or that they can be powered in any combination (requiring logic circuits or calculations to determine the represented value).\n\nUnary encoding is rarely used for transmitting values over distance, but may be used for inputs (e.g., the number of players standing on pressure plates) or outputs (e.g., the number of doors opened along a passageway).\n\nUnary in Real-Life \" Unary \" means \"having only one element\".\n\nAmong other uses, the term is used for the unary numeral system, a way of representing numbers using only one digit, and for unary coding, a way of representing numbers using two digits but the second digit is used only to terminate numerals.\n\nIn Minecraft, \"unary\" doesn't match either of these real-life uses exactly, but the term is still widespread.\n\nNote: This section contains circuits built from command blocks, which cannot be obtained legitimately in Survival mode.\n\nThese circuits are intended for server ops and adventure map builds.\n\nCommand blocks allow redstone signals to be transmitted to any loaded chunk, without a direct connection.\n\nSetblock transmission works by using the setblock command to create and remove power components at a receiver.\n\nFor the setblock transmitters below, the two command blocks should be given commands to create and remove power components at the receiver location.\n\nFor example, if X, Y, and Z are the absolute or relative locations of the setblock receiver: \"on\": setblock X Y Z redstone_block \"off\": setblock X Y Z stone Other power components can be used to activate the receiver, but most require additional data to specify their orientation (for example, to specify the direction a lever is attached).\n\nAdditionally, any non-power component can be used to deactivate the receiver (even air).\n\nAvoid using blocks that are transparent or produce light (like redstone torches) as that can increase lag due to block light calculations in up to hundreds of blocks around the receiver.\n\nWhen a setblock command is executed, the affected block does not change until a half a redstone tick later (one game tick).\n\nThus, the minimum circuit delay for setblock transmission is 0.5 ticks.\n\nSetblock transmitter, redstone Torch \u2192 on off Redstone torch setblock transmitter 1\u00d73\u00d71 (3 block volume) 1-high, 1-wide, flat, silent circuit delay: 0.5 ticks (rising edge) and 1.5 ticks (falling edge) fastest clock: 3-clock Because of the difference in rising and falling edge delays, on-pulses are lengthened by 1 tick and off-pulses are shortened by 1 tick.\n\nVariations: Many other arrangements of the torch and command blocks are possible.\n\nSetblock transmitter, repeater-torch off on \u2192 Repeater-torch setblock transmitter 1\u00d73\u00d73 (9 block volume) 1-wide, silent, tileable circuit delay: 1.5 ticks fastest clock: 3-clock Unlike the redstone torch setblock transmitter, this transmitter doesn't change the lengths of input pulses.\n\nVariations: The torch can be moved to the side of the input block, and the command blocks moved to the side of the repeater and the block it's facing, to make the circuit 2-wide but flat.\n\nSetblock transmitter, piston \u2192 off on Piston setblock transmitter 1\u00d73\u00d72 (6 block volume) 1-wide, tileable circuit delay: 2 ticks fastest clock: 2-clock Noisy, but small and can run on a faster input clock.\n\nVariations: The command blocks can also be moved above or to the side of the block of redstone's positions.\n\nThe piston can also be pointed downward (but not upward), with the command blocks alongside the block of redstone's positions.\n\nSetblock transmitter, repeater-comparator on off Repeater-comparator setblock transmitter The hopper contains a single stackable item.\n\n2\u00d74\u00d72 (16 block volume) flat, silent circuit delay: 1.5 ticks fastest clock: 2-clock Larger, but can handle a faster input clock without noise.\n\nSetblock receiver \u2192 Setblock receiver The stone is replaced by a block of redstone when activated.\n\n1\u00d71\u00d71 (1 block volume) 1-high, 1-wide, flat, silent, tileable A setblock receiver is simply a single block of space for a transmitter to create or remove a power component.\n\nScoreboard transmission works by setting values for scoreboard objectives.\n\nScoreboard transmission can be used to transmit simple binary values (as shown below), but scoreboard objectives can store values between -2,147,483,648 and 2,147,483,647 (inclusive) and multiple scoreboard objectives can be active at once (though transmitting and receiving many values requires arrays of transmitters and receivers).\n\nA single scoreboard transmitter can activate multiple receivers at once and different transmitters can set the scoreboard objective to different values, activating specific sets of receivers and simultaneously deactivating all other receivers.\n\nScoreboard receivers can also respond to ranges of values, instead of just specific values.\n\nScoreboard transmission requires the creation of a dummy scoreboard objective to store the transmission's current value (\"WirelessBus01\" is an example and can be anything): / scoreboard objectives add WirelessBus01 dummy Binary scoreboard transmitters are similar to setblock transmitters, except they require different commands (WirelessBusFakePlayer is an example and can be anything, but only one fake player is required for all wireless buses): \"on\": scoreboard players set WirelessBusFakePlayer WirelessBus01 1 \"off\": scoreboard players set WirelessBusFakePlayer WirelessBus01 0 Unlike setblock receivers, scoreboard receivers must be run on clock circuits.\n\nScoreboard receiver, setblock clock R W \u2192 S Setblock clock scoreboard receiver 1\u00d73\u00d73 (9 block volume) 1-wide, silent circuit delay: 1 tick The scoreboard receiver uses a fast clock to test the objective's value.\n\nThe command blocks should have the following commands: R: setblock ~ ~-1 ~ redstone_block S: setblock ~ ~1 ~ stone W: scoreboard players test WirelessBusFakePlayer WirelessBus01 1 1 Variations: The setblock clock can be replaced with any other fast clock.\n\nSummon transmission works by summoning an item onto a wooden pressure plate.\n\nUnlike setblock and scoreboard transmission, summon transmission doesn't require an \"off\" command block, depending only on the summoned item's despawn time to deactivate the receiver.\n\n\u2191 \"BeGamerPlays\" \u2013 \"Dual-Edge InstaWire 1.5\" \u2191 \"TT Lemon\" \u2013 \"Snapshot 13w02a - Instant Repeater\" \u2191 \"ilmango\" - \"Lag friendly instant repeaters\" \u2191 \"DvirWi\" \u2013 \"Two way repeater\" \u2191 \"CodeCrafted\" \u2013 \"Minecraft Challenge: 2-Way Repeater (Compact design)\" \u2191 \"DvirWi\" (February 18, 2013) \u2013 \"Instant two-way repeater (Designed for 1.5)\" \u2191 \"RedstoneInnovation\" (September 8, 2013) \u2013 \"Simple & Compact 2-Way Repeater!\n\n[Tutorial]\" \u2191 \"rapamaro\" \u2013 \"the most compact 2 way repeater (1.4.7)\" \u2191 \"Kahyxen\" - \"Robust Instant Wire\" \u2191 \"seiterarch\" (January 9, 2013) \"\"Minecraft Beyond Binary 01: All the Comparisons (13w01b)\"\" \u2191 \"Cubehamster\" (November 21, 2012) \"Minecraft: Redcoder (Decoding Redstone Dust)\" Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Transmission/two-way repeater",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Transmission/two-way_repeater",
    "content": "Locked-Repeater Two-Way Repeater 3\u00d74\u00d72 (24 block volume) flat, silent circuit delay: 1 tick fastest clock signal: 1-clock two-way reset time: 3 ticks Comparison Two-Way Repeater 2\u00d75\u00d72 (20 block volume) flat, silent circuit delay: 2 ticks fastest clock signal: 2-clock two-way reset time: 4 ticks CodeCrafted's Two-Way Repeater 2\u00d76\u00d73 (36 block volume) silent circuit delay: 2 ticks fastest clock signal: 3-clock two-way reset time: 3 ticks The powered torches are above redstone dust which has configured itself to point towards the unpowered torches underneath the blocks.\n\nInstant Two-Way Repeater 4\u00d74\u00d73 (48 block volume) instant circuit delay: 0 ticks fastest clock signal: 2-clock two-way reset time: 2.5 ticks Under the sticky pistons are 1-tick repeaters facing away from the torches.\n\nMoved-Block Two-Way Repeater 2\u00d75\u00d72 (20 block volume) flat circuit delay: 1 tick (rising edge) and 0 ticks (falling edge) fastest clock signal: 3-clock (but shortens pulses) two-way reset time: 1.5 ticks Classic Two-Way Repeater 3\u00d74\u00d73 (36 block volume) silent circuit delay: 2 ticks fastest clock signal: 3-clock two-way reset time: 4 ticks",
    "category": "Mechanics"
  },
  {
    "title": "Redstone circuits/Transmission/vertical digital transmission",
    "url": "https://minecraft.fandom.com/wiki/Redstone_circuits/Transmission/vertical_digital_transmission",
    "content": "5 10 15 Combined Upward Ladder (up) \u2192 \u2192 Redstone Staircase (up) \u2192 \u2192 Redstone Staircase (down) \u2192 \u2192 Redstone Ladder (up only) Torch Tower (up only) Torch Ladder (up) Torch Ladder (down) Piston Tower (down only) Piston-Slime Block Tower (up) Piston-Slime Block Tower (down)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone components",
    "url": "https://minecraft.fandom.com/wiki/Redstone_components",
    "content": "Redstone components are the blocks used to build redstone circuits.\n\nRedstone components include power components (such as redstone torches, buttons, and pressure plates), transmission components (such as redstone dust and redstone repeaters), and mechanism components (such as pistons, doors, and redstone lamps).\n\nThis article assumes familiarity with the basics of redstone structures.\n\nThis article also limits its discussion of each component to its role in redstone structures; for full details about a component, see the main article for the block.\n\nPower components create redstone signals, either permanently or in response to player, mob, and environmental activity.\n\nBlock of Redstone's range of activation It does not power any adjacent opaque block Main article: Block of Redstone A block of redstone provides constant power.\n\nIt can be moved by pistons.\n\nActivation A block of redstone is always ON.\n\nEffect A block of redstone powers adjacent mechanism components (including those above or below) and adjacent redstone dust.\n\nIt also powers adjacent redstone comparators or redstone repeaters facing away from it.\n\nA block of redstone does not power adjacent opaque blocks.\n\nP.\n\nButton's range of activation It powers the opaque block it is attached to Main article: Button A button is used to generate a pulse.\n\nA button may be of two types: wooden or stone.\n\nPlacement A button can be attached to any part of most opaque blocks.\n\nIf the attachment block is removed, the button drops into the item form.\n\nActivation A player can activate a button by right-clicking it.\n\nA stone button stays ON for 10 ticks (1 second), while a wooden button stays ON for 15 ticks (1.5 seconds).\n\nA wooden button can also be turned ON by an arrow that has been shot at it.\n\nIn such a case, the button remains ON until the arrow despawns (after one minute) or is taken.\n\nEffect While activated, a button and its attachment block both power adjacent redstone dust (including beneath the button, and beneath and on top of the block), and all adjacent redstone comparators or redstone repeaters facing away from it.\n\nThey also activate all adjacent mechanism components (including those above or below).\n\nMain article: Calibrated Sculk Sensor This section of the article is empty.\n\nYou can help by adding to it.\n\nMain article: Chiseled Bookshelf This section of the article is empty.\n\nYou can help by adding to it.\n\nDaylight Detector's range of activation It does not power any adjacent opaque block Main article: Daylight Detector A daylight detector can be used to detect the time of the Minecraft day.\n\nActivation A daylight detector, if exposed to the sky (\"sl\" greater than 0), remains activated while the sun is in in the sky.\n\nA daylight detector blocked from the sky (\"sl\" equals 0) remains activated while the moon is in the sky.\n\nEffect While activated, a daylight detector powers adjacent redstone dust (including beneath it), and all adjacent redstone comparators or redstone repeaters facing away from it, at a power level proportionate to the height of the sun or moon in the sky.\n\nIt also activates all adjacent mechanism components (including those above or below).\n\nA daylight detector does not power adjacent opaque blocks.\n\nP.\n\nDetector Rail's range of activation It powers the opaque block it is attached to Main article: Detector Rail Detector rail as power component A detector rail is used to detect the passage of a minecart.\n\nPlacement A detector rail can be attached to the top of any opaque block, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the detector rail drops as an item.\n\nWhen placed, a detector rail lines up with adjacent rails, powered rails, and other detector rails, as well as adjacent rails one block above it.\n\nIf there are two adjacent rails not on opposite sides, or three or more adjacent rails, the detector rail lines up in the east-west direction.\n\nIf there are no adjacent rails, the detector rail lines up in the north-south direction.\n\nIf there is an adjacent rail one block above, the detector rail slants to match it (when there is more than one adjacent rail to slant toward, the order of preference is: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rail.\n\nActivation A detector rail turns ON when a minecart passes over it, and turns OFF when it leaves.\n\nEffect While activated, a detector rail and its attachment block (unless attached to a slab or stairs) both power adjacent redstone dust (including beneath the block), and all adjacent redstone comparators or redstone repeaters facing away.\n\nThey also activate all adjacent mechanism components (including those above or below).\n\nA jukebox with a music disc playing emits a redstone signal of strength 15.\n\nP.\n\nLectern's range of activation It powers the opaque block beneath it Main article: Lectern A lectern is a block that can hold written books so they can be read.\n\nPlacement Lecterns can face north, south, east or west, facing toward the player when placed.\n\nThis has a redstone effect judging on the book page.\n\nActivation When the page of the book it is holding is turned, the lectern emits a redstone pulse that is one game tick long (0.5 redstone ticks).\n\nP.\n\nLever's range of activation It powers the opaque block it is attached to Main article: Lever Lever as power component A lever is used to switch circuits on or off, or to permanently power a block.\n\nPlacement A lever can be attached to any part of most opaque blocks, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the lever drops as an item.\n\nActivation A player can turn a lever ON or OFF by right-clicking it.\n\nEffect While activated, a lever and its attachment block (unless attached to a slab or stairs) both power adjacent redstone dust (including beneath the lever, or beneath or on top of the block), and all adjacent mechanism components (including those above or below it).\n\nThey also activate all adjacent redstone comparators or redstone repeaters facing away.\n\nro P.\n\nLightning Rod's range of activation It powers the opaque block it is attached to A lightning rod emits a redstone signal strength of 15 when struck by lightning.\n\nP.\n\nObserver's range of activation It does not activate adjacent components It powers the opaque block behind it Main article: Observer An observer can be used to detect block changes.\n\nPlacement An observer can be placed anywhere and can face in any direction, including up or down.\n\nWhen placed, the observer's side that detects block changes (its face) faces away from the player and the side that produces a pulse faces the player.\n\nActivation An observer turns ON when the block in front of its face changes state (for example, a block being placed or mined, water changing to ice, a repeater having its delay changed by a player, etc.).\n\nThe observer stays ON for 2 redstone ticks (4 game ticks, or 0.2 seconds barring lag) and then turns OFF automatically.\n\nAn observer also turns ON for 1 game ticks after it is moved by a piston.\n\nEffect When activated, an observer produces a 1tick pulse from the side opposite its face.\n\nP.\n\nPressure Plate's range of activation It powers the opaque block that supports it Main article: Pressure Plate Pressure plate as power component A pressure plate can be used to detect mobs, items, and other entities.\n\nA pressure plate may be of two types: wooden or stone.\n\nPlacement A pressure plate can be attached to the top of any opaque block, or to the top of a fence, nether brick fence, an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the pressure plate drops as an item.\n\nActivation A pressure plate turns ON when an entity (mob, item, etc.) crosses or falls on it, and turns OFF when the entity leaves or is removed.\n\nA wooden pressure plate may be turned ON also by falling items and arrow shots.\n\nA wooden pressure plate that is activated in this way turns OFF when the object is picked up or despawns (after one minute for a shot arrow, or up to five minutes for an item).\n\nEffect While activated, a pressure plate and its attachment block (unless attached to a fence, nether brick fence, slab, or stairs) both power adjacent redstone dust (including beneath the block), and all adjacent mechanism components (including those above or below).\n\nThey also activate all adjacent redstone comparators or redstone repeaters facing away.\n\nConsiderations A pressure plate is not solid (it cannot be used as a wall or platform).\n\nUsually a block under a pressure plate provides solid ground (for mobs to walk across, items to fall on, etc.), but when a pressure plate is placed on a block with a small collision mask, like a fence or nether brick fence, it is possible for entities to move through the pressure plate and still activate it.\n\nThus, a pressure plate on a fence can be used to detect entities without stopping them (more compactly than a tripwire circuit).\n\nP.\n\nP.\n\nx x Redstone Torch's range of activation It powers the opaque block that is above it It does not power/activate the block/component it is attached to Main article: Redstone Torch Redstone torch as power component A redstone torch powers circuits (horizontally and vertically), and can invert signals.\n\nPlacement A redstone torch can be attached to any surface (except the bottom) of any opaque block, or to the top of: a cobblestone wall, a fence, glass, nether brick fence, an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the redstone torch drops as an item.\n\nActivation A redstone torch turns OFF when its attachment block receives power from another source and turns back on when the block loses power.\n\nEffect While activated, a redstone torch and any opaque block above it both power adjacent redstone dust (including beneath the redstone torch, or on top of the block), and all adjacent mechanism components (including those above or below it).\n\nThey also activate all adjacent redstone comparators or redstone repeaters facing away from it.\n\nA redstone torch does not affect the block it is attached to (even if it is a mechanism component).\n\nConsiderations A redstone torch can burn out (stop turning on) when it is forced to flicker on and off too quickly (by powering and de-powering its attachment block).\n\nAfter burning out, a redstone torch re-lights when it receives a redstone update, or randomly after a short time.\n\nOne way to cause a burnout is with a short-circuit \u2013 using a torch to turn itself off, which then allows the torch to turn back on, etc.\n\nFor example, placing redstone dust on top of a block with a redstone torch on its side, then putting another block above the torch, causes the torch to power the top block, which activates the dust, which powers the first block, turning the torch off \u2013 this feedback loop causes the redstone torch to flicker and burn out.\n\nWhen putting a torch underneath a block, make sure that the block isn't adjacent to redstone dust or the torch can burn out.\n\nA sculk sensor emits a redstone signal when it detects a vibration Target's range of activation It does not power any adjacent opaque block Main article: Target A Target emits a redstone signal when hit by a projectile (including arrows, tridents, eggs, snowballs, splash potions, fire charges fired from dispensers, and lingering potions, but excluding ender pearls and eyes of ender).\n\nActivation Arrows and Tridents emit a pulse of 10 redstone ticks, while other projectiles emit a pulse of 4 redstone ticks.\n\nThe closer the projectile is to the center of the block, the stronger the signal it produces is, from 1 (at the edge) to 15 (in the center).\n\nP.\n\nTrapped Chest's range of activation It powers the opaque block beneath it Main article: Trapped Chest A trapped chest can be used to detect when a player tries to take from it.\n\nActivation A trapped chest is turned ON when a player accesses its contents.\n\nEffect While activated, a trapped chest and any opaque block beneath it both power adjacent redstone dust (including beneath the block), and all adjacent mechanism components (including those above or below it).\n\nThey also activate all adjacent redstone comparators or redstone repeaters facing away from it, at a power level equal to the number of players simultaneously accessing its contents (maximum 15).\n\nP.\n\nx x Tripwire Hook's range of activation It powers the opaque block it is attached to Main article: Tripwire Hook Tripwire hook as power component \u2013 The tripwire hooks and the blocks they are attached to provide power, but the tripwire does not.\n\nA tripwire hook is used to detect mobs, items, and other entities over a large area.\n\nPlacement A tripwire hook can be attached to the side of most opaque blocks.\n\nIf the attachment block is removed, the tripwire hook drops as an item.\n\nIn order to function correctly, a tripwire hook must be part of a tripwire circuit: two opaque blocks attached to tripwire hooks, at the ends of a tripwire line (one or more blocks of tripwire).\n\nTo place tripwire, right-click on an adjacent block with a string.\n\nTripwire can be placed on the ground or in the air, and forms a valid tripwire line only if all the tripwire is of the same type.\n\nTripwire is considered on the ground if placed on any opaque block, or on a block of redstone, a hopper, an upside-down slab, or an upside-down stairs.\n\nTripwire is considered in the air if placed on or above any other block.\n\nTripwire on the ground has a short hitbox (1/8 block tall), while tripwire in the air has a taller hitbox (1/2 block tall).\n\nIf the attachment block under ground tripwire is removed, the tripwire drops as string.\n\nA tripwire circuit is properly placed when the tripwire hooks are fully extended and the tripwire line runs continuously between the tripwire hooks.\n\nTripwire lines from separate tripwire circuits can be placed next to each other (in parallel), above each other, and can even intersect each other.\n\nActivation A tripwire hook turns ON when an entity (mob, item, etc.) crosses or falls on the hook's tripwire line (but not the tripwire hook), and turns OFF when all entities leave or are removed from the tripwire line.\n\nA tripwire hook also turns ON for 5 ticks (1/2 second) when any of its tripwires are destroyed, except when using shears to cut the tripwire.\n\nBreaking the tripwire hook, or its attachment block, does not generate a pulse.\n\nEffect While activated, a tripwire hook and its attachment block both power any adjacent redstone dust (including below the tripwire hook, or beneath or above the block), and all adjacent mechanism components (including those above or below it).\n\nThey also activate all adjacent redstone comparators or redstone repeaters facing away from it.\n\nTripwire itself provides no power.\n\nTransmission components propagate signals and pulses from power components to mechanism components.\n\nComplex effects can also be produced by allowing a signal to affect itself or its circuit.\n\nw.\n\nw.\n\nw.\n\nRedstone Dust's range of activation It weakly powers the opaque blocks beneath it and it points to Redstone dust as redstone component Redstone dust transmits power.\n\nMain article: Redstone Dust \u00a7 Redstone component Placement Redstone dust is placed by right-clicking with redstone dust.\n\nRedstone dust can be attached to the top of any opaque block, or to the top of glowstone, an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the redstone dust drops as an item.\n\nWhen placed, redstone dust configures itself to point toward adjacent redstone dust (at the same level or one level up or down), correctly-facing redstone repeaters and redstone comparators, and power components.\n\nIf there is only one such neighbor, redstone dust forms a line pointing toward and away from that one neighbor (which can cause it to point toward blocks it wouldn't normally point toward).\n\nIf there are multiple such neighbors, redstone dust forms either a line, an \"L\", a \"T\", or a \"+\".\n\nIf there are no such neighbors, redstone dust forms a large directionless dot.\n\nRedstone dust does not automatically configure itself to point toward adjacent mechanism components, it must be arranged to do so.\n\nWhen two redstone dust trails are placed vertically diagonally (one block over and one up, or one over and one down), the lower dust trail appears to crawl up the side of the higher block to join the other dust.\n\nThis linking can be cut by an opaque block above the lower trail, which prevents the two trails from connecting.\n\nIf the higher trail is on an upside-down slab or upside-down stairs, the higher trail configures itself to point toward the lower trail (and other adjacent dust), but the lower trail (although visually) does not configure itself to point toward the higher trail (including not appearing to crawl up the side of the slab or stairs).\n\nThe directions in which redstone dust configures itself can affect whether it powers adjacent opaque blocks and mechanisms.\n\nActivation Redstone dust can be turned ON by any adjacent power component, redstone repeater pointing at it, or strongly-powered opaque block.\n\nRedstone dust can also be turned ON by other adjacent powered redstone dust, but the power decreases with distance from a strongly-powered block.\n\nRedstone dust transmits power up to 15 blocks away.\n\nRedstone dust can transmit power diagonally upward to dust on an upside-down slab or upside-down stairs, but not diagonally downward from an upside-down slab or upside-down stairs.\n\nEffect Powered redstone dust turns ON any mechanism component it is configured to point at.\n\nIt powers, weakly, an opaque block that it lies on or points to.\n\nP.\n\nRedstone Repeater's range of activation It powers the opaque block it points to Main article: Redstone Repeater Redstone repeater as redstone component A redstone repeater is used to transmit power, strengthen redstone dust signals weakened by distance, delay a signal, and redirect a signal.\n\nPlacement A redstone repeater can be attached to the top of any opaque block, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the redstone repeater drops as an item.\n\nA redstone repeater is marked with an arrow pointing toward its front.\n\nThe repeater reacts only to signals from the block behind it and propagates signals only to the block in front of it (in the direction of the arrow).\n\nIt also has an adjustable delay that can be set from 1 to 4 ticks by right-clicking it.\n\nActivation A redstone repeater is turned ON by any powered component at its back and is unaffected by the powered state of any block beside, above, below, or in front of it (but see below about locking a repeater).\n\nEffect A powered redstone repeater turns ON redstone dust or a mechanism component in front of it, or strongly powers an opaque block in front of it.\n\nIt has no effect on the blocks under, above, beside, or behind it.\n\nA redstone repeater not only strengthens it for further transmission, it also delays it by 1 to 4 ticks.\n\nA redstone repeater also increases the duration of any pulse shorter than its delay to match the duration of its delay.\n\nA redstone repeater can be locked by powering it from the side with another redstone repeater or with a redstone comparator.\n\nA locked repeater does not change its output state until unlocked, even if its input changes.\n\nA locked repeater displays its locked status with a bedrock bar.\n\nP.\n\nRedstone Comparator's range of activation It powers the opaque block it points to Main article: Redstone Comparator A redstone comparator is used to compare or subtract two signals, or to measure how full a container is.\n\nPlacement A redstone comparator can be attached to the top of any opaque block, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the redstone comparator drops as an item.\n\nA redstone comparator is marked with an arrow that point toward its front.\n\nThe comparator takes a signal from its back as its input, and outputs a signal to the block in front of it, but can also be affected by signals from its sides (see below).\n\nA redstone comparator has two modes.\n\nRight-clicking it toggles between comparison mode (front torch down/off) and subtraction mode (front torch up/on).\n\nActivation A redstone comparator is turned ON by a power source at its input or a power source separated by one opaque block from its input.\n\nPower sources include any powered component, a non-empty container, a container minecart on a detector rail, a command block that has run its last command successfully, a cauldron containing water, an end portal frame with an eye of ender, or a jukebox with a record.\n\nEither at its back or separated from its back by an opaque block.\n\nIt is not affected by blocks beneath it or above it, but its signal strength can be modified by signals from its sides (see below).\n\nEffect A powered redstone comparator turns ON redstone dust, a properly-facing redstone comparator or redstone repeater, or a mechanism component in front of it; or strongly powers an opaque block in front of it \u2013 all at the same power level as its input signal (unless modified by a side signal, see below).\n\nIt has no effect on blocks in other adjacent positions (including the block beneath it).\n\nThe output of a redstone comparator can be affected by a signal provided from its side by a transmission component (redstone dust, redstone repeater, or another redstone comparator only): In comparison mode, a redstone comparator propagates its input signal only if the input signal is greater than the side signal, and outputs no signal if not.\n\nIn subtraction mode, a redstone comparator outputs a power level equal to the difference of the power level of the input signal minus the power level of the side signal.\n\nA redstone comparator that is activated by a container outputs a power level in proportion to how full the container is (rounded up, so a single item in a container produces a power level of at least 1).\n\nA container's fullness is measured by stacks: for example, a single shovel (a non-stackable item), 16 signs, or 64 sticks are all considered to be equivalent, full stacks.\n\nThe Comparator Output Table (right) shows the minimum stacks (\"s\") plus items (\"i\") required to produce a specific power level from a container.\n\nFor example, to get power level 5 from a hopper, put 1 stack plus 28 items in the hopper.\n\nDivide items by 4 and round up for items with a stack maximum of 16.\n\nThe values for the chest, dispenser, furnace and hopper apply to minecarts with those components as well (when on a detector rail).\n\nSome blocks (such as crafting tables, enchantment tables, etc.) can hold items temporarily while the player uses the block's interface \u2013 the items are returned to the player if the player exits the interface with items still inside.\n\nOther blocks (such as beacons) only consume items.\n\nPutting items in these blocks never activates a redstone comparator.\n\nMechanism components are blocks that react to redstone power by affecting the environment \u2013 by moving themselves or other entities, by producing light, sound, or explosions, etc.\n\nActivating a mechanism component (in this case, a redstone lamp) Activation Mechanism components are turned on by: an adjacent active power component (Exceptions: a redstone torch does not activate a mechanism component it is attached to, and a piston is activated only by a power component directly in front of it if the component is connected to it.) an adjacent powered opaque block (strongly-powered or weakly-powered) a powered redstone repeater or redstone comparator facing the mechanism component powered redstone dust configured to point toward the mechanism component (or on top of it, for opaque mechanism components); a mechanism component is not turned ON by adjacent powered redstone dust that is not configured to point toward it.\n\nActivating a piston by quasi-connectivity \u2013 Note that the piston on the left is not powered by quasi-connectivity because the redstone dust is running past the block above the piston, rather than directly into it, and thus would not power a mechanism there) Quasi-Connectivity This feature is exclusive to Java Edition.\n\nIn addition to the methods above, pistons, dispensers, and droppers can also be turned ON if a block above it receives a block update (including a redstone update within two blocks of the component) and is powered by any of the above means, even without a mechanism component (e.g.; even if the block above the component is air or a transparent block).\n\nThis rule is often simplified to say that the components can be powered by blocks diagonally above or two blocks above, however other methods of activation by connectivity exist (see image to the right).\n\nThis method of activation is also known as \"connectivity\", \"piston connectivity\" (as it originated with pistons), or simply \"indirect power\".\n\nActivated vs.\n\nPowered \u2013 The top lamp is both activated (the lamp is on) and powered (it can power the repeater), while the bottom lamp is activated, but not powered.\n\nActivated vs.\n\nPowered For opaque mechanism components (command blocks, droppers, dispensers, note blocks and redstone lamps), it's important to make a distinction between a mechanism component being activated (so that it performs an action) and being powered (so that a redstone signal could be drawn from it by a transmission component).\n\nAny method of powering a mechanism component (such as a redstone torch underneath it) also activates it, but some activation methods (such as a redstone torch next to or above a mechanism component) does not actually power the component (following the usual rules for power components).\n\nMain article: Activator Rail An activator rail is used to activate a minecart.\n\nPlacement An activator rail can be attached to the top of any opaque block, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the activator rail drops as an item.\n\nWhen placed, an activator rail configures itself to line up with adjacent rails, activator rails, powered rails, and detector rails, as well as such adjacent rails one block above.\n\nIf there are two such adjacent rails not on opposite sides, or three or more such adjacent rails, an activator rail lines up in the east-west direction.\n\nIf there are no such adjacent rails, an activator rail lines up in the north-south direction.\n\nAn activator rail slopes upward to match with a rail above it (when there is more than one such rail, the order of preference is: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nActivation In addition to the methods above, an activator rail can also be activated by an activator rail adjacent to it that is activated.\n\nActivator rail can transmit activation up to 9 rails (the first originally-activated activator rail, and up to eight additional activator rails).\n\nActivation transmitted in this way can power only activator rails.\n\nEffect An activator rail affects certain minecarts passing over it.\n\nThe effects vary with the type of minecart activated: A minecart with command block executes its command every 2 redstone ticks (5 times per second).\n\nA minecart with hopper is deactivated by an activated activator rail (it stops sucking up items in its path, or transferring items to containers as it passes them), and re-activated by an unactivated activator rail.\n\nA minecart with TNT is ignited by an active activator rail.\n\nRegular minecarts with an entity riding it (mob or player) eject that entity if the activator rail is active.\n\nOther minecarts are not affected by an activator rail.\n\nMain article: Bell Bells can be rung using a redstone signal.\n\nMain article: Dispenser A dispenser is used to automatically affect the environment by throwing items.\n\nActivation See Quasi-Connectivity above.\n\nEffect When activated, a dispenser ejects one item.\n\nIf multiple slots are occupied by items, a random item is ejected.\n\nThe effects of being activated vary with ejected item: Considerations A dispenser is an opaque block, so powering it directly can activate adjacent mechanism components (including other dispensers) as well.\n\nMain article: Door A door is used to control or prevent the movement of mobs, items, boats, and other entities.\n\nA door may be of two types: a wooden door can be opened and closed by redstone power or by a player right-clicking on it, while an iron door can be operated only by redstone power.\n\nPlacement A door can be attached to the top of most opaque blocks, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the door drops as an item.\n\nA door is placed on the edge of the block facing the player.\n\nBy default the door's hinge is positioned on the left side, but another door or block can force the hinge to the right side.\n\nEffect While activated, a door re-positions to the other side of its hinge, allowing movement through its former position and denying movement through its current position.\n\nWhen activated, any entities on the door fall off.\n\nA door doesn't actually move (the way a piston arm or a pushed block moves), it simply disappears from one side and re-appears on another; therefore, it does not push entities as it opens.\n\nMain article: Dragon Head The dragon head opens and closes its mouth repeatedly like the ender dragon when placed and powered by redstone.\n\nMain article: Dropper A dropper is used to eject items or push them into containers (including other droppers).\n\nPlacement A dropper can be placed so that its output faces in any direction.\n\nActivation See Quasi-Connectivity above.\n\nEffect When activated, a dropper ejects one item.\n\nIf multiple slots are occupied by items, a random occupied slot is chosen for ejection.\n\nIf the dropper is facing a container, the ejected item is transferred into the container.\n\nOtherwise, the item is ejected in the direction the dropper is facing, as if the player had used the Drop control.\n\nConsiderations A dropper is an opaque block, so powering it directly can cause adjacent mechanism components (including other droppers) to activate as well.\n\nMain article: Fence Gate A fence gate is used to control or prevent the movement of mobs, items, boats, and other entities.\n\nPlacement A fence gate can be placed on the top of most blocks.\n\nOnce placed, the block beneath it may be removed without popping the fence gate.\n\nEffect While activated, a fence gate re-positions its two gates to either side, allowing movement through it.\n\nWhen activated, any entities on the fence gate falls down.\n\nA fence gate doesn't actually move (the way a piston arm or a pushed block moves), it simply disappears from one state and re-appears in another, so it does not push entities as it opens.\n\nUnlike a door or trapdoor, while active, a fence gate is completely non-solid (lacks a collision mask) to all entities.\n\nMain article: Hopper A hopper is used to move items to and from containers (including other hoppers).\n\nPlacement A hopper can be placed so that its output faces in any direction except up.\n\nEffect While not activated, a hopper pulls items from a container above it (or item entities in the space above it) into its own slots and pushes items from its own slots into a container it is facing.\n\nBoth types of transfers occur every 4 redstone ticks (0.4 seconds), and pushes are processed before pulls.\n\nA hopper always pulls items into the leftmost available slot, and pushes items from leftmost slots before rightmost slots (it does not start pushing items from the second slot before the first is empty, from the third slot before the second is empty, etc.).\n\nWhile activated, a hopper does not pull items from above or push them out, but may receive items from other mechanism components such as droppers, and may have its items removed by another hopper beneath it.\n\nMain article: Note Block A note block is used to produce a player-chosen sound.\n\nPlacement After being placed, a note block's pitch can be adjusted over a two-octave range by right-clicking the note block, and its timbre can be adjusted by placing different blocks beneath it.\n\nEffect When activated, a note block produces a sound and send out block updates to all adjacent blocks.\n\nA note block must have air above it to activate.\n\nConsiderations A note block is an opaque block, so powering it directly can cause adjacent mechanism components (including other note blocks) to activate as well.\n\nMain article: Piston A piston is used to move blocks or entities.\n\nA piston may be of two types: a regular piston only pushes blocks, while a sticky piston pushes and pulls blocks.\n\nPlacement A piston has a stone base and a wooden head, and can be placed so the head faces in any direction (its front).\n\nActivation See Quasi-Connectivity above.\n\nEffect When activated, a piston pushes the block in front of its arm, and up to 11 more blocks in front of that (up to 12 blocks total).\n\nWhen deactivated, a regular piston pulls its arm back (leaving an air block in front of the piston), while a sticky piston pulls back both its arm and one block (leaving an air block on the other side of the pulled block).\n\nA moving piston or block can also push an entity such as a mob or item.\n\nSome blocks (bedrock, obsidian, end portal frame, etc.) cannot be moved by a piston.\n\nSome blocks (flowers, leaves, torches, etc.) is destroyed, but may drop items (as if destroyed by the player).\n\nFor full details of how pistons interact with other blocks, see Pushing Blocks.\n\nSlime blocks stick to blocks and make them move when adjacent blocks are moved.\n\nThe 12 block limit still holds.\n\nConsiderations When a sticky piston is activated by a pulse shorter than 1.5 ticks, it pushes the block in front of it, but fails to pull back the pushed block on the end of the pulse.\n\nIf that sticky piston is activated again by any pulse, it can still pull back the block.\n\nThus, a sticky piston running on fast pulses (for example, 1-tick pulses) pushes and pulls a block every other pulse.\n\nA piston is a transparent block, so powering it directly does not cause adjacent mechanism components (including other pistons) to activate (for exceptions see Quasi-Connectivity above).\n\nMain article: Powered Rail A powered rail is used to propel a minecart.\n\nPlacement A powered rail can be attached to the top of any opaque block, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the powered rail drops as an item.\n\nWhen placed, a powered rail configures itself to line up with adjacent rails, powered rails, and detector rails, as well as such adjacent rails one block up.\n\nIf there are two such adjacent rails on non-opposite sides, or three or more such adjacent rails, a powered rail lines up in the east-west direction.\n\nIf there are no such adjacent rails, a powered rail lines up in the north-south direction.\n\nIf a rail it would line up with is one block up, a powered rail slants upward toward it (with multiple options to slant upward to, a powered rail prefers, in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rail.\n\nActivation In addition to the methods above, a powered rail can also be activated by other adjacent activated powered rails.\n\nA powered rail can transmit activation up to 9 rails (the first originally-powered powered rail, and up to eight additional activated rails).\n\nActivation transmitted in this way cannot power any redstone components except powered rails, but the power change states can be detected by observers.\n\nEffect While activated, a powered rail boosts the speed of a minecart passing over it, or starts a minecart moving away from an adjacent solid block it is in contact with.\n\nWhile not activated, it acts as a brake, reducing the speed or even stopping a minecart passing over it.\n\nMain article: Rail Rails and powered rails as mechanism components A rail is used to switch the track of a minecart.\n\nPlacement A rail can be attached to the top of any opaque block, or to the top of an upside-down slab or upside-down stairs.\n\nIf the attachment block is removed, the rail drops as an item.\n\nWhen placed, rail configures itself to line up with adjacent rails, powered rails, and detector rails, as well as such adjacent rails one block up.\n\nIf there are two such adjacent rails on non-opposite sides, the rail curves from one to the other.\n\nIf there are three or four such adjacent rails, the rail curves between two of them (when choosing which directions to curve between, a rail prefers south over north, and east over west).\n\nIf there are no such adjacent rails, the rail lines up in the north-south direction.\n\nIf a rail it would line up with is one block up, a rail slants upward toward it without curving (with multiple options to slant upward to, a rail prefers, in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nEffect When activated, a rail in a \"T\" junction flips to curve the other way (activating a rail in another configuration has no effect).\n\nMain article: Redstone Lamp A redstone lamp is used to provide light.\n\nActivation A redstone lamp activates normally, but takes 2 ticks to deactivate.\n\nEffect While activated, a redstone lamp has block light level 15 (so produces block light level 14 in all adjacent transparent spaces).\n\nAn activated redstone lamp is transparent to sky light.\n\nConsiderations A redstone lamp is an opaque block, so powering it directly can cause adjacent mechanism components (including other redstone lamps) to activate as well.\n\nMain article: TNT TNT is used to create an explosion.\n\nActivation In addition to the methods above, TNT can also be activated by fire and explosions, as well as flaming arrows.\n\nEffect When activated, TNT ignites and becomes primed TNT, an entity that can fall like sand or be pushed by pistons (but isn't moved by water).\n\nPrimed TNT explodes 40 ticks (4 seconds) after being ignited by redstone power (10-30 ticks for TNT ignited by an explosion).\n\nConsiderations A TNT is a transparent block, so powering it directly does not cause adjacent mechanism components (including TNTs) to activate.\n\nA trapdoor is used to control or prevent the movement of mobs, items, boats, and other entities.\n\nA trapdoor may be of two types: a wooden door can be opened and closed by redstone power or by a player right-clicking on it, while an iron door can be operated only by redstone power.\n\nPlacement A trapdoor can be attached to the top, bottom, or the side of blocks.\n\nIf the attachment block is removed, the trapdoor does not drop.\n\nEffect While activated, a trapdoor re-positions itself in a vertical state, allowing vertical movement through it.\n\nWhen activated, any entities on the trapdoor fall down.\n\nSimilar to a door, a trapdoor doesn't actually move (the way a piston arm or a pushed block moves), it simply disappears from one state and re-appears in another, so it does not push entities as it opens.\n\nMain article: Command Block A command block is used to execute a server command.\n\nCommand blocks can be obtained only by placing it or giving it to the player with commands.\n\nTypes A command block have 3 types: impulse (execute a command once), chain (execute a command when triggered) and repeat (execute a command for 1 or more redstone ticks when powered) Placement After being placed, the player can set the command to be executed by right-clicking on the command block.\n\nEffect When activated, a command block executes its defined command once.\n\nTo make a command block constantly execute its command, it must be run on a clock circuit or using a repeating command block.\n\nLike other mechanism components, an already-activated command block does not respond to other redstone signals.\n\nTo make a command block execute its defined command more than once it must be deactivated and re-activated repetitively.\n\nConsiderations A command block is an opaque block, so powering it directly can activate adjacent mechanism components (including other command blocks) as well.\n\nMain article: Structure Block A Structure Block is used to save and load structures.\n\nStructure blocks can be obtained only by placing it or giving it to the player with commands.\n\nPlacement After being placed, the player can set the mode or the structure to save/load by right-clicking the structure block.\n\nEffect Redstone signals can be used to automate some of the structure block's functions.\n\nLike other mechanism components, an already-activated structure block does not respond to other redstone signals.\n\nTo make a command block execute its defined command more than once it must be deactivated and re-activated repetitively.\n\nMain article: Minecart A minecart is used to transport a mob or player over rails.\n\nBehavior The player can move a minecart by pushing against it while outside the minecart (whether the minecart is on rails or not), or by pressing the Forward control key (by default, W) while inside the minecart (only while the minecart is on rails).\n\nA minecart resting on powered rails configured to point at an adjacent opaque block is propelled away from the opaque block when the powered rails are activated.\n\nA minecart traveling over activated powered rails gets a speed boost.\n\nWhen a minecart passes over an activated activator rails, the entity inside it is ejected out.\n\nMain article: Minecart with Chest A minecart with chest (a.k.a.\n\nchest minecart, storage minecart) is used to store and transport items over rails.\n\nBehavior A minecart with chest accepts items from a hopper and allows a hopper underneath it to pull items from it.\n\nMain article: Minecart with Command Block A minecart with command block (a.k.a.\n\ncommand minecart, command block minecart) is used to execute commands.\n\nBehavior A minecart with command block executes its command every 2 redstone ticks while on an activator rail.\n\nMain article: Minecart with Furnace A minecart with furnace [Java Edition only ] (a.k.a.\n\nfurnace minecart, powered minecart) is used to push other minecarts over rails.\n\nBehavior A minecart with furnace propels itself and other minecarts without requiring powered rails.\n\nActivation A minecart with furnace can be activated by pressing the use key while facing the minecart with furnace and holding fuel (coal, lava, wood, etc.).\n\nIt continues to move until the fuel runs out.\n\nMain article: Minecart with Hopper A minecart with hopper (a.k.a.\n\nhopper minecart) is used to collect, transport, and distribute items over rails.\n\nBehavior A minecart with hopper pulls items from containers above it and push items into hoppers below it (the number of items transferred can depend on how long its velocity allows it to remain within reach of the containers).\n\nIt also picks up items that have fallen on the rails.\n\nIf a minecart with hopper passes over a powered activator rail, it stops transferring items indefinitely until it passes over an unpowered activator rail.\n\nMain article: Minecart with TNT A minecart with TNT (a.k.a.\n\nTNT minecart) is used to create explosions.\n\nBehavior A minecart with TNT that passes over a powered activator rail explodes.\n\nAn opaque block can be powered differently (in this case, a Redstone Lamp).\n\nFrom top to bottom: Strongly powered: powers both Repeater and Dust.\n\nWeakly powered: powers Repeater, but not Dust.\n\nNot powered: powers neither.\n\nOpaque blocks obstruct light and vision (with some exceptions: for example, glowstone is not considered an opaque block).\n\nOpaque blocks are used to support redstone components and to transmit power.\n\nStrongly powered vs.\n\nweakly powered An opaque block is strongly powered by an active power component (except a block of redstone or a daylight detector), an active redstone repeater, or an active redstone comparator.\n\nAn opaque block is weakly powered only by powered redstone dust on top of it, or pointing to it.\n\nEffect A powered opaque block turns OFF any attached redstone torch, turns ON any adjacent redstone repeater or redstone comparator facing away from it, and activates any adjacent mechanism component.\n\nA strongly-powered opaque block turns ON any adjacent redstone dust, including redstone dust beneath or on top of the opaque block; but a weakly-powered opaque block does not.\n\nProperties of some transparent blocks.\n\nTransparent blocks either can be seen through fully (for example, glass) or partially (for example, stairs), or allow light to pass through (for example, leaves).\n\nTransparent blocks cannot be powered, but can be used as insulators in compact circuits.\n\nSome transparent blocks have special properties that make them useful in redstone circuits: Fences Main article: Fence A redstone torch or a pressure plate can be attached to the top of a fence or nether brick fence.\n\nGlass Main article: Glass Glass behaves as an opaque block as it does not effect how redstone components can be placed on it.\n\nGlowstone Main article: Glowstone Glowstone behaves as an opaque block as it does not effect how redstone components can be placed on it.\n\nRedstone dust on top of glowstone cannot transmit power diagonally downward to other redstone dust.\n\nBecause glowstone is not opaque, it cannot power an adjacent block (including an attached trapdoor), but redstone dust on top of it can.\n\nSlabs and Stairs Main articles: Slab and Stairs Any redstone component that can be attached or placed on an opaque block can also be attached or placed on an upside-down slab or upside-down stairs.\n\nRedstone dust on top of an upside-down slab or upside-down stairs cannot transmit power diagonally downward to other redstone dust.\n\nBecause slabs and stairs are not opaque, they cannot be powered by power components and cannot provide power to adjacent blocks.\n\nWalls Main article: Wall A redstone torch can be attached to the top of a wall.\n\nWalls change states when a block is moved to or away from a wall, and this output can be detected using observers.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Help:Schematic",
    "url": "https://minecraft.fandom.com/wiki/Help:Schematic",
    "content": "This page gives a basic overview of the new style of redstone schematics.\n\nIt does not give details on writing schematic templates, for that see the template documentation.\n\nThese schematics represent a top or side view of the circuits in question.\n\nComplex circuits may be presented in several diagrams, each showing the blocks and components for one or two layers of the circuit.\n\nMost blocks in a redstone circuit are \"generic\", in that any of several solid blocks will do.\n\nTherefore, they are shown as blocks chosen for visibility, rather than what you'd normally choose to build a circuit.\n\nGold and diamond blocks represent generic opaque blocks.\n\nGold is used for stationary blocks which are required by the circuit.\n\nDiamond is used for \"mobile\" blocks, which will be moved by pistons as part of the circuit's workings.\n\nThere are three transparent blocks which can hold redstone wire: top slabs, upside-down stairs, and glowstone.\n\nUnless there's good reason otherwise, these will be represented by top slabs.\n\nAny block for which the particular block type actually matters, will be shown as itself: e.g.\n\nsand (falling behavior), obsidian (in a TNT cannon), glass, blocks of redstone, etc..\n\nBlocks which need to be there for structural purposes, but could be any building block, will be shown as stone brick.\n\nFor these blocks, you could use dirt, glass, obsidian, wool, or even stone brick.\n\nBlocks of wool are used to show input and output locations: lime green for input, pink for output.\n\nThese may be labelled if there is more than one input or output.\n\nNote that this has the signals going from green through yellow (gold) to \"red\" (pink).\n\nLight blue indicates a \"duplex\" connection, which can serve as both input and output.\n\nIn complex schematics, other colors of wool may be used to indicate connections among multiple circuits, or different parts of the circuit.\n\nRedstone \"wire\" (dust) is shown as stylized lines, dark red if unpowered, brighter if powered.\n\nNote that wires may be extended to make the diagram look better, or put the I/O block somewhere convenient.\n\nMost components and devices are shown as themselves, but with some tweaks to their sprites (to make them more identifiable, and the circuits more comprehensible).\n\nThe direction that devices are pointing is shown in the icon, occasionally by arrows; so are repeater and comparator settings: The position of the repeater's slider (or bar, for a latched repeater), or the lit third torch for a comparator in subtraction mode.\n\nTranslucent sprites of blocks (solid, mobile, stone slab, or redstone) indicate that block is just above the current \"main\" level, over the components that show beneath it.\n\nA \"lightened\" block is used in multi-level diagrams to show the location of an input, output, or component, which is not on the current level and would not normally be shown.\n\nA \"darkened\" block may be used to indicate that the space has one solid block atop another, or that a component is in a hole beneath the current level.\n\nDarkening can also mark other special cases, which should be described in the accompanying text.\n\nXOR gate with repeaters and piston (H) A nice selection of components.\n\nQ\u0305 S R Q Simple Redstone Block RS latch.\n\nNote the labeled inputs and outputs.\n\n4-input NOR gate, levels 1-2 (B-1) Notice the redstone on blocks, and redstone with blocks over it.\n\n4-input NOR gate, levels 2-3 (B-2) Now the \"over\" blocks (level 2 of the circuit) are \"under\", and the blocks from level 1 of the circuit are invisible.\n\nHowever, the positions of the input and output blocks are still shown, but lighter.\n\nVertical Compact Clock (D) A vertical circuit.\n\nThis vertical clock has no input or output blocks shown, because input (switching it off) or output (the clock signal), can be taken almost anywhere.\n\nFull discussion is at its home in the Clocks page.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Traps",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Traps",
    "content": "This list doesn't cover mob grinders, the killing mechanism in mob farms.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\n\u201c Oh, sorry buddy!\n\nYou just fell into one of my traps.\n\nBecause friendship is nice, I suppose, but tricking people is clearly so much better.\n\nI love spending my weekends throwing pals down pits and blowing up TNT in their once-trusting faces.\n\n\u201e \u2014 Chris Priestman [1] Traps are a common mechanism in multiplayer built by players to kill other players or mobs automatically.\n\nThe following is a list of basic traps with a short tutorial that often assumes the reader has a working understanding of the basic concepts required to build the trap.\n\nMost traps are considered to be mechanisms, though some are not classified as such.\n\nNote: this video is outdated.\n\nTraps are devices designed to trap or damage entities, often referred to as targets.\n\nTraps are often made up of 3 components: A lure, a trigger, and the damage source.\n\nIn a simple landmine, the lure could be a base behind the landmine, the trigger a pressure plate, the damage source TNT.\n\nNot all traps have a lure, they may rely on chance or something else to lure the target.\n\nFeel free to add any ideas of traps you have here.\n\nJust follow the style guide and everyone will have new strategies to remove their enemies.\n\nA list of components for a good trap can be seen below: These components are a trigger that allows the rest of the trap to work.\n\nPressure plates are commonly used to detect whether an entity or item presses on it.\n\nThere are 4 variants (viz.wooden pressure plate, stone pressure plate, light-weighted pressure plate, and heavily weighted pressure plate.) Wooden pressure plates measure all entities and give out maximum signal strength.\n\nThe most commonly used pressure plate.\n\nUseful if you want to detect anything including items being thrown.\n\nWorks best when paired with an observer.\n\nStone pressure plates measure only players and mobs and give out maximum signal strength.\n\nThe second most commonly used pressure plate.\n\nUseful if you want to detect only a player or mob.\n\nWorks best when paired with an observer.\n\nLight-weighted pressure plates measure all entities, and the strength increases as more entities are added.\n\nUseful if you want to detect a specific number of entities.\n\nWorks best when paired with an observer.\n\nHeavy-weighted pressure plates are similar to a light weighted pressure plate but they measure groups of 10 entities per redstone comparator output.\n\nObservers are most commonly used to detect whether a block state changes (ie: an ore trap).\n\nThey are useful if you want to kill someone destroying a block in your base, a TNT lighting, redstone getting activated, containers being opened, furnaces turning on or off, etc.\n\nString, when connected to a pair of tripwire hooks or an observer, can detect when a player/mob steps through it or breaks it.\n\nIt is also difficult to see.\n\nWhen a player/mob/item comes in contact with a string connected to 2 tripwire hooks, it will output a redstone signal.\n\nPros: Can detect all entities Wide range of detection Cons: Hooks can be seen easily when placed on a wall String connected to it can be broken with shears without outputting a signal When a button is pressed, it outputs a redstone signal.\n\nUseful for redstone control rooms.\n\nIt detects the 'time' of Minecraft day.\n\nIt can be right clicked to detect sun or moon.\n\nShadow affects this, however, so if you set it to detect sun, and it is in direct sunlight, a redstone signal will be produced, at a power level relating to the height of sun or moon.\n\nIf it was in shadow, it would not produce any signal, and vice-versa for moon mode.\n\nUseful for hourly traps and such, though redstone clocks are more precise but also expensive.\n\nIt has no effect on adjacent opaque blocks.\n\nThe lectern can hold books.\n\nIt emits a redstone signal power depending upon the page of the displayed book.\n\nUseful when you want to tempt someone with important information, and blow them up as soon as they start reading a particular page.\n\nThese components actually affect the target.\n\nOf course, that's obviously coming to your mind first.\n\nTNT traps are ubiquitous and common.\n\nMost like the landmine (involving a pressure plate and some TNT) are easy to make; others like the TNT floor house are harder and more expensive.\n\nTNT traps have many triggers; from pressure plates to observers to pistons to dispensers...and more!\n\nPistons are often used, for example, to push a player into lava, push someone into a pressure plate, push someone into a block and suffocate them, and more.\n\nThey are often used in some capture traps to continuously keep a player out of an area.\n\nDispensers can be used to shoot out deadly objects like Potions, Arrows, Tipped Arrows, Fire Charges, Lava, etc.\n\nDon't ever put diamonds in a dispenser unless you are trying to lure someone, or else they will just become rich off your trap Nether Portals can be used to make traps upon entering The Nether.\n\nThey pause chunk generation, witch means you light TNT in the Overworld over a Nether Portal, then light the portal.\n\nas long as there is no chunk generator (Machine That Uses A Minecart In A Nether Portal To Load Chunks) or players in the nether, you, upon entering the nether, will be blown up.\n\nMobs, like Zombies, Skeletons, Witch es, Ravagers, Creeper s, Iron Golem s, Zoglins, Vindicators, Piglin Brutes and Pufferfish can deal damage to players.\n\nTo prevent mobs inside of traps from despawning, one should use Name tags.\n\nIf you can't spawn the mob, you can use Boats in Minecarts to take 2 mobs at a time to your trap.\n\nEach mob has their own pros and cons: Zombies - Most common mob to obtain and quite flexible, but can be killed easily.\n\nBurns in sunlight.\n\nSkeletons - Ideal for long-range traps without hiding spots, like long hallways and corridors.\n\nSlow rate of fire and no melee damage makes them ineffective for smaller traps.\n\nBurns in sunlight.\n\nWitches - Splash potions are effective against weaker victims, and they have a large area of effect.\n\nSelf-healing ensures longevity.\n\nThe unpredictability and inconsistency with the types of potions thrown makes them ineffective at killing victims.\n\nRavagers - Powerful and deals significant knockback.\n\nThe large hitbox of the Ravager can make them difficult to contain.\n\nCreepers - Deals explosive damage.\n\nIn Survival, the difficulty of transporting them and the one-time use of Creepers makes them an awful choice compared to simple and effective TNT.\n\nCharged Creepers - Way better than normal Creepers.\n\nYou can use Boats in Minecarts to take 2 Creepers at a time to your trap.\n\nIron Golems - Powerful.\n\nCan be repaired/healed with iron ingots.\n\nOnly attacks if it is attacked first.\n\nHoglins/Zoglins - Powerful.\n\nAttack almost anything and everything they see.\n\nThey can be difficult to transport out of the Nether due to their fear of Nether Portals.\n\nVindicators - High damage output.\n\nAttack all mobs except ghasts and illagers if renamed to \"Johnny\".\n\nHas a short attack range.\n\nPiglin Brutes - Deal the same amount of damage as vindicators.\n\nConvert into a normal zombified piglins upon leaving the Nether.\n\nPufferfish - Moderate damage, inflicts poison.\n\nThey can be picked up in buckets and placed by dispensers.\n\nThe traps here primarily use TNT to cause harm to the target.\n\nWhen testing explosive traps it may be a good idea to use a different block such as the redstone lamp, which like TNT, is triggered by redstone but it is less likely to accidentally blow up prematurely.\n\nLecterns can hold books, therefore, you could give a hint to someone about some important info, and set it up so as soon as they reach the sixth page maybe, the doors close, and TNT blows up the place.\n\nDon't set it to explode at the first page, they would go through the first few pages cautiously, and then feel safe, only to find out while they are reading the most important page, TNT removes them from the Minecraft world.\n\nThis is a trap that can be used to catch someone while they are out adventuring.\n\nYou place TNT at various points around their house, prioritizing spots which are behind an input like a button or likely to be set alight by an unsuspecting player, like behind an empty fireplace.\n\nTo finish it all off, place a few pressure plates near their bed with TNT underneath.\n\nIf the player dies and respawns, they would spawn on top of the pads and cause an easy kill.\n\nKeep in mind that some servers would consider this sort of behavior cheating or griefing.\n\nIf you have enough TNT, a dispenser, and an input, it can't hurt to pump some TNT into the End Portal.\n\nThe TNT will go to the spawn point of the world and will be loaded, as the spawn chunks are always loaded, and will explode soon after.\n\nIf nobody is in the end, the first player enter the portal will make the chunks load, which will instantly kill that player.\n\nA better version of this is getting to build hight above the End Portal to drop a Dripstone into the portal.\n\nIt will instantly kill anyone who will try entering the End, even if they have full Netherite armor.\n\nThis landmine by itself is inefficient and non-lethal.\n\nIt damages the landscape and deals little if any damage to players.\n\nIt is easy to make by placing a pressure plate on a block and one or more TNT directly beneath.\n\nStepping on the pressure plate will ignite the TNT To make it more efficient, there are many variations players can use: If you want to protect the landscape, you can place 2 water sources at the bottom of the hole.\n\nPlace a slab at the bottom as sand/ gravel may quench the water source.\n\nThis method will reduce the dealt damage, however.\n\nThis is well disguised next to a door; the player may think it is to open the door.\n\nBy digging a pit underneath it, the player might fall into it.\n\nTry to camouflage the landmine by making it less noticeable, e.g.\n\ngrow tall grass around it.\n\nConcrete powder cannot be used in this design, the concrete powder will harden into concrete upon contacting water and quench the water source.\n\nSide view TNT, when activated normally, plays an audible hissing sound and waits for a few seconds before blowing up, which can give anyone plenty of time to escape a landmine placed on the ground.\n\nA much more dangerous landmine with instant activation can be built instead: Dig a 3x3x3 hole in the ground, jump in, and stand on a corner.\n\nOn the center, place a block of dirt and a rail on top of it.\n\nOn the rail, place a minecart with TNT.\n\nBe careful not to push it.\n\nDestroy the block under the rail to derail the minecart.\n\nThe minecart will fall one block lower, this won't really cause any damage unless you accidentally pushed the minecart.\n\nPut a dispenser with flint and steel above the minecart like shown.\n\nSurround the minecart with TNT, cover it all up, and place a pressure plate on top.\n\nSide view Replace the wool with an end crystal, and put an arrow in the dispenser.\n\nwhen the dispenser is activated, it will shoot an arrow and blow up the crystal, leaving no time to escape.\n\nThe Youtuber Squibbles made a great video about a way better version of this trap (albeit it's harder to build) Top view for the Sculk Proximity Instant Landmine.\n\nDesign by DialgaTheTimeLord, aka LeopardBunny.\n\nhttps://minecraft.fandom.com/wiki/File:Minecraft_21w06a_Sculk_Proximity_Mine_small.mp4 Sculk Proximity Instant Landmine construction process.\n\nThis one's a bit tricky to build.\n\nIt requires both precise placement of TNT minecarts and extreme care not to set the trap off yourself.\n\nDo everything in order and make liberal use of the Sneak key and you'll be fine.\n\nProbably.\n\nTest it several times in Creative Mode just to be sure.\n\nThe top row has an empty space labeled with ESC.\n\nThis is your escape route.\n\nFirst dig a hole 2\u00d72 wide and 3 deep.\n\nSeal off the top with matching blocks.\n\nSurround the hole with a 2 block high wall of wool, leaving a Steve-sized gap for your escape route.\n\nDo not fill it back in yet.\n\nIn the spot where you left the gap, dig out an escape route leading directly away from the mine.\n\nReturn to your wool pit.\n\nPlace two powered rails (keeping them unpowered) along the wall opposite of your escape route (you do NOT want the TNT carts in the way of your escape).\n\nHere's where things start to get tricky.\n\nYou need to place at least two TNT carts on the same powered rail.\n\nThe trap will not work otherwise.\n\nPlacing the first will of course be easy.\n\nFor subsequent carts, you will need to right click carefully on the side hitbox of the track that the first cart is on.\n\nThe top will not work, as the first cart is in the way.\n\nYou'll know it worked if the minecart's shadow gets noticeably darker, or know, if your hand empties.\n\nOnce you find the right spot, feel free to place as many TNT carts as you care to sacrifice.\n\nMore carts means a bigger, more powerful explosion, and significantly less chance of escaping the blast (though it's not much of a chance to begin with).\n\nJust make sure not to bump the carts.\n\nNow is where things go from tricky to deadly.\n\nOne wrong move will make you the victim of your own trap.\n\nThis is when you hold Shift like your life depends on it, because it absolutely does.\n\nWhile holding Shift and not letting go, place the sculk sensor, either adjacent to or in front of your escape hole.\n\nNow, still holding Shift, sneak your way into your escape hole.\n\nThis is where you finally close the gap in the Steve-sized wool wall hole, making sure there is no hole for the Sculk Sensor to hear you through.\n\nYou should be safe by this point, but if you want to be extra careful, continue sneaking as you move away from your newly planted mine.\n\nNot that you can waterlog the Sculk Sensor to make it silent (so the target can't hear it).\n\nThat should be it!\n\nJust whatever you do, do NOT step over your landmine.\n\nYou will almost certainly die.\n\nSave the dying for the enemy.\n\nThe tree trap When the player chops down the tree, the TNT will be lit by the observer.\n\nThe observer can be replaced by a lever and a NOT Gate if you are short on quartz.\n\nhttps://minecraft.fandom.com/wiki/File:How_to_Build_an_Exploding_Tree_Trap_-_Minecraft_Tutorial.mp4 How to Build an Exploding Tree Trap by Bugo03.\n\nUses a NOT Gate for all of you who are low on quartz.\n\nReplace the slab with cake.\n\nReplace the dirt with any block.\n\nYou eat the cake, you explode!\n\nIn this trap when you eat the cake, the observer senses the update in the cake and ignites the TNT.\n\n1) Dig down 2 blocks.\n\n2) Place TNT at the bottom.\n\n3) On top of the TNT place an observer pointing up.\n\n4) On top of the observer place cake.\n\nReplace sand with sandstone.\n\nCreate BUD underneath the pressure plate in a desert temple.\n\nIf a player should try to disarm it, KABOOM!\n\nNote that if you use the observer, players might be able to detect it, since the pressure plate won't cover it completely.\n\nTNT field trap This trap is the opposite of a TNT door trap: The TNT is obvious, while the house is hidden.\n\nMake a field of TNT extending about 5 blocks into the ground.\n\nPlace signs all over the field saying: \"Find my hidden house.\" It lures people in twice: the TNT danger, and the hidden house challenge.\n\nThe problem is that there is no house!\n\nBeneath the field are pressure plates which ignite the TNT, leaving no time to escape, as you are in a field of TNT 5 blocks under.\n\nBlow up a fake base and kill assassins attacking you!\n\n(this can also be used for demolition) Build a base, preferably a half-hidden one, as not to create suspicion.\n\nMake the floor with TNT and put some carpet on it to look like a normal decorated house.\n\nHave an iron door as the entrance, with a pressure plate to open it.\n\nRedirect the pressure plate towards the base.\n\nBelow, place a block of TNT, but an extra step you can take is to have a circuit which delays the fuse using repeaters so the target won't retreat as soon as they hear the hisss of the TNT.\n\nIf any enemy, mob or player steps on the pressure plate (potential griefers included), they will be blown sky-high!\n\nGriefers love blowing and burning people's houses up.\n\nThis trap turns the grief onto the griefer.\n\nMake a decoy house out of wood and possibly wool.\n\nFill the area under it with TNT and make some \"rays\" of TNT extend from the house.\n\nIf a griefer happens to burn the house down, they will probably get a bit more of a bang than they expected!\n\nIf you use this for demolition (that is, if you have any fragile buildings to be destroyed), you can set it and wait for somebody else to do the work for you by setting it off unknowingly.\n\nThe \"C4 trap\" is a vertical or horizontal stack of TNT with a button wired to a dispenser with a fire charge in it.\n\nThe dispenser is placed one block above or below the stack (vertical) or one block next to the stack (horizontal).\n\nThis usually works better for demolition than for a trap.\n\nIf you want to use it as a trap, wire a pressure plate to the dispenser.\n\nThis works similarly to a flaming arrow hitting a stack of TNT from above.\n\nThis works better than a dispenser shooting TNT, because the \"C4\" stays in one place.\n\nAlso, if only two TNT blocks are used, it works well as a disposable cannon, even better on obsidian blocks, but not in a tube.\n\nAll evidence of the trap is usually destroyed.\n\nNote: C4 trap from below does not work well.\n\nWant a big unexpected boom?\n\nHave a bunch of spare furnaces?\n\nYou need a Redstone comparator, TNT, a furnace and something to smelt.\n\nPlace the furnace, and then put the comparator directly behind it.\n\nThen, just put the TNT behind the comparator and wait till someone smelts something!\n\nAn alternative is to put coal, iron, or food in a furnace and add a redstone comparator behind linked to a not gate.\n\nUse the not gate to trigger some tnt.\n\nAlso hide observers under the furnace so people can't break it.\n\nLike to kill your fellow players with protection IV armor?\n\nYou need many harming II arrows, a bow, soul sand, and water.\n\nUse the water and soul sand to make a bubble column, then shoot arrows into the pit until you run out.\n\nIt will instantly kill anyone that falls in!\n\nJust don't fall in yourself.\n\nThese traps primarily use fall damage to harm the target.\n\nSome minor variation can make a simple pit much more deadly.\n\nSand trap When the target walks on top of the trap, break the bottom block of sand.\n\nIt is a good idea to disguise the trap by making a house on top of the sand.\n\nIf you do this, you will probably want to put in carpet so as to not make it so obvious.\n\nSome variations: You may be able to get the target to break the sand themselves by making the bottom block valuable.\n\nYou can automate the trap by attaching a piston to the bottom block of sand.\n\nIf you want to retract the piston when a pressure plate is pressed, use a NOT Gate.\n\nYou could also use an observer and a piece of bait to lure in any players wanting a piece of that [whatever valuable block you placed].\n\nConstruct a hallway.\n\nA diagonal hallway works best.\n\nFence posts should be underneath the path and you should drop the sand or gravel for the floor on the fences.\n\nBelow the fences, you can have a pit.\n\nThis works because when a gravity-affected block falls on a fence post, the block stays as an entity.\n\nAs a result, a player walking between the fence posts will fall through the sand entities, causing them to plummet.\n\nDiagonal hallways make it more likely to fall through the sand without landing safely on a fence post.\n\nKeep in mind that the sand is going to look half a block higher than a normal block, but this can easily be covered up.\n\nThe best part: it does not need to be reset!\n\nDig a 2x2 hole until you reach a drop which would ruin any player's day.\n\nPlace 4 hoppers, one per block on the 2x2 hole, pointing into chests.\n\nBuild some kind of hall to access the chests below.\n\nThis can work in conjunction with other traps.\n\nThe player drops down into the pit, and at the bottom, they die and their items are sucked into the hoppers for you to use.\n\nA painting trap.\n\nPlace painting(s) instead of vines.\n\nThis trap is easy to make.\n\nIt hides a secret passage behind a painting.\n\nThe target may unwittingly decide to check for a secret passage behind the painting.\n\nBig mistake.\n\nDig a 16\u00d716 hole, preferably in line with real chunks, at least 20 blocks deep.\n\nSome inexperienced players may think it is a chunk error and walk-in.\n\nFake water, fake secret passage.\n\nDig a hole (2\u00d72 works best) at least 30 blocks deep, the deeper the better.\n\nAt the bottom place a block of lapis lazuli, a block of blue wool or a block of blue stained glass.\n\nAdd a false corridor at the bottom to make it look like it goes somewhere.\n\nWhen an unsuspecting player comes across the hole, they may think that there is water at the bottom, jump down and die.\n\nExperienced players are less likely to fall for this particular trap but it generally works quite well.\n\nYou can also place real water instead of blocks if you're wearing frost walker boots, just go down there, hide in the fake secret passage and sneak to hide nametag.\n\nUse F5 to see if a player is coming.\n\nIf someone falls down, quickly move to freeze the water.\n\nSnowball trap.\n\nLoad a dispenser with snowballs (or other knockback item), and connect it to a pressure plate.\n\nWhen the target walks across the plate, the dispenser, if aimed correctly, shoots a snowball and knocks the target into the pit.\n\nYou can also replace the dispenser with a piston.\n\nAutomatic piston pitfall Place the piston so it pushes the block the signs are on.\n\nThe player can make up to twelve rows using one piston.\n\nMake sure there is a block of empty space at the end of where the piston pushes.\n\nConnect the piston to a trigger, such a pressure plate or lever, and when the piston moves it should break the signs and cause the sand to fall along with the target.\n\nIt is also possible to do this by pushing a line of blocks with torches or buttons on them, which may be slightly cheaper.\n\nAlternatively, use a sticky piston connected to a NOT gate which retracts a block with a sign on it, which allows the player to use more than 12 rows.\n\nFake water elevator Real water elevator Make what is shown in the schematic, a water elevator with water only on the top block.\n\nMake sure the hole is 30-40 blocks deep, which is enough to kill the player.\n\nIt could help to place a lure sign near the 'elevator' saying something like \"Do not enter!\" You can also make the signs' text something like a floor countdown like \"35\", \"34\", \"33\", etc.\n\nso players are more likely to fall for the trap.\n\nIf they want, you can place hoppers with chests so you can gather the loot from the victims, but if they really want the drops, they will need a secret passage to the bottom of the pit for collection.\n\nA false-floor trap is a variation of a pitfall trap.\n\nIt works by creating a concealed safe route through the pitfall to allow authorized players to pass, while catching unauthorized players or mobs and killing them.\n\nIt generally works best when there is no way around, forcing the player to pass through the trap.\n\nDig a pit.\n\nThe deeper and longer the better.\n\nPlace TNT to build a bridge across the pit.\n\nIt should be at least 2 blocks wide, preferably more as someone could cheat otherwise.\n\nReplace some of the TNT with torches.\n\nRead the next step to understand which ones to replace.\n\nOn top of the torches, place sand or gravel.\n\nTry to get across the bridge now by only stepping on the sand.\n\nMake sure you can do it, because it will be even harder at the end as you must stay off the edges of the sand.\n\nOnce you have picked a satisfactory path, cover up the TNT with the same blocks as before.\n\nPlace pressure plates over all the sand/gravel.\n\nIf anyone steps on one of the pressure plates with TNT under it, the TNT will explode causing the whole bridge to collapse!\n\nNote: You will need to have something under the TNT, perhaps more TNT or something easily destructible to make sure the TNT doesn't fall and fail to ignite the rest of the TNT.\n\nA false door pit utilises Redstone torches and pressure plated to drop an unsuspecting player Make a regular doorway.\n\nThe ground blocks should be some form of stone or wood to disguise the pressure plates.\n\nMake sure that the door is not on the same block as directly in front of it.\n\nDig a 2x1 hole in front of the door.\n\nIf the door is placed correctly, there should be no room in front of the door.\n\nTo the side of the door, dig a 4x2x3 hole.\n\nAt the top of the pit, place a sticky piston with the ground block in front of it.\n\nThe piston should not cover up the pit until activated.\n\nRepeat at the bottom of the pit.\n\nIn between the two pistons, place any block and place a Redstone torch facing away from the pistons.\n\nPlace a single piece of Redstone below the torch.\n\nIf possible, place a regular piston between the two pistons' arms facing towards the block with the torch on it.\n\n8.\n\nCover up the pit with ground blocks and place the pressure plates!\n\nSome parts of the trap may still be visible, you can cover these up with walls.\n\nWater traps use water to suffocate, trap, or push the target.\n\nNone of these traps will work on zombies, as they will turn into drowned after drowning, instead of dying.\n\nPlayers who use potions of water breathing will also be unaffected.\n\nCobblestone can be swapped for obsidian Make a water elevator using soul sand bubble column, but without an exit at the top.\n\nThe column will force the unfortunate player upward, where they will be trapped against the ceiling, unable to break their way out because of the fact that blocks break much slower underwater.\n\nCobblestone can be swapped for Obsidian.\n\nThis can also be used reversely, with Magma Blocks, taking advantage of the fact players cannot swim upwards easily.\n\nIn both cases, the players may not drown since they're in a bubble column, or you could make it more dangerous and put a sign with lava on the top but make sure to not have the blocks the lava is touching or is around is not flammable as it will burn.\n\nA way better version of this is having the Soul Sand switch with Magma Blocks using Pistons, a redstone clock, and a NOT Gate (aka a Redstone Torch).\n\nA trap made with water and dirt which can kill any mob except zombies.\n\nCreate a water current that drags the mobs down under a solid block.\n\nThe current will hold the mobs under until they drown.\n\nThe loot from the mobs will float, making the collection hard.\n\nIf you use this trap to kill zombies, they won't die, but will turn into drowned instead.\n\nThis trap will also not work on skeletons.\n\nThrough clever use of magma blocks, you can pull the target down into water.\n\nIt should be noted that it's possible to breathe while inside a bubble column, so this trap is not useful for drowning players.\n\nDig a 1 block wide, 1 block long, 2 block deep pit with a magma block floor.\n\nReplace the 4 adjacent blocks to the air block at the bottom with trapdoors (make sure they open towards the magma so the pufferfish don't escape and die) and open them, then put a pufferfish in each one.\n\nFill the pot with water, and (optional) add an open trapdoor in the hole, which mob Ai sees as a solid block.\n\nThe magma pulls it down and causes fire damage, while the pufferfish poison and damage the mob/player who fell in or was knocked in.\n\nNote: This could be disguised as an elevator to a secret by putting the magma further down.\n\nResource requirements: 1 magma block, 4 buckets of pufferfish, 4 trapdoors (any), and 2 water buckets.\n\nLava traps usually use lava to burn the target, or distract them for an easier kill.\n\nNote that most of these traps will destroy the loot.\n\nA lava staircase trap This trap can be handy for players who want to deal with assailants.\n\nThe player should lure the target into the staircase for this trap to be most effective.\n\nDig a standard staircase down a way.\n\nThe tighter the space available the better.\n\nAfter a certain distance, place a stone pressure plate in the staircase.\n\nIt's suggested to place it so it blends in.\n\nIn the schematic, a wooden pressure plate is used for visibility.\n\nPlace redstone dust in an upward trail for a certain distance.\n\nMake sure it does not look different from any other part of the staircase.\n\nConnect the dust to a dispenser and put a lava bucket inside.\n\nWhen the target steps on the pressure plate, it will be trapped by the lava running down the staircase.\n\nEven if they have Fire Resistance, it will take a long time to wade back up.\n\nThis trap can be expanded to make a handy escape mechanism.\n\nIf you place the pressure plate on the upward side of the dispenser, the lava will flow down onto anyone chasing you.\n\nYou could also make a hidden escape at the bottom.\n\nJust make sure you have a button to remove the lava.\n\nWith some clever piston work, the entire trap could be concealed except the pressure plate.\n\nBe wary of stepping on the trap yourself or placing the pressure plate in the wrong location.\n\nThere are many variations of this trap, so don't be scared to alter elements of it, especially concerning the direction (descending or ascending), who steps on the trap (you or assailant) and more.\n\nChest trap Build 2 rows of sticky pistons such that are facing each other and the rows are 4 blocks apart.\n\nAttach solid blocks to the rows of sticky pistons.\n\nLink the rows of pistons to redstone torches.\n\nAttach the trapped chest to the Redstone torches.\n\nDig a hole below the sticky pistons and fill it with lava.\n\nDecorate the area around the trapped chest to attract players!\n\nMake a 3x3 pit at least 4 blocks deep.\n\nPlace lava at the top, ladders in the middle, and water at the bottom.\n\nIf you get mobs to go into the trap, they will burn in the lava and their drops should go into the water.\n\nMake a house, and right inside the front door make a pit with lava.\n\nMost players will likely notice the trap and avoid it, so it works only on really careless players.\n\nIf the target should wander onto the pressure plate, good luck getting off!\n\nAn example of a trapdoor lava pit.\n\nMake a stone room.\n\nPlace a pressure plate in the room.\n\nConnect the plate to a dispenser with lava in it on the ceiling.\n\nThese traps don't actually kill the target.\n\nInstead another trap is often used, or the player can come later to kill captured mobs.\n\nPlace a pressure plate on a piece of 3 by 3 flat land.\n\nPlace 4 iron doors in a way that when you step on the pressure plate, the doors will close, revoking your chance to escape.\n\nPlace a ceiling that is either blast resistant or unbreakable.\n\nAlso have an observer under the pressure plate that connects to some TNT so that when a player tries to escape, they will get blown up.\n\nThis not only traps the player, but it also kills the player if they try to escape.\n\nYou can also replace the observer with a block that blends in with the terrain so that they cannot see the TNT.\n\nThis might work on only inexperienced players because experienced players can use the parts that are shown to think of what might happen to them if they went in.\n\nYou may also have a bit like having a dropper that throws out diamonds to lure them over to the trap.\n\nPiston trap This trap is best for 2-tall tunnels, perhaps inside a friend\u2019s mine.\n\nMake sure there is a roof over it, so when the target hits the pressure plate, it cannot escape.\n\nWhen the pressure plate is stepped on, two pistons push up.\n\nNote that players will easily be able to break blocks and escape so you probably will want to combine this with another trap.\n\nYouTube Video (view on YouTube) This is a simple and rather obvious trap that is made by putting a pressure plate in the middle of 4 open iron doors so that the target is trapped inside when they enter.\n\nIf using this trap against mobs such as skeletons, you don\u2019t have to use iron doors.\n\nDig a 1-block deep pit at least 5x5 blocks.\n\nPlace fences on the inside edge.\n\nSince fences count as one and one half blocks in height, mobs can walk in, but cannot jump out.\n\nAlternatively, line the outside with half-slabs.\n\nThis can also be combined with a mob grinder, via water currents leading to it.\n\nZombies and Skeletons will take damage from sunlight during the day if the pit is uncovered, making this an effective way to sort out creepers.\n\nThis design does not capture spiders.\n\nThis trap is designed to trap skeletons and zombies, not to kill them!\n\nDig out a 5x5 square.\n\nDig a 3x3 square 2 layers deep in the center.\n\nPlace water in each of the corners and in the middle of each side on the top, where the water isn't flowing along the top.\n\nThis simple trap targets slimes.\n\nDig a 4x4 hole three blocks deep.\n\nFill the bottom layer with water, so that it is all still water on the bottom.\n\nWhen a slime of any size wanders around, it may fall into the hole.\n\nSince slimes cannot jump in water, it will not be able to escape.\n\nYou can come by later and kill all the slimes.\n\nIf you are not interested in the drops, just leave them into lower slime population.\n\nThis trap is best on superflat survival worlds where slimes spawn frequently.\n\nIn that case, water can be obtained in villages.\n\nStep 1: Dig down an x/1<y/z (However wide and long you want, a minimum of 2 blocks deep) hole with soul sand on the bottom Step 2: Fill it with water that goes up to 1 block below ground level, make sure bubble columns are made Step 3/4: Fill in the area at ground level with cobwebs* Step 3/4: Place sand in the bubble columns* Step 5: Knock someone in!\n\nExplanation: The bubble columns keep the sand on the same level as the cobwebs, so it just looks like slightly darker sand (entity and block shading are different) but sand entities don't collide with players or mobs, so you get stuck in the cobwebs and you need to use a sword or shears to break them, and you have to hit through the sand entities.\n\nYou could also break a block at the edge of the hole.\n\nNOTE: Only works on BE, in Java the sand will break after several seconds.\n\n*You can do step 4 before 3, or vice versa, so they're 3/4 This trap is extremely expensive to construct.\n\nThis trap is intended to work on players, and requires a secondary trap to initiate.\n\nLocate a location in the overworld at bedrock level in which a 1x1x2 hole exists.\n\nIf a player were to jump into said hole, they should see a block of bedrock directly in front of their face on all four sides.\n\nDig a vertical, 1x1 shaft all the way to the surface and construct a secondary trap there.\n\nThe secondary trap must be able to force the target into the 1x1 shaft.\n\nApproximately 10-15 blocks above bedrock, place a pair of tripwire hooks and string so that mobs that fall down the 1x1 shaft will trigger the tripwire.\n\nWire the Tripwire setup down to bedrock level by any means necessary, but ideally with as little delay as possible.\n\nPlace a Block of Netherite on top of one of the four bedrock blocks surrounding the hole.\n\nPlace a second Block of Netherite on top of another one of the four bedrock blocks surrounding the hole, but not directly across from the Block of Netherite placed in Step 5.\n\nPlace a piston adjacent to and facing towards the Block of Netherite placed in Step 5.\n\nThe piston must face towards the hole.\n\nPlace a piston adjacent to and facing towards the Block of Netherite placed in Step 6.\n\nThe piston must face towards the hole.\n\nPlace a disposable block opposite to the Block of Netherite placed in Step 5.\n\nPlace a piston adjacent to and facing towards the disposable block placed in Step 9.\n\nThe piston must face towards the hole.\n\nRemove the disposable block placed in Step 9.\n\nUsing redstone dust and redstone repeaters, separate the redstone line coming from the Tripwire placed in Step 3 into two repeaters.\n\nSet one to 1 tick, the other to 4 ticks.\n\nWire the redstone line from the 1-tick repeater directly into the piston placed in Step 8.\n\nWire the redstone line from the 4-tick repeater into a pulse shortener to reduce it to a 1-tick signal.\n\nConstruct a basic repeater clock, composed of 2 1-tick repeaters wired into each other.\n\nWire the pulse shortener to the repeater clock.\n\nWire one end of the repeater clock to the piston placed in Step 7.\n\nWire the other end of the repeater clock to the piston placed in Step 10.\n\nPlace a Cobweb on the bottom of the hole to prevent the target from dying to fall damage.\n\nShould the trap be triggered, the following sequence of events will occur: Target springs secondary trap and is forced into 1x1 shaft.\n\nTarget triggers tripwire whilst falling down shaft.\n\nTarget hits cobweb at bottom.\n\nPiston placed in Step 8 triggers, pushing Block of Netherite directly above hole.\n\nRepeater clock triggered, causing pistons placed in Steps 7 and 10 to repeatedly shift the Blocks of Netherite back and forth, preventing them from being dug out.\n\nBlocks of Netherite are shifted at an interval of time that is shorter than the amount of time needed to break a Block of Netherite by conventional means such as by pickaxe.\n\nTarget is contained within the trap until trap is disabled or target dies (or remains trapped indefinetly if difficulty settings forbid death by hunger and target has no other means of commiting suicide (Ender pearls, Potions etc.)).\n\n(Actually, this trap is escapable, you can either just mine the Netherite block (yes you can, but this can be disabled by placing another Block Of Netherite above the sliding ones), or you can place a ladder on the top block of the trap you're in and throw an Ender Pearl at the ladder's hitbox top.) These traps use pistons to harm the target.\n\nA piston suffocation trap This is ideal at the end of a water flow mob grinder as it minimizes drop losses.\n\nThe design can be expanded to make a long row.\n\nA simple honeycomb trap.\n\nReplace the wool with a honeycomb block.\n\nConnect two sticky pistons to a clock circuit so that they rapidly push a honeycomb block back and forth.\n\nIf done correctly a player fallen into this trap will be unable to get out.\n\nHoneycomb block was chosen because tools do not affect the breaking speed, even with enchantments.\n\nAlternatively, a Block of Netherite could be used instead, as while Pickaxes break it faster, it still takes so long to break that even an Efficiency V Netherite Pickaxe cannot break it in time before it gets moved.\n\nDig down two blocks in a flat area and put a piston at the bottom.\n\nDig down two blocks around the piston and put redstone dust at the bottom.\n\nDig down two blocks around the redstone and put pistons at the bottom.\n\nCover everything up with the block(s) of your choice.\n\nPlace pressure plates in a ring around the center block, above the redstone.\n\nPut a cake on top of the center piston.\n\nAbove the outer ring of pistons, place blocks in the air so there is room to walk under if the pistons are retracted.\n\nIf the target moves too near to the cake, the pistons will trap them and destroy the cake.\n\nThis device uses pistons to push entities into a pit.\n\nYouTube Video (view on YouTube) These traps require the player to manually trigger the trap, or perhaps even be the trap.\n\nAsk someone if they could dig down at a spot, perhaps because you lost diamonds there.\n\nWhen they get far enough, cover them with sand or gravel.\n\nYou can also use lava for a more dramatic death, however, this will destroy their drops as well and won't work if they have a source of Fire Resistance.\n\nThis will probably only work on inexperienced players.\n\nMake a tower that is at least three blocks high so it will be seen from a distance.\n\nThis will work best when built in a flat area such as plains or desert.\n\nThe tower will act as a bait for this trap.\n\nAround the tower, dig a pit at least three blocks deep.\n\nIf you want this trap to be fully automatic, dig the pit at least 30 blocks deep.\n\nWhen the target falls in the pit, drop gravel on the target.\n\nIf you dug the pit at least 30 blocks deep, this isn't necessary, because most players will die from fall damage anyway.\n\nIf done correctly, the gravel blocks should fall on your target's head, thus trapping or killing him.\n\nHence the name facebreaker.\n\nMake sure not to take too long or else the target may escape jumping off the gravel or placing blocks.\n\nFor a fully automated version, replace the top TNT with an observer.\n\nMake a tall watchtower.\n\nAt the top out of sight, put a bunch of TNT.\n\nMake a vertical redstone path to the TNT with a lever to activate it.\n\nPut a lure at the top, and ask someone to go get it.\n\nWhen they get to the top, pull the lever.\n\nNote: This trap needs to be built on an already existing ender pearl \"stasis chamber\" where a player throws an ender pearl in and it teleports them back if the chamber is turned off, or a player enters it 1: Throw in a lot of splash potions of various negative effects.\n\nMake sure they don't shatter.\n\n2: Trigger the ender pearl, teleporting the player who threw it into the splash potions, which shatter, possibly killing them The traps here do not yet fit into any of the other categories.\n\nThe spike trap.\n\nMaterials: a dispenser, a pressure plate and any type of arrows.\n\nDig a 1x1x1 hole.\n\nPlace a dispenser facing up in the hole and fill it with arrows.\n\nPlace a stone pressure plate on top of the dispenser.\n\nIf the target steps onto the pressure plate, they will get shot by an arrow.\n\nThis trap is not lethal, except to players or mobs with low health.\n\nIt could be made to be more of an annoyance if you replace the arrows with tipped arrows with potions such as Slowness, Poison, Weakness, or even fire charge to inflict fire damage.\n\nThe slow monologue trap.\n\nUse shears to collect spider webs.\n\nThen dig a 3 block deep hole placing lava at the bottom and cobwebs on the top layer.\n\nAnyone not watching their step could get caught in the web and slowly fall to their death, allowing you to get a few dramatic words in as they die.\n\n(experienced players will be able to get out of this by mining the cobweb, and quickly placing a block in the lava) There is a way to 'store' fall damage in a minecart and later have someone take that damage even though they don't actually fall a distance that would make them take damage.\n\nYou can also search up for a video on how to do this.\n\nThis trap will probably involve a trip to the Nether.\n\nAfter gathering a fair amount of magma blocks, make a room.\n\nUse the magma blocks you have gathered to make the floor of the room, and cover ALL the magma blocks with carpets.\n\nWhen the target walks on to the carpet, they will take damage from the hidden magma blocks, often wondering and unable to figure out where the damage is coming from.\n\nIf they don't figure out the trap soon enough, they will eventually die or lose a lot of health from fire damage.\n\nOne alternative is to make the entrance to the Magma Room two iron doors with pressure plates on the outside but not on the inside, potentially trapping the target inside to burn.\n\nThis trap could also be a potential mob farm.\n\nWhen the mob is killed by the fire damage, you can enter the room, most likely by a secret entrance, and by sneaking or wearing Frost Walker boots, claim the mob loot and go back out without taking any damage at all.\n\nNote: This trap will not work on all types of Nether mobs, as they are immune to all kinds of fire damage.\n\nNote: This only works pre 1.16.\n\nPlace two iron doors sideways with redstone torches under them so they stay shut.\n\nSet up two pressure plates in front of the doors.\n\nThe plates shouldn't do anything yet.\n\nRun redstone dust from underneath the plates onto the roof of your porch to trigger two pistons.\n\nPut an anvil on each extended piston arm, and make sure there is a hole through the porch roof down to the entrance where the target stands.\n\nWhen the target stands on the pressure plates, the doors won't open and while they are confused the anvils will fall on them.\n\nThey will either be killed or if the anvils don't fall from high enough they get injured.\n\nThis trap is useful to stop thieves from stealing valuable goods, and exploits the fact that people don't look up.\n\nCommand mine.\n\nSick of rebuilding land mines that don't even kill the target?\n\nReplace the TNT with a command block with the command ' /kill @e[distance=..3] ' and the command block will instantly kill any entity that touches the trigger!\n\nIf you use a repeating command block instead of an impulse command block and set \"needs redstone\" to \"always active\", you don't need a pressure plate.\n\nThis trap may be of use only in Creative mode, though.\n\n(you can also use the /summon lightning_bolt command) A simple arrow dispenser By connecting this to a trigger, you can rapidly fire arrows at the target.\n\nIt is recommended to place this trap in a 1-wide 2 tall tunnel so there is less room to run.\n\nYou can either place this in the side of the tunnel or shooting down the tunnel.\n\nSome variations: Place lava in front of the dispenser to catch the target on fire.\n\nYou can adjust the repeater, which will change the speed.\n\nYou can also completely change the clock if you don't have quartz.\n\nYou could use this to knock the target into a pit.\n\nAttach this to a RS-Latch to keep it on until a button is pressed.\n\nUse tipped arrows with negative effects to make the trap more dangerous.\n\nDig a 2-wide trench down 1 block deep on one side, 3 or more on the other.\n\nPlace signs on the deeper side at the same height as the shallow side.\n\nWandering mobs will not be afraid to try and walk on the signs.\n\nIf they do, they will get trapped.\n\nThis will not always work, so it is advised to make the deeper part wider.\n\nFind a cave spider monster spawner, or enable cheats and use / give to give yourself one.\n\nIt is recommended to place a torch to keep it from spawning.\n\nDig a pit under it.\n\nIt should be at least 5 blocks deep.\n\nPlace cobweb or something for the spiders to spawn on.\n\nBreak the torch and allow the pit to fill with spiders.\n\nYou need to be within 15 blocks for this to work.\n\nGet a player to go into the pit.\n\nSurround your base with a field of wither roses or sweet berry bushes, and leave a block-wide path leading to your base, or make a hidden underground tunnel leading to it.\n\nAny hostile mob that walks through the field takes significant damage, but unless you make the field large enough, this trap isn't fatal.\n\nThis trap works only on mobs and not on players, because players can disarm it quickly with just a water bucket.\n\nFor added effect, place cobwebs on top of the plants, and if you are using wither roses, plant them on soul sand.\n\nThis way, the mobs have to spend more time inside the trap, making it more fatal.\n\nBuild a really high staircase up into the sky.\n\nThe longer you build, the higher it is, the better.\n\nMake a hole into the staircase You can even make yourself look like a noob, which will also give you an advantage.\n\nWhen someone notices and walks up, due to the player's view, they will fall through the hole you create, resulting in the target falling to the ground.\n\nThis trap can even be effective with experienced players, if they don't look carefully.\n\nBuild a water elevator (using soul sand and water) At the top of the elevator, start building a fake base.\n\nDo not use any valuable material because unlike last trap, it will be destroyed completely (unless you want to).\n\nIn the fake base, connect two tripwire hooks together with string right in the top of the elevator.\n\nUsing redstone dust to lead around the base from the tripwire, then filling it with TNT.\n\nIf someone notice a base with a water elevator, they will sometimes attempt trying to go up.\n\nAfter they discovered the TNT behind those walls, they are likely to be gone.\n\nMake a somewhat small, square-ish room with a one way door and 2 block thick walls Make 1x1x1 holes in the walls Add trapdoors on each hole.\n\nMake sure that when closed they're on the upper half of a block, not on the bottom Connect the one way door to a redstone signal inverter that is triggered when walked through Then connect the signal inverter to the trapdoors, just make sure it allows for enough room for step 6* Fill each hole with a pufferfish.\n\nMake it look attractive to go into!\n\nIt's done!\n\nWhen in action, the player will be trapped and the pufferfish will inflate and bounce around the room.\n\n(Fun fact: Fish out of water bounce.\n\nA lot.) *You could probably use some hoppers attached to dispensers and fill the hoppers with buckets of pufferfish.\n\nThen, invert power to the dispenser.\n\nThis makes it a renewable trap!\n\nMake an observer clock (Face 2 observers at each other, which will produce a blinking redstone signal) Place a redstone comparator going out of the observer clock and use it to change it to subtract mode (the redstone torch on the end is ON) (this is for your on/off switch!) Add a trigger somewhere that goes into a signal inverter and into the SIDE of the comparator, make sure the signal that the comparator receives is equal to the observer's signal (signal strength of 15, like a redstone torch) Now back to the trap, send the comparator's output into a repeater and then a dispenser Now Cover it With Slabs.\n\nIf you've done it right, your trap should be nearly flush with the ground (1.5 blocks tall from the ground) and only show the dispenser Now fill up the dispenser with arrows.\n\nEggs, snowballs, bottles of enchanting, and potions fly straight up.\n\nArrows and fire charges are offset from the center, but fire charges don't come back down.\n\nIf you want to destroy something flammable in the sky, FIRE CHARGES (optional) Add a storage block with a hopper going into the dispenser.\n\nIf the dispenser is empty and getting refilled while the trap is active, it won't shoot as much (Constant fire while containing arrows, shoots twice and \"misses\" once (It's empty, so it makes the annoying TICK sound) while being refilled) Now maybe disguise it?\n\nIf you've done this right, it'll start raining arrows when someone activates the trigger.\n\nI recommend a flip flop before it activates, and a one time trigger, that way it starts constantly shooting arrows after being triggered.\n\nAs a last minute extra bit, if you can squeeze one in and a skeleton monster spawner's nearby, why not make the monster spawner an automatic farm and use an item elevator to bring arrows up to it?\n\nJust visit every now and then to refill it because of 1.16 mob despawning.\n\nThe traps here are most notable for their trigger and can be connected to many different mechanisms of harm.\n\nTrapped ore.\n\nReplace the cobblestone with ore.\n\nWhen someone mines the ore the TNT will explode!\n\nBe sure to place the torches before the TNT and to not place any TNT next to a lit torch.\n\nUse a piston to push a TNT next to a redstone torch when a block is mined.\n\nThe advantage of this method is that the trapped block does not need have wires right next to it and that it can cover a wider area.\n\nYouTube Video (view on YouTube) For a more expensive but instant explosion, place an observer behind the trapped ore and a dispenser behind the observer with an arrow inside facing away from the observer and place and end crystal where the dispenser is facing.\n\nPlace the observer before the dispenser and the ore before the observer.\n\nThe redstone mine.\n\nReplace the glowstone with redstone ore.\n\nInstead of a daylight sensor, you can also use an observer.\n\nThis trap is good because it is hard to detect.\n\nIf you build this above ground, it may seem somewhat out of place, so you should cover the redstone ore with carpet or build it underground.\n\nWhen the target walks on the redstone, it lights up, triggering the TNT.\n\nA similar trap is achieved by putting a valuable block that the player may want to mine in place of the redstone ore.\n\nWhen the player breaks the block, the daylight sensor activates, provided there's a light source or clear air above it.\n\nThe furnace trap Normally people would expect only chests to explode, so this trigger will surprise them as soon as they loot your furnace.\n\nYou can replace the furnace with any other container for the same effect.\n\nFill a furnace with coal, iron or food.\n\nPut a comparator leading away from the furnace.\n\nIt should turn on.\n\nPlace a block in front of the comparator.\n\nPlace a redstone torch on the block, it should turn off.\n\nCreate a redstone line from the torch to TNT.\n\nIf a griefer loots the furnace the comparator deactivates and the torch turns on, blowing the victim to bits.\n\nA basic minecart trap A target riding the minecart triggers the TNT and gets blown up.\n\nIt might help to disguise the detector as doing something else, like switching tracks, opening a door, etc.\n\nPlace several levers on a wall and put TNT behind it.\n\nPlace a sign saying something along the lines of, \"Which one...,\" \"Don't pull these!,\" or \"Passcode entry.\" Eventually a player with too much curiosity may come along and pull a lever.\n\nConnect a bed next to a Observer, the Observer to some TNT, and cover the whole thing in cobblestone.\n\nThen just wait for the player to sleep in it and get blasted sky-high.\n\nYou will probably want to put the hooks the other way as they can be seen.\n\nThis trap relies on the fact that like end portal, string is invisible from the bottom.\n\nMake a room or hallway at least 3 blocks high, and put tripwire in a layer on the third layer up.\n\nIf the victim jumps, they trigger the trap.\n\nHowever, if the victim sees the tripwire hooks they will probably mine the block so they don't have to jump.\n\nA chest bomb.\n\nPlace a chest.\n\nPlace a hopper underneath the chest.\n\nPlace a comparator pointing away from the hopper.\n\nPlace TNT in front of the comparator.\n\nIf someone puts something inside the chest, it will go into the hopper, turn on the comparator, and activate the TNT.\n\nYou could attach the comparator directly to the chest, but it would be more obvious as you can see over chests.\n\nTrapped chests are also an option but they can be seen by experienced players.\n\nAlso, they can be seen more easily with resource packs.\n\nIt is possible to detonate TNT with a pressure plate and a fishing rod.\n\nThis method is mostly undetectable; however, it is unstable and prone to premature detonation if you don't have patience.\n\nYouTube Video (view on YouTube) A proximity trap is a player detector paired with an output.\n\nYouTube Video (view on YouTube) These traps' primary feature is the way they lure the target into the trap.\n\nNote that none of these lures work on mobs.\n\nYou could drop items such as gold or diamonds near your trap to increase chances that someone will walk into it.\n\nThis works best if you know someone is coming by.\n\nSome tips: It might look too obvious with diamonds, so it could be better to use items like iron bars.\n\nYou could also try to make it look like someone just died.\n\nIf you want to get elaborate, you could setup a dropper to periodically dispense an item.\n\nIt would probably be possible to detect if the item was picked up, perhaps using a weighted pressure plate.\n\nSigns are useful for luring new, and sometimes even experienced, players into a trap.\n\nHere are some messages which can be good to lure players into traps.\n\n\"Free Diamonds!\" This could be good on a trapped chest, but would only work on newbies.\n\n\"DO NOT ENTER!\" Most players would be tempted to do exactly the opposite, even into a possible trap.\n\n\"DO NOT PRESS!\" If you see a button, you really want to press it.\n\nEspecially if there is a sign saying not to.\n\n\"FREE ADMIN!\" Like the \"free diamonds\" example above, this probably works on newbies only.\n\np/s by troller10000: \" DO NOT \" means \" yes \", while \" FREE \" means \" no \".\n\nChests, especially when paired with signs, can make a good lure.\n\nIf you place one inconspicuously in a wooden house, what self respecting griefer would not go and investigate?\n\nOre blocks make an irresistible lure.\n\nAfter all, if you saw a diamond block just sitting there on the ground, would you just leave it there?\n\nThis lure is good when paired with a BUD trigger.\n\nMineshafts are known for lots of loot.\n\nIf you trap one, you can pretend to have 'accidentally given away directions' to the mineshaft.\n\nAn iron door looks somewhat out of place in a dark cave.\n\nIf a player sees one, they may be tempted to go inside.\n\nUnfortunately for them, there may only be a pressure plate on one side of the door, or a landmine hidden under the plate.\n\nWhen faced with a trap, the safest course of action is usually to leave the way you came.\n\nIf the player really wants to disarm it though, here are some tips: Don't try to trip the trap and run away.\n\nUnless you have a really safe way of doing this, the trap is probably designed to prevent you from doing this.\n\nWatch out for observers.\n\nThese can be placed inside walls and under pressure plates as a fail safe.\n\nDon't assume it is safe to break redstone.\n\nIt is usually safer to keep redstone in its current state.\n\nIf it is off, it might be okay to break it.\n\nIf it is on, it might be okay to place a redstone torch to keep it on.\n\nIn elaborate traps the redstone may blink to check if it is broken, so watch out!\n\nTNT in water generally doesn't do much damage.\n\nIf you have a water bucket, it may be helpful to use it if you think everything is about to blow up.\n\nTry to always check for traps.\n\nIf you see a pressure plate next to an iron door, check for observers below the plate, and break the door and plate, and go in.\n\nAnother problem is underground traps.\n\nFor ore traps, check for observers again, break them, and then mine the ore.\n\nTutorials/Player versus Player \u2191 \"How to make great traps\" (archived) by Chris Priestman \u2013 minecraft.net, October 4, 2019.",
    "category": "Mechanics"
  },
  {
    "title": "Tutorials/Redstone",
    "url": "https://minecraft.fandom.com/wiki/Tutorials/Redstone",
    "content": "Redstone mechanics provide Minecraft with a loose analogue to electricity, which is useful for controlling and activating a variety of mechanisms.\n\nRedstone circuits and devices have many uses including automatic farms, controlling doorways, changeable or mobile buildings, transporting players and mobs, and more.\n\nRedstone construction can range from fairly simple to deeply complex.\n\nWhile there is not a single overarching tutorial, there are many relevant pages under both the \"Mechanics\" and \"Tutorials\" trees.\n\nSome relevant pages include: Redstone dust: The core material that enables most redstone devices, being crafted into many of them and also placed to carry signals.\n\nMechanics/Redstone: The basic game mechanics for redstone power and signals.\n\nMechanics/Redstone/Components: The blocks that are used in and with redstone contraptions.\n\nTutorials/Redstone tips: Hints and advice for building your redstone devices.\n\nMechanics/Redstone/Circuit: Lists various types of reusable circuits that can be used to manipulate signals, with sub-pages giving examples of the various types.\n\nHelp:Schematic: The \"modern\" way for redstone circuits to be represented on this wiki.\n\nMCRedstoneSim schematics: An older method for displaying redstone circuits.\n\nSome pages dealing with specific blocks: Mechanics/Redstone/Piston circuits: A list of circuits making use of piston mechanics.\n\nTutorials/Quasi-connectivity: Discusses the special mechanic of Quasi-connectivity.\n\nTutorials/Hopper: All about how to use hoppers, including for item sorting.\n\nTutorials/Observer stabilizer: Getting a better signal out of an observer Tutorials/Daylight detector, Tutorials/Day and night detector: Daylight sensors Tutorials/Automatic Respawn Anchor Recharger: Respawn Anchors Circuits can be built into more complex devices: Tutorials/Mechanisms: Lists an assortment of complete devices using redstone.\n\nTutorials/Minecarts: Large railway systems can benefit from redstone at the terminals.\n\nTutorials/Redstone music: Creating music with Note Blocks and redstone circuits.\n\nTutorials/Rube Goldberg machine: Complexity and spectacle!\n\nTutorials/Block update detector: A specialized class of circuit; BUDs are mostly but not completely rendered obsolete by the Observer.\n\nTutorials/Comparator update detector: An extension of BUDs that also spots inventory changes.\n\nTutorials/Shulker box storage: Systems for loading and unloading shulker boxes.\n\nTutorials/Zero-ticking: Exploiting a notable bug for rapid circuits.\n\nTutorials/Combination locks: Creating combination locks Tutorials/Elevators: Vertical transportation Tutorials/Telegraph: Long-range signaling (through loaded chunks only) Tutorials/Command block: Use of creative-mode Command blocks Tutorials/Flying machines: Mobile machinery!\n\nTutorials/Note block music: A working music machine!\n\nPerhaps the most ambitious redstone project of all is to build a working computer within Minecraft!\n\nTutorials/Logic gates: Arithmetic logic.\n\nTutorials/Advanced redstone circuits Tutorials/Redstone computers: Tutorials/Calculator: Build a calculator within Minecraft.\n\nTutorials/Printing: And a printer/3D printer.\n\nMost of the farming tutorials also include complete devices, including Tutorials/Egg farming and Tutorials/Cobblestone farming.\n\nMany traps also use redstone.",
    "category": "Mechanics"
  },
  {
    "title": "Activator Rail",
    "url": "https://minecraft.fandom.com/wiki/Activator_Rail",
    "content": "This article is about the activator rail.\n\nFor other types of rails, see Rail (disambiguation).\n\nActivator Rail Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No An activator rail is a type of powerable rail that can eject players and mobs from regular minecarts, lock and unlock hopper minecarts and ignite TNT minecarts.\n\nAn activator rail can be broken by hand or using any tool, dropping itself as an item, but a pickaxe is fastest.\n\nTo break an activator rail, mine it: \u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAn activator rail also drops as an item when the block beneath it is removed or a piston moves it into a space with no floor below it.\n\nAn activator rail can be used as a rail and as a redstone component.\n\nTo place an activator rail, use an activator rail item while pointing at a surface facing the space the activator rail should occupy.\n\nAn activator rail can be placed on: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, upside-down slab, or upside-down stairs.\n\nthe top of any transparent block (glass, etc.) An activator rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the activator rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach an activator rail to the side of the fence causes the activator rail to be attached to the top of the ground next to the fence instead.\n\nWhen placed, an activator rail configures itself to line up with any adjacent rails (including detector rails, powered rails, and other activator rails), as well as adjacent rails one block up.\n\nThe behaviors in Java and Bedrock editions diverge in the following ways.\n\nIn Java Edition: If there are two adjacent rails on non-opposite sides, or three or more adjacent rails, or no adjacent rails at all, an activator rail aligns itself in the direction the player is facing.\n\nIf an existing activator rail is connected to only one other rail or none at all, and a new rail is placed perpendicular to the activator rail, then the activator rail aligns itself in the east-west direction (if it isn't already facing that way).\n\nIf a rail it would align with is one block up, an activator rail slants upward toward it (with multiple options to slant upward to, an activator rail \"prefers\" west or south).\n\nOther configurations can be created by placing and removing various rails.\n\n[needs in-game testing ] In Bedrock Edition: [needs in-game testing ] If there are two adjacent rails on non-opposite sides, or three or more adjacent rails, an activator rail aligns itself in the east-west direction.\n\nIf there are no adjacent rails, an activator rail aligns itself in the north-south direction (but if a rail is later placed to the east or west, the activator rail re-orients itself in the east-west direction even if it is already connected to another rail to the north or south).\n\nIf a rail it would align with is one block up, an activator rail slants upward toward it (with multiple options to slant upward to, an activator rail \"prefers\", in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nIt cannot be placed suspended in midair, even with commands.\n\n[1] Main article: Rail Activator rails (and other rails) can be used as \"roads\" for minecarts.\n\nA minecart that enters an activator rail's space from either end of the activator rail continues to move, losing only a little velocity (which can then be increased again with powered rails).\n\nA minecart that enters an activator rail's space from the side turns east or south (depending on the activator rail's orientation), or in the downward direction for a slanted activator rail.\n\nSee also: Redstone circuit Activator rails can be used to affect minecarts that travel over them.\n\nActivation An activator rail is a redstone mechanism and can be activated by: an adjacent active power component (for example, a redstone torch, a block of redstone, a daylight sensor, etc.) an adjacent powered block (strongly-powered or weakly-powered) a powered redstone comparator or redstone repeater facing the activator rail powered redstone dust configured to point at the activator rail, or configured as a plus sign. An activator rail is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nAn activated activator rail also activates any adjacent activator rails it is connected to, up to eight away from the original activation source.\n\nThus a single activation source can activate up to 17 rails (one original in the middle and eight on either side).\n\nAn activated activator rail does not activate adjacent rails not connected to it.\n\nBehavior An activator rail affects minecarts above it with varying effects that occur as soon as any part of the minecart is on the activator rail.\n\nAn active activator rail: starts shaking, and ejects mobs (including players) from minecarts \u2014 the destination location is picked the same way as when dismounting a minecart repeatedly activates command block minecarts \u2014 a command block minecart executes its command every four game ticks until the command block minecart is no longer on the activator rail disables hopper minecarts \u2014 a disabled hopper minecart cannot pick up items it travels through until it is enabled by an inactive activator rail (or until it is broken and re-placed) primes TNT minecarts \u2014 primed TNT minecarts explode after four seconds with an explosive power proportional to their speed over the activator rail.\n\nAn inactive activator rail enables hopper minecarts \u2014 an enabled hopper minecart picks up items it travels through until it is disabled by an active activator rail.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Activator Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nA minecart is shaking on an active activator rail Rail Powered Rail Detector Rail \u2191 MC-182709 \u2014 resolved as \"Invalid\".\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Bell",
    "url": "https://minecraft.fandom.com/wiki/Bell",
    "content": "This article is about the block.\n\nFor the note block instrument, see Note Block \u00a7 Instruments.\n\nBell Bell Ceiling Wall Double Wall Bedrock Edition Renewable Yes Stackable Yes (64) Tool Blast resistance 5 Hardness 5 Luminous No Transparent Yes Flammable No Catches fire from lava No A bell is a transparent, animated block entity that produces a sound when used.\n\nUnlike most utility blocks, bells cannot be crafted.\n\nBells can generate naturally in all village variants, usually near the center of the village in the meeting point.\n\nA bell can be mined by hand or with any tool, but using a pickaxe is fastest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nIn Java Edition, apprentice-level armorer villagers have a 50% chance to sell a bell for 36 emeralds.\n\nApprentice-level toolsmith and weaponsmith villagers always offer to sell a bell for 36 emeralds.\n\nIn Bedrock Edition, apprentice-level armorer villagers have a 1 \u2044 3 chance to sell a bell for 36 emeralds.\n\nApprentice-level toolsmith villagers sell bells for 36 emeralds.\n\nJourneyman-level weaponsmith villagers sell bells for 36 emeralds.\n\nWhen a bell is placed near a claimed bed, the bell is claimed, which is displayed by green particles appearing above the bell.\n\nA claimed bell defines a gathering site of a village.\n\nIf the bell is broken, angry particles will appear above the village leader's head.\n\nWhen the side of a bell is used, it produces a sound as well as a \"swaying\" animation.\n\nA bell can be rung using a redstone signal, by any projectile, by right clicking, or by dropping an item on it.\n\nBells can be anchored to the side of blocks, ceilings, and floors.\n\nAlso, if the player uses the bell while villagers are sleeping, all of the villagers wake up.\n\nBells can be rung only from certain angles; trying from an incorrect angle does not cause the bell to ring.\n\nIf a player rings a bell, the villagers run to their houses even if there is no raid.\n\nSee also: Tutorials/Defeating a village raid When the bell is rung, villagers within a distance of 32 blocks run into their houses immediately.\n\nWhen a raid 's first wave appears, in Java Edition, at least one villager rushes to ring the bell in the center of the village (if they are close enough) to warn the other villagers of an incoming raid before going into their house.\n\nIn Bedrock Edition, bells in the corresponding village ring automatically at the start of a raid, warning villagers to return to their houses.\n\nAdditionally, in Java Edition, if a bell is rung and there is a raid mob within a 32 block spherical range, the Glowing effect is applied to all raid mobs within 48 blocks, and particles appear.\n\nIt produces a resonating sound once this process is complete.\n\nThe raid mobs don't have to be actively participating in a raid to receive the Glowing effect: the effect applies to illagers in woodland mansions, or witches that naturally spawns in the Overworld.\n\nPiglins admire bells as golden items.\n\nHowever, breaking a bell does not aggravate them.\n\n[1] When a bell is rung (either by a player or villager), it produces a Sculk Sensor vibration with a frequency of 11.\n\nWith the use of a Calibrated Sculk Sensor, it is possible to make a device which automatically detects when a raid starts by having a villager ring a bell.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: [sound 1] \u2191 MCPE-140091 \u2014 Bell makes incorrect sounds when placed Java Edition: \u2191 Can be 0.93, 0.95, or 0.97 for each sound \u2191 Can be 0.85, 0.9, or 1.0 for each sound Bedrock Edition: \u2191 Can be 0.93, 0.95, or 0.97 for each sound Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A bell has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nFor a history of changes to textures and models for each block state, see /Asset history Issues relating to \"Bell\" are maintained on the bug tracker.\n\nReport issues there.\n\nIn Bedrock Edition, bells deflect any projectile that does not disappear when hitting a surface (arrows or tridents).\n\nIn Bedrock Edition, when holding down right-click while looking at a bell and holding an item with a right-click action, the bell rings once and then the player uses the item.\n\n[3] If a villager tries to give another villager food near a bell, there is a chance it might hit the bell with the food and cause all the villagers to run, thrower included. [Bedrock Edition only ] LadyAgnes tweets a screenshot of an updated savanna village, which features a bell.\n\n[4] A close up of the bell in the previous image.\n\nAlso uses the old bell texture.\n\nA bell between two market stalls in a superflat village.\n\nAn animation of a bell gong.\n\nVillagers ringing a bell during a raid.\n\nA bell placed on the underside of a block.\n\nBells placed on a cozy cabin.\n\n\u2191 MC-179104 \u2014 \"Piglins don't mind players mining bells near them\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-169683 \u2191 MCPE-56968 \u2191 \"Me and the amazing @ProfMobius are working on the updated looks of villages, here is a savanna village!\" \u2013 @_LadyAgnes (Agnes Larsson) on X, November 23, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Big Dripleaf",
    "url": "https://minecraft.fandom.com/wiki/Big_Dripleaf",
    "content": "This article is about the plant used for platforming.\n\nFor the plant used to grow big dripleaves, see Small Dripleaf.\n\nFor the generated feature, see Dripleaf (feature).\n\nBig Dripleaf Rarity color Common Renewable Yes Stackable Yes (64) Tool Blast resistance 0.1 Hardness 0.1 Luminous No Transparent Yes Flammable Yes Catches fire from lava No A big dripleaf is a plant that generates within lush caves.\n\nIts leaf is a temporary platform; when stood on it will tilt down and drop its burden, resetting a few seconds later.\n\nBig dripleaves naturally generate within lush caves biomes.\n\nBone meal can be used on a small dripleaf plant to turn it into a big dripleaf up to 5 blocks tall, as long as there is enough open space above it.\n\nUsing bone meal on a big dripleaf plant makes it one block taller, creating an extra stem block (see #Growth).\n\nBig dripleaves can be obtained with any tool, but an axe is the most efficient.\n\nIt also breaks when pushed with a piston or sticky piston.\n\nBreaking it at any spot on the plant causes the entire plant to collapse.\n\nDestroying a big dripleaf plant drops one big dripleaf for each stem block and the leaf.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nBig dripleaves consist of any number of non-solid stem blocks atop of each other and a single leaf as the uppermost block, which can be stood on by any entity like a normal block for 1 second (20 game ticks).\n\nAfter this time, it tilts down, becoming lower than a block and giving a player warning that it is about to collapse.\n\nAfter a few ticks, it tilts down and becomes temporarily non-solid.\n\nWhen the leaf is powered by redstone, it does not tilt or collapse, however.\n\nPowering the stem has no effect.\n\nOne-block tall big dripleaves can be used to make the player crawl. [Java Edition only ] If a player is standing inside a big dripleaf when it is fully tilted, and the dripleaf returns to the untilted position, the player is left crawling underneath the leaf.\n\nWhen directly hit with any projectile, the leaf immediately becomes temporarily non-solid.\n\nThis cannot be prevented by powering it with redstone.\n\nFrogs enjoy jumping on big dripleaves, but will still cause them to tilt down and drop the frog.\n\nBig dripleaves can only be placed on top of clay, coarse dirt, dirt, farmland, grass blocks, moss blocks, mycelium, podzol, rooted dirt, and mud.\n\nIt is always one block tall when placed.\n\nUsing bone meal on a big dripleaf makes it grow 1 block taller.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 MCPE-123488 Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Leaf: Stem: Bedrock Edition: Issues relating to \"Big Dripleaf\" are maintained on the bug tracker.\n\nReport issues there.\n\nWhen tilted, the stem of the dripleaf intersects with the top part.\n\n[3] Concept art for the lush caves and vegetation including big dripleaves.\n\nA view of the lush caves with big dripleaves from Minecraft Live 2020.\n\nA view of the lush caves with big dripleaves.\n\nA view of the lush caves with big dripleaves in broken generation.\n\nA render of a two block tall big dripleaf.\n\nA render of a big dripleaf with the top slightly tilted.\n\nA render of a big dripleaf with the top fully tilted.\n\nA render of a big dripleaf stem.\n\n\u2191 MC-214346 \u2191 MC-250104 \u2014 resolved as \"Fixed\".\n\n\u2191 MC-213797 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Block of Redstone",
    "url": "https://minecraft.fandom.com/wiki/Block_of_Redstone",
    "content": "This article is about the mineral block.\n\nFor the Minecraft Dungeons mob, see Redstone Cube.\n\nFor other uses, see Redstone (disambiguation).\n\nBlock of Redstone Renewable Yes Stackable Yes (64) Tool Blast resistance 6 Hardness 5 Luminous No Transparent Partial (blocks light, mob spawning possible) Flammable No Catches fire from lava No A block of redstone is a mineral block equivalent to nine redstone dust.\n\nIt acts as a permanently powered redstone power source that can be pushed by pistons.\n\nIn each ancient city, 2 blocks of redstone can be found integrated into circuitry within a secret room at the city center.\n\nA block of redstone can be mined using any pickaxe (unlike redstone ore, which requires an iron pickaxe or better).\n\n[1] If mined without a pickaxe, a block of redstone drops nothing.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA block of redstone can be used as a redstone power source and can be crafted back into redstone dust.\n\nIt can also be used as storage if the player's inventory is full of redstone dust from mining.\n\nBlocks of redstone can be crafted back into redstone dust, and thus provide compact storage for redstone, like other blocks of materials (block of iron, block of gold, etc.).\n\nA block of redstone powers dust and repeaters, deactivates attached torches, and activate mechanisms (left) \u2013 but does not power adjacent opaque blocks (right).\n\nSee also: Redstone circuit To place a block of redstone, use the Place Block control.\n\nBlocks of redstone are always active and cannot be turned off.\n\nA block of redstone: powers any adjacent redstone dust, including above or below, to power level 15 powers any adjacent redstone comparators or redstone repeaters facing away from the block of redstone to power level 15 activates any adjacent mechanism components (doors, redstone lamps, etc.), including above or below, with the exception of pistons, which cannot be activated by any power source directly in front of them Adjacent opaque blocks are not powered.\n\nIf a redstone torch is attached to a block of redstone, it deactivates after 1 redstone tick and does not reactivate (which is normal behavior for a redstone torch attached to a powered block).\n\nA block of redstone can be moved by a piston.\n\nWater and lava flow around a block of redstone without affecting it.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nIssues relating to \"Block of Redstone\" are maintained on the bug tracker.\n\nReport issues there.\n\nAs the block of redstone is not fully opaque, chests can be opened when covered by one and so can shulker boxes.\n\nBlock of redstone as a circuit component.\n\nExample of how blocks of redstone can be used to power rails (from beneath).\n\n\u2191 MC-44417 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-146824 Block of the Week: Redstone \u2013 Minecraft.net on March 2, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Button",
    "url": "https://minecraft.fandom.com/wiki/Button",
    "content": "Button View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0.5 Hardness 0.5 Luminous No Transparent Yes Flammable No Catches fire from lava No A button is a non-solid block that produces a temporary redstone signal when pressed, with two variants.\n\nStone buttons can only be pressed by players.\n\nWooden buttons remain pressed for longer, and can also be pressed by arrows and tridents.\n\nA wooden button is easily broken with an axe, but drops itself as an item if broken using any tool.\n\nA stone button must be mined with a pickaxe to drop as an item.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nIn Java, you don't need to have a pickaxe to mine a stone/polished blackstone button.\n\nBut in Bedrock, you need to have a pickaxe to mine a stone/polished blackstone button A button is removed and drops as an item if: its attachment block is moved, removed, or destroyed.\n\nwater or lava flows into its space. [Java Edition only ] a piston tries to push it or moves a block into its space.\n\nStone buttons are naturally generated in strongholds, next to iron doors. [JE only ] Stone buttons also generate in desert armorer houses attached to granite.\n\nJungle buttons generate naturally on house walls in desert villages.\n\nButtons can be crafted from planks for a matching wood-type button, or stone for a stone button.\n\nSee also: Redstone circuit A button can be used as a monostable power source (albeit it automatically deactivates shortly after being activated).\n\nPlacement Buttons can be placed by using it on a surface.\n\nThey can be attached to the side, bottom and top of any full opaque block.\n\nIf placed on the top or bottom of a block, the button can face any direction. [Java Edition only ] It can also be attached to the top of a fence in Bedrock Edition.\n\nMore information about placement on transparent blocks can be found at Opacity/Placement.\n\nActivation Buttons are usually in an inactive state, but can be temporarily activated by players.\n\nA button can be activated by using it.\n\nA wooden button can also be activated by a fired arrow or a thrown trident if its collision box touched the button.\n\nMobs cannot activate buttons directly, but arrows fired by skeletons or dispensers can activate wooden buttons.\n\nBehavior When activated, a wooden button remains active for 15 redstone ticks (1.5 seconds, barring lag), while a stone button remains active for 10 redstone ticks (1 second, barring lag).\n\nA wooden button activated by a fired arrow or a thrown trident remains active until the arrow or trident despawns (after one minute) or is picked up by a player.\n\nWhile active, a button: powers any adjacent redstone dust to power level 15, including beneath the button powers any adjacent redstone comparators or redstone repeaters facing away from the button to power level 15 strongly powers its attachment block to power level 15 activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nWhen a button changes state it provides a redstone update to all redstone components adjacent to itself (including above and below), and to all redstone components adjacent to its attachment block.\n\nWooden buttons can be used as a fuel source in furnaces, smelting 0.5 items per button.\n\nButtons can be used to prevent mobs from spawning on blocks (ie on ice paths).\n\nSee: Tutorials/Spawn-proofing.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k l m Available with / give command.\n\n\u2191 a b c d e f g h i j k l m The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: This section needs expansion.\n\nYou can help by expanding it.\n\nInstructions: when the pitch of the sound of the button being pressed in was changed in Java Edition This section is missing information about MC-8522.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nFirst image of a button on a ceiling.\n\nOak Button Spruce Button Birch Button Jungle Button Acacia Button Dark Oak Button Mangrove Button Cherry Button Bamboo Button Crimson Button Warped Button Stone Button Polished Blackstone Button Issues relating to \"Button\" are maintained on the bug tracker.\n\nReport issues there.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Calibrated Sculk Sensor",
    "url": "https://minecraft.fandom.com/wiki/Calibrated_Sculk_Sensor",
    "content": "For the normal version of the sculk sensor, see Sculk Sensor.\n\nCalibrated Sculk Sensor Renewable Yes Stackable Yes (64) Tool Blast resistance 1.5 Hardness 1.5 Luminous Yes (1) Transparent Yes Flammable No Catches fire from lava No A calibrated sculk sensor is a craftable variant of sculk sensor.\n\nSimilarly to its counterpart it detects vibrations, but with twice the range, and can detect multiple vibrations in quicker succession.\n\nIt outputs a signal on all sides except for its input, which can receive power to make the sensor only listen to specific vibrations, depending on the input signal strength.\n\nCalibrated sculk sensors can be broken with any tool, but can be broken faster with a hoe.\n\nThey drop experience when broken.\n\nWhen broken by an item that is enchanted with Silk Touch, a calibrated sculk sensor drops itself.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nUnlike regular sculk sensors, there are a few differences: Calibrated sculk sensors can detect vibrations up to 16 blocks away.\n\nCalibrated sculk sensors have a cooldown of 1 second instead of 2 seconds.\n\nCalibrated sculk sensors' \"Sensor\" could be disabled by a redstone signal onto its crystallized side.\n\nThe same with the sculk sensor, one side of the calibrated sculk sensor can receive a redstone signal as an input, and the strength of that redstone signal is the only vibration frequency the sculk sensor will listen to.\n\nThe following list showcases (in order) a list of frequencies that the calibrated sculk sensor can listen for.\n\nMovement in any medium (land, water and air) Landing on any surface (land or water) Using an item (casting a fishing pole, throwing a snowball, etc.) Gliding with an elytra or unique mob actions (Ravager roar, Wolf shaking, etc) Dismounting a mob or equipping gear Mounting a mob or interacting with a mob Mobs and players getting damaged Consuming items (drinking and eating) Blocks 'deactivating' (door close, chest close, button unpress, etc) Blocks 'activating' (door open, chest open, button press, etc) Blocks changing (adding food to campfire, etc) Non-wool blocks being destroyed Non-wool blocks being placed Mobs and players teleporting or spawning Mobs and players dying or an explosion Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 Picks number from 0, 0, 2, 4, 6, 7, 9, 10, 12, 14, 15, 18, 19, 21, 22, or 24 using the vibration's signal strength, and applies 2 n \u2212 12 12 {\\displaystyle 2^\\frac{n-12}{12}}.\n\nIt uses the same equation that note blocks do.\n\nBedrock Edition: \u2191 Uses the same system as Java Edition.\n\n[verify ] Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A calibrated sculk sensor has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Calibrated Sculk Sensor/BE Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nOne interpretation of how the old texture could have looked.\n\nAnother interpretation.\n\nIssues relating to \"Calibrated Sculk Sensor\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-208551 \u2191 MC-252389 \u2014 \"When landing (or jumping) on wool with your hitbox over the edge, it produces a vibration\" \u2014 resolved as \"Fixed\".\n\n\u2191 MC-207290 \u2014 \"Calibrated sculk sensors don't detect vibrations while walking on the edge of a block\" \u2014 resolved as \"Fixed\".\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Chiseled Bookshelf",
    "url": "https://minecraft.fandom.com/wiki/Chiseled_Bookshelf",
    "content": "This article is about the bookshelf that can hold books.\n\nFor the bookshelf used with an enchanting table, see Bookshelf.\n\nChiseled Bookshelf Empty Full View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 1.5 Hardness 1.5 Luminous No Transparent No Flammable No Catches fire from lava No Chiseled bookshelves are blocks that can hold books, books and quills, written books, enchanted books and knowledge books.\n\nChiseled bookshelves can be destroyed with any tool, but an axe mines it the fastest.\n\nWhen broken, all contained books are dropped as items.\n\nThe block itself drops only when broken using a tool enchanted with Silk Touch.\n\n[1] \u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAll of the chiseled bookshelf textures before Java Edition 22w46a.\n\nChiseled bookshelves can hold up to six books, books and quills, written books, enchanted books, and/or knowledge books.\n\nThere is no GUI; books are instead added into the bookshelf by using on a slot with a book.\n\nDoing so will place a book in that slot.\n\nUsing on an occupied slot will remove the book from that slot.\n\nChiseled bookshelves do not increase the power of enchanting tables.\n\nThe correspondences between slot and signal power.\n\nA redstone comparator sends a signal (1\u20136) indicating the last slot interacted with.\n\nWhen no slot has been interacted with yet, it outputs 0.\n\nAn observer can detect when a book is added or removed from the bookshelf.\n\nHoppers and minecart with hoppers can insert and remove books from the bookshelf.\n\nAs with any other container, items are taken from the first slot that has an item that can fit in the hopper and are inserted into the first empty slot.\n\nDroppers behave similarly when inserting books into the bookshelf.\n\nWhen a hopper that is not already 100% full fails to remove a book from a non-empty bookshelf because there is no room for the book in the hopper's inventory, that is still counted as an \"interaction\" with the slot.\n\nThus, a hopper that cannot remove any of the books will effectively set the last-interacted slot to the last non-empty slot in the bookshelf.\n\n[2] Chiseled bookshelves can be used as fuel in furnaces to smelt 1.5 items.\n\nChiseled bookshelves can be placed under note blocks to produce a \"bass\" sound.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b Can be 1.0, 0.85, or 1.1 for each sound \u2191 a b Can be 1.0, 0.8, or 1.1 for each sound Bedrock Edition: \u2191 a b Can be 1.0, 0.85, or 1.1 for each sound \u2191 a b Can be 1.0, 0.8, or 1.1 for each sound Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A chiseled bookshelf has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Items: List of books in the bookshelf.: An item, including the slot tag.\n\nThe valid slot numbers are 0-5.\n\nTags common to all items last_interacted_slot: Last interacted slot (0\u20135), or -1 if no slot has been interacted with yet.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Chiseled Bookshelf\" are maintained on the bug tracker.\n\nReport issues there.\n\nThere are 11 9 (2,357,947,691) different ways to craft a chiseled bookshelf, as each of the nine slots in the crafting grid can contain planks or slabs of any of the eleven wood types.\n\nBooks arranged in a heart pattern.\n\nChiseled bookshelves and wool.\n\nChiseled bookshelves and wool.\n\nSunny in front of a chiseled bookshelf door.\n\nEfe looking at chiseled bookshelves.\n\nRedstone behind the chiseled bookshelves.\n\nEfe putting a book inside the chiseled bookshelf.\n\nEfe looking at an enchanting table.\n\nAnother wallpaper, showing Efe spooking Makena using a zombie mob head, with chiseled bookshelves above them.\n\n\u2191 MC-261722 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-257178 \u2014 Chiseled Bookshelf redstone behavior is inconsistent Block of the Month: Chiseled Bookshelf \u2013 Minecraft.net on June 29, 2023",
    "category": "Mechanics"
  },
  {
    "title": "Command Block",
    "url": "https://minecraft.fandom.com/wiki/Command_Block",
    "content": "Command Block Impulse Chain Repeat Rarity color Epic Renewable No Stackable Yes (64) Tool None Blast resistance \u221e Hardness \u221e Luminous No Transparent No Flammable No Catches fire from lava No A command block is a block that can execute commands.\n\nBecause it cannot be obtained or edited in Survival mode without cheats, it is primarily used on multiplayer servers, in Creative worlds, and custom maps.\n\nAn impulse command block is the default block type; it executes only once when activated.\n\nA chain command block executes every time when triggered.\n\nA repeating command block executes every game tick as long as it is activated.\n\nIn Java Edition, command blocks are available in the Creative inventory under the \"Operator Utilities\" tab, if the \"Operator Items Tab\" setting in the \"Controls\" Options tab is set to \"ON\".\n\nAcross both Java and Bedrock editions, they can either be obtained by using the pick block control, or by using various commands, such as / give @s minecraft:command_block, or / setblock ~ ~ ~ command_block.\n\nJust like other blocks that can store NBT data, using pick block + CTRL copies the command and options inside the command block.\n\nThis allows it to be placed elsewhere without having to re-enter the data inside.\n\nCommand blocks are not flammable, and have the same blast resistance as bedrock.\n\nCommand blocks, as well as structure blocks and jigsaw blocks cannot be mined in Survival.\n\nCommand blocks cannot be placed by a non-operator player.\n\nSee also: Commands and Tutorials/Command blocks and functions A command block can execute commands when activated by redstone power.\n\nIt always has permissions of 2 level [Java Edition only ] /1 level [Bedrock Edition only ], so it can be used to allow a specific use of a command by players who can't use that command in general (for example, allowing anyone to obtain a specific item with / give without allowing everyone to /give themselves whatever they want).\n\nA command block has an orientation that determines the chain command block to activate, and the blocks to be checked to see if a command block in \"Conditional\" mode executes.\n\nTo execute the command, in Java Edition in multiplayer enable-command-block in the server.properties file must be set to true (default is false); in Bedrock Edition \"Command Blocks Enabled\" in options must be enabled.\n\nJava Edition command block GUI To enter command or modify the command block, use the Use Item control on the command block to open the command block GUI (graphical user interface).\n\nThe GUI opens only if the player is in Creative mode, and has the proper permissions.\n\nThat means, in singleplayer, \"Allow Cheats\" [JE only ] or \"Activate Cheats\" [BE only ] in options must be enabled.\n\nIn multiplayer, Gui can be opened only by operators in Creative mode, and in Java Edition op-permission-level in the server.properties file must be set to 2 or above (default is 4).\n\nIn Java Edition to enter command or modify the command block, enable-command-block in the server.properties file must be set to true (default is false).\n\nBedrock edition command block GUI In Java Edition, opening the GUI in singleplayer pauses the game.\n\nConsole Command [JE only ] /Command Input [BE only ] Commands can be entered in the top text pane.\n\nThe text limit for commands in a command block is 32,500 characters, but the text pane can show only a small portion of this amount at a time.\n\nCommands in a command block do not need to be prefixed with the forward-slash (/) as they do in the chat window, but doing so still works.\n\nPress Tab \u21b9 to complete words or cycle through options.\n\nIn Bedrock Edition, below the console command text pane are some reminder tips about how to use target selectors.\n\nPrevious Output The bottom text pane displays the output message (success or failure) of the last executed command (it is blank [JE only ] or \" - \" [BE only ] initially).\n\nIts text is not editable.\n\nA button to the right of the Previous Output text pane [JE only ] or the left of the \"Previous Output\" [BE only ] specifies whether the last output should be stored and displayed.\n\nIt is O  [JE only ] /enabled [BE only ] when the output text should be stored and X  [JE only ] /disabled [BE only ] when the output text should not be stored.\n\nFor worlds with many command blocks, especially command blocks running on fast clocks, not storing the output text can reduce memory and storage requirements.\n\nIf gamerule sendCommandFeedback is true (the default), default to O  [JE only ] /enabled [BE only ].\n\nOtherwise defaults to X  [JE only ] /disabled [BE only ].\n\nBlock Type Left: \"Impulse\" block type.\n\nMiddle: \"Chain\" block type.\n\nRight: \"Repeating\" block type.\n\nTop: \"Unconditional\" mode.\n\nBottom: \"Conditional\" mode.\n\nClick the \"Impulse/Chain/Repeat\" [JE only ] /\"Block Type\" [BE only ] button to change the command block's type.\n\nThe default state is \"Impulse\", but non-default command blocks can be obtained and placed.\n\nThe command block also changes color when changing its command block type: \"Impulse\" command blocks are orange.\n\nThey execute once every time they are activated.\n\n\"Chain\" command blocks are green.\n\nThey execute once every time they are triggered if they have been activated.\n\n\"Repeat\" command blocks are purple.\n\nThey execute their commands once every one game tick (or more [BE only ]) as long as they are activated.\n\nCondition Click the \"Conditional/Unconditional\" [JE only ] /\"Condition\" [BE only ] button to change the command block's conditional behavior: \"Conditional\": A command block in conditional mode executes its command only when the command block behind it has executed successfully (\"Success count\" is greater than 0).\n\n\"Unconditional\" (default): A command block in unconditional mode executes its command even if there's a command block behind it that didn't execute its command successfully.\n\n\"Behind it\" in the sense of opposite to the direction the command block is facing, regardless of chain direction or even if chaining is occurring.\n\nRedstone Click the \"Always Active/Needs Redstone\" [JE only ] /\"Redstone\" [BE only ] button to change the command block's activation requirements: \"Needs Redstone\" (the default for impulse and repeat command blocks): A command block in the \"Needs Redstone\" setting can be activated only with redstone.\n\n\"Always Active\" (the default for chain command blocks): The command block is activated when set to \"Always Active\".\n\nThen it is always active even without redstone activation.\n\nExecute on First Tick [BE only ] Specifies whether a repeat command block executes its command as soon as it is activated.\n\nIf it's disabled, executes the first time after the delay from the time when it is activated.\n\nDelay in Ticks [BE only ] For impulse or chain command block, specifies how many game ticks it delays before executing a command after it is activated or triggered.\n\nFor repeat command block, specifies how many game ticks it delays to execute again.\n\nNote that for impulse or repeat command block, 0 and 1 work the same; the game takes 0 as 1.\n\nHowever, For chain command block, 0 and 1 are different.\n\nHover Note [BE only ] Specifies the name of the command block, which can be seen when you point to the block.\n\nIt is also used for message commands.\n\nIf the command block had been named in an anvil before placement, that name is used as well.\n\nIf it is empty, defaults to!.\n\nDone In Java Edition, click the \"Done\" button or \u21b5 Enter to save the command and leave the command block GUI.\n\nIn Bedrock Edition, close the GUI to save the command and changes.\n\nCancel Click the \"Cancel\" button or Esc  [JE only ] to leave the command block GUI without saving any changes.\n\nCommand blocks are redstone mechanisms and can be activated by: An adjacent active power component: for example, a lever, a block of redstone, a daylight sensor, a button etc.\n\nAn adjacent powered block (for example, an opaque block with an active redstone torch under it) A powered redstone comparator or redstone repeater facing the mechanism component Powered redstone dust configured to point at the command block (or on top of it) or directionless; a command block is not activated by adjacent powered redstone dust that is configured to point away from it.\n\nA command block can also be activated by setting it to \"Always Active\" mode.\n\nWhen activated, a command block executes its command, depending on the command block's type: An impulse command block executes its command once.\n\nA chain command block does not execute its command until it is triggered.\n\nA repeat command block executes its command once every one game tick (or more [BE only ]) until no longer activated.\n\nAn impulse command block, when it is activated, checks whether the command block behind it has executed successfully (if in conditional mode).\n\nAfter the delay of 1 game tick (or more [BE only ]), if the condition is met before the delay (if in \"Conditional\" mode), it executes its command once and triggers the chain command block it is pointing to.\n\nA repeat command block, when it is activated, after 1 game tick (always 1 no matter how many \"Delay in Ticks\" is), checks whether the command block behind it has executed successfully (if in conditional mode).\n\nIf the condition is met, and if \"Execute on First Tick\" is enabled in Bedrock Edition, it executes its command once and triggers the chain command block it is pointing to.\n\nIf it is still activated, it then checks, executes, and triggers the chain command block again after 1 game tick (or more [BE only ]).\n\nWhen executing a command, it also updates its success count: If in \"Conditional\" mode, if the command block behind it didn't execute successfully, it sets its success count to 0.\n\nOtherwise, it sets it to the success count of the command.\n\nAlso: When an impulse or repeat command block in \"Needs Redstone\" mode with a command is placed or is cloned by a command to a powered location, the new command block executes its command only if it hasn't been activated with redstone.\n\nIn Java Edition, it also needs a block update to execute its command.\n\nWhen an impulse or repeat command block in \"Always Active\" mode with a command is placed or is cloned by a command to a powered location, the new command block executes its command only if it hasn't been activated with redstone.\n\nWhen an impulse or chain command block is set to \"Repeat\", if it has been activated, checks whether the command block behind it has executed successfully (if in conditional mode).\n\nAfter 1 game tick (always 1 no matter how many \"Delay in Ticks\" is), if the condition is met, it executes its command once and triggers the chain command block it is pointing to.\n\nThen it checks, executes, and triggers the chain command block again after 1 game tick (or more [BE only ]).\n\nIf any command block having executed its command (whether successfully or unsuccessfully) faces a chain command block, it triggers the chain command block to also attempt execution.\n\nWhen a chain command block is triggered, If it has been activated, It checks whether it is in \"Conditional\" mode and the command block behind it hasn't executed successfully (Behind in the sense of the direction it is facing, not in the sense of which command block chained to it), If true, it triggers another chain command block it is facing, without executing the command.\n\nIf false, it checks whether it has been already executed in this game tick.\n\nIf false, it executes the command and triggers another chain command block it is facing.\n\nIf true, it does nothing.\n\nThat means that chained execution cannot be passed to a command block that has already executed in that game tick (loops execute only once).\n\nIf it has not been activated, it triggers the chain command block it is facing to attempt execution.\n\nChained command blocks execute simultaneously in the same game tick in the order they are chained.\n\nIn Bedrock Edition, it can also delay before executing commands if \"Delay in Ticks\" is not 0: When it is triggered, If it has been activated, the chain command block checks whether the command block behind it has executed successfully (if in conditional mode), then it delays.\n\nAfter a delay, if the condition is met before the delay (if in \"Conditional\" mode), it executes its command once and triggers the chain command block it is pointing to no matter whether the condition met.\n\nIf it has not been activated, it triggers (without delay) the chain command block it is facing to attempt execution.\n\nIn Java Edition, it can execute multiple times in the same game tick if \"UpdateLastExecution\" is set to false.\n\nIn this case, it does not check whether it has already executed in this game tick.\n\nIf the chain command block has been activated when triggered, it also updates its success count: If in \"Conditional\" mode, if the command block behind it didn't execute successfully, it sets its success count to 0.\n\nOtherwise, it sets it to the success count of the command.\n\nWhen activated, a command block can produce multiple types of output: A command block can power a redstone comparator facing away from it (possibly separated by a block) with signal strength specific to the success count.\n\nSuccess count is an integer between 0 to 2,147,483,647 (inclusive).\n\nThe signal strength always reflects the last command executed, even after the command block is deactivated.\n\nIn Java Edition, success count is usually 0 or 1, except for / function and / execute.\n\nIn Bedrock Edition, success count is an integer related to the command (e.g., the number of players affected by the command, the number of blocks that were altered, the value returned by the command, etc.) In Java Edition, leaving the command block GUI by clicking \"Done\" or pressing \u21b5 Enter resets the success count to 0, regardless of whether changes were made in the GUI.\n\nIn Bedrock Edition, leaving the GUI with changes resets the success count to 0.\n\nThe output message describes the success or failure of the executed command, and may be written to multiple destinations: Previous Output: The output message is always written to the \"Previous Output\" text pane of the command block GUI.\n\nChat: The output message is written to the chat text in singleplayer mode, or broadcast to all other ops in multiplayer mode, unless it has been suppressed with / gamerule commandBlockOutput false.\n\nSome commands may write additional text to the chat as their normal function, which won't be suppressed (for example, the / say command writes a message to the chat of all players), separate from the output message.\n\nChat messages that would usually be prefaced by a player's name (such as from the / me, / say and / tell commands) use @  [Java Edition only ] /!\n\n [Bedrock Edition only ] as the player name.\n\nIf the command block had been named in an anvil before placement, that name is used instead.\n\nIn Bedrock Edition, it can also modified in the GUI.\n\nLogs: The output message is written to multiplayer server logs unless it has been suppressed with / gamerule logAdminCommands false.\n\nCommand blocks execute commands with OP level 2.\n\nThe following commands cannot be used in a command block: / ban, / banlist, / ban-ip, / debug, / deop, / kick  [JE only ], / op, / pardon, / pardon-ip, / publish, / reload  [BE only ], / save-all, / save-off, / save-on, / stop, and / whitelist (i.e., / debug, / publish, and all of the multiplayer-only commands except / list).\n\nMain article: Easter eggs \u00a7 Command blocks Running \" Searge \" (case insensitive) as the command in the command block without a preceding \" / \" will set the previous output to \"#itzlipofutzli\".\n\nIts success count is 1.\n\nCommand blocks cannot be pushed by pistons.\n\nThey also cannot be pushed or pulled by sticky pistons.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c Available with / give command.\n\n\u2191 a b c The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A command block has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities auto: 1 or 0 (true/false) - Allows to activate the command without the requirement of a redstone signal.\n\nCommand: The command to issue to the server.\n\nconditionMet: 1 or 0 (true/false) - Indicates whether a conditional command block had its condition met when last activated.\n\nTrue if not a conditional command block.\n\nCustomName: Optional.\n\nThe name JSON text component of this command block, replacing the usual '@' when using commands such as / say and / tell.\n\nLastExecution: stores the tick a chain command block was last executed in.\n\nLastOutput: The last line of output generated by the command block.\n\nStill stored even if the game rule commandBlockOutput is false.\n\nAppears in the GUI of the block when right-clicked, and includes a timestamp of when the output was produced.\n\npowered: 1 or 0 (true/false) - States whether or not the command block is powered by redstone or not.\n\nSuccessCount: Represents the strength of the analog signal output by redstone comparators attached to this command block.\n\nTrackOutput: 1 or 0 (true/false) - Determines whether the LastOutput is stored.\n\nCan be toggled in the GUI by clicking a button near the \"Previous Output\" textbox.\n\nCaption on the button indicates current state: \"O\" if true, \"X\" if false.\n\nUpdateLastExecution: 1 or 0 (true/false) - Defaults to true.\n\nIf set to false, loops can be created where the same command block can run multiple times in one tick.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nSee also: Commands \u00a7 History Issues relating to \"Command Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe command block GUI in Bedrock Edition pre 1.12.0 The first image released by jeb_ of the command block.\n\nThe second image released by jeb_ showing the block giving glass to the player.\n\nCommand blocks creating more command blocks.\n\nA command block summoning block breaking particles.\n\nCommand blocks in a terracotta cube.\n\nThe new command block texture as revealed by Searge on twitter.\n\nTeaser image from Searge showing new command blocks.\n\nThe sides of each command block type.\n\nEach command block type placed in a wall.\n\nA bunch of eggs being summoned with a command block.\n\nEach of the command block types in each mode of operation.\n\nSearge holding a command block in front of a command block.\n\n\u2191 https://bugs.mojang.com/browse/MC-80671?focusedCommentId=228546&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-228546 \u2191 MC-140646 \u2014 resolved as \"Fixed\".\n\nBlock of the Week: Command Block \u2013 Minecraft.net on April 27, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Daylight Detector",
    "url": "https://minecraft.fandom.com/wiki/Daylight_Detector",
    "content": "Daylight Detector Daylight detector Inverted daylight detector Renewable Yes Stackable Yes (64) Tool Blast resistance 0.2 Hardness 0.2 Luminous No Transparent Yes Flammable No Catches fire from lava Yes A daylight detector [a] is a block that outputs a redstone signal based on sunlight.\n\nUsing it inverts it, causing it instead to output a redstone signal based on the darkness of the sky.\n\nDaylight detectors can be broken fairly easily by hand, but can be broken faster by using an axe.\n\nInverted daylight detectors cannot be collected directly; they drop a regular daylight detector.\n\nIn Bedrock Edition, the inverted sensor may be obtained via inventory editing or add-ons.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nGraphed daylight detector output in clear weather.\n\nSee also: Redstone circuit A daylight detector can be used to produce redstone power in proportion to the daylight cycle.\n\nA daylight detector is 0.375 blocks high (3/8ths of a block).\n\nDaylight detectors can be moved by pistons. [Bedrock Edition only ] Water and lava flow around daylight detectors without affecting them.\n\nPlacement To place a daylight detector, use the \"Use Item/Place Block\" control.\n\nA daylight detector can be \"inverted\", which reverses the power levels produced by the daylight detector.\n\nTo invert a daylight detector, aim at the placed daylight detector and use the \"Use Item/Place Block\" control.\n\nActivation A daylight detector activates when exposed to sufficient daylight (daylight detector mode) or when exposure to daylight is low enough (inverted daylight detector mode).\n\nSources of block light (torches, glowstone, etc.) cannot activate a daylight detector.\n\nBehavior An active daylight detector: powers adjacent redstone dust, including below it, and redstone comparators facing away from the daylight detector, to a power level that depends on the time of day, the weather, and the internal sky light level (see tables below) powers adjacent redstone repeaters facing away from the daylight detector to power level 15 activates adjacent redstone mechanisms, including above and below, such as pistons, redstone lamps, etc.\n\nA daylight detector has no effect on other adjacent blocks (for example, it cannot power a block the way a repeater can).\n\nThe output signal of daylight detectors in the loaded chunk is updated every 20 gametime [JE only ] /daytime [BE only ].\n\nBlock update have no effect on daylight detectors.\n\nThe daylight detector power level depends on the time of day, the weather, and the internal sky light level.\n\nUsing a daylight detector inverts it.\n\nHowever, the output of the inverted detector is not a simple inversion of the daylight detector's output; it uses a much simpler algorithm that depends only on the internal sky light level.\n\nSpecifically, it outputs a signal strength of 15 minus the current internal sky light level, where values over 15 or below 0 are taken as 15 or 0 respectively.\n\nThis means that an inverted daylight detector actually outputs a strength of 11 at midnight when it's clear weather, if it has line of sight with the sky.\n\nThe effects of shade are applied before inverting, so shade increases the signal strength when it isn't already full, and prevents it from reaching zero.\n\nDaylight detectors can be used as a fuel in furnaces, smelting 1.5 items per block.\n\nDaylight detectors can be placed under note blocks to produce \"bass\" sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Bedrock Edition: A daylight detector has a block entity associated with it which stores only its entity ID and position (the minimum data for a block entity).\n\nAlthough the daylight detector's block entity stores no additional data, the block entity ensures that the daylight detector is updated every game tick.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nFirst image of a daylight detector.\n\nThe 13w01a snapshot image released by Mojang.\n\nA graph visualising the states of a Daylight Detector under different weather conditions (ends rounded to the nearest quarter of a thousand Game-ticks) Issues relating to \"Daylight Sensor\" or \"Daylight Detector\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 Known as Daylight Detector in Java Edition and Daylight Sensor in Bedrock Edition.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Detector Rail",
    "url": "https://minecraft.fandom.com/wiki/Detector_Rail",
    "content": "This article is about the detector rail.\n\nFor other types of rails, see Rail (disambiguation).\n\nDetector Rail Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No A detector rail is a type of rail that produces a redstone signal when a minecart is on it.\n\nA detector rail can be broken fairly easily by hand, dropping itself as an item.\n\nIt can be broken faster by using a pickaxe.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA detector rail also drops as an item if: the block beneath it is removed water or lava flows over it [Java Edition only ] a piston moves it into a space with no floor below it.\n\nA detector rail can be used as a rail that can detect when minecarts are on it or how full container minecarts on it are.\n\nTo place a detector rail, use the Place Block control on the face of a block adjacent to the destination space.\n\nA detector rail can be attached to: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, upside-down slab, or upside-down stairs.\n\nA detector rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the detector rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a detector rail to the side of the fence causes the detector rail to be attached to the top of the ground next to the fence instead.\n\nIf updated while on an opened trapdoor, a detector rail (or other rails) breaks drops as an item.\n\nPlacing a minecart on a detector rail on top of a closed and unpowered trapdoor opens the trapdoor and updates it, causing the detector rail to break.\n\nIf the trapdoor is powered while the minecart is placed, the trapdoor does not open and the rail does not break.\n\nThe minecart on the detector rail powers the trapdoor and keeps it closed even if the external power source is removed, allowing the detector rail to stay on.\n\nWhen placed, a detector rail configures itself to line up with any adjacent rails (including activator rails, powered rails, and other detector rails), as well as adjacent rails one block up.\n\nIf there are two adjacent rails on non-opposite sides, or three or more adjacent rails, a detector rail lines up in the east-west direction.\n\nIf there are no adjacent rails, a detector rail lines up in the north-south direction (but if a rail is later placed to the east or west, the detector rail re-orients itself in the east-west direction even if it is already connected to another rail to the north or south).\n\nIf a rail it would line up with is one block up, a detector rail slants upward toward it (with multiple options to slant upward to, a detector rail \"prefers\", in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nMobs avoid walking across a detector rail (or other rails), but can be pushed onto them.\n\nIt cannot be placed suspended in midair, even with commands.\n\n[1] Main article: Rail Detector rails (and other rails) act as \"roads\" for minecarts.\n\nA minecart that enters a detector rail's space from either end of the detector rail continues to move, losing only a little velocity (which can then be increased again with powered rails).\n\nA minecart that enters a detector rail's space from the side turns east or south (depending on the detector rail's orientation), or in the downward direction for a slanted detector rail.\n\nExample for signal strength of a full minecart (right) and a half-full one (left) See also: Redstone circuit A detector rail activates when any minecart is on it (even if only a portion of the minecart is on it), and deactivates when no minecarts are on it.\n\nThe duration of the signal is always a multiple of 10 redstone ticks (although lag or unloading/reloading a chunk might affect this).\n\nWhile active, a detector rail: powers adjacent redstone dust and adjacent redstone repeaters facing away from the detector rail, to power level 15 powers adjacent redstone comparators facing away from the detector rail to a level corresponding to the fullness of the minecart if it is a Minecart with Chest or a Minecart with Hopper.\n\nstrongly powers any full solid opaque block beneath the detector rail to power level 15 activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, powered rails, hoppers, etc.\n\nComparators give a signal for a minecart with chest or a minecart with hopper If the minecart on the detector rail is a minecart with chest or minecart with hopper, an adjacent redstone comparator facing away from the detector rail outputs a power level proportional to the container's fullness, possibly power level 0.\n\nFor any other type of minecart (including a regular minecart with a mob riding it) the comparator's output is zero.\n\nA comparator can read the contents of a minecart with hopper or with chest on a detector rail through a solid opaque block, as it can with other container blocks.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Detector Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nImage from Notch\u2019s twitter teasing detector rails.\n\nRail Activator Rail Powered Rail Redstone View at: Template:Redstone/content [edit ] \u2191 MC-182709 \u2014 resolved as \"Invalid\".",
    "category": "Mechanics"
  },
  {
    "title": "Dispenser",
    "url": "https://minecraft.fandom.com/wiki/Dispenser",
    "content": "This article is about the block that can fire arrows and other items.\n\nFor the block that would drop arrows and others as an item, see Dropper.\n\nDispenser South West North East Up Down South West North East Up Down Renewable Yes Stackable Yes (64) Tool Blast resistance 3.5 Hardness 3.5 Luminous No Transparent No Flammable No Catches fire from lava No A dispenser is a low-capacity storage block that can fire projectiles, use certain items or tools or place certain blocks, fluids or entities when given a redstone signal.\n\nItems that do not have unique dispenser functions are instead ejected into the world.\n\nDispensers can be mined using a pickaxe, in which case it drops itself and its contents.\n\nIf mined without a pickaxe, the dispenser drops only its contents.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nTwo dispensers are naturally generated in every jungle temple, and many generate throughout trial chambers.\n\nA dispenser can be used as a container and as a redstone component that dispenses items when activated, with results varying based on the item dispensed.\n\nFor example, the trap in a jungle pyramid incorporates arrows inside a dispenser, which shoots the arrows when activated.\n\nTo place a dispenser, use it while pointing at a surface adjacent to the space it should occupy.\n\nA dispenser can be placed so that its output faces in any direction, including up or down.\n\nWhen placed, a dispenser faces the location of the player placing it.\n\nA dispenser cannot be moved by pistons. [Java Edition only ] The GUI of the dispenser.\n\nA dispenser has 9 slots of inventory space.\n\nTo open the dispenser GUI, use the Use Item control.\n\nTo move items between the dispenser inventory and the player inventory or hotbar while the dispenser GUI is open, drag or shift-click the items.\n\nTo exit the dispenser GUI, use the Esc control.\n\nBy default, the GUI of a dispenser is labeled \"Dispenser\".\n\nA dispenser's GUI label can be changed by naming the dispenser in an anvil before placing it, or by using the data command [Java Edition only ].\n\nFor example, to label a dispenser at (0,64,0) \"My Dispenser\", use data merge block 0 64 0 {CustomName:'\"My Dispenser\"'}.\n\nA dispenser can be \"locked\" by setting the dispenser's Lock tag.\n\nIf a dispenser's Lock tag is not blank, the dispenser cannot be accessed except by players holding an item with the same name as the Lock tag's text.\n\nA dispenser's Lock tag can be set or unset with the data command.\n\nFor example, to lock a dispenser at (0,64,0) so that only players holding an item named \"My Key\" can access the dispenser, use data merge block 0 64 0 {Lock:\"My Key\"}.\n\nSee also: Redstone circuit A dispenser can be used to dispense its contents randomly.\n\nActivation A dispenser is a redstone mechanism and can be activated by: an adjacent active power component: for example, a redstone torch (except that a redstone torch does not activate a dispenser it is attached to), a block of redstone, a daylight sensor, etc.\n\nan adjacent powered opaque block (for example, a block with an active redstone torch under it) a powered redstone repeater or redstone comparator facing the dispenser powered redstone dust configured to point at the dispenser, or on top of it, or a directionless \"cross\" next to it; a dispenser is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nSome of these methods can activate a dispenser (in the sense of triggering an action) without powering the dispenser (in the sense of whether the dispenser can power adjacent redstone dust, etc.).\n\nIn addition to the methods above, a dispenser can also be activated by quasi-connectivity. [Java Edition only ] A dispenser becomes activated if one of the methods above would activate a mechanism component in the block above the dispenser, even if there is no mechanism component there (even if the block above the dispenser is air or a transparent block), but only when the dispenser receives a block update (including a redstone update within two blocks of the dispenser).\n\nA dispenser does not activate if it has been less than 1 redstone tick (2 game ticks, or 0.1 seconds barring lag) since its last activation ended.\n\nBehavior When activated, a dispenser waits for 2 redstone ticks (4 game ticks, or 0.2 seconds barring lag) and then ejects one item.\n\nThe dispenser does not continue to eject items while activated; ejection occurs only on the initial activation (the rising edge of an input signal).\n\nTo eject multiple items, repeatedly activate the dispenser with a clock circuit.\n\nIf the clock runs at faster than 5 Hz (more than 5 redstone pulses a second), the dispenser fires once and then locks in the \"on\" position.\n\nIf multiple slots are occupied by items, a random occupied slot is chosen for ejection.\n\nThe slot is chosen when an item is ejected, not when the dispenser is initially activated; thus it is possible to move items into or out of a dispenser between its activation and item dispensing.\n\nThe effects of being activated vary with the type of ejected item.\n\nMost items are thrown in the direction the dispenser is facing as if a player had used the Drop Item control.\n\n(Unlike a dropper, a dispenser can't feed another container.) Other items behave differently when dispensed, as described in the table below.\n\nIn general, a dispenser cannot place blocks into the world; the exceptions are shulker boxes, powder snow, [Java Edition only ] and certain cases where the placed block would do something unusual.\n\nThere are also a couple of special cases where an empty bottle or bucket can collect liquids from the world.\n\nWhen dispensing an item that has durability would cause the item to be used, such as with flint and steel and shears, the item's durability decreases.\n\nWhen a dispenser dispenses an item, it emits a clicking sound (unless the item is a projectile or a spawn egg) and a smoke particle.\n\nIf it is empty when activated, it emits a slightly higher-pitched click.\n\nThe noise of a dispenser can be heard up to 16 blocks away.\n\nA dispenser is a full solid opaque block, so powering it directly can cause adjacent mechanism components (including other dispensers) to activate as well.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c d e MC-98316 \u2014 Wrong subtitles caused by missing distinction Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A dispenser has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nDispenser slots are numbered 0-8 with 0 in the top left corner.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the dispenser when it is next opened, or the items are otherwise interacted with.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted causes a random seed to be used.\n\n[note 1] \u2191 a b Both loot table tags are removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nFrame from first video of dispensers.\n\nThe first image released by Mojang showing the new vertical placement of Dispensers and Droppers.\n\nThe Dispenser can be seen on the top.\n\nNotes \u2191 Supposed time when fragment was filmed.\n\nBased on modified date of client.jar/gui/trap.png in Beta 1.2.\n\nIssues relating to \"Dispenser\" are maintained on the bug tracker.\n\nReport issues there.\n\nA dispenser was shown inside a minecart in one of the 1.5 teaser images, although this was never added to the game.\n\nDispensers resemble a face when not facing up or down.\n\nDispensers can be placed facing up and down, as well as the side orientation.\n\nA distribution of arrows shot straight up by a dispenser.\n\nSome other blocks can also be used to move items: Droppers can throw items or push them into adjacent containers.\n\nHoppers can push items into adjacent containers.\n\nIce and packed ice have reduced friction to the item entity movement.\n\nSlime blocks can impart velocity to item entities when pushed by a piston.\n\nWater can push item entities.\n\nQuasi-connectivity Applies to Dispensers.\n\n\u2191 MCPE-80145 \u2191 a b c d e MC-114111 \u2191 MC-165196 \u2014 resolved as \"Invalid\".\n\n\u2191 \"Minecraft Snapshot 19w42a\" \u2013 Minecraft.net \u2191 MC-50259 \u2191 https://bugs.mojang.com/browse/MC-80671?focusedCommentId=228546&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-228546 \u2191 MC-122844 resolved as \"Works As Intended\" Block of the Week: Dispenser \u2013 Minecraft.net on March 16, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Door",
    "url": "https://minecraft.fandom.com/wiki/Door",
    "content": "This article is about the block.\n\nFor the music track, see Minecraft - Volume Alpha.\n\nSee also: Trapdoor Door Java Edition Bedrock Edition View all renders Renewable Yes Stackable Yes (64) Tools Blast resistance 3 (Wood) 5 (Iron)?\n\n(Copper) Hardness 3 (Wood and copper) 5 (Iron) Luminous No Transparent Partial Flammable No Catches fire from lava Overworld wood: Yes Nether wood, iron, copper: No A door is a block that can be used as a barrier that can be opened by hand or with redstone.\n\nDoors can be found in any Overworld biome, and can also be crafted from any type of wood as well as materials found in the Nether.\n\nSome have built-in openings that are useful for determining the time of day.\n\nWooden doors can be broken with anything, but axes are fastest.\n\nAn iron door can only be broken with any pickaxes, otherwise it will drop nothing.\n\nCopper doors can only be broken with a stone pickaxe or higher, once again, they will drop nothing if broken with anything else.\n\nAll doors drop themselves if they no longer have a block beneath them that can support them.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA door is removed and drops itself as an item: if the block beneath the door is moved, removed, or destroyed if a piston tries to push the door (trying to pull a door does nothing) or moves a block into its space Doors generate in some generated structures, forming the entrances to the majority of buildings.\n\nDoors do not generate in zombie villages.\n\nOak Oak doors generate as part of: Plains villages Strongholds Right-side-up shipwrecks Spruce Spruce doors generate as part of: Taiga, snowy tundra and snowy taiga villages Right-side-up shipwrecks Jungle Jungle doors generate as part of: Desert villages Right-side-up shipwrecks Acacia Acacia doors generate as part of: Savanna villages Dark oak Dark oak doors generate as part of: Master bedroom closets in woodland mansions Right-side-up shipwrecks Iron Iron doors generate as part of: Prison rooms in woodland mansions Strongholds with a stone button to open [Java Edition only ] Copper doors can be turned into the respective waxed copper doors by using a honeycomb item on them.\n\nWaxed copper doors do not oxidize and are identical to the non-waxed version.\n\nUsing an axe on a waxed copper door turns it into the respective non-waxed copper door.\n\nIn addition, using an axe on an exposed, weathered, or oxidized copper door reverts it one stage to a regular, exposed, or weathered copper door respectively.\n\nNon-waxed copper doors are completely deoxidized when struck by lightning, and other non-waxed copper doors nearby are deoxidized randomly.\n\nWooden doors and copper doors can be opened and closed by players, villagers, wandering traders  [BE only ], vindicators  [JE only ], and piglins.\n\nWooden doors can be broken by all variants of zombies (except drowned) and vindicators in Hard difficulty.\n\nIron doors can be opened only with redstone power.\n\nDoors must be \"attached\" to a block beneath them.\n\nTo place a door, use a door item while pointing at the top of the block it should be attached to.\n\nA door can be attached to: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.) the top of an upside-down slab or upside-down stairs the top of a slime block or downward-facing piston More information about placement on transparent blocks can be found at Opacity/Placement.\n\nWhen placed, a door occupies the side of the block facing the player, or behind a player if placed in the player's own space.\n\nBy default, a door's \"hinge\" appears on the side of the half of the block that the player pointed at when placing and its \"handle\" on the opposite side [Java Edition only ], but the hinge is forced to other side by: Placing a door besides another door (creating a double door where both doors open away from each other) Placing a door between a full solid and any opaque block (top or bottom), making the hinge appear to attach to the solid block.\n\nWater and lava flow around doors.\n\nLava can create fire in air blocks next to wooden doors as if the wooden doors were flammable, but the doors do not burn (and cannot be burned by other methods either, except throwing them into lava).\n\nMobs can spawn in a space occupied by a door.\n\nThe sound of opening and closing of a door can be heard up to 16 blocks away, like most mob sounds.\n\nWhen placed using the / setblock command, only one half of a door is placed, because doors are actually two separate blocks.\n\nThe lower half still works, but with graphical bugs, and the upper half does not.\n\nRedstone cannot be used because it updates the half, breaking it.\n\nThe upper half does not drop anything when broken, the lower half drops a normal door.\n\nThis implies that the upper half is dependent on the lower.\n\nA door can be used as a switchable barrier to entity movement.\n\nAlthough primarily used to block movement by mobs and players, a door can also be used to control the movement of boats (for example, a door placed in a two-wide water flow stops a boat when perpendicular to the flow, but allow it to move again when parallel), items and minecarts (a door can stop a falling item or minecart, then allow it to drop again when the door moves), etc.\n\nIn Java Edition, doors provide a breathable space if placed underwater.\n\nIn Bedrock Edition, doors in water source blocks are waterlogged and do not displace water source blocks.\n\nDoors are 0.1875 (3 \u2044 16) blocks thick (0.1825 in Bedrock Edition).\n\nThe rest of a door's space can be moved through freely.\n\nA door occupies two block spaces and both halves normally act as a single barrier, although doors can be opened or closed with a player or mob occupying the bottom block of the door, [1] in which case the player can jump up to land on the bottom half of the door and then again to land on top of the door.\n\nTo open or close a wooden door, use the Use Item/Place Block control.\n\nWhen a door opens or closes, it immediately changes its orientation without affecting anything in the space it \"swings through\".\n\nMoving doors do not push entities the way that pistons do.\n\nVillagers, wandering traders, [BE only ] vindicators  [JE only ], piglins and piglin brutes can open and close wooden doors when pathfinding.\n\nSome zombies can break wooden doors in Hard difficulty.\n\nZombies have a 5% chance to spawn with the ability to break doors.\n\nVindicators spawned from a raid in Normal and Hard difficulty can also break wooden doors, but they do so only to reach targeted players, villagers, or wandering traders.\n\nSome vindicators may sometimes open a wooden door instead of breaking it. [Java Edition only ] Both zombies and vindicators attempt to break wooden doors only when in their \"closed\" state, even if a door is placed so that its \"open\" state blocks access (for example, by facing sideways when placing a door so that it allows passage when closed and blocks passage when open).\n\nIron doors can be opened only with redstone power (a button, a redstone circuit, etc.).\n\nAny mob can activate an iron door by stepping on a pressure plate or by triggering a tripwire.\n\nSee also: Redstone circuit Both wood and iron doors can be controlled with redstone power.\n\nA door is a redstone mechanism component and can be activated by: an adjacent active power component, including above or below: for example, a redstone torch, a block of redstone, a daylight sensor, etc.\n\nan adjacent powered block (for example, a block with an active redstone torch under it), including above or below a powered redstone comparator or redstone repeater facing the door powered redstone dust configured to point at the door or a directionless \"dot\" next to it; a door is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nAll methods of activating a door can be applied to either the top or bottom parts of a door.\n\nWhen activated, a door immediately rotates around its hinge side to its open state.\n\nWhen deactivated, a door immediately returns to its closed state.\n\nAn activated wood door can still be closed by a player or villager and does not re-open until it receives a new activation signal (if a door has been closed \"by hand\", it still needs to be deactivated and then reactivated to open by redstone).\n\nOverworld wooden doors can be used as a fuel in furnaces, smelting 1 item per door.\n\nWooden doors can be placed under note blocks to produce \"bass\" sound.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-226770 \u2191 MC-218122 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j Unavailable with / give command \u2191 a b Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Lower Door Block: Upper Door Block: Note: The videos do not mention or state Crimson, Warped, Bamboo, or Cherry doors, since the videos were uploaded before 1.16.\n\nFor a history of changes to textures and models for each block state, see /Asset history From Java Edition Beta 1.7 to Beta 1.7.2, doors produced placeholder texture particles when broken or punched on some sides.\n\nHistorical sounds: The following content is transcluded from Technical blocks/Doors.\n\nThis section is missing information about Stacking.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\n' Java Edition ' Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Wooden Door (As block name, item does not exist) 13w37a -?: Wooden Door (As block name, item does not exist)?\n\nand onwards: Oak Door Java Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Iron Door Issues relating to \"Door\" are maintained on the bug tracker.\n\nReport issues there.\n\nDoor models have an extra hinge on the opposite side of the actual functional hinge.\n\n[5] Oak Door Spruce Door Birch Door Jungle Door Acacia Door Dark Oak Door Mangrove Door Cherry Door Bamboo Door Crimson Door Warped Door Iron Door Copper Door Exposed Copper Door Weathered Copper Door Oxidized Copper Door Oak Door (item) Spruce Door (item) Birch Door (item) Jungle Door (item) Acacia Door (item) Dark Oak Door (item) Mangrove Door (item) Cherry Door (item) Bamboo Door (item) Crimson Door (item) Warped Door (item) Iron Door (item) Copper Door (item) Exposed Copper Door (item) Weathered Copper Door (item) Oxidized Copper Door (item) Naturally occurring iron door in a stronghold.\n\nFirst picture of brand-new 1.8 variants of doors.\n\nA creeper behind some dark oak doors.\n\nAll types of doors with their respective trapdoors.\n\nArrows shot into a door that was opened, causing a floating bug.\n\nFirst image of three doors being crafted at once.\n\nA closet made from oak doors.\n\nBamboo door concept art.\n\nBamboo door prototype textures.\n\n\u2191 MC-54255 \u2013 \"You can stand on the bottom block of a door, allowing you to climb it like a ladder\" resolved as \"Won't Fix\" \u2191 MC-2844 \u2013 \"Doors have no placement sound.\" resolved as \"Fixed\" \u2191 MCPE-10079 \u2013 \"Doors don't have a placement sound\" resolved as \"Fixed\" \u2191 MCPE-43725 \u2191 MC-106697 \u2014 resolved as \"Works As Intended\".\n\nTaking Inventory: Door \u2013 Minecraft.net on September 29, 2022 Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Dropper",
    "url": "https://minecraft.fandom.com/wiki/Dropper",
    "content": "This article needs to be updated.\n\nPlease update this page to reflect recent updates or newly available information.\n\nReason: Add info about droppers being able to put books into chiseled bookshelves and put discs into jukeboxes.\n\nThis article is about the block that drops arrows as an item.\n\nFor the block that can fire arrows, see Dispenser.\n\nDropper South West North East Up Down South West North East Up Down Renewable Yes Stackable Yes (64) Tool Blast resistance 3.5 Hardness 3.5 Luminous No Transparent No Flammable No Catches fire from lava No A dropper is a low-capacity storage block that can eject its contents into the world or into other containers when given a redstone signal.\n\nA dropper can be mined with a pickaxe, in which case it drops itself and its contents.\n\nIf mined without a pickaxe, the dropper drops only its contents.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA dropper can be used as a container or as a redstone component to move objects.\n\nA dropper can be placed so that its output faces in any direction, including up or down.\n\nWhen placed, the dropper's output faces toward the player.\n\nWith default textures, the droppers output side looks like a face when positioned for horizontal output.\n\nOtherwise, the output side has a square hole.\n\nA dropper cannot be moved by pistons in Java Edition.\n\nGUI of the dropper.\n\nA dropper has 9 slots of inventory space.\n\nTo open the dropper GUI, use the Use Item control.\n\nTo move items between the dropper inventory and the player inventory or hotbar while the dropper GUI is open, drag or shift-click the items.\n\nTo exit the dropper GUI, use the Esc control.\n\nBy default, the GUI of a dropper is labeled \"Dropper\".\n\nA dropper's GUI label can be changed by naming the dropper in an anvil before placing it, or by using the / data command [Java Edition only ] (for example, to label a dropper at (0,64,0) \"Alice's Dropper\", use / data merge block 0 64 0 {CustomName:'\"Alice's Dropper\"'}).\n\nA dropper can be \"locked\" (or subsequently unlocked) by setting the dropper's Lock tag with the / data command.\n\nIf a dropper's Lock tag is not blank, the dropper cannot be accessed except by players holding an item with the same name as the Lock tag's text.\n\nFor example, to lock a dropper at (0,64,0) so that only players holding an item named \"Alice's Key\" can access the dropper, use / data merge block 0 64 0 {Lock:\"Alice's Key\"}. [Java Edition only ] See also: Redstone circuit A dropper can be used to eject items, or push items into another container.\n\nActivation A dropper can be activated by: an adjacent active power component (Exceptions: a redstone torch does not turn ON a dropper it is attached to) an adjacent powered opaque block (strongly-powered or weakly-powered) a powered redstone repeater or redstone comparator facing the dropper powered redstone dust configured to point at the dropper, or on top of it, or a directionless \"dot\" next to it; a dropper is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nIn addition to the methods above, droppers can also be activated by quasi-connectivity. [Java Edition only ] A dropper activates if one of the methods above would activate a mechanism component in the block above the dropper, even if there is no mechanism component there (even if the block above the dropper is air or a transparent block), but only when the dropper receives a block update (including a redstone update within two blocks of the dropper).\n\nA dropper has a 2 redstone tick (4 game ticks, or 0.2 seconds barring lag) delay between activation and a response.\n\nDuring this time, additional inputs are ignored.\n\nBehavior See also: Tutorials/Item elevator \u00a7 Dropper When activated, a dropper waits 2 redstone ticks (4 game ticks, or 0.2 seconds barring lag) and then ejects one item from its inventory.\n\nThe dropper does not continue to eject items while activated \u2014 ejection occurs only on the initial activation (the rising edge of an input signal).\n\nTo eject multiple items, repeatedly activate the dropper with a clock circuit.\n\nIf multiple slots are occupied by items, a random occupied slot is chosen for ejection.\n\nThe slot is chosen when an item is ejected, not when the dropper is initially activated, thus it is possible to move items into or out of a dropper between its activation and item dispensing.\n\nIf the dropper is facing a container, the ejected item is transferred into the container.\n\nIf the container it is facing is full the dropper does not activate.\n\nOtherwise, the item is ejected in the direction the dropper is facing, as if a player had used the Drop control.\n\nEven items that would be treated differently by a dispenser (such as arrows) are simply ejected by a dropper.\n\nDispensers and droppers that are powered directly (or \"strongly powered\") are treated as full containers.\n\nThat is, a dropper will not activate to transfer its ejected item into a container if that container is a strongly powered dropper or dispenser.\n\nA dropper makes a clicking noise (the random.click sound event) when activated empty, when ejecting items into air, or when ejecting items into any block other than a chest type container or barrel or another dropper.\n\nIt is silent when it successfully transfers an item into any kind of chest or barrel, or another dropper.\n\nA dropper is an opaque block, so powering it directly can cause adjacent mechanism components (including other droppers) to activate as well.\n\nA line of droppers, each pushing items into the next dropper, is known as a dropper pipe.\n\nA dropper pipe must be clocked to move items, but can be clocked to move items faster than a hopper pipe's transfer rate.\n\nWhen a dropper pipe pushes items upward, it is known as a droppervator (short for \"dropper elevator\").\n\nEvery dropper activated by the same redstone signal will process its activity during the same game tick.\n\nHowever, the dropper that is directly powered will eject its item first, and then the adjacent droppers will eject their items.\n\nThe result is that, in a dropper pipe or droppervator, the item in the dropper that gets directly powered by redstone will move 2 spaces down the pipe.\n\nThis item will first get ejected by the directly powered dropper and then, on the same game tick, it will get ejected by the adjacent dropper.\n\nDroppers can be placed under note blocks to produce \"bass drum\" sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c d e f g h i The dropper reuses other containers' sound events instead of having its own, see MC-98316.\n\nBedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A dropper has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nDropper slots are numbered 0-8 with 0 in the top left corner.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the dropper when it is next opened, or the items are otherwise interacted with.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted uses a random seed.\n\n[note 1] Lunar: Exists only in the april fools snapshot 23w13a_or_b.\n\nOptional.\n\nWhen set to any full number from -128 to 127, turns it to a lunar base dropper, and placing light or heavy pressure plate on top of it will create the lunar base structure.\n\n\u2191 a b Both loot table tags get removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nThe first image of droppers (bottom) released by Mojang.\n\nThe 13w03a banner featuring a dropper and a minecart with hopper.\n\nA dropper in action.\n\nIssues relating to \"Dropper\" are maintained on the bug tracker.\n\nReport issues there.\n\nDispenser Hopper Block of the Week: Dropper \u2013 Minecraft.net on October 8, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Etho Slab",
    "url": "https://minecraft.fandom.com/wiki/Etho_Slab",
    "content": "This article documents an April Fools' joke.\n\nThis feature was exclusively part of a joke version and is not currently planned for addition to regular Minecraft.\n\nIt is documented here on the wiki due to being officially-released content by Mojang Studios, even if not present in a final version.\n\nEtho Slab Slab Double Slab Renewable No Stackable Yes (64) Tool Any tool Blast resistance?\n\nHardness?\n\nLuminous None Transparent No Flammable Yes (15) Catches fire from lava Yes The etho slab is a joke slab introduced exclusively in Java Edition 2.0.\n\nIt is a reference to the YouTube channel EthosLab.\n\nPunching the block breaks it instantly and drops in the item form.\n\nEtho slabs are crafted using 3 TNT blocks.\n\nEtho slabs behave like TNT although there is a 25% chance to spawn a falling anvil one block above the nearest player up to 20 blocks away.\n\n\u2191 a b MC-177082 [verify ] Blocks with data value 1 are called \"Etho Slab (Lit??)\" and explode on punch.\n\n\"Etho Slab\" is an April Fools feature, and as such issues related to it cannot be fixed.\n\nRedstone View at: Template:Redstone/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Fence Gate",
    "url": "https://minecraft.fandom.com/wiki/Fence_Gate",
    "content": "\"Gate\" redirects here.\n\nFor other uses, see Gate (disambiguation).\n\nFence Gate Closed Opened Renewable Yes Stackable Yes (64) Tool Blast resistance 3 Hardness 2 Luminous No Transparent Yes Flammable Overworld: Yes (5) Nether: No Catches fire from lava Overworld: Yes Nether: No A fence gate is a block that shares the functions of both the door and the fence.\n\nA fence gate can be broken with anything, but an axe is fastest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nOak Oak fence gates generate as part of: Plains villages Spruce Spruce fence gates generate as part of: Taiga, snowy tundra and snowy taiga [BE only ] villages Jungle Jungle fence gates generate as part of: Desert villages Acacia Acacia fence gates generate as part of: Savanna villages Dark oak Dark oak fence gates generate as part of: Woodland mansions A fence gate can provide access to a fenced-in area.\n\nA fence gate can be used as a switchable barrier that can be opened and closed by hand or by redstone power.\n\nTo place a fence gate, use the Place Block control while pointing at a block facing the space the fence gate should occupy.\n\nWhen placed, a fence gate automatically faces toward the player who placed it, regardless of any other fences around it.\n\nA fence gate can be placed whether there is a solid block beneath it or not.\n\nFences, nether brick fences and walls connect to fence gates, but glass panes and iron bars do not.\n\nA fence gate floats in mid-air when placed with no connection to anything else.\n\nA fence gate can be used as a switchable barrier.\n\nTo open or close a fence gate, use the Use Item control.\n\nWhen a fence gate opens or closes, it immediately changes its orientation without affecting anything in the space it \"passes through\"\u2014moving fence gates don't push entities the way that pistons do.\n\nWhen opened by hand, a fence gate always opens away from the player.\n\nAlthough a fence gate appears to be only one block tall, a closed fence gate is a barrier one and a half blocks high.\n\nMost mobs cannot jump over a fence gate, and entities on top of the fence gate stand half a block above it.\n\nAn open fence gate is completely non-solid, similar to a sign or a torch.\n\n[1] Multiple open fence gates next to each other can be passed through as if the entire space is open.\n\nHostile mobs recognize closed fence gates as a block and cannot detect players through it unless they were already detected.\n\nThe sound of opening and closing of a fence gate can be heard up to 16 blocks away, like most mob sounds.\n\nSee also: Redstone circuit A fence gate can be controlled with redstone power.\n\nA fence gate is a redstone mechanism and can be activated by: an adjacent active power component, including above or below: for example, a redstone torch, a block of redstone, a daylight sensor, etc.\n\nan adjacent powered block (for example, a block with an active redstone torch under it), including above or below a powered redstone comparator or redstone repeater facing the fence gate powered redstone dust configured to point at the fence gate or a directionless \"dot\" next to it; a fence gate is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nWhen activated, a fence gate opens immediately.\n\nWhen deactivated, a fence gate closes immediately.\n\nAn activated fence gate can still be closed by a player, and won't re-open until it receives a new activation signal (if a fence gate has been closed \"by hand\", it still needs to be deactivated and then reactivated to open by redstone).\n\nFence gates can be moved by pistons.\n\nWhen an activated fence gate is moved by a piston to a position where it shouldn't be activated, it doesn't change its state until it receives a redstone update.\n\nOverworld wooden fence gates can be used as a fuel in furnaces, smelting 1.5 items per fence gate.\n\nFence gates can be placed under note blocks to produce \"bass\" sounds.\n\nWhile a fence gate cannot be equipped in the head slot in Survival mode, equipping it using commands causes it to appear as eyeglasses.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 a b Due to MCPE-168021, this sound plays less often than it should Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k Available with / give command.\n\n\u2191 a b c d e f g h i j k The block's direct item form has the same id as the block.\n\nMain article: Block states Java Edition: Bedrock Edition: For a more in-depth breakdown of changes to textures and models, including a set of renders for each state combination, see /Asset history Issues relating to \"Fence Gate\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-252813 \u2014 \"Open fence gates don't have any collision\" \u2014 resolved as \"Works As Intended\".\n\n\u2191 http://web.archive.org/web/20111231204100/http://getsatisfaction.com/mojang/topics/gates_for_fences \u2191 \"As the question was brought up, yes there are fence gates in 1.8.\n\nNot 100% satisfied with their looks though.\n\nYou'll see at PAX Prime\" \u2013 @jeb_ (Jens Bergensten) on X, August 19, 2011 \u2191 MCPE-44296 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Honey Block",
    "url": "https://minecraft.fandom.com/wiki/Honey_Block",
    "content": "Not to be confused with Honeycomb Block.\n\nHoney Block Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Partial [a] Flammable No Catches fire from lava No Honey blocks are storage blocks equivalent to four honey bottles.\n\nHoney blocks are sticky and can be used in conjunction with pistons to move blocks and adhered entities.\n\nHoney blocks can be broken instantly, and always drop as an item, regardless of what is used to mine them.\n\nThe 2\u00d72 inventory crafting grid is sufficient to craft a honey block.\n\nUnlike the slime block, the honey block does not carry a redstone signal because it is a transparent block. [Java Edition only ] When being moved by a piston, entities on a honey block's top surface move with it.\n\nThey are not launched in the direction of the push, as a slime block would do.\n\nWhen a honey block is moved by a piston, it attempts to move all adjacent blocks in the same direction.\n\nA honey block can move any block a sticky piston can pull, except for glazed terracotta and slime blocks.\n\nThe blocks that are moved may, in turn, push other blocks, as if they were being pushed by a piston.\n\nFor example, a honey block sitting on the ground attempts to move the ground block underneath itself, which pushes additional ground blocks in the direction of motion.\n\nWhen the adjacent block that is moved is also a honey block, that block also attempts to move all its adjacent blocks.\n\nFor example, a 2\u00d72\u00d72 cube of honey blocks may be pushed or pulled as a unit by a single piston acting on any of the blocks in the cube.\n\nA honey block adjacent to a block that cannot be moved by pistons ignores the immobile block.\n\nHowever, if an adjacent block could be moved but is prevented by the presence of an immobile block, the honey block is also prevented from moving.\n\nLiquids are an exception: they are not moved, but neither do they stop a piston from pushing or pulling blocks into their space (usually destroying the liquid, and in a rare case displacing it through the piston).\n\nHoney blocks, unlike slime blocks, cannot have a redstone signal sent through them via a repeater or an observer, etc.\n\nHoney blocks are not pulled by a non-sticky piston, nor are they moved if an adjacent (non-honey) block is moved by a piston.\n\nThe maximum of 12 blocks moved by a piston still applies.\n\nFor example, a 2\u00d72\u00d73 of honey blocks may be pushed or pulled by a sticky piston as long as no other movable blocks are adjacent to it.\n\nHowever, the platform in which a honey block shifts is entirely dependent on the placement of the sticky piston, as well as placement of blocks too.\n\nIn Java Edition honey blocks moved by pistons do not move entities that are touching the side or bottom of the block.\n\n[1] In Bedrock Edition honey blocks moved by pistons do move entities that are touching the side of the block.\n\n[more information needed for Bedrock Edition ] Honey blocks slow down entities walking on top of them and prevent them from jumping.\n\nPlayers walking on honey blocks move 2.508 m/s, about a 60% reduction from the normal walking speed.\n\nIn Bedrock Edition, players also slow down slightly if walking up against the side of it.\n\nPlayers, who can normally jump about 1 1 \u2044 4 blocks high, can jump about 3 \u2044 16 blocks high on honey; this is an 85% reduction.\n\nThey can more easily step up onto other blocks than jump up onto them.\n\nThis effect applies even through other blocks on top of honey blocks, as long as they are half-block or less in height - so the player cannot jump on carpets, bottom slabs or daylight detectors that are placed on honey blocks.\n\nThis effect also applies regardless of a player's mode of movement, such as gliding with elytra or swimming.\n\nEntities pressed against the sides of a honey block slide down at a slow speed and do not take fall damage, similar to going down a ladder but with a gradually decreasing horizontal momentum. [Java Edition only ] This allows players to jump 2 blocks further by holding on to the walls.\n\nThe slowdown induced by honey blocks also stacks with the Slow Falling status effect.\n\nAs with hay bales, falling onto a honey block reduces fall damage by 80%.\n\nFor example, if a player or mob falls from a height that would normally cause 10 fall damage, the fall causes 2 damage instead.\n\nWhen a honey block is near bees and a beehive or bee nest, bees occasionally fly close and attach to it for a few seconds, resembling an action of eating honey.\n\nWhen doing this, the bee stops fluttering its wings, and firmly attaches its face to the honey block regardless of whether flowers are nearby.\n\nAlthough the 2\u00d72 inventory crafting grid is sufficient to craft a honey block, a 3\u00d73 crafting table grid is required to convert a honey block back into four honey bottles.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 Can be 1.0 or 0.8 for each sound, except slide1, which can be 1.0 or 0.9 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nIssues relating to \"Honey Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nHoney blocks are not full blocks: despite taking up 16 3 pixels, the collision box is only 14\u00d714\u00d715 pixels.\n\nThe bottom face of the honey block is the same depth as a full block, though it is only 14\u00d714 pixels.\n\nSmall entities such as arrows are free to move through the gap between honey blocks as they are under 2 pixels wide.\n\nOnly when entities are partially \"in\" the honey block (i.e., they are touching the 14 3 -pixel hitbox) can they slide down against it.\n\nIn real life, bees eat honey when the temperature is low and flowers are difficult to find.\n\nOtherwise, pollen and nectar are their primary food sources.\n\nThe bottom surface of the honey block does not slow down entities.\n\nIt takes 1 minute and 14 seconds to slide down 256 honey blocks.\n\nThe player cannot place some blocks on the honey block such as vines, ladders and torches. [Java Edition only ] [3] A bee \"eating\" from a honey block.\n\nA pollen-loaded bee stopping by, having some honey.\n\nA player sliding down a stack of honey blocks, as seen in the reveal.\n\nEarly honey block with lack of cube inside.\n\n\u2191 Like leaves, this block diffuses sky light only from directly above.\n\n\u2191 MC-163122 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-1133 \u2014 \"Whether or not a player experiences some effect is calculated based on the block under the center of the player\" \u2014 resolved as \"Fixed\".\n\n\u2191 MC-131115 Block of the Week: Honey \u2013 Minecraft.net on May 21, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Hopper",
    "url": "https://minecraft.fandom.com/wiki/Hopper",
    "content": "This article is about the block.\n\nFor the crash utility, see Hopper (crash utility).\n\nHopper Java Bedrock View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 4.8 Hardness 3 Luminous No Transparent Yes Flammable No Catches fire from lava No A hopper is a low-capacity storage block that can be used to collect item entities directly above it, as well as to transfer items into and out of other containers.\n\nA hopper can be locked with redstone power to stop it from moving items into or out of itself.\n\nTo obtain a hopper, mine it with a pickaxe.\n\nUsing any other item to mine a hopper drops only its contents.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA hopper can be crafted from 5 iron ingots and a chest.\n\nSee also: Tutorials/Hopper Hoppers can face down or sideways.\n\nA hopper can be used as a container, as a crafting ingredient, and as a redstone component.\n\nA hopper has an \"output\" tube at its bottom that can face down or sideways and provides a visual indication of which block the hopper is set up to drop its items into, if that block has an inventory.\n\nTo place a hopper, use the Place Block control while aiming at the surface to which its output should face (Hoppers do not orient themselves automatically).\n\nTo place a hopper directly on the face of an already interactable block, the player can sneak while placing the hopper.\n\nAttempting to place a hopper aimed on the bottom face of a block instead faces downward.\n\nWith some blocks, such as the furnace and brewing stand, the hopper has multiple uses.\n\nA hopper does not change direction after placement, and it is not attached to the container it faces; the container can be removed or replaced, and the hopper remains unchanged.\n\nHoppers cannot be moved by pistons. [Java Edition only ] Despite not being a solid block, attached blocks such as rails, levers, tripwire and redstone dust can be placed on top of hoppers, but not on their sides.\n\nHopper GUI showing the hopper's five slots of inventory at the top and the player's inventory below.\n\nA hopper can be used as a container and has 5 slots of inventory space.\n\nTo open the hopper GUI, use the Use Item/Place Block control.\n\nTo move items between the hopper inventory and the player inventory or hotbar while the hopper GUI is open, drag or shift-click the items.\n\nTo exit the hopper GUI, use the Esc key, B button or circle button, depending on the device.\n\nBy default, the GUI of a hopper is labeled \"Item Hopper\".\n\nA hopper's GUI label can be changed by naming the hopper in an anvil before placing it, or, in Java Edition, by using the data command (for example, to label a hopper at (0,64,0) \"Steve's Hopper\", use /data merge block 0 64 0 {CustomName:'\"Steve's Hopper\"'}).\n\nIn Java Edition, a hopper's GUI can be \"locked\" (or subsequently unlocked) by setting the hopper's Lock tag with the data command.\n\nIf a hopper's Lock tag is not blank, the hopper cannot be accessed except by players holding an item with the same name as the Lock tag's text.\n\nFor example, to lock a hopper at (0,64,0) so that only players holding an item named \"Steve's Key\" can access the hopper, use /data merge block 0 64 0 {Lock:\"Steve's Key\"}.\n\nA hopper can be used to craft a minecart with hopper.\n\nSee also: Redstone circuit and Redstone components \u00a7 Hopper Flowchart of hopper logic While a hopper is not powered by redstone signals, it operates with three functions: Collect item entities (free-floating items in the world) into its inventory from the space above it Pull a single item into its inventory from a container above it Push a single item from its own inventory into a container it faces A hopper first attempts to push any items inside it.\n\nAfterward, it checks if the block above it is a type of container.\n\nIf so, it attempts to pull from it.\n\nOtherwise, the hopper attempts to collect item entities.\n\nNotably, hoppers can push to and pull from other hoppers, forming hopper pipes or hopper chains, which allow transporting items across several blocks and are further discussed below.\n\nWhen a hopper receives a redstone signal (and is considered to be \"activated\"), all three functions stop.\n\nTo avoid confusion over the terms \"activated\" and \"deactivated\", powered hoppers are often described as being locked and unpowered hoppers described as being unlocked.\n\nHoppers can be powered by soft powered blocks, meaning a redstone dust trail pointing into a block touching the hopper locks it just as effectively as a redstone block or any other power component touching the hopper.\n\nWhen the hopper is unlocked during a redstone tick, it does not push or pull/collect during the same tick, but has a delay of 1 redstone tick instead.\n\nWhile a locked hopper does not push or pull/collect items, it may still receive items from dispensers, droppers and other hoppers, and may have its items pulled out by another hopper beneath it.\n\nHence, the item flow in a horizontal hopper pipe may be stopped by locking just one of the hoppers, but stopping a vertical hopper pipe requires locking two adjacent hoppers at the same time, such that both the pushing of the top one and the pulling of the bottom one are stopped.\n\nA hopper does not output any redstone signals by itself, but its fullness can be read using a redstone comparator, which needs to be placed next to it and facing away from it.\n\nAn empty hopper outputs a signal strength of 0 and a completely full hopper outputs a signal strength of 15.\n\nNotably, a single stackable item (16 or 64) outputs a signal strength of 1 and a single non-stackable item outputs a signal strength of 3.\n\nIn Java Edition, if the hopper being read is part of a horizontal hopper pipe, the comparator can individually read each item passing through the chain, because items are pushed through the hoppers one by one at a speed that is manageable by the comparator.\n\nIf there is an uninterrupted stream of items, the comparator does not switch off in between items.\n\nOn the other hand, in a vertical hopper pipe, some of the hoppers may never produce a reading above 0, even with a continuous stream of items, because pushes and pulls both occur in the same game tick: The hoppers' items get pulled out a single game tick after they're pushed in and this isn't measurable by a comparator, because comparators need measurements lasting at least 1.5 redstone ticks to produce a reading.\n\nA hopper collects items dropped on top of it if the space above the hopper not occupied by a storage block.\n\nItems are gathered from the entire 1 block space above the hopper, meaning that items sitting on partial blocks such as soul sand directly above a hopper can be collected.\n\n[1] It is also possible for a hopper to collect items from inside a full, solid block, a situation that might come from items rising up through solid blocks or being summoned.\n\nItem entities are not collected when they are outside of the collection area however; for example, items on top of a stone block directly above a hopper are not collected.\n\nCollected items are placed in the leftmost empty slot of a hopper's inventory.\n\nIn Java Edition, if there is no container above the hopper, then the hopper collects dropped items in the order in which they landed on the hopper.\n\nThis order is remembered even while a hopper is locked.\n\nFor instance, if a hopper is locked under a carpet while a fully equipped armor stand is broken above it, then it always collects items in this order when it is unlocked: armor stand, boots, leggings, chestplates, helmets.\n\nThis is due to the order in which these items land.\n\n[verify ] In Bedrock Edition, hoppers do not remember the order in which items land on the hopper.\n\nInstead, hoppers with multiple dropped items above them collect the items in the order in which they entered the chunk in which the hopper is located.\n\nItems that drop from a broken armor stand are collected in a random order.\n\n[2] Hoppers usually check for dropped items every game tick and they can collect items even before they are picked up by a player [verify ] or destroyed by lava.\n\nHowever, in Bedrock Edition hoppers have a \"collection cooldown\" time.\n\nAfter collecting an item (or stack of items), a hopper waits 4 redstone ticks (0.4 seconds, barring lag) before attempting to collect again.\n\nHoppers collect groups of items all at once rather than collecting them as single items one at a time.\n\nAs a result, hoppers can collect item entities much faster than they can pull items from a container.\n\nPulling from a moving minecart with chest or minecart with hopper is even slower, since the minecart is not always above the hopper.\n\nA hopper with a storage container above it (such as a furnace, chest, dropper, composter, or another hopper) attempts to pull from the container instead of checking for floating items above it, and hence can not collect items.\n\nA hopper always tries to push or pull items using the leftmost available slot.\n\nWhen a hopper is removing items from a chest, the items disappear from left to right.\n\nSimilarly, when filling up a chest, the chest fills up from left to right.\n\nHoppers prioritize pulling from the first slot of a container over pulling into the first hopper slot.\n\nIf a hopper has stone in its first slot and nothing in its second while the container it is pulling from has chicken in its first slot but stone in the second, the hopper pulls the chicken from the first slot of the container into its empty second slot.\n\nHowever, if the hopper is unable to pull the chicken, such as if all slots are filled with stone, the hopper pulls the stone from the second slot of the container instead.\n\nSimilarly, hoppers prioritize pushing from their first slot over pushing into the first slot of a container.\n\nIf a hopper has stone in its first slot and chicken in its second while the container it is pushing to has chicken it its first slot but stone in the second, the hopper pushes stone from its first slot into the second slot of the container.\n\nIn Java Edition the checks done by a hopper while pulling generally require less processing than the checks done by a hopper attempting collection.\n\nTherefore, a chain of hoppers topped with storage containers rather than air/solid blocks has better performance (measured as milliseconds of processing per tick) and lower potential for processing lag.\n\n[3] The performance improvement achieved is correlated with the number of storage slots the container has.\n\nPlacing composters (with no storage slots but still with custom output logic) on top of hoppers provide the greatest efficiency, while double chests actually degrade performance, even when sharing each double chest across two hoppers.\n\n[3] In Bedrock Edition a chain of hoppers with air or non-container blocks on top has better performance than a chain of hoppers topped by container blocks.\n\n[4] This may be because, even though hoppers with containers on top do not check for items, they do check for hopper-minecarts and chest-minecarts to pull from, and that involves scanning the chunk entity list.\n\n[5] A B Push then Pull Chest A is full of items while the hopper and Chest B are empty.\n\nItem pushes and pulls are processed in the same game tick, but pushes are processed before pulls.\n\nIn the schematic, the empty hopper first pulls an item from chest A as it cannot push anything into chest B.\n\nAfter the cooldown, the hopper first pushes its item into chest B before pulling another item from chest A, both pushing and pulling in the same tick, and the process repeats.\n\nThe hopper stops pulling when A is empty, and stops pushing when B becomes full.\n\nHoppers also have a \"transfer cooldown\" time.\n\nAfter pulling and/or pushing items, a hopper waits 4 redstone ticks (0.4 seconds, barring lag) before pulling or pushing again (a transfer rate of 2.5 items per second, barring lag).\n\nA hopper that has an item pushed into it from another hopper also starts a 4 tick cooldown period, regardless of whether it pushed or pulled items itself.\n\nItem entities can be collected at any time without affecting the transfer cooldown time.\n\nThe transfer cooldown and the Bedrock Edition collection cooldown are independent of each other.\n\nSome containers interact with hoppers in specific ways: Composter Hoppers above composters can push compostable items into the composter's top face with a chance of increasing the level of the composter as if the player used the item on the composter.\n\nItems that are not compostable cannot be pushed into the composter.\n\nHoppers below the composter can pull bone meal when the composter is in stage 8, emptying the composter and resetting it to stage 0.\n\nHoppers to the side of a composter do not interact with it.\n\nBrewing Stand A working hopper on the top face of a brewing stand deposits only into the ingredient slot and it can push only valid brewing ingredients.\n\nA hopper on side face of a brewing stand can deposit only blaze powder or filled bottles into the three brew slots.\n\nA hopper underneath a brewing stand always extracts from the three brew slots, whether brewing is finished or not\u2014The hopper must be locked to allow potions to finish brewing.\n\nChest Trapped Chest Large chests and large trapped chests are treated as a single container: A hopper depositing into a large chest fills up the entire chest and a hopper underneath a large chest empties the entire chest.\n\nTrapped chests being accessed by a player lock any adjacent hoppers, per the standard behavior of a hopper next to an active power source.\n\nFurnace Blast Furnace Smoker A working hopper pointing into top of a furnace deposits only into the ingredient slot.\n\nIt can push any item, including items that can't be smelted by the furnace.\n\nA hopper pointing into the side of a furnace deposits into the fuel slot, and only items that are usable as fuel.\n\nA hopper below a furnace pulls everything from the output slot and empty buckets from the fuel slot left over from using lava buckets as fuel.\n\nWhen a hopper removes items from a furnace, the experience points are 'stored' in the furnace until a player removes at least one smelted item, or the furnace block is broken.\n\nHopper A sequence of three or more hoppers, each pushing items into the next, is called a hopper pipe.\n\nWorking horizontal hopper pipes simply push items into each other at the expected rate of 2.5 items per second, but vertical hopper pipes are more complicated, as the hoppers are trying both to pull and to push.\n\nWhen a vertical pipe pulls from a single container, it simply transfers items at 2.5 items per second because the transfer rate is limited by the first hopper pulling items from the container.\n\nIf a stack of items is in a vertical pipe, the items can be transferred twice as fast, because the hopper with the item stack is pushing items down while the hopper below it is also pulling items down.\n\nMinecart with Chest Minecart with Hopper Unlocked hoppers fill chest minecarts and hopper minecarts if any part of the entity's hitbox is within the hopper's target block-space.\n\nHopper minecarts try to pull items from the hopper at high speed.\n\nHoppers can pull items from minecarts above them so rails can be placed directly on the top faces of a hoppers.\n\nIf a detector rail is in the right position, it could lock the hopper per standard redstone-hopper behavior.\n\nJukebox Hoppers can insert music discs into jukeboxes, and extract the music discs after they finish playing.\n\nShulker Box Hoppers cannot put shulker boxes into other shulker boxes.\n\nThis allows for the creation of certain item filters.\n\nOtherwise, hoppers interact with shulker boxes normally.\n\nLectern Hoppers cannot remove or place books on lecterns.\n\nThe redstone pulse emitted from a lectern when a page is turned can temporarily lock hoppers.\n\nEnder Chest Hoppers cannot interact with ender chests in any way.\n\nBarrel Dispenser Dropper Boat with Chest Hoppers interact normally with barrels, dispensers, droppers, and boats with chests.\n\nChiseled Bookshelf Hoppers and minecart with hoppers can insert and remove books from the bookshelf.\n\nAs with any other container, items are taken from the first slot that has an item that can fit in the hopper and are inserted into the first empty slot.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c MC-98316 \u2014 Wrong subtitles caused by missing distinction Bedrock Edition: None Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Bedrock Edition: A hopper has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the hopper when it is next opened, or the items are otherwise interacted with.\n\nNote that the loot table is used when the hopper tries to push items, when it's enabled.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted uses a random seed.\n\n[note 1] TransferCooldown: Time until the next transfer in game ticks, naturally between 1 and 8 or 0 if there is no transfer.\n\n\u2191 a b Both loot table tags are removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Hopper\" are maintained on the bug tracker.\n\nReport issues there.\n\nA real-world hopper is a large, pyramidal or cone-shaped container used in industrial processes to hold particulate matter, like dust, gravel, nuts, seeds, etc., and can then dispense them from the bottom.\n\nA hopper can transfer 9000 items per hour, or 150 items per minute.\n\nIn snapshot 13w01a, the hopper item uses a 'WIP' sprite, though the item still read \"Hopper\".\n\nThe 13w02a Banner includes a minecart with TNT and a hopper.\n\n\u2191 https://bugs.mojang.com/browse/MCPE-55824 \u2191 https://bugs.mojang.com/browse/MCPE-120586 \u2191 a b https://www.youtube.com/watch?v=LC3ZOOI1Rf0 \u2191 https://cdn.discordapp.com/attachments/715523208530362389/890030941282631741/Redstone_MSPT_measure.xlsx \u2191 MCPE-109449 \u2191 MC-6737 \u2191 MC-5991 Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Lectern",
    "url": "https://minecraft.fandom.com/wiki/Lectern",
    "content": "Lectern View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 2.5 Hardness 2.5 Luminous No Transparent No Flammable Yes (30) Catches fire from lava Yes A lectern is a block used to display and read written books from.\n\nIt also serves as a librarian 's job site block.\n\nEmpty lecterns can generate naturally in village libraries, up to two for some library variants.\n\nOne lectern generates as part of each ancient city, in the secret room at the city center.\n\nLecterns can be broken with any tool, but an axe is the fastest.\n\nLecterns drop themselves and the book they are holding.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nLecterns can only be crafted using a normal bookshelf, not a chiseled bookshelf, and proper wooden slabs, not petrified oak slabs.\n\nLecterns are the job site block of librarian villagers.\n\nLibrarian villagers do not place books into lecterns.\n\nThey only stare at the lectern from less than a block away as \"working\".\n\nThe UI when reading a book on a lectern.\n\nLecterns can also hold a single book and quill or written book that other players can read at the same time.\n\nRight-clicking an empty one with a book and quill or written book places it.\n\nRight-clicking a lectern with a book already occupied opens an interface to read the book.\n\nBooks occupying a lectern can be retrieved through the interface, [Java Edition only ] punching the lectern [Bedrock Edition only ] or by destroying the lectern, even when / gamerule doTileDrops is false.\n\nLecterns cannot hold enchanted books or normal books.\n\nInstead, right clicking the lectern with an enchanted book or a normal book does nothing and the book won't be placed.\n\nIf a village has a lectern that has not been claimed by a villager, any villager has a chance to change their profession into librarian if that villager has not already chosen a job site block.\n\nLecterns holding a book emit a full-strength redstone pulse that is one game tick long (0.5 redstone ticks) when a page is turned.\n\nA redstone comparator also records book reading and sends a signal, depending on what page the player is currently on.\n\nBecause Bedrock Edition displays two pages of the book at once, the same signal strength increments require double the number of pages.\n\nFor Java Edition a book with only 1 page gives maximum signal strength, however page 1 always gives 1 signal strength if the book contains at least 2 pages.\n\nDue to this, to calculate the signal strength S {\\displaystyle S} of books with more than 1 page, use the following formula: S = \u230a 1 + 14 (P \u2212 1) M \u2212 1 \u230b {\\displaystyle S = \\left\\lfloor 1 + \\frac{14(P-1)}{M-1} \\right\\rfloor} Where \u230a \u230b {\\displaystyle \\lfloor \\, \\rfloor} is the \"floor\" operation (round down), M {\\displaystyle M} is the maximum number of pages the book on the lectern has, and P {\\displaystyle P} is the current page number the lectern is turned to.\n\nThis is most noticeable when a book has 2 pages where the signal strength is either 1 on page 1 or 15 on page 2.\n\nA book that would step up or down in increments of 1 per page would be 15 pages long.\n\nFor Bedrock Edition the formula is slightly different.\n\nDue to Bedrock Edition showing 2 pages at once and counting a change to the book's output only if the highest even numbered page contains information, a redstone comparator treats books with 3 pages the same as those with 1 or 2 pages of information, the same as how Java Edition would treat a book with just 1 page.\n\nFor 4 or more pages of information use the following formula to calculate signal strength.\n\nS = \u230a 1 + 14 (P \u2032 \u2212 1) M \u2032 \u2212 1 \u230b {\\displaystyle S = \\left\\lfloor 1 + \\frac{14(P'-1)}{M'-1} \\right\\rfloor} In this case M \u2032 {\\displaystyle M'} is half of the maximum page number rounded down, and P \u2032 {\\displaystyle P'} is half of the current highest page number containing data displayed on the book interface, rounded down.\n\nRounding down is required to eliminate the discrepancy caused by books containing an odd number of pages.\n\nFor example, a book with 8 pages gives a signal strength of 15 when looking at pages 7-8.\n\nA book with 9 pages has a signal strength of 15 when looking at either pages 7-8 and 9-10.\n\nIn Bedrock Edition, a book that steps up or down in increments of 1 per page turned must be exactly 30 pages long, with information left on page 30.\n\nLecterns can be used as fuel in furnaces to smelt 1.5 items.\n\nLecterns can be placed under note blocks to produce \"bass\" sound.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A lectern has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities Book: The book item, without the slot tag, currently on the lectern, may not exist.\n\nTags common to all items Page: The page the book is currently on, starting from 0, does not exist if there's no book.\n\nIf higher than the total amount of pages in the book, gets set to -1.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Lectern\" are maintained on the bug tracker.\n\nReport issues there.\n\nOne of the two first images of the lectern.\n\nThe second of the first images of the lectern.\n\nThe first image of a modern lectern.\n\n[2] A lectern holding a book and quill.\n\nSunny using a lectern.\n\n\u2191 MC-141991 \u2191 \"sup\" \u2013 @Dinnerbone (Nathan Adams) on X, October 18, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Lever",
    "url": "https://minecraft.fandom.com/wiki/Lever",
    "content": "Lever Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0.5 Hardness 0.5 Luminous No Transparent Yes Flammable No Catches fire from lava No A lever is a non- solid block that can provide switchable redstone power.\n\nA lever can be mined using any tool, or without a tool, and always drops itself as an item.\n\nA lever is also removed and drops as an item if: its attachment block is moved, removed, or destroyed water or lava flows into its space, in Java Edition a piston tries to push it or moves a block into its space Three levers are generated naturally in each jungle temple.\n\nThey also generate in woodland mansions and ancient cities.\n\nFive of the eight possible orientations, levers off.\n\nSee also: Redstone circuits A lever can be used as a player-switchable redstone power source.\n\nA lever can be attached to the top, side, or bottom of any full solid opaque block (stone, dirt, blocks of gold, etc.), or to the top of an upside-down slab or upside-down stairs (but not to the bottom of a right-side-up slab or stairs).\n\nWhen placed on the top or bottom of a block, the lever orients itself in-line with the placing player.\n\nIn Bedrock Edition, it can additionally be placed on the top of a fence, stone wall or hopper, and can be placed underwater.\n\nWhen placed on the side of blocks, down is on and up is off.\n\nOn the top or bottom of blocks, off is north or west, on is south or east.\n\nTo activate or deactivate a lever, use the \"Use Item/Place Block\" control (right-click, by default).\n\nA lever can be turned on and off as fast as it can be clicked.\n\nMobs cannot turn a lever on or off.\n\nWhile active, a lever: powers any adjacent redstone dust (including beneath the lever) to power level 15 powers any adjacent redstone comparator or redstone repeater facing away from the lever to power level 15 strongly powers its attachment block to power level 15 (only if the attachment block is a full solid opaque block) activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nemits redstone particles to indicate that it is active.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b The lever uses the same sound event for both turning on and off.\n\nThis has been reported on mojira: MC-177454.\n\nBedrock Edition Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: For a more in-depth breakdown of changes to textures and models, including a set of renders for each state combination, see /Asset history Issues relating to \"Lever\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-217628 \u2014 \"Levers use wood sounds rather than stone\" \u2014 resolved as \"Fixed\".\n\nTaking Inventory: Lever \u2013 Minecraft.net on November 29, 2019 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Lightning Rod",
    "url": "https://minecraft.fandom.com/wiki/Lightning_Rod",
    "content": "For the artifact in Minecraft Dungeons, see MCD:Lightning Rod.\n\nLightning Rod Java Bedrock Powered View all renders Renewable Yes Stackable Yes (64) Tool Blast resistance 6 Hardness 3 Luminous No Transparent Yes Flammable No Catches fire from lava No A lightning rod is a block used to divert lightning strikes.\n\nA lightning rod must be mined with a stone pickaxe or better, or else it drops nothing.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nLightning rods can be oriented in different directions.\n\nLightning rods that are the highest block in the column redirect lightning strikes within a radius of 128 blocks in Java Edition and 64 blocks in Bedrock Edition.\n\nThis distance includes vertical distance, so the protected area is a sphere centered on the lightning rod.\n\nThe block emits particles during thunderstorms as an indicator.\n\nIf multiple lightning rods are in range, the closest to the original location of the strike is chosen.\n\nLightning can also strike a lightning rod hit by a trident enchanted with Channeling during a thunderstorm or even a normal rainstorm [Bedrock Edition only ], even if there are solid blocks above it blocking rainfall, as long as all the blocks are fully transparent (sky light level 15 at rod position).\n\nLightning rods do not divert the lightning created by a Channeling trident thrown at an entity, or the lightning summoned by commands.\n\nUnlike in real life, a lightning rod doesn't require a direct connection to ground in order to work.\n\nLightning strikes on lightning rods cannot summon skeleton trap horses.\n\nA lightning rod and the block it's attached to emit a redstone signal for 8 game ticks when struck by lightning.\n\nLightning diverted by a lightning rod can still start fires nearby (quickly extinguished on non-flammable blocks or by rain) and inflicts lightning damage on mobs within a 6\u00d712\u00d76 box centered 4 blocks above the bottom center of the lightning rod block (that is extending 2 below and 9 above).\n\nAdjacent blocks can ignite even if the lightning rod is mounted on a non-flammable block.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: None [1] Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Lightning Rod\" are maintained on the bug tracker.\n\nReport issues there.\n\nAccording to Minecraft Live 2020, Ulraf had the idea of lightning rods when a lightning strike burned down his wooden house.\n\n[3] In Minecraft Dungeons, there are lightning rod blocks as well.\n\nThese generate on the roof of the Woodland Mansion Ancient Hunt to charge creepers.\n\nIf / item replace is used to place a lightning rod on a player's head, the item appears upside-down and to the right of their head, somewhat resembling a robot's antenna. [Java Edition only ] In china edtion,lightning strikes are the only way to set your defaulted pet on fire, this doesn't kill them because they are immortal.\n\nLightning rods turn white upon being struck, which causes release of end rod particles and redstone power.\n\nRange testing in Java 1.17.1.\n\nGlowstone marks where lightning struck.\n\nRange testing in Bedrock 1.17.34, simulation distance 12.\n\nSea lanterns mark lightning strikes.\n\nLightning hitting a lightning rod and sending a redstone signal.\n\nA lightning-struck lightning rod decreasing the oxidizing level of nearby copper blocks.\n\n\u2191 MCPE-173931 \u2014 Tridents don't make channeling sounds when striking a lightning rod \u2191 MC-204446 - fixed in 21w05a despite that being an affects version; see comments \u2191 \"Minecraft Live: Caves & Cliffs - First Look @ 29:53\" \u2013 Minecraft on YouTube, October 3, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Note Block",
    "url": "https://minecraft.fandom.com/wiki/Note_Block",
    "content": "This article is about the block that produces single musical notes.\n\nFor the block that plays music discs, see Jukebox.\n\nNote Block Renewable Yes Stackable Yes (64) Tool Blast resistance 0.8 Hardness 0.8 Luminous No Transparent No Flammable No Catches fire from lava Yes A note block is a block that emits sounds when attacked, used or powered with redstone.\n\nThe sound produced can be altered in various ways by using it or putting certain blocks directly above or below it.\n\nA note block's sound played repeatedly can be used to direct allays to stay nearby and drop collected items near it.\n\nNote blocks generate in ancient cities.\n\nNote blocks are most quickly broken with an axe.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA note block being triggered and playing a note.\n\nNote blocks play a musical note when hit (pressing the attack button) or powered by redstone.\n\nA note block must have air in the space directly above it to play a sound.\n\nNotes can be heard up to 48 blocks away.\n\nThe volume of a note block decreases as the player gets further away from it.\n\nThe volume of note blocks (as well as jukeboxes) can be independently controlled by the Jukebox/Note Blocks slider in the audio settings.\n\nNote blocks play when on or next to a powered block.\n\nEach time a note block plays a note, a note particle may fly out of the top (if pressed too fast, notes may not appear), with the color depending on the pitch (but not the instrument).\n\nThere are 16 different instruments and 25 different pitches per instrument.\n\nPressing the use button on the block increases the note pitch up a semitone, with a total of two full octaves and a semitone (25 semitones in total) being available for each instrument.\n\nThe standard range (for harp and pling instruments) of notes span from F\u266f 3 to F\u266f 5.\n\nAfter reaching the highest note, pressing use again resets the pitch back to F\u266f 3, as does breaking the block and picking it back up.\n\nThe string bass and didgeridoo are two octaves (24 semitones) lower than the standard range, the guitar is one octave (12 semitones) lower than the standard range, the flute is one octave above the standard range, and the bells, chimes, and xylophone are 2 octaves above the standard range.\n\nThis gives the player six octaves (72 semitones) of effective range to combine instruments for greater pitch coverage.\n\nThe exact pitch can be found from its use -count by using the following formula: 2 ^ ((use count - 12) / 12).\n\nThe exact pitch to use -count assignment is shown below, [1] [2] along with the note's color, which is rendered with shading using the particle's texture.\n\nAlternatively, there is a graphical version available: Players can roughly check the tuning of a block by looking at the note icon.\n\nIn Java Edition, the tuning can also be checked by looking at the right side of the debug screen (accessed by pressing F3).\n\nIt is denoted as \"note:\" followed by a number from 0 to 24.\n\nThe instrument played depends on the material of the block underneath the note block.\n\nNote that these are groups of blocks defined by the code, not just the individual block.\n\nWhen a mob head is placed on top of a note block, the sound made by the note block will instead be that of the corresponding mob's ambient sound, with the exception of the creeper head, which instead causes the note block to play the primed sound.\n\nA pair of note blocks wired to a clock circuit to play alternately.\n\nNote blocks can be powered in a variety of different ways following normal redstone principles; however, some ways of powering note blocks are more convenient than others or produce unexpected results.\n\nWhen a note block is powered by a button on its side, it does play a note, but is often difficult to hear because the sound of the button can overlap the note block.\n\nBecause note blocks need space above them, note blocks powered by pressure plates or redstone directly above them do not make a sound.\n\nIf an allay hears a note block play within 16 blocks of its location, it tries to path find to the note block and then spends 30 seconds around that particular note block, seeking items around it and returning them to it instead of its player.\n\nAfter 30 seconds, the allay returns to targeting its player.\n\nA vibration particle emanates from the note block and reaches the allay to indicate the allay has locked on to the note block.\n\nBecause the allay and the note block interact via a vibration particle, placing wool between the note block and the allay can prevent this interaction.\n\nNote blocks can be used as a fuel in furnaces, smelting 1.5 items per block.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: In Bedrock Edition, a note block has a block entity associated with it that holds additional data about the block.\n\nSee Bedrock Edition level format/Block entity format.\n\nThis section is missing information about Info on the block entity used before 17w47a.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nIssues relating to \"Note block\" or \"Noteblock\" are maintained on the bug tracker.\n\nReport issues there.\n\nBecause a note block is a wooden type block, a note block directly on top of another one produces a string bass sound when powered.\n\nIn Java Edition, note blocks have the second highest number of possible block state combinations, at 1150 [verify ], beating fire 's 512 and behind redstone dust 's 1296.\n\nIn Creative mode, the only way to hit a note block to play it without breaking it or changing its pitch is by doing so while holding a sword.\n\nRedstone linked to note blocks, playing a simple melody when the button is pressed.\n\nA concept sketch tweeted by Notch depicting what would eventually become the Note Block.\n\nEfe looking at Makena napping on a Note block Efe placing a zombie head sneakily on the note block.\n\nMakena waking up startled at the sound of zombies being played on the note block.\n\nTutorials/Redstone music Tutorials/Redstone music/Doorbell Jukebox Minecraft Note Block Studio \u2013 A music editor for Minecraft.\n\n\u2191 Original chart by cookingfat \u2191 Original /playsound pitch chart by kwerti \u2191 MC-212976 Block of the Week: Note Block \u2013 Minecraft.net on June 1, 2018 Search YouTube for the many songs played on note blocks Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Observer",
    "url": "https://minecraft.fandom.com/wiki/Observer",
    "content": "This article is about the block that detects block updates.\n\nFor the redstone mechanism, see block update detector.\n\nObserver Renewable Yes Stackable Yes (64) Tool Blast resistance 3 Hardness 3 Luminous No Transparent Partial Flammable No Catches fire from lava No An observer is a block that emits a quick redstone pulse from its back when the block or fluid directly in front of its \"face\" experiences a change.\n\nAn observer requires a pickaxe to be mined.\n\nWhen mined without a pickaxe, it drops nothing.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAn observer is placed similarly to a piston.\n\nIt observes the block that it is placed against.\n\nThe texture of the detecting side is that of an observing face.\n\nAs observers can detect the state of other observers, placing two adjacent observers, each watching the other, can make a fast and compact redstone clock.\n\nThey send out a pulse.\n\nIn Java Edition, an observer detects changes in its target's block states, or the breaking or placing of a block (i.e.\n\nchanges in its block state, but not its block entity data).\n\nThis means that changes like the age of crops can be detected because they are part of the block states.\n\nIn Bedrock Edition, an observer acts as a block update detector and detects anything that causes a block update.\n\nThe causes and propagation of block updates are different between Java Edition and Bedrock Edition.\n\nAs a result, each can detect some kinds of changes that the other cannot.\n\nSee the table below for a comparison.\n\nWhen it detects something, the observer emits a redstone pulse of strong power at level 15 for 2 game ticks (1 redstone tick).\n\nThe pulse can power redstone dust, a redstone comparator, a redstone repeater, or any mechanism component located at its opposite end.\n\nIn Java Edition, the pulse is emitted with a delay of 1 redstone tick.\n\nIn Bedrock Edition, it is supposed to be delayed by 1 tick as well but is actually delayed 2 redstone ticks due to MCPE-15793, a bug causing redstone delays to be incorrect when components are activated by world changes (which, in the case of the observer in Bedrock Edition, is the only way it can be activated), as opposed to pure redstone components ticking.\n\nIts timing can also be incorrect due to MCPE-73342.\n\nIt also counts as a block update when the observer itself is moved by a piston.\n\nWhen this happens, an observer emits a pulse after being pushed or pulled, but not beforehand.\n\nThis enables them to be used in flying machines.\n\nObservers behave as both opaque and transparent blocks: they block light and allow mob spawning on top, but do not block opening chests below, do not cut off redstone wire, and cannot conduct redstone power.\n\nBecause observers in Java Edition detect changes in the block state, and not block updates, they can detect a wider range of phenomena than a block update detector (BUD) circuit in Bedrock Edition can detect (as some block state changes don't cause block updates).\n\nObservers in Bedrock Edition do detect block updates but not block state changes, and so they detect the exact same things that any other BUD would detect in that edition.\n\nThe observer can be placed under note blocks to produce bass drum sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Observer\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe current observer texture was created because Jeb kept confusing the front with the back.\n\nHe said it was inspired by the \"rejected texture\" created by Tommaso Checchi.\n\n[36] [37] Development image of an observer from Jeb.\n\nThe first image released of the new observer texture for Java Edition.\n\nTutorials/Block update detector Redstone Comparator \u2191 For example, a button cling on a block, when break the block that a button are clinging, that button will break and cause block update which can be detect by observer.\n\n\u2191 For example, a mushroom are on light level of 13, according to Minecraft Wiki, at level 13 and above, mushroom will uproot unless on mycelium, podzol or nylium.\n\nWhen update the mushroom, that mushroom will break and cause block update which can be detect by observer.\n\n\u2191 Another example, a wheat block are on light level of 0, according to Minecraft Wiki, at level 0 and below, wheat block will uproot.\n\nWhen update the wheat, that wheat will break and cause block update which can be detect by observer.\n\n\u2191 For example, place 2 chorus plants on top of an end stone.\n\nWhen place a chorus plant on the side of the bottom one, that \"bottom\" chorus plant will break and cause block update which can be detect by observer.\n\n\u2191 If a block get replaced by itself (with the same block states) by the / clone command, the observer will still be able to detect that.\n\nThis does not happen for / setblock and / fill.\n\n[more information needed ] \u2191 If observer is placed using / setblock or / fill, that observer will be powered.\n\nThis don't work for / clone.\n\n[more information needed ] \u2191 MC-107664 \u2191 MCPE-130935 \u2191 If an observer being pushed/pulled by a (sticky) piston, that observer will also powered.\n\n[more information needed ] \u2191 In Java Edition the game rule snowAccumulationHeight must be larger than 1.\n\n\u2191 The change of quasi-connected state usually coincides with some other block state change for these mechanisms, such as activating to dispense an item, or the piston head extending/retracting.\n\nTherefore, this effect is only noticeable when a dropper or dispenser \"deactivates\" by losing its quasi-connected status when the redstone power source is turned off.\n\nTo demonstrate, use a lever to power a redstone repeater that quasi-connects to a dropper.\n\nMonitor the dropper with an observer.\n\nTurn the lever on.\n\nThe dropper will drop an item and the observer will trigger.\n\nTurn the lever off.\n\nThe dropper will not do anything, but the observer will trigger again because it detects the dropper's change in quasi-connected state.\n\n\u2191 When the fluid source block is removed, all of the fluid flowing from the source will also be removed and cause a block update.\n\n\u2191 In Bedrock Edition, rabbits do not eat carrot crops; see MCPE-113321 and MCPE-131980.\n\n\u2191 In Bedrock Edition, the death of a coral fan cannot happen under normal circumstances \u2014 it happens the very next tick after the coral fan is placed, so the observer will already be reading the placement or water removal update, and coral fans placed using commands are waterlogged \u2014 but if lag is used to make the unwaterlogging and death events happen separately, the observer will detect both.\n\nFor coral, the death also happens too fast for the observer to detect it separate from the placement or water removal, but a non-waterlogged coral can be placed using commands.\n\nCoral blocks take multiple seconds to die, and removing water next to the coral block does not activate the observer anyway, so they can be detected under normal circumstances.\n\n\u2191 This event cannot normally happen, but if commands are used to place a wet sponge in the nether, the sponge will dry when it recieves a random tick. [Bedrock Edition only ] In Java Edition, sponges in the Nether always stay wet.\n\n\u2191 The disarmed  [JE only ] or disarmed_bit  [BE only ] block state cannot change without also detaching the tripwire, so this event cannot happen in isolation.\n\n\u2191 In Bedrock Edition, observers detect when a sculk shrieker stops shrieking, but not when it starts shrieking.\n\n\u2191 In Bedrock Edition, placing a pumpkin or melon next to a corresponding stem does not cause the stem to attach.\n\n\u2191 In Bedrock Edition, using bone meal on a coral block does not create sea pickles, due to MCPE-171383.\n\n\u2191 Grass, tall grass, 1-block-tall flower, seagrass, tall seagrass, coral, (wall) coral fan, moss carpet, azalea, flowering azalea, roots, fungus, nether sprouts, twisting vine, and pink petals.\n\n\u2191 Both under the sapling and the area around the sapling.\n\n\u2191 MC-107410 \u2191 MC-107783 \u2191 MCPE-17439 \u2191 MC-108696 \u2191 MC-107934 \u2191 MCPE-17321 \u2191 MC-107795 \u2191 MC-107730 \u2191 MC-108897 \u2191 MC-107760 \u2191 MC-108697 \u2191 MC-107623 \u2191 MC-146824 \u2191 \"Hype train!\n\n@darngeek is working on a device that acts as a proper BUD block in MC:PE (PC eventually), currently called \"Observer\"\" \u2013 @jeb_ (Jens Bergensten) on X, May 2, 2016 \u2191 a b \"Here's my rejected graphics for the Observer, because @darngeek has no artistic sensibility\" \u2013 @_tomcc (Tommaso Checchi) on X, May 2, 2016 \u2191 \"I kept confusing myself which side was front and back, so here's something inspired by the works of @_tomcc http://i.imgur.com/IK2d8m2.png\" \u2013 @jeb_ (Jens Bergensten) on X, November 7, 2016 \u2191 a b When deactivated, the sculk sensor's and the calibrated sculk sensor's \"sculk_sensor_phase\" block stage is converted from \"active\"->\"cooldown\"->\"inactive\".\n\nHowever, this happens so fast that observer can't detect it, so that isn't counted.\n\nBlock of the Week: Observer \u2013 Minecraft.net on November 10, 2017 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Piston",
    "url": "https://minecraft.fandom.com/wiki/Piston",
    "content": "Piston Regular Sticky Renewable Yes Stackable Yes (64) Tool Blast resistance 0.5 Hardness 1.5 Luminous No Transparent No Flammable No Catches fire from lava No A piston is a block capable of pushing most entities and blocks when given a redstone signal.\n\nA sticky piston is a variant of the piston that can additonally pull most blocks when it retracts.\n\nSome blocks cannot be moved, break when pushed or have other interactions with pistons.\n\nA piston can move up to twelve blocks at once.\n\nA piston can be broken using any tool with equal efficiency, and always drops itself.\n\nIn Java Edition, it is faster to break them with a pickaxe.\n\nThe pickaxe is also the preferred tool for breaking the head when extended.\n\n[1] \u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nThree sticky pistons generate as part of each jungle temple.\n\nFive sticky pistons also generate in each ancient city.\n\nSee also: Tutorials/Piston uses and Mechanics/Redstone/Piston circuits Pistons are always placed facing toward the player.\n\nWhen powered, the piston's wooden surface (the \"head\") starts extending immediately in Java Edition; or either 2 game ticks (1 redstone tick; 0.1 seconds) later or immediately, depending on how it was powered, in Bedrock Edition.\n\nWhen it extends, it pushes at most 12 blocks.\n\nThe piston makes a sound that can be heard within a 31\u00d731\u00d731 cube centered on the activating piston.\n\nAny entities in the path of the extending head are pushed with the blocks.\n\nIf there is no place for the entities to go, the block pushes inside them, suffocating mobs if the block is not transparent when pushed into the eye height of the mob.\n\nWhen a piston loses power, its head retracts.\n\nLike extending, this retraction starts immediately in Java Edition; or, depending on how it was powered, after 1 tick in Bedrock Edition.\n\nIt finishes retracting 2 game ticks (1 redstone tick; 0.1 seconds) after it starts.\n\nA sticky piston also pulls the block attached to its head, but not any of the other blocks it may have pushed.\n\nSticky pistons stick to a block only when retracting, so a block next to the piston head can be pushed aside by another piston and sticky pistons cannot hold falling blocks horizontally against gravity.\n\nIn Java Edition, pistons finish extending early and start retracting if given a pulse shorter than 3 game ticks (1.5 redstone ticks; 0.15 seconds).\n\nThese shorter pulses cause sticky pistons to \"drop\" their block, leaving it behind when trying to push it with a short pulse.\n\nAlso, this causes the block to end up in its final position earlier.\n\nHowever, if they receive a short pulse and don't have a block to be pushed, they pull the block which is 1 block away.\n\nA piston that pushes a slime block bounces any entity that it displaces in the direction the piston is facing.\n\nIn addition, when a slime block is moved by a piston, any movable blocks adjacent (not diagonally) to the slime block also move.\n\nSee the \"Slime blocks\" section below for more details.\n\nIn Bedrock Edition, blocks that stick to walls (such as levers) can be placed on pistons or sticky pistons.\n\nPistons can push most blocks, and sticky pistons can pull most blocks, except those listed in the table below.\n\nA sticky piston simply leaves a block behind if it cannot pull it.\n\nPistons cannot push blocks into the Void or beyond the top of the map.\n\nThey also cannot push more than 12 blocks.\n\nIf the requirements for a block to be pushed are not met, the piston simply does not extend.\n\nPistons do not move blocks that are \"attached to a block\", as they detach and drop as an item.\n\nRails: as long as they remain on top of a solid face of a block in their new position, and that block isn't moving at the same time.\n\nAn exception is when the rail and block supporting it are on two parallel extended pistons at which the rail remains attached.\n\nTrying to move both on the same piston using slime blocks does not work, nor does moving them on perpendicular pistons (although the latter temporarily appears to work because of the bug MC-75716).\n\nRails re-orient themselves after being pushed, similar to when placed manually.\n\nPistons powered by one line of redstone.\n\nPistons can be powered in various ways: If a redstone wire is in a line shape toward the piston.\n\nIn Java Edition, the wire does not automatically curve to the piston.\n\nPistons can be powered by a powered block directly adjacent to them, whether it is strongly powered or weakly powered.\n\nPistons can be powered by a redstone torch directly adjacent to them.\n\nIn Java Edition, pistons can be powered by any powered block one block diagonally, including the \"activated space\" above it (if a piston, both sticky and normal were to be facing up and a block of redstone placed on its head, it extends when powered, but doesn't retract when the power it receives from the side or back turns off).\n\nHowever, the piston doesn't extend or retract until it receives a block update.\n\nThis property is called quasi-connectivity and can be used to make a BUD switch.\n\nA repeater cannot transfer power through a piston, as pistons are a transparent block.\n\nAn upward-facing piston can't be powered by a block above it, unless it is extended In Java Edition.\n\nIn Bedrock Edition a redstone torch attached to a piston turns off whenever the piston is powered.\n\nThis mechanic is called soft inversion.\n\nPistons can also be powered by observers.\n\nThis can create a clock if the setup is correct.\n\nA B Piston A may extend because the slime block ignores the adjacent obsidian.\n\nPiston B may not extend because the diamond block is prevented from moving by the obsidian and so the slime block also refuses to move.\n\nWhen a slime block is pushed or pulled by a piston, while moving, adjacent blocks also move with the slime block, unless a non-piston movable block stops the blocks that are \"grabbed\" by the slime blocks.\n\nThese blocks may in turn push other blocks, not just the blocks in the line in front of the piston.\n\nFor example, a slime block sitting on the ground attempts to move the ground block underneath itself, which in turn has to push additional ground blocks in the direction of motion just as if it were being pushed directly by a piston.\n\nGlazed terracotta is an exception; it does not move when adjacent slime blocks are moved.\n\nThe same occurs when a slime block is moved by an adjacent slime block.\n\nFor example, a 2\u00d72\u00d72 cube of slime blocks may be pushed or pulled as a unit by a single piston acting on any of the blocks in the cube.\n\nA slime block adjacent to a block that cannot be moved by pistons ignores the immobile block.\n\nBut if an adjacent block could be moved but is prevented by the presence of an immobile block, the slime block is prevented from moving.\n\nSlime blocks are not pulled by a non-sticky piston, nor are they moved if an adjacent (non-Slime) block is moved by a piston.\n\nThe maximum of 12 blocks moved by a piston still applies.\n\nFor example, a 2\u00d72\u00d73 collection of Slime Blocks may be pushed or pulled by a sticky piston as long as no other movable blocks are adjacent to it.\n\nA piston cannot move itself via a \"hook\" constructed of slime blocks, but self-propelled contraptions can be created with multiple pistons.\n\nFor that, see the article Tutorials/Flying machines.\n\nThe same happens for the honey block, but it does not stick to slime blocks.\n\nPiston Head Regular Sticky Renewable Yes Stackable No Tool Any tool Blast resistance 0.5 Hardness 1.5 Luminous No Transparent Yes Flammable No Catches fire from lava No The piston head is a technical block used as the second block of an extended piston.\n\nA block state defines whether it is a normal or a sticky piston head.\n\nIt can be placed using the / setblock command or with the debug stick, though if not part of a proper piston, it disappears after receiving any block tick, such as when a block is placed next to it unless the player uses the debug stick.\n\nIt drops nothing.\n\nIn Java Edition, the normal and sticky piston heads are distinguished by a block state.\n\nIn Bedrock Edition, they use separate block IDs, and it can be obtained as an item via inventory editors.\n\nSee also: Block states Java Edition: Bedrock Edition: Piston Head: Sticky Piston Head: Moving Piston Renewable Yes Stackable No Tool None Blast resistance 0 Hardness?\n\nLuminous No Transparent Yes Flammable No Catches fire from lava No The moving piston, also known as block 36 due to its pre-flattening block ID, is an unobtainable technical block that contains part of a piston head, and/or part of one or two blocks that the piston is carrying into or out of the grid cell (including blocks carried indirectly via slime blocks).\n\nSince moving blocks vary in how much of each grid cell they occupy, they can't be stored as normal blocks and are instead stored as block entities.\n\nIt is overwritten with air, the piston head or the carried block at the end of the piston stroke; but if it is placed through editing and no piston is connected, it remains indefinitely.\n\nIt is invisible and non-solid in Java Edition, and cannot be broken without the use of commands or TNT.\n\nAlthough it is non-solid, fluids cannot pass through it.\n\nIt also prevents players from building at its location.\n\nMobs can see through it, but cannot walk through it.\n\nThe game treats the block as a stone block when it comes to the player's footstep sounds.\n\nIt is similar to Invisible Bedrock in properties with the exception that the player can walk through the moving piston but not invisible bedrock.\n\nSee also: Block states Java Edition: The moving piston has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities blockState: The moving block represented by this block entity.\n\nBlock state extending: 1 or 0 (true/false) \u2013 true if the piston is extending instead of withdrawing.\n\nfacing: Direction that the piston pushes (0=down, 1=up, 2=north, 3=south, 4=west, 5=east).\n\nprogress: How far the block has been moved.\n\nStarts at 0.0, and increments by 0.5 each tick.\n\nIf the value is 1.0 or higher at the start of a tick (before incrementing), then the block transforms into the stored blockState.\n\nNegative values can be used to increase the time until transformation.\n\nsource: 1 or 0 (true/false) \u2013 true if the block represents the piston head itself, false if it represents a block being pushed.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition (piston): Bedrock Edition (arm): \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 a b c Unavailable with / give command See also: Block states The piston and sticky_piston blocks use following block states: Java Edition: Bedrock Edition: In Bedrock Edition, a piston has a block entity associated with it that holds additional data about the block.\n\nSee Bedrock Edition level format/Block entity format.\n\nThis page would benefit from the addition of isometric renders.\n\nPlease remove this notice once you've added suitable isometric renders to the article.\n\nThe specific instructions are: MCPE-38053, extended sticky piston from the original mod First screenshot of pistons.\n\nThe following content is transcluded from Technical blocks/Pistons.\n\nA piston head in the inventory.\n\nA comparison between a normal stone block, and a stone block with a block 36 on it A \"sphere\" made out of block 36.\n\nPiston head Moving piston Piston Head Java Edition Beta 1.7 - Beta 1.9 Prerelease: [Has no defined name, rendering a minimum-length text box if highlighted] Beta 1.9 Prerelease 2 - Beta 1.9 Prerelease 3: [Has no defined name, and attempting to render it causes a game crash] Beta 1.9 Prerelease 4 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.null.name When given using the / give command, it is announced as null.name.\n\nBedrock Edition?\n\n- Beta 1.18.30.22: tile.pistonArmCollision.name Beta 1.18.30.26 - now: tile.piston_arm_collision.name Sticky Piston Head Bedrock Edition?\n\n- Beta 1.18.30.22: tile.stickyPistonArmCollision.name Beta 1.18.30.26 - now: tile.sticky_piston_arm_collision.name Moving Piston Java Edition Beta 1.7 - Beta 1.9 Prerelease: [Has no defined name, rendering a minimum-length text box if highlighted] Beta 1.9 Prerelease 2 - Beta 1.9 Prerelease 3: [Has no defined name, and attempting to render it causes a game crash] Beta 1.9 Prerelease 4 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.null.name When given using the / give command, it is announced as null.name.\n\nBedrock Edition?\n\n- Beta 1.18.30.22: tile.movingBlock.name Beta 1.18.30.26 - now: tile.moving_block.name \u2191 MC-171370 \u2014 resolved as \"Works As Intended\".\n\n\u2191 http://www.minecraftforum.net/viewtopic.php?t=247686&f=1032 \u2191 http://www.reddit.com/r/Minecraft/comments/hvkmo/attribution_of_the_piston_mod_in_vanilla_minecraft/ \u2191 MC-248841 \u2191 https://youtu.be/UgHbUFnr2NE?t=2m31s \u2191 https://youtu.be/2WOBsLF7Ooc?t=7m02s Issues relating to \"Piston\" are maintained on the bug tracker.\n\nReport issues there.\n\nMojang stated that the 12-block push limit for pistons would not be changed, because \"the current limitations are by design\".\n\n[1] When toggled between on and off rapidly with a gravity affected block (such as sand) above it, a piston can eventually break the block, which can be picked up as a resource.\n\nHowever, gravel broken this way never drops flint.\n\nIf a sticky piston powered by a short pulse directly pushes a waterlogged block, the block remains waterlogged at its new position.\n\nMobs can spawn inside the piston head block.\n\nCarpet can be placed on the piston extension block, and remains even if it is replaced with a solid block using / setblock.\n\nIn Bedrock Edition, the piston head is invisible and non-solid when placed with commands.\n\nThe moving piston cannot be placed with block placement commands in this edition.\n\nThe moving_piston is transparent and does not emit light.\n\nIf a light-emitting block is moved, the player can see it turn dark briefly.\n\nIf an opaque block is moved, the player may see light passing through it.\n\nNotch's explanation on how the rod (a full block long when extended) fits into the piston box (whose depth is a block minus the face's thickness).\n\n[2] Fundamental logic gates, implemented purely with pistons and redstone repeaters, clockwise from upper left: AND, OR, XOR, and NOT.\n\nSlow clock generator with pistons and redstone.\n\nAn example of a piston-controlled waterflow.\n\nArtwork of a Piston connected to a lever.\n\nLight shining through an extended piston.\n\nRedstone connecting to pistons in bedrock edition.\n\nAn example of sticky piston use with glass panes.\n\nAn example of sticky piston use with rails.\n\nAn example of sticky piston use with fences.\n\nSlime Block Redstone Tutorials/Piston uses Tutorials/Headless pistons Mechanics/Redstone/Piston circuits \u2191 In Java Edition, item frames are entities, not blocks.\n\nIn Bedrock Edition, they are blocks \u2191 Paintings are technically entities, not blocks.\n\n\u2191 \"Piston Push Limits (and increases).\n\nThe current limitations are by design.\" \u2013 Minecraft Feedback, January 3, 2019.\n\n\u2191 https://twitter.com/notch/status/83513677654929408 Block of the Week: Piston \u2013 Minecraft.net on October 13, 2017 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Place Block",
    "url": "https://minecraft.fandom.com/wiki/Place_Block",
    "content": "This article is about the block.\n\nFor other uses, see Place.\n\nThis article documents an April Fools' joke.\n\nThis feature was exclusively part of a joke version and is not currently planned for addition to regular Minecraft.\n\nIt is documented here on the wiki due to being officially-released content by Mojang Studios, even if not present in a final version.\n\nThis feature is exclusive to Java Edition.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nPlace Block South West North East Up Down Renewable Yes Stackable Yes (64) Tool Blast resistance?\n\nHardness 3 Luminous No Transparent No Flammable No Catches fire from lava No The Place Block is a joke block, unlocked by a vote, that takes other blocks from a container on its back side and places them in front of it when given a redstone signal.\n\nA Place Block can be mined with a pickaxe, in which case it drops only itself as it has no storage capacity on its own.\n\nIf mined without a pickaxe, the block breaks but drops no item.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nAs part of Java Edition 23w13a_or_b the Place Block can only be \"used\" when the vote for minecraft:place_block is approved.\n\nIf this is not the case, the block cannot be: placed (nothing happens) dropped (the block gets removed from the inventory but no item appears) activated (the block doesn't react to redstone signals) crafted (the output of the crafting table stays empty) A Place Block can be used to place any block from any container.\n\nThis includes chests, hoppers, and dispensers.\n\nThey can be used When there is already a block in front of the output, the block that would have been placed is dropped as an item.\n\nA Place Block can be placed so that its in- and outputs face in any direction, including up or down.\n\nWhen placed, the output faces toward the player.\n\nThe texture of this side is identical to the output of an observer.\n\nA Place Block can be activated by: an adjacent active power component (Exceptions: a redstone torch does not turn ON a Place Block it is attached to) an adjacent powered opaque block (strongly-powered or weakly-powered) a powered redstone repeater or redstone comparator facing the Place Block powered redstone dust configured to point at the Place Block, or on top of it, or a directionless \"dot\" next to it; a Place Block is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\nA Place Block is not activated by adjacent powered redstone dust that is configured to point in another direction.\n\n\u2191 a b MC-177082 See also: Block states Place Block/BS Place blocks are an unsupported item due to being an April Fools' joke, and therefore such issues relating to them will not be fixed.\n\nPickaxe Block Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Powered Rail",
    "url": "https://minecraft.fandom.com/wiki/Powered_Rail",
    "content": "This article is about the powered rail.\n\nFor other types of rails, see Rail (disambiguation).\n\nPowered Rail Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No A powered rail is a type of rail that either increases or decreases the velocity of minecarts that move over it, depending on its power state.\n\nPowered rails can be crafted, and previously placed powered rails can be broken with any tool or by hand, dropping themselves as items.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA powered rail also drops as an item when the block beneath it is removed or a piston moves it into a space with no floor below it.\n\nSee also: Tutorials/Minecarts A powered rail can be used as a rail and as a redstone component.\n\nTo place a powered rail, use a powered rail item while pointing at a surface facing the space the powered rail should occupy.\n\nA powered rail can be placed on: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, upside-down slab, or upside-down stairs.\n\nA powered rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the powered rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a powered rail to the side of the fence causes the powered rail to be attached to the top of the ground next to the fence instead.\n\nWhen placed, a powered rail configures itself to line up with any adjacent rails (including activator rails, detector rails, and other powered rails), as well as adjacent rails one block up.\n\nIf there are two adjacent rails on non-opposite sides, or three or more adjacent rails, a powered rail lines up in the east-west direction.\n\nIf there are no adjacent rails, a powered rail lines up in the north-south direction (but if a rail is later placed to the east or west, the powered rail re-orients itself in the east-west direction even if it is already connected to another rail to the north or south).\n\nIf a rail it would line up with is one block up, a powered rail slants upward toward it (with multiple options to slant upward to, a powered rail \"prefers\", in order: west, east, south, and north).\n\nOther configurations can be created by placing and removing various rails.\n\nUnlike their unpowered counterparts, and like detector and activator rails, powered rails are always straight.\n\nIt cannot be placed suspended in midair, even with commands, which is not unintentional.\n\n[1] Main article: Rail Powered rails (and other rails) can be used as \"roads\" for minecarts.\n\nA minecart that enters a powered rail's space from either end of the powered rail continues to move in the direction the powered rail is facing, but its speed may change depending on whether the powered rail is active or not (see below).\n\nA minecart that enters a powered rail's space from the side turns east or south (depending on the powered rail's orientation), or in the downward direction for a slanted powered rail.\n\nSee also: Redstone circuit Powered rails can be used to affect the speed of minecarts that travel over them.\n\nActivation A powered rail is a redstone mechanism and can be activated by: an adjacent active power component (for example, a redstone torch, a block of redstone, a daylight sensor, etc.) an adjacent powered block (strongly-powered or weakly-powered) a powered redstone comparator or redstone repeater facing the powered rail powered redstone dust configured to point at the powered rail; a powered rail is not activated by adjacent powered redstone dust that is a directionless \"dot\" or configured to point in another direction.\n\nAn activated powered rail also activates any adjacent powered rails it is connected to, up to eight away from the original activation source.\n\nThus a single activation source can activate up to 17 rails (one original in the middle and eight on either side).\n\nAn activated powered rail does not activate non-connected adjacent rails.\n\nBehavior An active powered rail: increases the speed of a moving minecart in the direction it is already moving.\n\nSpecifically, let the speed in both the X and Z directions (meters / tick) combined be \"speed\".\n\nIf speed > 0.01, then every tick the minecart is passing over the powered rail, its x velocity is increased by (xspeed * 0.06 / speed) and its z velocity is increased by (zspeed * 0.06 / speed) accelerate a non-moving minecart away from a solid opaque block the powered rail is facing (so a non-moving minecart moves away from the block when the powered rail activates, and a moving minecart bounces off a block an active powered rail is facing because it stops and then gets accelerated away) An inactive powered rail reduces the speed of a moving minecart, usually stopping it within one block's distance even on a downward-slanted track.\n\nIf a slanted powered rail activates with a non-moving minecart on it, the minecart starts moving downward (because it is no longer being braked by an inactive powered rail) and is then accelerated downward.\n\nPowered rails cannot increase the speed of a minecart to more than 8 blocks per second on either the north-south or east-west axis.\n\nThe speeds that can be achieved with varying numbers of powered rails or intervals of normal rails between powered rails is complex -- for a thorough discussion, see Tutorials/Minecarts.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Powered Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nPowered rails were originally a suggestion for golden tracks.\n\nPower on.\n\nPower off.\n\nRail Activator Rail Detector Rail \u2191 MC-182709 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Pressure Plate",
    "url": "https://minecraft.fandom.com/wiki/Pressure_Plate",
    "content": "\"Plate\" redirects here.\n\nFor the armor, see MCD:Plate Armor.\n\nPressure Plate View all renders Renewable Yes Stackable Yes (64) Tools Blast resistance 0.5 Hardness 0.5 Luminous No Transparent Yes Flammable No Catches fire from lava Overworld wood: Yes All others: No A pressure plate is a non- solid block that produces a redstone signal when stood on by an entity, with four variants: Wooden pressure plates can detect all entities, producing the maximum signal strength of 15.\n\nStone pressure plates can detect only players and mobs, also producing a strength of 15.\n\nLight weighted pressure plates can detect all entities, and the signal strength equals the number of entities stood on one.\n\nHeavy weighted pressure plates are similar to light weighted pressure plates, but measure groups of 10 entities.\n\nA wooden pressure plate can be mined using any tool, or without a tool, and drops itself as an item.\n\nHowever, axes are the fastest way to break one.\n\nAll other types can be obtained only by using a pickaxe.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA pressure plate is removed and drops itself as an item if: the block beneath it is moved, removed, or destroyed a piston tries to push it or moves a block into its space One stone pressure plate is generated naturally in each desert pyramid.\n\nStone pressure plate also generate as part of ancient city.\n\nOak pressure plates can generate in some plains village houses.\n\nAcacia pressure plates can generate in some savanna village houses.\n\nSpruce pressure plates can generate in some snowy tundra village houses.\n\nSee also: Redstone circuit A pressure plate can be used to detect entities on top of it (players, mobs, items, etc.).\n\nPlacement Pressure plate placement and behavior.\n\nPressure plates on fences.\n\nTo place a pressure plate, use it while aiming at the face of a block adjacent to the destination space.\n\nA pressure plate can be attached to: the top of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of a hopper, fence, nether brick fence, an upside-down slab, or upside-down stairs.\n\nA pressure plate cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the plate to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a plate to the side of the fence causes the plate to be attached to the top of the ground next to the fence instead.\n\nMore information regarding placement on transparent blocks can be found at Opacity/Placement.\n\nActivation A pressure plate activates when an entity is on top of it (specifically, when the entity's collision mask intersects the bottom quarter-block of the pressure plate's space, which may include entities flying close to the ground), with a minimum activation time of 1 second.\n\nA stone pressure plate is activated only by mobs, players and armor stands, while a wooden pressure plate or a weighted pressure plate is activated by all entities (including players, mobs, items, arrows, experience orbs, fishing bobs, etc.) besides snowballs.\n\nHeavy or light weighted pressure plates deactivate 5 redstone ticks (10 game ticks or 0.5 seconds, barring lag) after no entities are on top of it, while stone or wooden pressure plates deactivate 10 redstone ticks (20 game ticks or 1 second, barring lag) after no entities are on top of it.\n\nA minecart traveling on rails activates a pressure plate next to a diagonal track but not one next to a straight track (stone pressure plates are activated only if the minecart contains a mob or player).\n\nBehavior While active, a pressure plate: powers adjacent redstone dust, and adjacent redstone comparators or redstone repeaters facing away from the plate strongly powers any full solid opaque block beneath it activates adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nFor stone and wooden pressure plates, the power level is always 15.\n\nFor weighted pressure plates, the power level varies depending on the number of entities.\n\nThe signal strength from a weighted pressure plate does not vary with the type of entity: all entities have the same \"weight\", so two mobs produce the same strength as two dropped items.\n\nAn item stack counts as a single entity, no matter how many items are in the stack.\n\nWhen multiple items of the same type fall on a weighted pressure plate, they may initially be separate item entities and the weighted pressure plate counts them separately, but if they then collapse into a single item stack entity the signal strength from the weighted pressure plate may go down.\n\nWater and lava flow around a pressure plate without affecting it.\n\nA pressure plate is not solid (it is not a barrier to entity movement).\n\nA block under a pressure plate can provide a solid barrier underneath it (for mobs to walk across, items to fall on, etc.), but when a pressure plate is placed on a block with a small collision mask, such as a fence or nether brick fence, it is possible for entities to move through the pressure plate while still activating it (walking through it horizontally, or falling through it vertically).\n\nThus, a pressure plate on a fence can be used to detect entities without stopping them (more compactly than a tripwire circuit).\n\nPressure plates are 0.0625 blocks high (1 \u2044 16 of a block) when inactive and 0.03125 blocks high (1 \u2044 32 of a block) when active, but because they are not solid they do not affect the position of entities \"on top\" of them, so a player on top of a pressure plate is actually standing on the block beneath it.\n\nPressure plates can also open doors, activate TNT, and power command blocks.\n\nWooden pressure plates can be used as a fuel in furnaces, smelting 1.5 items per pressure plate.\n\nWooden pressure plates can be placed under note blocks to produce \"bass\" sounds.\n\nStone pressure plates can be placed under note blocks to produce \"bass drum\" sounds.\n\n[verify ] Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k l m n o Available with / give command.\n\n\u2191 a b c d e f g h i j k l m n o The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Stone and wooden pressure plates Weighted pressure plates Bedrock Edition: Stone and wooden pressure plates Weighted pressure plates Before Java Edition 1.7.2, weighted pressure plates could be activated only by drops, and they required larger quantities.\n\nOak Pressure Plate Spruce Pressure Plate Birch Pressure Plate Jungle Pressure Plate Acacia Pressure Plate Dark Oak Pressure Plate Mangrove Pressure Plate Cherry Pressure Plate Bamboo Pressure Plate Crimson Pressure Plate Warped Pressure Plate Stone Pressure Plate Polished Blackstone Pressure Plate Iron Pressure Plate Gold Pressure Plate \"Polished Blackstone Pressure Plate\" is the current longest name for a block tied with Cracked Polished Blackstone Bricks (34 characters with spaces, 31 without) It briefly lost its place between Java Edition 1.17 snapshots 20w45a and 21w05a, where it was surpassed by variants of the Copper Block: Waxed Lightly Weathered Cut Copper Stairs (41 characters with spaces, 36 without in first place) Waxed Lightly Weathered Cut Copper Slab (39 characters with spaces, 34 without in second place) Waxed Semi-Weathered Cut Copper Stairs (38 characters with spaces, 34 without in third place) Waxed Semi-Weathered Cut Copper Slab (36 characters with spaces, 32 without in fourth place) Issues relating to \"Pressure Plate\" or \"Weighted Pressure Plate\" are maintained on the bug tracker.\n\nReport issues there.\n\n\u2191 MC-50309 \u2191 MC-66247 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Rail",
    "url": "https://minecraft.fandom.com/wiki/Rail",
    "content": "For other uses, see Rail (disambiguation).\n\nRail Straight (North to South) Straight (West to East) North - East East - South South - West North - West Renewable Yes Stackable Yes (64) Tool Blast resistance 0.7 Hardness 0.7 Luminous No Transparent Yes Flammable No Catches fire from lava No Rails are non-solid blocks that provide a path along which minecarts can travel.\n\nRails can be mined with anything, but pickaxes are the quickest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nA rail also drops as an item when the block beneath it is removed, or a piston moves it into a space with no block below it, or when water flows across it.\n\nRails are destroyed by flowing lava.\n\nRails can be found naturally running along the floors of mineshafts, and in the \"pumpkin ring room\" of woodland mansions.\n\nSee also: Tutorials/Minecarts A rail can be used as a minecart track and as a redstone component.\n\nA sequence of rails (including regular rails, activator rails, detector rails, and powered rails) is called a track.\n\nTo place a rail, use a rail item while pointing at a surface facing the space the rail should occupy.\n\nA rail can be placed on: the top of any full block (stone, dirt, blocks of gold, glass, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top of an upside-down slab, upside-down stairs, or trapdoor.\n\nany of the above underwater (making the rail waterlogged) Rails visually float 1 \u2044 16 blocks above the ground, with an outline 2 \u2044 16 blocks high.\n\nA rail cannot be attached to the side or bottom of any block, but attempting to make such an attachment may cause the rail to attach to the top of a block under the destination space.\n\nFor example, if a fence is on the ground, attempting to attach a rail to the side of the fence causes the rail to be attached to the top of the ground next to the fence instead.\n\nMore information regarding placement on transparent blocks can be found at Opacity/Placement.\n\nA placed rail configures itself to be straight or curved according to rail blocks around it.\n\nIf there are no other rails adjacent, or if placed beside an existing stretch of track of any type, then in Bedrock Edition the new rail orients itself as a straight north-south track, and in Java Edition the new rail orients itself in the direction the player is facing.\n\nA new rail placed at the end of an existing stretch of track continues the existing track in the same direction, either east-west or north-south.\n\nIf there are two adjacent rails on its level, or one level up or down, the newly placed rail configures itself as straight or curved as needed to connect the other two.\n\nIf placed between three adjacent rails (forming a T-junction) the newly placed rail configures itself as curved to join two of the sides.\n\nT-junction before filling in tracks T-junction after filling in tracks Existing tracks one block up and down are considered for adjacency in the same manner, and the new piece of track gets laid as a curve, but unless space is left for sloping track sections, minecarts can continue past the curve only on level or one-block-down corners.\n\nIn one-block-up corners, the cart ends up buried in the ground.\n\nBefore placing the top block.\n\nTop block is placed as curve.\n\nShowing cart getting buried.\n\nSome placement of rails produces track layouts that cause minecarts to collide and enter blocks.\n\nMinecarts always buried Minecarts get through If placed to form a 4-way intersection with no curved section, it does not form a cross-roads connection.\n\nIf placed between four adjacent rails to form a curved intersection it always curves south-to-east.\n\nCurve controls minecart passage Existing sections of track may be re-oriented, become sloping, or even change into curved sections when the new rail is placed adjacent to it: An existing straight, north-south rail re-orients to east-west when a new rail is placed at the east or west sides.\n\nIf placed next to an existing rail that is one block up or down, the new rail slants up or down to join it.\n\nRail \"prefers\", in order: west, east, south, and north.\n\nOther configurations can be created by placing and removing rails.\n\nIf a track is placed perpendicular to an existing length of track, it appears as a straight rail, but in fact, it is curved according to the patterns for tee junctions as seen above; mine carts going through the intersection turn the corner.\n\nBreaking and re-laying track so that the intersection block is laid last causes the intersection block to be updated as a curved section.\n\nRails can be pushed and pulled by pistons.\n\nThe intersection rail at a T-intersection may be made to change its direction of curvature by applying redstone power using a redstone torch, lever, or button.\n\nSeparate tracks are laid adjacent, but at the next level, lower or higher can sometimes cause issues.\n\nHowever, normally they do not interact with the switched rail.\n\nMain article: South-east rule A minecart travels straight through a T-shaped intersection when entering from the \"back of\" the curved rail.\n\nIt follows the curve when entering from either of the other two legs.\n\nA minecart passes straight through a 4-way intersection constructed to have no curved rail.\n\nWhen entering the 4-way from east or west a cart turns according to the south-east rule.\n\nAt non-curve track intersections, minecarts always travel downhill if they can.\n\nThis is known as the downhill rule and overrides the south-east rule.\n\nA block placed above the track at the downhill end of a ramp prevents minecarts from traveling down the slope, but not up.\n\nFor a minecart to move down a diagonal tunnel, there must be clearance sufficient for a player to walk it.\n\nA diagram on how minecarts travel according to track curves.\n\nIf a straight track piece leads to a curve block and isn't attached to the curve, a minecart runs over the gap and continues to go straight over the curve.\n\nThis is not applicable to other types of rails.\n\nNotably, the minecart can exceed the normal 8 m/s speed limit while it jumps over the gap.\n\nFor example, by placing intersections on every other block of a straight track, it is possible to travel (uncomfortably) at 10 m/s in a straight direction.\n\nAs with straight T-intersections and 4-way intersections, the practice of making a minecart jump track can be used to make one-way entries onto a track.\n\nOn curve intersections the behavior is more intuitive because the cart simply proceeds in the direction it is already going, allowing designs that don't rely on knowledge of the south-east rule.\n\nA minecart with no rider at full speed can climb 10 blocks on an unpowered track.\n\nThis suggests that a powered track is needed at a height of only 10 blocks to keep a cart climbing.\n\nHowever, the cart slows so much that it can reach only another 5 blocks high with 2 lengths of powered track starting at 9 blocks high.\n\nThe minimum number of powered rails to keep the cart climbing perpetually is 3 every 6 blocks.\n\nCarts with a rider, or minecarts with chests, have more momentum and so climb higher than carts that are unloaded.\n\nWith a rider, a minecart can climb at least 24 blocks before needing powered rails to go higher.\n\nAlso, to ascend from 0 to max speed, the player needs 7 powered rails.\n\nIn Java Edition, some mobs (such as pillagers, zombies, sheep and many others) avoid walking on rails, and walk off rails when pushed onto them.\n\n[1] Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: This section is missing information about initial waterlogged rail reveal.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nIssues relating to \"Rail\" are maintained on the bug tracker.\n\nReport issues there.\n\nWhen walking on a block that has a rail on top, the player hears the sound of the block they are walking on, but if they jump (while still walking), they hear the sound of iron.\n\n[2] Rails are 750 mm (approx.\n\n2-foot 5-inch) narrow gauge (the gauge is the distance between the rails).\n\nA chest of rails has a total length of 64 \u00d7 27 = 1728 meters, which is slightly more than 1 mile (1.074 miles, 0.933 nautical miles).\n\nRails do not touch the block they are placed on.\n\nThe flat texture can actually be seen to hover over their supporting block.\n\nAn example of a track with curves and ramps.\n\nAn example of how to use the tracks as a roller coaster.\n\nA randomly generated misplaced rail found in a mineshaft.\n\nThree more floating rails in a mineshaft.\n\nEven more floating rails.\n\nVillagers riding minecarts with rails below them.\n\nA railroad stop without any redstone switching mechanisms, based purely on the one-way curve intersection behavior.\n\nA polar bear intentionally walking on powered rails due to the fact that it spawned inside a ski resort's ski lifts.\n\nThis is an example of odd behavior of mobs, since they don't walk on rails.\n\nAn example of sticky piston use with rails.\n\nPowered Rail Activator Rail Detector Rail \u2191 \"[MC-33359] Mobs are unable to cross minecart rails - Jira\" \u2013 Mojira, October 1, 2013.\n\n\u2191 \"[MC-1691] Sprinting / falling on level 1 and 2 snow, lily pads and carpet use the block below for the particles - Jira\" \u2013 Mojira, November 1, 2012.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Comparator",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Comparator",
    "content": "Redstone Comparator Redstone Comparator Subtracting Powered Powered+Subtracting Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No This page uses many images.\n\nIt is not recommended for people with limited or slow internet connections to read through this page.\n\nA redstone comparator is a block that can produce an output signal from its front by reading chests, lecterns, beehives and similar blocks, or repeat a signal without changing its strength.\n\nIt can also be set to either stop outputting a signal when its side input receives a stronger one (front torch off), or subtract its side input's signal strength from its output (front torch on).\n\nRedstone comparators generate in ancient cities.\n\nA redstone comparator can be broken instantly with any tool, or by hand, and drops itself as an item.\n\nA redstone comparator is removed and dropped as an item if: its attachment block is moved, removed, or destroyed; water flows into its space; [Java Edition only ] a piston tries to push it or moves a block into its space.\n\nIf lava flows into a redstone comparator's space, the redstone comparator is destroyed without dropping as an item.\n\nA redstone comparator can be placed on the top of any opaque block with a solid full-height top surface (including upside-down slabs and upside-down stairs).\n\nIn Bedrock Edition, a comparator can also be placed on walls and fences.\n\nFor more information about placement on transparent blocks, see Opacity/Placement.\n\nThe redstone comparator has a front and a back \u2014 the arrow on the top of the comparator points to the front.\n\nWhen placed, the comparator faces away from the player.\n\nThe comparator has two miniature redstone torches at the back and one at the front.\n\nThe back torches turn on when the comparator's output is greater than zero (the arrow on top also turns red).\n\nThe front torch has two states that can be toggled by using the comparator: Down and unpowered (indicating the comparator is in \"comparison mode\") Up and powered (indicating the comparator is in \"subtraction mode\") The redstone comparator can take a signal strength input from its rear as well as from both sides.\n\nSide inputs are accepted only from redstone dust, block of redstone, redstone repeaters, other comparators, and observers in specific scenarios.\n\nThe redstone comparator's front is its output.\n\nIt takes 1 redstone tick (2 game ticks, or 0.1 seconds barring lag) for signals to move through a redstone comparator, either from the rear or from the sides.\n\nThis applies to changing signal strengths as well as simply to turning on and off.\n\nRedstone comparators check their power state before their scheduled ticks update.\n\nThis results in redstone comparators not usually responding to 1-tick fluctuations of power or signal strength \u2014 for example, a 1-clock input is treated as always off from the side, and always on from the rear.\n\nThis happens because the signal changes back to its original state before the redstone comparator checks its input states.\n\nHowever, certain setups such as powering any input with two separate observer pulses at the same time will cause a redstone comparator to respond to 2 gametick pulses.\n\nThe redstone comparator has four functions: maintain signal strength, compare signal strength, subtract signal strength, and measure certain block states (primarily the fullness of containers).\n\nA redstone comparator with no powered sides outputs the same signal strength as its rear input.\n\nComparators in comparison mode.\n\nA redstone comparator in comparison mode (front torch down and unpowered) compares its rear input to its two side inputs.\n\nIf either side input is greater than the rear input, the comparator output turns off.\n\nIf neither side input is greater than the rear input, the comparator outputs the same signal strength as its rear input.\n\nThe formula for calculating the output signal strength is as follows: output = rear \u00d7 [left \u2264 rear AND right \u2264 rear ] The greatest of the side inputs A and C is subtracted from the rear input B, outputting 1.\n\nIf either A or C were greater than B, it would output 0.\n\nA redstone comparator in subtraction mode (front torch up and powered) subtracts the signal strength of the higher side input from the signal strength of the rear input.\n\noutput = max(rear \u2212 max(left, right), 0) For example: if the signal strength is 6 at the left input, 7 at the right input and 4 at the rear, the output signal has a strength of max(4 \u2212 max(6, 7), 0) = max(4\u22127, 0) = max(\u22123, 0) = 0.\n\nIf the signal strength is 9 at the rear, 2 at the right input and 5 at the left input, the output signal has a strength of max(9 \u2212 max(2, 5), 0) = max(9\u22125, 0) = 4.\n\nA redstone comparator can measure the fullness of a chest, as well as other block states, even through an opaque block.\n\nA redstone comparator treats certain blocks behind it as power sources and outputs a signal strength proportional to the block's state.\n\nThe comparator may be separated from the measured block by an opaque block.\n\nHowever, in Java Edition, if the opaque block is powered to signal strength 15, then the comparator outputs 15 no matter the fullness of the container.\n\n[1] A redstone comparator can output a signal indicating how full a container is.\n\n(0 for empty, 15 for full, etc.) The table on the right is described more in detail, later in this section.\n\nContainers that can be measured by a comparator include: Furnace Blast Furnace Smoker Brewing Stand Hopper Minecart with Hopper on top of a detector rail Dispenser Dropper Chest Trapped Chest Minecart with Chest on top of a detector rail Barrel Large chest Large trapped chest Shulker Box (any color) Generally speaking, the comparator output signal strength represents the average fullness of the slots, based on how many of that item form a full stack (64, 16, or 1 for non-stackable items).\n\nThe Minimum Items for Container Signal Strength table (right) shows the minimum full-stack-equivalent (FSE) to produce different signal strengths from common containers.\n\nA full-stack-equivalent quantifies how many normal 64-stackable items are needed to output a corresponding signal strength.\n\nThe 's' is a constant 64, with the additional amount needed following after.\n\nOne may also consider the terms: c umulative-weight or weighted-sum instead of full-stack-equivalent.\n\nItems that stack to a max of 16 (snowballs, signs, ender pearls, etc.), contribute +4 to the full-stack-equivalent for each unity (count of 1 item).\n\nSimilarly, items that stack to 1 (minecart, boat, etc.) contribute +64, and items that stack to 64 contribute +1.\n\nExample 1: 3 ender pearls will contribute a 3 x 4 = 12 full-stack-equivalent.\n\nExample 2: 16 ender pearls and 60 redstone dust contributes a 16x4 + 60x1 = 124 full-stack-equivalent.\n\nExample 3: 1 minecart and 60 redstone dust contributes a 1x64 + 60x1 = 124 full-stack-equivalent.\n\nExample 4: To produce a signal strength of 10 from a hopper, one requires a full-stack-equivalent of at least 3s + 14 = 206 but strictly less than than 3s + 37 = 229.\n\nThis can be done with 3 minecarts, and 14 dirt.\n\nWhen a comparator measures a large chest or large trapped chest, it measures the entire large chest (54 slots), not just the half directly behind the comparator.\n\nA chest or trapped chest that cannot be opened (either because it has an opaque block, ocelot, or cat above it) always produces an output of 0 no matter how many items are in the container \u2014 shulker boxes can always be measured, even if they cannot open.\n\nCalculating signal strength from items When a container is empty, the output is off.\n\nWhen it is not empty, the output signal strength is calculated as follows: signal strength = floor(1 + ((sum of all slots' fullnesses) / (number of slots in container)) \u00d7 14) fullness of a slot = number of items in slot / max stack size for this type of item Example: 300 blocks in a dispenser (which has 9 slots), where each block stacks to a maximum of 64 has a 300 full-stack-equivalent.\n\nThis produces an output with a signal strength of 8: 1 + ((300 items / 64 items per slot) / 9 slots) \u00d7 14 = 8.292, floored is 8 Calculating items from signal strength It can be useful in redstone circuits to use containers with comparators to create signals of a specific strength.\n\nThe number of items required in a container to produce a signal of desired strength is calculated as follows: items required = max(desired signal strength, roundup((total slots in container \u00d7 64 / 14) \u00d7 (desired signal strength \u2212 1))) Example: To use a furnace (which has 3 slots) to create a strength 9 signal, players need 110 items: max(9, (3\u00d764/14) \u00d7 (9\u22121)) = 109.714, rounded up is 110 Comparators used to measure containers.\n\nSome non-container blocks can also be measured by a redstone comparator: Beehive and Bee nest A hive or nest outputs a signal strength equal to the amount of honey in the hive/nest.\n\nCake A cake outputs a signal strength relative to the amount of cake remaining.\n\nEach slice is worth 2 signal strength, with 7 total slices, for an output of 14 for a full cake.\n\nCauldron signal strength Cauldron A cauldron outputs different signal strengths depending on how much water or powdered snow is inside.\n\nFrom completely empty to completely full, the output values are 0, 1, 2, and 3.\n\nIf lava or powder snow is inside, the strength is always 3.\n\nComposter signal strength Composter A composter outputs different signal strengths depending on the level inside.\n\nFrom completely empty to completely full, the output values are 0, 1, 2, 3, 4, 5, 6, 7 and 8.\n\nCommand Block A command block stores the \"success count\" of the last command executed, which represents the number of times the most recently used command of this command block succeeded.\n\nA \"success\" is defined by the command 's success conditions: if a red error message is returned in the chat, the command was not successful.\n\nMost commands can succeed once per execution, but certain commands (such as those that accept players as arguments) can succeed multiple times, and the comparator outputs the number of times it succeeded (maximum 15 when sent to redstone dust, but in the code it is able to go up to the 32-bit integer limit, and can be used in contraptions with no redstone dust with those values).\n\nA command block continues to store the success count of the last command executed until it executes its command again, thus the comparator continues to output the same signal strength even after the command block is no longer being activated (it doesn't turn off when the signal to the command block turns off).\n\nEnd Portal Frame An end portal frame outputs a full signal of 15 if it contains an eye of ender and zero otherwise.\n\nA comparator can measure the presence and rotation of an item frame's contents.\n\nItem Frame A comparator can measure the state of an item frame 's contents.\n\nAn item frame comparator outputs 0 if the item frame is empty, or 1 to 8 for any item depending on its rotation: 1 at initial placement, plus 1 for each 45\u00b0 of rotation for a maximum of 8.\n\nFor an item frame that holds a map, a unit of rotation is 90\u00b0 instead of 45\u00b0, but a comparator still outputs power levels 1 to 8.\n\nIt takes two full rotations to cycle through all comparator outputs, and each orientation of the map corresponds to two output levels that differ by 4.\n\nThe comparator must be placed behind the block the item frame is attached to, facing away from the item frame.\n\nThe block must be a full block, and the item frame cannot be submerged in water.\n\nHaving a sign in the same block as the item frame will prevent the frame from sending a signal as well. [Java Edition only ] Jukebox A jukebox outputs a signal strength indicating which music disc is currently playing.\n\nSee the Minimum Items for Container Signal Strength table above.\n\nLectern A lectern outputs a signal strength that depends on what page the player is currently on.\n\nThe calculation used is: signal strength = floor(1 + ((current page - 1) / (number of pages in book - 1)) \u00d7 14) This results in page 1 having a signal strength of 1, and the last page having a signal strength of 15.\n\nThe exception is a single page book, which will output a signal strength of 15.\n\nFor example, a book with 15 pages will output a signal equal to the current page number.\n\nA book with 5 pages will output signal strengths of 1, 4, 8, 11 and 15 for the different pages.\n\nA book with 100 pages will have the signal strength increase to the next level on pages 1, 9, 16, 23, 30, 37, 44, 51, 58, 65, 72, 79, 86, 93 and 100.\n\nRespawn Anchor A respawn anchor outputs a signal strength of 0, 3, 7, 11, or 15, depending on the \"charged\" value.\n\nSculk Sensor A sculk sensor outputs a signal strength depending on the type of vibration that is detected.\n\nChiseled Bookshelf A chisled bookshelf outputs a signal strength between 1 and 6 indicating the last slot interacted with.\n\nWhen no slot has been interacted with yet, it outputs 0.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b Unavailable with / give command \u2191 a b The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A redstone comparator has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities OutputSignal: Represents the strength of the analog signal output of this redstone comparator.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nThis section is missing information about If MC-50242 also affected comparators?.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nFor a more in-depth breakdown of changes to repeater textures and models, including a set of renders for each state combination, see /Asset history The following content is transcluded from Technical blocks/Redstone Comparator.\n\nJava Edition 13w01a - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.comparator.name When given using the / give command, it is announced as tile.comparator.name.\n\nJava Edition 13w01a - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.comparator.name When given using the / give command, it is announced as tile.comparator.name.\n\nIssues relating to \"Redstone Comparator\" are maintained on the bug tracker.\n\nReport issues there.\n\nComparators do not emit redstone particles when powered, unlike redstone torches and repeaters.\n\n[5] Dinnerbone showing how comparators work.\n\nDinnerbone showing how comparators work.\n\nDinnerbone showing how comparators work.\n\nA contraption incorporating comparators.\n\nComparators in action.\n\nOutput specific signals.\n\nAnother comparator in use.\n\nRotating the torch in the item frame adjusts the comparator's output.\n\n\u2191 MC-64394 (resolved as \"Works As Intended\") \u2191 MC-182820 \u2014 resolved as \"Fixed\".\n\n\u2191 https://youtu.be/UgHbUFnr2NE?t=2m50s \u2191 https://youtu.be/Ib83drtXv6Y?t=3m40s \u2191 MC-51692 \u2014 resolved as \"Works As Intended\".\n\nRedstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Dust",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Dust",
    "content": "\"Redstone\" redirects here.\n\nFor the ore, see Redstone Ore.\n\nFor the powered mineral block, see Block of Redstone.\n\nFor other uses, see Redstone (disambiguation).\n\nRedstone Dust Inactive (connected) Inactive (unconnected) Active (connected) Active (unconnected) View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No Redstone dust is a mineral that can transmit redstone power as a wire when placed as a block.\n\nIt is also used in crafting and brewing.\n\nSee also: Redstone Ore \u00a7 Natural generation Redstone ore mined using an iron pickaxe or higher drops 4 or 5 redstone dust (or more with Fortune, averaging at 6 redstone dust with Fortune III).\n\nIf mined with Silk Touch, the block drops itself instead of redstone dust.\n\n15 lengths of redstone dust are naturally generated as part of the trap in each jungle pyramid.\n\n5 lengths of redstone dust can be found in one type of jail cell room in a woodland mansion.\n\nIn ancient cities, multiple pieces of redstone dust can be found integrated into circuitry.\n\nRedstone dust can be broken instantly using any tool, or without a tool, and drops itself as an item.\n\nRedstone dust is removed and drops as an item if: its attachment block is moved, removed, or destroyed water or lava flows into its space a piston tries to push it or moves a block into its space Witches have a chance of dropping 0\u20132 redstone dust upon death.\n\nThis is increased by 1 per level of Looting, for a maximum of 0\u20135 redstone dust.\n\nRedstone dust can be crafted from blocks of redstone.\n\nIn Java Edition, novice-level cleric villagers sell two redstone dust for one emerald.\n\nIn Bedrock Edition, novice-level cleric villagers sell four redstone dust for one emerald.\n\nSee also: Tutorials/Raid farming In Java Edition, when the player has the Hero of the Village status effect, clerics might throw that player a redstone dust as a gift.\n\nRedstone dust is used for brewing, crafting, and in redstone circuits by placing it on the ground to create redstone wire.\n\nIt can also be used to power redstone components.\n\nWhen placed in the world, redstone dust becomes a block of \"redstone wire\" [more information needed ], which can transmit redstone power.\n\nTrim color palette The following color palette is shown on the designs on trimmed armor: Examples of redstone wire configuration.\n\nTop Left: Redstone wire connects diagonally vertically through non-opaque blocks.\n\nTop Right: Redstone wire does not connect diagonally vertically through opaque blocks.\n\nCenter: Redstone wire gets darker as its power level drops, to a maximum of 15 blocks from a power source.\n\nExamples of redstone wire placements.\n\nRedstone dust can be placed on opaque blocks as well as glowstone, upside-down slabs, glass, upside-down stairs, and hoppers.\n\nIt can also be placed on some transparent blocks; see Opacity/Placement for more information.\n\nIt cannot be placed suspended in midair, even with commands, which is not unintentional.\n\n[1] Redstone wire configures itself to point toward adjacent redstone power components and transmission component connection points.\n\nRedstone wire also configures itself to point toward adjacent redstone wire one block higher or lower \u2013 unless there is a solid opaque block above the lower redstone wire.\n\nIf there is only one such adjacent redstone component, redstone wire configures itself into a line pointing both at the neighbor and away from it.\n\nIf there are two or more such adjacent components, redstone wire connects them in the form of,,, or as needed.\n\nWhen there are no adjacent components, a single redstone wire configures itself into a plus sign, which can provide power in all four directions.\n\nBy right-clicking it can be changed into a dot, which does not provide power to any of the four directions.\n\nIn Bedrock Edition, redstone wire automatically configures itself to point toward adjacent blocks or mechanism components.\n\nIn Java Edition, it does not.\n\nIf such a configuration is desired, the other neighbors of the redstone wire must be arranged to create it, i.e the redstone dust must be placed in a way that it would be pointed at the block\u2019s location even if it were not there.\n\nWhen redstone wire is reconfigured after placement, it does not update other redstone components around it of the change unless that reconfiguration also includes a change in power level or another component provides an update.\n\nThis can create situations where a mechanism component remains activated when it shouldn't, or vice versa, until it receives an update from something else \u2013 a \"feature\" of redstone wire that can be used to make a block update detector.\n\nIn Bedrock Edition, the signal can go down from glass blocks.\n\nHowever, the signal can never go down from slabs.\n\nRedstone wire can transmit power, which can be used to operate mechanism components (doors, pistons, redstone lamps, etc.).\n\nRedstone wire can be \"powered\" by a number of methods: from an adjacent power component or a strongly-powered block from the output of a redstone repeater or redstone comparator from adjacent redstone wire.\n\nThe powering dust can be a level higher or lower, but with restrictions: Redstone dust can be powered by redstone dust that is one level lower, or on an opaque block one level higher.\n\nA transparent block cannot [Java Edition only ] pass power downward.\n\nThe block \"between\" the two dust blocks must be air or transparent.\n\nA solid block there \"cuts\" the connection between the higher and lower dust.\n\nThe \"power level\" of redstone dust can vary from 0 to 15.\n\nMost power components power-up adjacent redstone dust to power level 15, but a few (daylight sensors, trapped chests, and weighted pressure plates) may create a lower power level.\n\nRedstone repeaters output power level 15 (when turned on), but redstone comparators may output a lower power level.\n\n15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 Redstone wire can transmit power up to 15 blocks.\n\nPower level drops by 1 for every block of redstone wire it crosses.\n\nThus, redstone wire can transmit power for no more than 15 blocks.\n\nTo go further, the power level must be re-strengthened \u2013 typically with a redstone repeater.\n\nPowered redstone wire on top of, or pointing at, an opaque block provides weak power to the block.\n\nA weakly-powered block cannot power other adjacent redstone wire, but can still power redstone repeaters and comparators, and activate adjacent mechanism components.\n\nTransparent blocks cannot be powered.\n\nWhen redstone wire is unpowered, it appears dark red.\n\nWhen powered, it becomes bright red at power level 15, fading to darker shades with decreasing power.\n\nPowered redstone wire also produces \"dust\" particles of the same color.\n\nWhile redstone wire always provides power to the directions it points into, it can still point into directions in which it cannot give power.\n\nIf redstone wire comes in the form of a cross, the player can right-click to toggle it between a cross and dot.\n\nA redstone dot does not power anything adjacent to it, but powers the block under it.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Unavailable with / give command \u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Main article: Redstone Dust/Asset history [edit ] Note: These videos do not show all uses for redstone in crafting and all methods of obtaining.\n\nThis video is also outdated, as of 1.13 Java Edition, redstone is now called Redstone Dust.\n\nThe following content is transcluded from Technical blocks/Redstone Wire.\n\nThis section is missing information about MC-8149.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Redstone Dust (As block name, item does not exist) 13w37a - 17w47a: Redstone Dust (As block name, item does not exist) 17w47a and onwarda: Redstone Wire Bedrock Edition?\n\n-?: Redstone Dust Java Edition Bedrock Edition First image of redstone dust on top of slabs and stairs.\n\nOlivia using a scarce amount of redstone dust.\n\nSunny using a very long strip of redstone dust.\n\nOfficial T-shirt artwork \"Powered By Redstone\" made by JINX.\n\nPixel art of redstone dust.\n\nIssues relating to \"Redstone\", \"Redstone dust\", or \"Redstone wire\" are maintained on the bug tracker.\n\nReport issues there.\n\nFive updates for Windows 10 released from 2016 to 2018 were codenamed \"Redstone\", referencing Minecraft.\n\n[5] The block has 1,296 possible block state combinations, the highest of all blocks as of 1.15.2, beating fire 's 512 and note block 's 800.\n\nAccording to Minecraft Education, redstone dust contains radioactive elements.\n\n\u2191 MC-182709 \u2191 MC-137336 \u2191 MC-153508 \u2191 a b https://youtu.be/qtn9Nx3YpeU \u2191 \"Microsoft plans \u2018Redstone\u2019 updates for Windows 10 in 2016\" by Tom Warren \u2013 The Verge, April 7, 2015.\n\nRedstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Lamp",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Lamp",
    "content": "\"Lamp\" redirects here.\n\nFor the other light source, see Lantern.\n\nRedstone Lamp Redstone Lamp Lit Redstone Lamp Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0.3 Hardness 0.3 Luminous Yes (15) (when lit) Transparent Partial [a] Flammable No Catches fire from lava No A redstone lamp is a block that produces light when activated with a redstone signal.\n\nRedstone lamps generate naturally in ancient cities.\n\nA redstone lamp can be mined with any tool [1] or by hand, dropping itself as an item.\n\nA redstone lamp can be used to produce switchable light.\n\nRedstone lamps are redstone mechanisms and can be activated by: An adjacent active power component, including above or below: for example, a redstone torch (except that a redstone torch does not activate a redstone lamp it is attached to), a block of redstone, a daylight sensor, etc.\n\nAn adjacent powered block (for example, an opaque block with an active redstone torch under it), including above or below A powered redstone comparator or redstone repeater facing the redstone lamp Adjacent powered redstone dust configured to point at the redstone lamp (or on top of it) or directionless; a redstone lamp is not activated by adjacent powered redstone dust that is configured to point away from it.\n\nA redstone lamp activates instantly, but takes 2 redstone ticks to turn off (4 game ticks, or 0.2 seconds barring lag).\n\nAn active redstone lamp produces block light 15.\n\nAn inactive redstone lamp produces no light.\n\nA redstone lamp acts like an opaque block; it blocks sky light, mobs suffocate in it, and it conducts redstone power.\n\nIt also allows mobs to spawn on them while it is unlit.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: The following content is transcluded from Technical blocks/Lit Redstone Lamp.\n\nJava Edition 12w07a - 13w36b: Redstone Lamp Issues relating to \"Redstone Lamp\" are maintained on the bug tracker.\n\nReport issues there.\n\nMultiple tiled redstone lamps produce a pattern that resembles the truncated square tiling t{4,4}.\n\nRedstone lamps are transparent on maps.\n\n[4] [5] A redstone lamp shown during the day that is switched off.\n\nA redstone lamp shown during the day that is switched on.\n\nA redstone lamp shown during the evening that is switched off.\n\nA redstone lamp shown during the evening that is switched on.\n\nDemonstrating how wire powers redstone lamps.\n\nDemonstrating how repeaters power redstone lamps.\n\nDemonstrating how a solid block powers redstone lamps.\n\nSince lamps themselves are solid blocks, they power other lamps.\n\nThis causes the cross-shaped patterns of lit lamps.\n\nFloor torch with no lamp above it.\n\nFloor torch with a lamp above it.\n\nWall torch with no lamp above it.\n\nWall torch with a lamp above it.\n\nA way you can use lit redstone lamps in building.\n\nA glowing roof can be done by laying wire across the blocks, or lining the top of the lamps with redstone blocks.\n\nFloors and walls are also do-able.\n\nA glowing floor can be created by using \" knight's move \" shape underneath the floor with torches.\n\nA glowing wall uses wall-mounted torches that power blocks above them.\n\nA redstone lamp floor.\n\nA redstone lamp wall.\n\n\u2191 Only when lit, it diffuses sky light from above.\n\n\u2191 MC-192719 \u2014 Sea Lantern, Glowstone, Redstone Lamp don't have an assigned tool \u2191 https://youtu.be/o74FHoM0Lo4?t=29s \u2191 MC-3973 \u2191 MC-124331 \u2191 MCPE-112543 Block of the Week: Redstone Lamp \u2013 Minecraft.net on March 30, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone mechanics",
    "url": "https://minecraft.fandom.com/wiki/Redstone_mechanics",
    "content": "This article needs to be rewritten.\n\n[discuss ] It may contain inappropriate or inaccurate information.\n\nPlease help us by rewriting it.\n\nReason: Transform this page into a general article, covering only general aspects.\n\nThis article is a work in progress.\n\nPlease help in the expansion or creation of this article by expanding or improving it.\n\nThe talk page may contain suggestions.\n\nRedstone mechanics provide Minecraft with a loose analogue to electricity, which is useful for controlling and activating a variety of mechanisms.\n\nRedstone circuits and devices have many uses including automatic farms, controlling doorways, changeable or mobile buildings, transporting players and mobs, and more.\n\nSome relevant pages include: Redstone dust is the core of redstone mechanics.\n\nMined from redstone ore, the dust can be placed to form \"redstone wires\" to carry signals, or crafted into other devices.\n\nComponents lists and describes the various blocks which interacts with or are affected by redstone power.\n\nRedstone Circuits covers the basics of redstone circuitry, including summaries of the basic circuit types and the blocks (e.g., doors, pistons) which can be controlled by redstone.\n\nTutorials/Mechanisms lists and describes a variety of more complex projects that can be made with redstone.\n\nA redstone tick is a unit of time, in redstone, that is equal to two game ticks, 0.1 seconds.\n\nMost redstone components take a multiple of a redstone tick to change states.\n\nRedstone torches, redstone repeaters, and other redstone components require one or more ticks to change state, so it can take several ticks for a signal to propagate through a complicated circuit.\n\nRedstone ticks differ from \"game ticks\" (20 per second) and \" block ticks \" (block updates that occur at each game tick).\n\nWhen discussing redstone circuits, the term \"tick\" should always be interpreted to mean a redstone tick, unless otherwise specified.\n\nMain article: Redstone components A Redstone component is a block that provides some purpose to a Redstone circuit.\n\nA power component provides power to other parts of a circuit\u2014e.g., redstone torches, buttons, levers, redstone blocks, target blocks, etc.\n\nSome of these fall into one of three overlapping subgroups: Switches provide power depending on request by the player.\n\nButtons and levers are switches.\n\nSensors provide power or signals (see below) in response to some environmental condition.\n\nPressure plates and Observers are sensors, and comparators can be used as sensors.\n\nNote that some pressure plates can be triggered by a player standing on them, which also qualifies them as switches.\n\nLogic components provide power conditionally, depending on their input conditions.\n\nRedstone torches, and comparators are classic logic components; redstone wire and ordinary opaque blocks can also be used to combine signals in various ways.\n\nA transmission component passes power from one part of the circuit to another.\n\nRedstone dust (placed as redstone wire) is the most fundamental transmission component, but redstone repeaters and redstone comparators are also important.\n\nA mechanism component affects the environment (by moving, producing light, etc.)\u2014e.g., Doors, pistons, redstone lamps, dispensers, etc.\n\nThe Redstone Lamps are all activated, but are powered differently.\n\nFrom top to bottom: Strongly powered: powers both Repeater and Dust.\n\nWeakly powered: powers Repeater, but not Dust.\n\nNot powered: powers neither.\n\nRedstone components and blocks may or may not be powered.\n\nA \"powered block\" can be thought of as a block that has electricity running through it.\n\nSome blocks will show their powered state visibly (for example, redstone dust lights up, a redstone lamp illuminates its surroundings and a redstone torch turns off), but other blocks may give no visual indication of their powered state other than their effect on other redstone components.\n\nAn opaque block (e.g.\n\nstone, dirt, etc.) powered by a power component, or by a repeater or comparator, is said to be strongly powered or 'hard-powered' (a different concept from power level).\n\nA strongly powered block can power adjacent redstone dust (including dust on top of the block or dust beneath it).\n\nAn opaque block powered only by redstone dust (and no other components) is said to be weakly powered or 'soft-powered' because a block powered only by redstone dust will not power other redstone dust (but can still power other components or devices, such as repeaters and pistons).\n\nNo opaque block can directly power another opaque block\u2014there must be dust or a device in between.\n\nA transparent block can't be powered by anything.\n\n\"Strong\"/\"hard\" vs.\n\n\"weak\"/\"soft\" power applies only to opaque blocks, not to dust or other redstone components.\n\nA powered block (strong or weak) can affect adjacent redstone components.\n\nDifferent redstone components react differently to powered blocks\u2014see their individual descriptions for details.\n\nRedstone \"signal strength\" can be an integer between 0 and 15.\n\nMost power components provide an output of power level 15, but a few components provide a variable amount of power.\n\nThese include daylight sensors and redstone comparators.\n\nRedstone dust transmits power to adjacent redstone dust and blocks, but its strength decreases by 1 for each block the redstone power travels.\n\nRedstone dust can thus transmit power up to 15 blocks before needing to be maintained with a redstone comparator or re-strengthened with a repeater.\n\nPower level only fades with the dust-to-dust transmission, not between dust and a device or block.\n\nThe power level can also be adjusted directly with a redstone comparator in comparison or subtraction mode.\n\nCircuits with a stable output are said to produce a signal \u2014 an ON signal (also \"high\" or \"1\") if powered, or an OFF signal (\"low\", \"0\") if unpowered.\n\nWhen a signal changes from OFF to ON (\"rising edge\") and then back to OFF (\"falling edge\"), that is described as a pulse (or ON pulse), while the opposite is described as an OFF pulse.\n\nON pulses are far more common, and in casual discussion, \"a signal\" often refers to an ON pulse.\n\nVery short pulses (1 or 2 ticks) can cause problems for some components or circuits because they have different update sequences to change states.\n\nFor example, a redstone torch or a comparator will not respond to a 1-tick pulse.\n\nActivation of Mechanism Components \u2014 Mechanism components can be activated by power components (for example, redstone torches), powered blocks, redstone dust, repeaters, and comparators (not shown), but only if configured correctly.\n\nMechanism blocks (pistons, doors, redstone lamps, etc.) can be activated by incoming power, which causes the mechanism component to do something (push a block, open the door, turn on, etc.).\n\nThere are two main variations for how things can respond to activation: Many types only perform an action when initially activated by a rising edge (command blocks execute a command, droppers and dispensers eject an item, note blocks play a sound) and won't do anything again until deactivated and then activated again Other mechanism components change their state when activated, and then change back when the activation ends; Redstone lamps stay on while the power continues, while hoppers stay disabled.\n\nPistons will extend when powered, and retract when the power turns off.\n\nDoors, fence gates, and trapdoors will open on a rising edge, and close on a falling edge; however, most of these (not iron doors or iron trapdoors) can also be opened or closed by players regardless of the redstone power.\n\nIf they were already open when power turns on, or closed when power ends, they will simply remain so until their input changes again.\n\nPowered vs.\n\nActivated The top lamp is both activated (the lamp is on) and powered (it powers the adjacent repeater).\n\nThe bottom lamp is activated but not powered.\n\nFor opaque mechanism blocks (command blocks, dispensers, droppers, note blocks, and redstone lamps), it is important to make a distinction between a mechanism component being activated and being powered (and this is the reason why mechanism components are described as activated instead of just saying they are powered).\n\nA mechanism component is powered if it could power adjacent redstone dust (strongly), or repeaters or comparators (weakly).\n\nA mechanism component is activated if it is doing something (or has done something and is waiting to be activated again).\n\nAny method of powering a mechanism component (such as a redstone torch underneath it) will also activate it, but some activation methods (such as a redstone torch next to or above a mechanism component) won't actually power the component (following the usual rules for power components).\n\nNon-opaque mechanism components (doors, fence gates, hoppers, pistons, rails, trapdoors) can be activated (they can do things), but cannot be powered (i.e.\n\nthey can not then power adjacent redstone dust, etc.).\n\nIn general mechanism components are activated by: an adjacent active power component, including above or below.\n\nException: A redstone torch will not activate a mechanism component it is attached to Exception: A piston is not activated by a power component directly in front of it.) an adjacent powered opaque block (either strongly-powered or weakly-powered), including above or below.\n\na powered redstone comparator or redstone repeater facing the mechanism component.\n\npowered redstone dust configured to point at the mechanism component (or on top of it, for mechanical components that can support redstone dust, but not beneath it), or adjacent \"directionless\" redstone dust; a mechanism component is not activated by adjacent powered redstone dust that is not configured to point at it Activation by Quasi-Connectivity \u2014 Pistons can also be activated by anything that activates the space above them.\n\nNote that the piston on the far left is not activated by quasi-connectivity because the redstone dust is running past the block above the piston, rather than directly into it, and thus would not power a mechanism there Some mechanism components have additional ways of being activated: In Java Edition, pistons, dispensers, droppers, and can also be activated if one of the methods above would activate a mechanism component in the block above the component, even if there is no mechanism component there (even if the block above the component is air or a transparent block).\n\nThis rule is often simplified to saying that the components can be powered by blocks diagonally above or two blocks above, but other methods of such activation exist (see image to the right).\n\nThis method of activation is known as quasi-connectivity because the mechanism component's activation is somewhat connected to the space above it.\n\nDoors occupy two spaces, one above the other, and anything that activates either space also activates the other.\n\nBlock upates are how most redstone compenents \"tell\" each other that they need to change states.\n\nTwo blocks by taxicab distance When a change occurs somewhere in a redstone circuit, it can produce other changes in surrounding blocks in what is called a block update.\n\nEach of these changes can then produce other changes in their surrounding blocks.\n\nThe update will propagate following the redstone circuit rules within loaded chunks (block updates will not propagate into unloaded chunks), usually very quickly.\n\nNote: in Bedrock Edition, block updates and redstone are not connected.\n\nA block update simply notifies other Redstone components and blocks that a change has occurred nearby and allows them to change their own state in response, but not all updates will necessarily require changes.\n\nFor example, if a redstone torch activates and updates the dust below it, the dust may already be powered from something else, in which case the dust won't change state and the update propagation will stop there.\n\nBlock updates can also be generated by any immediate neighbor block being placed, moved, or destroyed.\n\nSolid blocks don't \"know\" if they're powered or not.\n\nBlock updates simply update enough blocks around a redstone component to update other redstone components around the solid block (for example, a pressure plate updates its neighbors and the neighbors of the block it's attached to, which includes the space under that block which might be redstone dust).\n\nIn addition to block updates, comparators can be updated by containers (including detector rails with container minecarts on them) and certain other blocks, up to two blocks away horizontally when their state changes (for example, when their inventory changes).\n\nThis is known as a comparator update.\n\nThe following redstone components produce block updates up to two blocks away by taxicab distance, including up and down: Redstone Dust (All directions) Redstone Torch (Up and down) Flat and slanted rails, activator rails, detector rails, and powered rails (Up and down if slanted, down only otherwise) Neighbors of component and of attachment block The following redstone components produce block updates in their immediate neighbors, including above and below, and in the immediate neighbors of the block they're attached to: Redstone Repeater (as if \"attached\" to the block it is facing) Redstone Comparator (as if \"attached\" to the block it is facing) Buttons Detector Rail (flat only; also produces comparator updates) Lever Pressure Plates Trapped Chest (as if \"attached\" to the block beneath; also produces comparator updates) Tripwire Hook Weighted Pressure Plates Observer Immediate neighbors The following redstone components update only their immediate neighbors when they change their state, including above and below: Daylight Detector Inverted Daylight Detector (the Inverted Daylight Detector is not obtainable as an item) Note Block Leaves Scaffolding This is an XOR gate.\n\nTripwire (can also activate tripwire hooks in valid tripwire circuit) Piston and Sticky Piston (from both the piston base and the piston head when extended The following redstone components do not produce block updates when they change their state (though any block will produce a block update in its immediate neighbors if moved or destroyed): Impulse Command Block (also produces comparator updates) Repeating Command Block (also produces comparator updates) Chain Command Block (also produces comparator updates) Dispenser (also produces comparator updates) Dropper (also produces comparator updates) Doors Fence Gates (can be moved) Hopper (also produces comparator updates) Redstone Lamp (can be moved) Trapdoors (can be moved)",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Repeater",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Repeater",
    "content": "Redstone Repeater Redstone Repeater Redstone Repeater (BE) View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No This article is about the block.\n\nFor repeater circuits, see Transmission circuit \u00a7 Repeater.\n\nFor other topics related to redstone, see Redstone (disambiguation).\n\nA redstone repeater is a block that produces a full-strength output signal from its front when its back is powered, with four configurable delay settings.\n\nIt can also be locked into a power state by its side being directly powered by a repeater or a comparator.\n\nA redstone repeater can be broken instantly using any tool, or without a tool, and drops itself as an item.\n\nTo remove a redstone repeater, mine it.\n\nA redstone repeater is removed and drops as an item if: its attachment block is moved, removed, or destroyed; water or lava flows into its space; [Java Edition only ] a piston tries to push it or moves a block into its space.\n\nA redstone repeater generated in the jungle temple's hidden room.\n\nA single redstone repeater is generated naturally in each jungle temple.\n\nThey also generate in ancient cities.\n\nSee also: Redstone circuit A redstone repeater can be used in four different ways: to \"repeat\" redstone signals back to full strength, delay signals, prevent signals moving backwards, or to \"lock\" signals in one state.\n\nA repeater can be placed only on top of opaque blocks (dirt, stone, etc.), on top of upside-down slabs, upside-down stairs, furnaces, and glass.\n\nIn Bedrock Edition, a repeater can also be placed on fences and stone walls.\n\nThey can also be placed on some transparent blocks.\n\nSee Opacity/Placement for more information.\n\nTo place a repeater, use the Place Block control.\n\nA redstone repeater has a front and back \u2013 the arrow on the top points to the repeater's front.\n\nA repeater also has two small redstone torches on its top \u2013 the color of the torches indicates whether its output is on (dark red when off, bright red when on) and the distance between them indicates the delay the repeater adds to the signal transmission.\n\nA repeater is 0.125 (1 \u2044 8) blocks high.\n\nA repeater transmits signals only from its back to its front, but its behavior can be modified from the side (see signal locking, below).\n\nDifferent ways to power a repeater A redstone repeater can be powered by any of the following components at its back: an active power component (redstone torch, lever, block of redstone, etc.) powered redstone dust a powered redstone comparator or another powered redstone repeater facing the repeater a powered opaque block (including any opaque mechanism components, such as dispensers, redstone lamps, etc.) A redstone repeater can power any of the following components at its front: redstone dust a redstone comparator or another redstone repeater facing away from the repeater any opaque block (including any opaque mechanism components) A redstone repeater can activate any mechanism component it is facing.\n\nAn opaque block powered by a redstone repeater is called \"strongly-powered\" (as opposed to an opaque block \"weakly-powered\" by redstone dust).\n\nA strongly-powered opaque block can power adjacent redstone dust, as well as other redstone components.\n\nSee also: Transmission circuit \u00a7 Repeater A redstone repeater can \"repeat\" a redstone signal, boosting it back up to power level 15.\n\nRedstone signals have a maximum power level of 15 and that level drops by 1 for every block of redstone dust the signal travels through.\n\nIf a signal must travel through more than 15 blocks of redstone dust, a redstone repeater can be used to boost the signal back up to full strength.\n\nAn extra two blocks of distance can be achieved by placing solid opaque blocks before and after the repeater.\n\nWhile redstone repeaters can allow signals to travel great distances, each always adds some delay to the transmission since the minimum amount of delay is 1 redstone tick (0.1 seconds, barring lag).\n\nWhen initially placed, a redstone repeater has a delay of one redstone tick (equivalent to two game ticks, or 0.1 seconds barring lag).\n\nA repeater's delay can be modified by using the Use Item control.\n\nEach use increases the repeater's delay by one redstone tick, to a maximum of four redstone ticks, then back to one redstone tick.\n\nLonger delays can be made with multiple repeaters \u2013 for example, a repeater set to 'four' and another to 'one' provides a half-second delay (0.4s + 0.1s = 0.5s).\n\nA repeater set to a delay of two to four redstone ticks increases the length of any shorter on-pulse to match the length of the repeater's delay, and suppress any shorter off-pulse.\n\nFor example, a repeater set to a 4-tick delay changes a 1-tick, 2-tick, or 3-tick on-pulse into a 4-tick on-pulse, and does not allow through any off-pulse shorter than 4 ticks.\n\nAlthough a repeater cannot be set to have a delay of zero, instant repeater circuits are possible (circuits that repeat a signal with no delay).\n\nIn Bedrock Edition, the first repeater have a delay of zero but the repeater is still showing 1-tick [more information needed ] See also: Mechanics/Redstone/Transmission circuit \u00a7 Diode A redstone repeater acts as a diode \u2013 it allows redstone signals through in one direction (unlike redstone dust or opaque blocks that can transmit redstone signals in any direction).\n\nA diode can be used to protect a redstone circuit from redstone signals feeding back into the circuit from its output, or can be used to isolate one part of a circuit from another.\n\nSee also: Mechanics/Redstone/Memory circuit The left repeater has been locked in an unpowered output state by the right repeater.\n\nA redstone repeater can be \"locked\" by another powered redstone repeater facing its side.\n\nWhen locked, the repeater does not change its output (whether powered or unpowered), no matter what the input does.\n\nWhen the side repeater turns back off, the repeater returns to its normal behavior.\n\nA repeater can also be locked by a powered redstone comparator facing its side.\n\nThis offers additional possibilities for locking signals because a comparator's output can be affected from 3 sides as well as by containers.\n\nIf a repeater is locked again too quickly after unlocking (e.g.\n\nthe lock is controlled by a fast clock circuit), or the lock and the input are changed only on the same tick (e.g.\n\nbecause they're fed by the same clock and both repeaters have the same delay), the repeater does not switch states.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b Unavailable with / give command \u2191 a b The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: For a more in-depth breakdown of changes to repeater textures and models, including a set of renders for each state combination, see /Asset history The following content is transcluded from Technical blocks/Redstone Repeater.\n\nThis section is missing information about Pick Block functionality.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nThis section is missing information about Expected b1.9 crash.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.3 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.diode.name When given using the / give command, it is announced as tile.diode.name.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.3 - 13w25b: [Has no defined name, rendering a minimum-length text box if highlighted] 13w25c - 13w36b: tile.diode.name When given using the / give command, it is announced as tile.diode.name.\n\nIssues relating to \"Redstone Repeater\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe recipe and appearance of redstone repeaters are a likely reference to the old method of repeating signals, which would also use two torches at a time, inverting each other A redstone clock formed from a redstone torch and a repeater.\n\nA redstone clock formed from two repeaters.\n\nMCRedstoneSim diagram of a two-way repeater.\n\nCrossing redstone wires using repeaters.\n\n\u2191 http://twitter.com/jeb_/status/33888465502339073 \u2191 http://www.reddit.com/r/Minecraft/comments/fmdtp/teammojang_redstone_repeater_video/c1gzrn6 \u2191 MC-50242 \u2191 MC-182820 \u2014 resolved as \"Fixed\".\n\n\u2191 https://youtu.be/UgHbUFnr2NE?t=2m50s \u2191 https://youtu.be/Ib83drtXv6Y?t=3m40s Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Redstone Torch",
    "url": "https://minecraft.fandom.com/wiki/Redstone_Torch",
    "content": "Redstone Torch Lit Unlit View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous Yes (7) (when lit) Transparent Yes Flammable No Catches fire from lava No A redstone torch is a non-solid block that produces a full-strength redstone signal on all sides adjacent to it, except for its attached block, and can power the block directly above it.\n\nIt deactivates while the block it is attached to is powered.\n\nIn Java Edition, the inactive redstone torch cannot be obtained as an item.\n\nIn Bedrock Edition, it can be obtained via inventory editing.\n\nA redstone torch can be broken instantly using any tool, or without a tool, and drops itself as an item.\n\nA redstone torch is removed and drops as an item if: its attachment block is moved, removed, or destroyed water or lava flows into its space a piston pushes it or moves a block into its space A single redstone torch is found inside each igloo.\n\nIn ancient cities, multiple redstone torches can be found integrated into circuitry.\n\nRedstone torches can be used to craft activator rails, redstone comparators, and redstone repeaters.\n\nSee also: Redstone circuit Redstone torches can be used to power blocks and transmission components such as redstone dust, activate mechanism components such as pistons, or invert redstone signals like a NOT Gate.\n\nPlacement See also: Opacity/Placement Examples of redstone torch placement and behavior.\n\nTo place a redstone torch, use the Place Block control while aiming at the surface to which the redstone torch should be attached.\n\nA redstone torch can be attached to: the top or side of any full solid opaque block (stone, dirt, blocks of gold, etc.), including full-block mechanism components (command blocks, dispensers, droppers, note blocks, and redstone lamps) the top only or side only of certain block.\n\nSee Opacity/Placement.\n\nRedstone torches cannot be attached to the bottoms of any blocks.\n\nAttempting to attach a redstone torch to an invalid surface can cause it to \"snap\" to a valid surface adjacent to the same space.\n\nFor example, if a fence is on the ground, attempting to attach a redstone torch to the side of the fence causes the redstone torch to be attached to the top of the ground next to the fence instead.\n\nActivation A redstone torch is active unless the block it is attached to is powered.\n\nEffectively, a redstone torch inverts the signal applied to its attachment block: power level 0 is changed to 15 and power levels 1 to 15 are changed to 0 (for an alternative that produces a greater range of output power levels, consider a redstone comparator in subtraction mode).\n\nWalls, fences, glass, slabs, hoppers, and stairs cannot be powered so redstone torches attached to them cannot be deactivated.\n\nA redstone torch takes 1 redstone tick (2 game ticks, or 0.1 seconds barring lag) to change state and usually does not respond to 1-tick fluctuations of power.\n\nBehavior While active, a redstone torch: powers adjacent redstone dust to power level 15, including beneath the redstone torch if it is attached to the side of a block powers adjacent redstone comparators or redstone repeaters facing away from the redstone torch to power level 15 strongly powers a full solid opaque block above the redstone torch to power level 15 (but not next to or below it) activates adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nproduces \"reddust\" particles A redstone torch never affects the block it is attached to, even if it is a mechanism component.\n\nFor example, a redstone torch attached to a redstone lamp does not activate the lamp.\n\nA redstone torch experiences \"burn-out\" when it is forced to change state (by powering and de-powering the block it is attached to) more than eight times in 60 game ticks (three seconds, barring lag).\n\nAfter burning out, a redstone torch produces a \"smoke\" particle and a hiss similar to an extinguished fire, deactivates, and then ignores attempts to change its state until the number of state changes in the last 60 game ticks drops to fewer than eight\u2014after that it re-activates when it receives a block update (an adjacent block changing its state) or a redstone update that would not normally deactivate the redstone torch.\n\nThere is no limit on how often a single redstone torch can burn out.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 a b The block's direct item form has the same id as the block.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Floor: Wall: Bedrock Edition: This section is missing information about changes to the redstone torch's resilience against rapid state changes (3-torch loops used to be unreliable but work as of modern Minecraft versions).\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nMain article: /History The following content is transcluded from Technical blocks/Unlit Redstone Torch.\n\nJava Edition Item names did not exist prior to Beta 1.0.\n\nBeta 1.0 - 13w36b: Redstone Torch In Minecraft Earth, the icon in the inventory shows an unlit redstone torch.\n\nIssues relating to \"Redstone Torch\" are maintained on the bug tracker.\n\nReport issues there.\n\nRedstone Torch Unlit Redstone Torch (BE) Unlit (BE) Redstone Wall Torch Unlit Redstone Wall Torch (BE) Unlit (BE) Several characters carrying redstone torches.\n\n[3] Official replica of a redstone torch.\n\n\u2191 https://bugs.mojang.com/browse/MCPE-152036 \u2191 MC-1153 \u2191 https://youtu.be/oXKVfLTrdBM Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Sculk Sensor",
    "url": "https://minecraft.fandom.com/wiki/Sculk_Sensor",
    "content": "For calibrated version of Sculk Sensor, see Calibrated Sculk Sensor.\n\nSculk Sensor Renewable Yes Stackable Yes (64) Tool Blast resistance 1.5 Hardness 1.5 Luminous Yes (1) Transparent Yes Flammable No Catches fire from lava No The sculk sensor is a block in the sculk family.\n\nIt detects vibrations caused by actions and events in a radius around it and emits a redstone signal, and, if it was triggered by a player, also activates nearby sculk shriekers.\n\nPlayers can sneak to avoid making vibrations and wool can be used to occlude and block them.\n\nSculk sensors can be mined with any tool enchanted with Silk Touch, but hoes are the quickest.\n\nIf mined with a non-Silk Touch tool, they drop 5 experience instead.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nSculk sensors generate within the deep dark biome and ancient cities.\n\nA sculk catalyst has a 9% chance of generating a sculk sensor on top of a sculk block.\n\nSculk sensors can be used to craft calibrated sculk sensors.\n\nA sculk sensor has a light level of 1.\n\nWhen active, it changes to a lighter block state without a change to the light level.\n\nThe sculk sensor vibration particle.\n\nSculk sensors detect vibrations in an 8 block spherical radius around it.\n\nVibrations are caused by various events, such as a player and mobs walking, placing or breaking blocks, gliding with elytra, items falling on the ground, a piston extending or a wet wolf shaking itself off.\n\nWhile sneaking, a player is not detected.\n\nWalking, falling, dropping items, or shooting a projectile all trigger the sensor.\n\nWhen a vibration is made within the range of a sculk sensor, a signal travels from the vibration source to the sensor at a speed of one block per game tick (20 blocks per second).\n\nWhen the signal arrives, the sensor is activated for 40 game ticks (2 seconds).\n\nThe sensor cannot detect any other vibrations while activated or while a signal is traveling to it.\n\nSculk sensors have a cooldown period of 1 game tick (0.05 seconds) after being placed or after deactivating.\n\nDuring this short cooldown period, they cannot detect vibrations.\n\nThis prevents them from activating when a contraption it is powering is being unpowered.\n\nSculk sensors don't detect vibrations from other sculk sources or the warden.\n\nWool and carpets have a special interaction with sculk sensors.\n\nIf a wool block is placed between a sensor and a vibration source, the sensor is not able to detect the placed wool nor vibrations behind it.\n\nSpecifically, if the ray joining the cube centers of the sensor block and the vibration source passes through any wool blocks, the noise is muffled.\n\nIf the ray passes diagonally through the edge between two blocks, either one or the other block may muffle it but not both.\n\nSculk sensors are not able to detect footsteps or dropped items on wool blocks or carpet, and they are also unable to detect dropped items of wool and carpets.\n\nSculk sensors pass on the vibrations made by players to sculk shriekers within 8 blocks of the sensor.\n\nFor example, an item dropped by a player triggers the shrieker, but an item dropped by a dispenser or from a broken block does not; a player flying around with elytra triggers the shrieker, but a bat flying around does not.\n\nAlarms can be blocked by wool placed in between the sensor and shrieker, similar to how wool can block vibrations from reaching the sensor itself.\n\nSculk sensors emit a redstone signal when they are activated.\n\nThe strength of the redstone signal is inversely proportional to the distance the vibration signal traveled \u2013 the closer the vibration is to the sculk sensor, the stronger the redstone signal is, so it reaches the maximum redstone signal strength when the vibration is directly on top of the sensor.\n\nThis section needs expansion.\n\nYou can help by expanding it.\n\nInstructions: Bedrock Edition values Each vibration in the game falls under a certain amplitude value.\n\nThis value can be measured with a comparator.\n\nWith the right contraption, the player could detect if a certain action has occurred or is occurring nearby.\n\nThis article is a stub.\n\nYou can help by expanding it.\n\nWhen a sculk sensor detects a vibration, any adjacent block of amethyst will reemit a vibration on the same frequency that the sculk sensor detected.\n\nThe following occurrences, despite presumably causing physical motion, do not produce vibrations and therefore cannot be detected: Blocks destroyed by a fluid flowing into their space [1] Several blocks being destroyed due to their supporting block being removed: [2] Rails Powered rails Detector rails Activator rails Redstone wire Redstone repeaters Redstone comparators Several cases where a dispenser fails to perform an action: [3] Flint and steel not creating fire Bone meal not growing something Heads and carved pumpkins, if not equipped on something or placed Shulker boxes, if not placed Shears, if there's nothing to shear Glowstone, if it doesn't charge a respawn anchor Inserting an eye of ender into an end portal frame [4] [5] Usage of bone meal [6] Eyes of ender breaking [7] Ender Pearl Teleportation [8] Silverfish entering blocks [9] Water and lava flowing into existing spaces, or drying up [10] Changing the mode of a redstone comparator [11] Dyes used on signs [12] Ink sacs and glow ink sacs used on signs [13] Changing the delay on a redstone repeater [14] Changing the shape of a single unit of redstone wire [15] Fire extinguished by rain [16] Fire extinguished via splash water bottles [17] Carrot crops eaten by rabbits [18] Certain specific events at a distance of exactly seven [more information needed ] blocks away: [19] Falling blocks changing from entities to blocks Placing armor stands Breaking armor stands Using spawn eggs The following cases have been confirmed to be intentional: Axolotls being bred via tropical fish buckets [20] Moss blocks replacing existing blocks [21] Sculk sensors are immovable.\n\nPistons cannot push them, and sticky pistons cannot push or pull them.\n\nSlime blocks and honey blocks do not stick to sculk sensors and have no effect whether the slime block or honey block is being pushed or pulled.\n\nA sculk sensor is silent if waterlogged.\n\nIt can still detect vibration, but does not produce sounds itself.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 Picks number from 0, 0, 2, 4, 6, 7, 9, 10, 12, 14, 15, 18, 19, 21, 22, or 24 using the vibration's signal strength, and applies 2 n \u2212 12 12 {\\displaystyle 2^\\frac{n-12}{12}}.\n\nIt uses the same equation that note blocks do.\n\nBedrock Edition: \u2191 Uses the same system as Java Edition.\n\n[verify ] Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: A sculk sensor has a block entity associated with it that holds additional data about the block.\n\nJava Edition: See also: Block entity format Sculk Sensor/BE Bedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Sculk Sensor\" are maintained on the bug tracker.\n\nReport issues there.\n\n\"Sculk\" is derived from \" skulk \", meaning \"keep out of sight, typically with a sinister or cowardly motive\".\n\n[30] Originally the sculk sensor used to require 4 vibrations before it would emit a redstone signal which is the markings up the top, they would light up for each vibration received and would slowly go down after time.\n\n[31] Multiple Sculk sensors with other sculk type of blocks on Minecraft Live.\n\nDitto.\n\nScreenshot by kingbdogz.\n\nClose look.\n\nWool occlusion.\n\nSculk sensors as wireless redstone.\n\nSculk sensors are not affected by rain.\n\nSculk in a forest.\n\nOld textures.\n\nNew textures.\n\nPerformance optimizing.\n\nDitto.\n\nSnowballs creating vibrations.\n\nSculk sensors in a cave.\n\nA contraption using a waterlogged sculk sensor.\n\nSculk type of blocks in redstone category.\n\nTrypophobia sculk sensor.\n\n\u2191 MC-207410 \u2191 MC-207411 \u2191 MC-208142 \u2191 MC-208805 \u2191 MCPE-155372 \u2191 MC-209798 \u2191 MC-210153 \u2191 MC-261419 \u2191 MC-210283 \u2191 MC-210482 \u2191 MC-211331 \u2191 MC-212278 \u2191 MC-214619 \u2191 MC-214621 \u2191 MC-214623 \u2191 MC-217923 \u2191 MC-219440 \u2191 MC-251525 \u2191 MC-260818 \u2191 MC-208799 \u2191 MC-214210 \u2191 MC-213936 \u2191 MC-207334 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-213950 \u2191 MC-213962 \u2014 Works As Intended \u2191 MC-208799 \u2014 resolved as \"Works As Intended\".\n\n\u2191 MC-213947 \u2191 MC-252389 \u2014 \"When landing (or jumping) on wool with your hitbox over the edge, it produces a vibration\" \u2014 resolved as \"Fixed\".\n\n\u2191 MC-207290 \u2014 \"Sculk sensors don't detect vibrations while walking on the edge of a block\" \u2014 resolved as \"Fixed\".\n\n\u2191 \"While not related, Sculk name was inspired by Jeb's process with naming the Shulkers - he liked the word \"Lurker\", but changed it around a bit to feel new.\n\nSculk is one letter changed in Skulk, meaning 'keep out of sight, typically with a sinister or cowardly motive'\" \u2013 @kingbdogz on X, October 13, 2020 \u2191 \"This is how the old sculk sensor worked Source: Minecraft Ideas Academy discord\" \u2013 @CagilMartin on X, June 26, 2022 How to Use Sculk Sensors \u2013 Minecraft.net on February 2, 2023 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Slime Block",
    "url": "https://minecraft.fandom.com/wiki/Slime_Block",
    "content": "This article is about the block.\n\nFor the mob, see Slime.\n\nSlime Block Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Partial [a] Flammable No Catches fire from lava No A slime block is a storage block equivalent to nine slimeballs.\n\nIt has both sticky and bouncy properties making it useful in conjunction with pistons to move both blocks and entities.\n\nSlime blocks can be broken instantly, regardless of held items, or when under the Mining Fatigue effect.\n\nLanding on a slime block does not cause fall damage regardless of whether the player is sneaking. Slime blocks are also slightly slippery, but less so than ice.\n\nSlime blocks cause movement on top of them to slow down.\n\nA player or mob that falls onto the top of a slime block bounces to a height proportional to the falling velocity.\n\nThe bounce height quickly deteriorates.\n\nFor example, a fall of 255 blocks produces a bounce height of about 50 blocks, while a fall of 50 blocks results in a bounce height of 22 blocks.\n\nThe maximum bounce height is 57.625 blocks.\n\nEntities hitting the side of a slime block do not bounce, unless the slime block is moving using a piston.\n\nA player holding the jump key performs a normal jump on contact with the slime block without taking fall damage.\n\nA player holding sneak does not bounce at all and takes fall damage.\n\nPlacing carpets, rails, trapdoors, redstone repeaters or redstone comparators on a slime block does not stop mobs from bouncing and not taking fall damage.\n\nLikewise, placing a pressure plate on a slime block does not stop mobs from bouncing, but the pressure plate still activates.\n\nHalf-blocks such as Cakes and slabs stop the bouncing effect.\n\nMost mobs bounce off slime blocks.\n\nExceptions are chickens, ghasts, bats, phantoms, bees, parrots, and vexes.\n\nOccasionally a horse may get stuck on a block when a player tries to spawn it on top of a slime block in Creative mode.\n\nItems, falling blocks, minecarts and boats do not bounce on slime blocks.\n\nParticles, however, do bounce.\n\nPlayers can also get around the fact that falling blocks, minecarts, and boats don't bounce by having sticky pistons with slime blocks bounce them.\n\nA B Piston A can extend because the slime block ignores the adjacent obsidian.\n\nPiston B cannot extend because the diamond block is prevented from moving by the obsidian and so the slime block also refuses to move.\n\nA self-propelled aircraft engine.\n\nPlace the top block of redstone and sticky piston last.\n\nWhen being pushed by a piston, entities (except ender dragons, item frames and paintings) that are ahead are launched into the direction the block is pushed into.\n\nWhen pulled by a piston, no entities are launched.\n\nWhen a slime block is pushed or pulled by a piston, it attempts to move all adjacent blocks in the same direction.\n\nThe types of blocks that can be moved are the same as those that can be pulled by a sticky piston.\n\nBlocks that cannot be pulled by a sticky piston (i.e.\n\nall the blocks listed on the table on the pistons page) stay in place.\n\nThe blocks that are moved may in turn push other blocks.\n\nFor example, a slime block sitting on the ground attempts to move the ground block underneath itself, which pushes additional ground blocks in the direction of motion just as if it were being pushed directly by a piston.\n\nBlocks such as glazed terracotta and honey blocks are exceptions; they do not move when adjacent slime blocks are moved, even if they are normally pushable by a piston.\n\nWhen the adjacent block that is moved is also a slime block, that block attempts to move all its adjacent blocks.\n\nFor example, a 2\u00d72\u00d72 cube of slime blocks may be pushed or pulled as a unit by a single piston acting on any of the blocks in the cube and attempts to move all blocks adjacent to the cube.\n\nA slime block adjacent to a block that cannot be moved by pistons ignores the immobile block.\n\nHowever, if an adjacent block could be moved but is prevented by the presence of an immobile block, the slime block is also prevented from moving.\n\nThis includes slime blocks being pulled rather than pushed, in which case the piston retracts without pulling anything.\n\nLiquids are an exception: they aren't moved, but neither do they stop a piston from pushing or pulling blocks into their space (usually destroying the liquid, and in a rare case displacing it through the piston).\n\nSlime blocks are not pulled by a non-sticky piston, nor are they moved if an adjacent (non-slime) block is moved by a piston.\n\nThe maximum of 12 blocks moved by a piston still applies.\n\nFor example, a 2\u00d72\u00d73 of slime blocks may be pushed or pulled by a sticky piston as long as no other movable blocks are adjacent to it.\n\nA piston cannot move itself via a \"loop\" constructed of slime blocks, but self-propelled contraptions can be created with multiple pistons.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nIssues relating to \"Slime Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nA minecart leaving a rail onto a slime block can continue on a rail on the opposite side if it has sufficient momentum leaving the initial rail.\n\nSlime blocks under soul sand make the player move slower than if the player was just walking on soul sand.\n\nThis is also apparent with ice.\n\nEntities launched upward by a slime block on top of a piston achieve slightly more than 6.4 blocks of lift, including the lift from the piston.\n\nEntities launched sideways across normal blocks or air are moved 3.510 blocks in the direction of the launch.\n\nWhile falling, placing a slime block while just before impact prevents all fall damage.\n\nSlime blocks are invisible if seen from the clouds.\n\nPlayers walking on slime blocks move at 1.359 m/s, a speed reduction of around 70% from the normal walking speed.\n\nA zombie bouncing on a slime block.\n\nClick to view animation.\n\nImage posted by Jeb over Twitter posted to Imgur.\n\nThe 14w02a Banner showing slime blocks in a slime shape.\n\nObsidian is used for the eyes and the mouth.\n\n[2] Testing of bounce heights.\n\nX axis is the start height in half blocks.\n\nY axis is the return height in half blocks.\n\nRed line at the top is maximum possible bounce height in half blocks.\n\nCrafting a Slime Block in Minecraft: Story Mode \u2191 Like leaves, this block diffuses sky light only from directly above.\n\n\u2191 MC-1133 \u2014 \"Whether or not a player experiences some effect is calculated based on the block under the center of the player\" \u2014 resolved as \"Fixed\".\n\n\u2191 https://www.mojang.com/2014/01/minecraft-snapshot-14w02a/ Block of the Week: Slime \u2013 Minecraft.net on March 10, 2017 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "String",
    "url": "https://minecraft.fandom.com/wiki/String",
    "content": "String String Tripwire View all renders Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No String is an item used in crafting recipes such as bows, fishing rods and leads.\n\nWhen placed as a block, string becomes tripwire, which can be combined with tripwire hooks to form a tripwire circuit.\n\nString can be obtained from drops, breaking cobwebs, fishing, bartering, and as gifts from cats.\n\nString can be looted from jungle temples, desert pyramid chests, and dungeons.\n\nTripwire can be mined instantly with any tool, dropping string.\n\nTripwire is also removed and drops string as an item when: Water flows into its space A piston pushes it or moves a block into its space Tripwire is destroyed without dropping string if lava flows into its space.\n\nA cobweb drops string when it is broken in these ways (see also Cobweb \u00a7 Usage): Breaking a cobweb with a sword Pushing a cobweb with a piston Water breaking a cobweb by flowing over it (flowing lava destroys cobwebs without leaving string) Five pieces of tripwire generate naturally in every jungle temple.\n\nSpiders and cave spiders drop 0\u20132 string upon death.\n\nThe maximum is increased by 1 per level of Looting, for a maximum of 0\u20135 string with Looting III.\n\nStriders drop 2\u20135 string upon death.\n\nThe maximum is increased by 1 per level of Looting, for a maximum of 2\u20138 string with Looting III. [JE only ] Cats drop 0\u20132 string upon death, unaffected by Looting.\n\n[1] String has a 0.6% (3 \u2044 500) chance of being caught when fishing with an unenchanted fishing rod.\n\nThe chance decreases to 0.5% (1 \u2044 200), 0.4% (1 \u2044 250), and 0.3% (3 \u2044 1000) if the fishing rod is enchanted with Luck of the Sea at enchantment levels I, II, and III, respectively.\n\nMain article: Cat \u00a7 Gifts Tamed cats have a 70% chance of giving the player a gift when they wake up from a bed, and the gift has a 16.13% chance to be a string.\n\nPiglins may barter 3-9 string when given a gold ingot.\n\nString can be used as a crafting ingredient and tripwire can be used as a redstone circuit component.\n\nIt can also be used to keep players from ender-pearling through that space.\n\n\"Tripwire\" redirects here.\n\nFor tripwire hooks, see Tripwire Hook.\n\nSee also: Redstone circuits String can be placed as tripwire, which can be used to detect entities as part of a tripwire circuit.\n\nObservers can also be used with a tripwire to generate redstone signals.\n\nPlacement To place tripwire, use string while pointing at a surface facing the space the tripwire should occupy.\n\nTripwire Circuit In order to activate tripwire hooks, tripwire must be part of a \"tripwire circuit\": a straight line of blocks consisting of a block with a tripwire hook attached to it, a \"tripwire line\" (1 to 40 blocks of tripwire), and a second tripwire hook attached to another block.\n\nActivation Tripwire activates if almost any entity (players, mobs, minecarts, boats, items, arrows, etc.) intersects its collision mask.\n\nThe tripwire remains active until there are no entities intersecting its collision mask.\n\nThrown potions, some arrows, thrown ender pearls, and thrown eyes of ender do not activate tripwire.\n\nBehavior An active tripwire updates adjacent blocks (for example, it can activate a BUD circuit).\n\nAdditionally, active tripwires that are part of valid tripwire circuits cause the attached tripwire hooks to activate (producing redstone power).\n\nActive tripwires do not themselves produce redstone power.\n\nWhen tripwire is broken (including by being washed away by spreading water in Java Edition) after being part of a valid tripwire circuit, it activates the attached tripwire hooks.\n\nIn Java Edition, it activates for 5 redstone ticks (10 game ticks, or 0.5 seconds barring lag).\n\nIn Bedrock Edition, it activates for 6 redstone ticks (14 game ticks, or 0.6 seconds barring lag).\n\nIt does not produce the signal if it is broken using shears.\n\nNovice-level fisherman villagers have a 50% chance to buy 20 string as part of their first-tier trade.\n\nJourneyman-level fletcher villagers buy 14 string for 1 emerald as part of their trade.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Unavailable with / give command See also: Block states Java Edition: Bedrock Edition: The following content is transcluded from Technical blocks/Tripwire.\n\nThis section is missing information about Pick Block functionality.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nThis section is missing information about Early behavior Command announced name.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nJava Edition 12w22a - 13w36b: Tripwire Issues relating to \"String\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe first image of tripwires released by Mojang.\n\nAn image released by Mojang testing visibility of tripwires from a distance at night.\n\nThe same room viewed from the same angle, in daytime.\n\nPower lines made of suspended string blocks.\n\n\u2191 MC-200707 \u2014 Looting does not increase drops for iron golems and cats \u2191 \"It's a tripwire, yeah.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"You place it yourself.\n\nString is now placeable\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 Taking Inventory: String \u2013 Minecraft.net on May 14, 2020 Redstone View at: Template:Redstone/content [edit ] Items View at: Template:Items/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Structure Block",
    "url": "https://minecraft.fandom.com/wiki/Structure_Block",
    "content": "Not to be confused with Structure Void.\n\nStructure Block Rarity color Epic Renewable No Stackable Yes (64) Tool None Blast resistance 3,600,000 Hardness -1 Luminous No Transparent No Flammable No Catches fire from lava No A structure block is used to generate structures manually.\n\nThey can also be used to save and load structures, alongside structure void blocks.\n\nStructure blocks are available using the / setblock, / fill, or / give commands, and are available in the Creative inventory in Java Edition.\n\nWhen placed, structure blocks are unbreakable in Survival and have the same blast resistance as bedrock.\n\nIn Bedrock Edition, only save-mode structure blocks are obtainable through commands.\n\nWhen placed, use the structure block to open the structure block GUI.\n\nThe GUI opens only if the player is in Creative mode, and has permission level 2 or higher.\n\nOnce a structure is named, its name appears above the structure block when highlighted, preceded by the block mode (e.g.\n\n\"Save:House\"). [Java Edition only ] Switching between modes preserves the settings of the structure block wherever possible.\n\nBefore being placed, the structure block uses a \"blank\" texture in the inventory, a texture that is not used when on a placed block.\n\nA piston cannot move a structure block.\n\nThey also cannot be pushed nor pulled by sticky pistons.\n\nStructure blocks cannot be destroyed by the ender dragon.\n\nYou can not attach any redstone, vines, bells, lanterns or torches to the block.\n\nYou can however place these blocks around the edge of the block, Save Mode GUI for Java Edition Save Mode GUI for Bedrock Edition Save mode allows the player to highlight a structure in the world and save it to memory, level file [Bedrock Edition only ], or a separate file.\n\nStructure Name The name of the structure is entered into this text box.\n\nCapital letters [JE only ] and special characters are not allowed.\n\nUnderscores (_) and hyphens (-) are allowed.\n\nIn Bedrock Edition, it has \"mystructure:\" prefix on default.\n\nRelative Position Enter the X, Y, and Z values for the structure here, based on the position of the structure block.\n\nSets the origin of the structure outline.\n\nMaximum allowed distance from the structure block in Java Edition is 48 blocks in any direction and 64 on horizontal direction and 256 on vertical direction in Bedrock Edition.\n\nAll invisible blocks shown by structure blocks Show invisible blocks  [JE only ] This section is missing information about What color was used for structure voids prior to 21w20a?\n\nAnd were there any other changers since their introduction in 1.10 (ignoring the old dark outlines)?.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nDisplays invisible blocks as small colored cubes.\n\nOff by default.\n\nInvisible blocks as shown by the \"Show invisible blocks\" option Structure Size Enter the X, Y, and Z values to set the distance from the Relative Position coordinates.\n\nThis sets the opposite corner of the structure, and defines its size.\n\nMaximum structure size is 48x48x48 In Java Edition and 64x256x64 In Bedrock Edition.\n\nWhen successful, generates a white outline surrounding the structure. [JE only ] In Bedrock Edition, the outline is green, blue, or red (depending on the axis) and the preview design can be used to see every layer of fragmented structure and to change the structure size to be saved.\n\nDetect structure size and position Automatically calculates the size and position of the structure using a corner block placed on the opposite corner of the structure.\n\nThe name of the structure in the save block must match the name within the corner block, or the size calculation fails.\n\nTwo corner blocks can also be used.\n\nIt uses the second corner block instead of the structure block.\n\nRemove blocks  [BE only ] While saving the structure and when enabled, this doesn't include any blocks within the structure.\n\nInclude entities While saving the structure and when enabled, this saves any entities within the structure as well.\n\nSave When all coordinates and a structure name have been entered, press this button to save the structure.\n\nIn Java Edition, this saves the structure to a file.\n\nThe name of the structure is the name of the file.\n\nStructures can be saved to a file only by manually pressing this button.\n\nIf a structure block in Save mode is instead powered by redstone, the structure is saved only in memory by default.\n\nThis is the case even if a file for that structure already exists on disk.\n\nReloading the world clears any structures stored in memory.\n\nThis is for unspecified security reasons.\n\n[2] By default, structure blocks are saved in the minecraft namespace.\n\nThis can be changed by prefixing the structure name with <namespace>: in the structure block.\n\nStructures are saved in.minecraft/saves/(WorldName)/generated/(namespace)/structures.\n\n[note 1] In Bedrock Edition, this saves the structure into level database file rather than a standalone file.\n\nAnd the player can set up the structure block so that it can save into the memory or the disk (level file) when automated with redstone.\n\nExport  [BE only ] Used to export a structure into a.mcstructure file, which can be used to load from the structures folder of a behavior pack.\n\nIf the structure contains a custom block from a behavior pack, then the block is also saved on the structure block.\n\nThis option is available only on Android and Windows 10 devices.\n\nLoad Mode GUI for Java Edition Load Mode GUI for Bedrock Edition Load mode allows the player to load and rotate saved structures.\n\nStructure Name The name of the structure to load.\n\nIn Java Edition, it can load structures saved to memory or a file (.minecraft/saves/ <World Name> /generated/ <namespace> /structures/), structures in data pack and in minecraft.jar.\n\nTo load a structure from a file, simply type <namespace>: <structure_path>.\n\nStructures saved only to memory have a higher priority than structures of the same name that were saved to a file.\n\nStructures saved to a file have a higher priority than structures of the same name that is in data pack, which have a higher priority than structures in minecraft.jar.\n\nIn Bedrock Edition, it can load structures saved to memory or disk (level database), and structures in behavior pack.\n\nStructures saved only to memory have a higher priority than structures of the same name that were saved to disk.\n\nStructures saved to disk have a higher priority than structures of the same name that is in behavior pack.\n\nVanilla NBT structure files cannot be loaded with structure block.\n\nRelative Position The X, Y, and Z coordinates of the corner in which to generate the structure, based on the position of the structure block.\n\nCoordinates may be defined as numbers between -48 and 48 In Java Edition, or between -64 and 64 In Bedrock Edition.\n\nShow bounding box Highlights the outline of the structure; on by default.\n\nStructure Integrity and Seed Removes random blocks that compose the structure based on a user-defined seed.\n\nLower integrity values result in more blocks being removed.\n\nThe integrity value must be between 0.0 and 1.0 [JE only ] / 100.00 [BE only ].\n\nInclude entities Include any entities saved in the structure file when loading the structure.\n\nOff by default.\n\nWaterlog blocks  [BE only ] While loading the structure in water, it allows the blocks to be waterlogged instead of being replaced with air.\n\nRemove blocks  [BE only ] While loading the structure, doesn't include any blocks within saved structure.\n\nRotation (0, 90, 180, 270) Sets the rotation of the structure to 0\u00b0 (no rotation), 90\u00b0 clockwise, 180\u00b0 clockwise, and 270\u00b0 clockwise (or 90\u00b0 counter-clockwise).\n\nMirror (\u00a6, <>, ^v) Sets the mirroring of the structure to none (\u00a6), left to right (< >), or front to back (^ v).\n\nAt 0\u00b0 rotation < > mirrors across the X-axis and ^ v mirrors across the Z-axis.\n\nIn Bedrock Edition, the options are x and z, which can be toggled to set mirroring.\n\nAnimation mode  [BE only ] Select the animation to show how structure is loaded.\n\nPlace by layer make structure loaded layer by layer, place by block make structure loaded one block by block.\n\nDefault to none.\n\nOnce the loading has started, breaking the structure block can not stop the loading process.\n\nLoading with animation may break blocks in structures that contain multiple parts (such as beds, doors, or tall grass), or need to be attached to other blocks (such as torches), and may cause water, lava, and fire to spread out.\n\nAnimation time  [BE only ] Adjust the animation time for loading the structure.\n\nLoad Load the structure.\n\nIn Java Edition, press this button once to prepare the outline preview of the structure.\n\nWhen satisfied with the position, press again to generate the structure.\n\nStructures may also be loaded with the use of redstone.\n\nCorner Mode GUI for Java Edition.\n\nCorner Mode GUI for Bedrock Edition.\n\nCorner mode allows for an easier and automatic size calculation while saving or loading structures.\n\nTo use, place on the opposite corner of a save structure block or a second corner structure block.\n\nThen, using a save block, press \"DETECT\".\n\nWhen successful, a bounding outline appears.\n\nStructure Name The name of the structure on which to calculate the size and position.\n\nName is case sensitive; it must match exactly with the name provided by the complementary save or corner structure block.\n\nData Mode GUI Data mode is a deprecated mode, which is superseded by jigsaw block, but still used in some certain vanilla structures (igloo, end city, woodland mansion, ocean ruin, shipwreck).\n\nStructure block in data mode can be used only during natural generation.\n\nThey mark the location to run a specified hardcoded function, which can be used only for relevant structures.\n\nIn Java Edition, this mode is hidden unless the Alt key is held while switching from Corner mode.\n\nIn Bedrock Edition, data mode structure block cannot be obtained with commands.\n\nCustom Data Tag Name The name of the function to run.\n\nIgloo \"chest\" - sets the loot table for a chest beneath the structure block to \"chests/igloo_chest\" and sets the loot table seed dependent on the world seed.\n\nEnd city \"Chest\" - Sets the loot table for a chest beneath the structure block to \"chests/end_city_treasure\" and sets the loot table seed dependent on the world seed.\n\n\"Sentry\" - Creates a shulker at the location of the structure block.\n\n\"Elytra\" - Creates an item frame entity with an elytra item inside it at the location of the structure block.\n\nWoodland mansion \"ChestSouth\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"ChestNorth\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"ChestEast\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"ChestWest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"Mage\" - Creates an evoker at the location of the structure block.\n\n\"Warrior\" - Creates a vindicator at the location of the structure block.\n\nOcean Ruin \"chest\" - Creates a chest at the location of the structure block, setting its loot table to either \"chests/underwater_ruin_big\" or \"chests/underwater_ruin_small\", with seed dependent on the world seed.\n\n\"drowned\" - Creates a drowned at the location of the structure block.\n\nShipwreck \"map_chest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"treasure_chest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\n\"supply_chest\" - Sets the loot table for a chest that replaces the structure block to \"chests/woodland_mansion\" and sets the loot table seed dependent on the world seed.\n\nExport Mode GUI 3D Export mode [Bedrock Edition only ] [note 2], is similar to save mode, but the structure is saved as a 3D render in the format of.glb rather than as an actual structure.\n\n[3] Therefore, structures saved this way can be viewed with 3D Viewer [4] or Paint 3D [5], but cannot be generated via load mode.\n\nThe 3D file exported is basically the same as the real-time rendering in the preview.\n\nEnd portal blocks, nether portal blocks, etc.\n\nin.glb file have only a static texture.\n\nSome blocks cannot be displayed properly, such as piston arms, chests, beds, etc.\n\nIncluding entities is not supported in this mode.\n\nStructure blocks in 3D output mode cannot be activated by redstone.\n\nStructure Name Enter the name of the structure.\n\nCase sensitive.\n\nThe player must enter a file name in order to export.\n\nRelative Position Enter the X, Y, and Z values for the structure here, based on the position of the structure block.\n\nSets the origin of the structure outline.\n\nMaximum allowed distance from the structure block is 64 blocks in any direction.\n\nStructure Size Enter the X, Y, and Z values to set the distance from the Relative Position coordinates.\n\nThis sets the opposite corner of the structure, and defines its size.\n\nMaximum structure size is 64\u00d7256\u00d764.\n\nRemove Blocks While exporting the structure, doesn't include any blocks within saved structure.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nExport Structure Block See also: Block states Java Edition: Bedrock Edition: A structure block also has a block entity associated with it.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities author: Author of the structure; only set to \"?\" for most vanilla structures.\n\nignoreEntities: 1 or 0 (true/false): Whether entities should be ignored in the structure.\n\nintegrity: How complete the structure is that gets placed.\n\nmetadata: Value of the data structure block field.\n\nmirror: How the structure is mirrored, one of \"NONE\", \"LEFT_RIGHT\" (mirrored over X axis when not rotated), or \"FRONT_BACK\" (mirrored over Z axis when not rotated).\n\nmode: The current mode of this structure block, one of \"SAVE\", \"LOAD\", \"CORNER\", or \"DATA\".\n\nname: Name of the structure.\n\nposX: X-position of the structure.\n\nposY: Y-position of the structure.\n\nposZ: Z-position of the structure.\n\npowered: 1 or 0 (true/false): Whether this structure block is being powered by redstone.\n\nrotation: Rotation of the structure, one of \"NONE\", \"CLOCKWISE_90\", \"CLOCKWISE_180\", or \"COUNTERCLOCKWISE_90\".\n\nseed: The seed to use for the structure integrity, 0 means random.\n\nshowboundingbox: 1 or 0 (true/false): Whether to show the structure's bounding box to players in Creative mode.\n\nsizeX: X-size of the structure, its length.\n\nsizeY: Y-size of the structure, its height.\n\nsizeZ: Z-size of the structure, its depth.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nThe first image of the then-mysterious structure block, as posted by Michael Stoyke.\n\nAnother cryptic image by Searge; the structure block can be seen in the center of the image, as well as the hotbar.\n\nThe previous image, brightened for clarity.\n\nYet another of the cryptic images posted by Searge; note the structure block in the hotbar and several in the upper-right corner.\n\nThe secret message uncovered in the previous image with the use of an image-editing program.\n\nAnother mystery image.\n\nYet another mystery image.\n\nThe mystery images in sequence.\n\nA \"side quest\" mystery image.\n\nHighlighting of the end city structures The structure block on the data mode in 1.9 The interface in 1.9 Highlighting of end city structures in save mode Highlighting of structures Teaser screenshot of the 1.10 structure block textures.\n\nAn image, tweeted by ProfMobius, of a structure block generating a fossil-like structure made of quartz.\n\nIssues relating to \"Structure Block\" are maintained on the bug tracker.\n\nReport issues there.\n\nComparison of Java Edition 1.9 and Java Edition 1.10 blank structure block textures.\n\nSelecting a tree on an island using Save and Corner structure blocks.\n\nPreparing to load the saved tree structure into an empty sunflower plains.\n\nStructure loaded.\n\nA structure block showing invisible blocks.\n\nThe UIs of different structure block types.\n\nThe UI Interface for Bedrock Edition (Classic UI) The UI Interface for Bedrock Edition (Pocket UI) Jigsaw Block \u2191 Structures created in versions before 1.13 are saved in.minecraft/saves/(WorldName)/structures.\n\n\u2191 Only available on Windows 10 \u2191 MC-221834 \u2191 MC-105595 \u2191 \"How to Use Structure Blocks in Minecraft: Education Edition\" \u2013 Minecraft: Education Edition on YouTube, August 2, 2018 \u2191 https://apps.microsoft.com/store/detail/3d-viewer/9NBLGGH42THS \u2191 https://apps.microsoft.com/store/detail/paint-3d/9NBLGGH5FV99 \u2191 \"How about a block that players can't get, can't be found in the world, but it's effect to the world is visible and exciting?\" \u2013 @SeargeDP (Michael Stoyke) on X, April 8, 2015 \u2191 \"I once met a small bright dot that enjoyed nothing more in his life than protecting big dark secrets by being painted over them in images.\" \u2013 @SeargeDP (Michael Stoyke) on X, April 14, 2015 \u2191 \"The instructions I got was to make them \"feel mysterious\";)\" \u2013 @jeb_ (Jens Bergensten) on X, May 3, 2016 \u2191 MC-257102 \u2014 \"Missing Structure Block in creative tab\" \u2014 resolved as \"Fixed\".\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Target",
    "url": "https://minecraft.fandom.com/wiki/Target",
    "content": "Target Renewable Yes Stackable Yes (64) Tool Blast resistance 0.5 Hardness 0.5 Luminous None Transparent No Flammable Yes (15) Catches fire from lava No A target is a block that produces a temporary redstone signal when hit by a projectile.\n\nUnlike most other conductive blocks it also redirects adjacent redstone dust towards it.\n\nA target can be found in ancient cities.\n\nTargets can be mined using any tool or by hand, but a hoe is the fastest way to break it.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nTargets emit a redstone signal when hit by most projectiles.\n\nThis includes arrows, tridents, eggs, snowballs, splash potions, fire charges fired by a dispenser, firework rockets, lingering potions, bottles o' enchanting, ender pearls, shulker bullets, and llama spit.\n\nThe closer a projectile is to the center of the block, the stronger the redstone signal that is produced.\n\nWhen struck by most projectiles, the target emits redstone power for 4 redstone ticks (0.4 seconds).\n\nArrows and tridents instead cause the target to emit power for 10 redstone ticks (1 second), similar to stone buttons.\n\nA target can be hit with any of the projectiles mentioned above.\n\nThe strength of the signal depends on how close the projectile is to the center of the block, from 1 to 15.\n\nThe target also provides a block update when hit, meaning that an observer can detect if the target has been hit and has produced a redstone signal. [Java Edition only ] [1] When used as part of a redstone circuit, a target has the unique property that, though being an opaque block that is not a mechanism component, still can redirect adjacent redstone dust to point to itself.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nJava Edition: Issues relating to \"Target\" are maintained on the bug tracker.\n\nReport issues there.\n\nThe target block shown at MINECON Live 2019.\n\nOfficial target block artwork.\n\nAn arrow at the center of a target block \u2191 MCPE-84391 Block of the Week: Target \u2013 Minecraft.net on June 18, 2020 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "TNT",
    "url": "https://minecraft.fandom.com/wiki/TNT",
    "content": "This article is about the regular TNT block.\n\nFor the consumable in Minecraft Dungeons, see:MCD:TNT.\n\nFor other uses, see TNT (disambiguation).\n\nTNT Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 25 Hardness 0 Luminous No Transparent No Flammable Yes (15) Catches fire from lava Yes TNT is a block that can be activated by a Redstone signal, flint and steel, stray fire, flaming projectile or explosion.\n\nPrimed TNT is a gravity-affected entity that produces a damaging, block-destroying explosion after a few seconds.\n\nTNT can be broken instantly with any tool, or without a tool.\n\nPrimed TNT cannot be broken as it is an entity, but it can be removed with the / kill command.\n\nNine TNT blocks occur naturally in each desert pyramid.\n\nTwo TNT blocks flank a trapped chest in one secret woodland mansion room.\n\nA TNT explosion.\n\nTNT blocks can be primed by: using a flint and steel or a fire charge using any item enchanted with Fire Aspect, including a Fire Aspect enchanted book  [Bedrock Edition only ] a powered redstone signal being shot by a flaming or explosive projectile being hit an arrow from a bow with flame enchantment being hit by an arrow that has traveled through lava or fire being hit by a ghast, blaze fireball or a fire charge fired from a dispenser being hit by an explosive skull from a Wither coming into contact with spreading fire or lava being in the blast radius of a nearby explosion, including that of another TNT block, a creeper, a bed, a respawn anchor, or an end crystal being placed by a dispenser being lit by a flint and steel used by a dispenser being hit by a lightning bolt Primed TNT Behavior Does not exist Details Size Height: 0.98 blocks Width: 0.98 blocks Once primed, TNT turns into an entity, which includes being affected by gravity.\n\nThe new primed TNT is spawned at the center (+0.5,+0.5,+0.5) of where the TNT block was, like a cube with an edge length of 0.98.\n\nIts fuse lasts 40 redstone ticks (4 seconds/80 game ticks) if activated by redstone or fire, or a random number between 10 and 30 game ticks (0.5 to 1.5 seconds) if it is destroyed by another explosion.\n\nOnce spawned, primed TNT is given a vertical velocity of 0.2 blocks per tick, and a horizontal velocity of 0.02 blocks per tick in a random direction.\n\nGiven these velocities, the TNT travels 0.166 blocks (or 6 block pixels) horizontally before it stops, given there is no block in the way.\n\nWhen the countdown timer expires, the TNT explodes.\n\nIf in the air, TNT falls roughly 77 blocks before exploding once it is ignited.\n\nThe explosion has an explosive force of 4.\n\nPrimed TNT's texture blinks, alternating every 0.5 seconds between the TNT block's texture, and a copy of it that has been brightened to near-white.\n\nThe effect is dynamic and the brightened texture can't be found in the assets.\n\nPrimed TNT cannot be pushed by players or other mobs, but it moves when in flowing water or lava.\n\nPrimed TNT cannot mount minecarts or boats.\n\nWhen primed TNT detonates while in water or lava, it does not break any blocks.\n\nIt does still damage players, mobs, and other entities. [Java Edition only ] [1] Primed TNT that detonates outside water can still damage submerged blocks.\n\nTo make TNT destroy blocks in the water, e.g.\n\nto enter an ocean monument from the top, one can place sand or gravel on the TNT before it is primed.\n\nPriming the TNT causes the sand or gravel to fall one block, engulfing the TNT.\n\nBecause the TNT is no longer immersed in water, it can destroy the surrounding blocks.\n\nPrimed TNT is not teleported when entering a nether portal; instead, it passes through portal blocks. [Java Edition only ] Primed TNT teleports as expected when entering an end portal, maintaining its direction and speed.\n\nThe fuse timer keeps counting down (unless the spawn chunks are unloaded, then it pauses until a player loads the chunks).\n\nIf the TNT is primed atop any sort of fence post that is two blocks high or larger, it falls through the fence block on which it was activated and stops on the next lower one.\n\nIts detonation damages only the fence block it was \"stuck\" in. [Java Edition only ] In Java Edition primed TNT summoned by a command explodes immediately because the fuse time defaults to zero if not specified.\n\nFor redstone to activate TNT, it must either lead directly to the TNT, or power an adjacent block.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Primed TNT use the Friendly Creatures sound category for entity-dependent sound events.\n\nBedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nJava Edition: Bedrock Edition: TNT has entity data associated with them that contain various properties of the entity.\n\nJava Edition: Main article: Entity format Dynamic block entity data Tags common to all entities Fuse: Ticks until explosion.\n\nDefault is 0.\n\nIf activated from a TNT block, the fuse duration is 80 ticks (4 seconds).\n\nBedrock Edition: See Bedrock Edition level format/Entity format.\n\nIssues relating to \"TNT\" are maintained on the bug tracker.\n\nReport issues there.\n\n\"TNT\" stands for T ri n itro t oluene.\n\nThe Preferred IUPAC name, however, is 2,4,6-trinitrotoluene.\n\nThe chemical formula is C 7 H 5 N 3 O 6.\n\nThe use of sand in the crafting recipe references dynamite, a different high explosive from TNT, consisting of nitroglycerin mixed with diatomaceous earth (which is mostly silica, the same chemical compound as yellow sand).\n\nThe block\u2019s appearance as a bundle of red sticks is also typical of dynamite.\n\nAlthough flint and steel cannot light fires in Adventure Mode, it can still ignite TNT.\n\nIt takes 19.75 blocks to fall for it to reduce the timer for one second.\n\nAlthough primed TNT normally gets caught in cobwebs, TNT propelled fast enough flies through them without slowing down at all.\n\nIt is slightly smaller than a full block when activated, as with all entity versions of blocks (see shulker).\n\nUsing flint and steel to ignite it sets it off at once, but fire must burn it for many seconds before triggering.\n\nIn Pi Edition, TNT by default doesn't do anything, but when set to data value 1, it ignites when broken.\n\nThe longest fuse time of TNT is 27 minutes and 18.35 seconds, or 32,767 ticks.\n\nAttempting to ignite TNT while sneaking results in the block being lit on fire, rather than the TNT becoming primed.\n\nStanding behind blocks during an explosion dramatically reduces knockback and damage from the explosion.\n\nTNT does not damage the player on peaceful difficulty, however, it does break blocks and damage entities.\n\nThe TNT fuse sound uses the same sound file as when a creeper is primed, but it is played at a higher pitch when the TNT is primed.\n\nAs seen in the Mobestiary, the creeper has TNT inside.\n\nFalling primed TNT, showing the effect of gravity.\n\nTNT triggered by redstone signal.\n\nA giant cube of TNT.\n\nCreeper Tutorials/Traps#Explosive traps Tutorials/TNT cannons \u2191 MCPE-21611 Works As Intended \u2191 MC-12959 \u2191 MC-165991 \u2191 MCPE-81258 Block of the Week: TNT \u2013 Minecraft.net on August 11, 2017 Redstone View at: Template:Redstone/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Trapdoor",
    "url": "https://minecraft.fandom.com/wiki/Trapdoor",
    "content": "See also: Door Trapdoor View all renders Renewable Yes Stackable Yes (64) Tools Blast resistance 3 (Wooden) 5 (Iron)?\n\n(Copper) Hardness 3 (Wooden and copper) 5 (Iron) Luminous No Transparent Yes Flammable No Catches fire from lava Overworld wood: Yes Iron, Nether wood, copper: No A trapdoor is a solid, transparent block that can be used as an openable 1\u00d71 barrier.\n\nWooden trapdoors can be mined with any tool, but an axe is the fastest.\n\nIron trapdoors require a pickaxe to drop as items.\n\nCopper trapdoors require a stone pickaxe or better to drop as items.\n\nTrapdoors remain in place if their attachment block is moved, removed, or destroyed.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nMost types of trapdoors can be found in shipwrecks.\n\nSpecifically: Oak trapdoors generate in villages, igloos, and shipwrecks.\n\nSpruce trapdoors generate in taiga villages and shipwrecks.\n\nJungle trapdoors generate in desert villages (around composters) and shipwrecks.\n\nDark oak trapdoors generate in shipwrecks.\n\nIron trapdoors generate in ancient cities.\n\nCopper trapdoors generate in trial chambers.\n\nCopper trapdoors can be turned into the respective waxed copper trapdoors by using a honeycomb item on them.\n\nWaxed copper trapdoors do not oxidize and are identical to the non-waxed version.\n\nUsing an axe on a waxed copper trapdoor turns it into the respective non-waxed copper trapdoor.\n\nIn addition, using an axe on an exposed, weathered, or oxidized copper trapdoor reverts it one stage to a regular, exposed, or weathered copper trapdoor respectively.\n\nNon-waxed copper trapdoors are completely deoxidized when struck by lightning, and other non-waxed copper trapdoors nearby are deoxidized randomly.\n\nSee also: Trapdoor uses Wooden trapdoors and copper trapdoors can be opened and closed by players or redstone pulse.\n\nIron trapdoors can be opened only by redstone pulse.\n\nTo place a trapdoor, use a trapdoor item while pointing at the block it should be attached to.\n\nOnce it is placed, the attachment block can be removed without breaking the trapdoor.\n\nWhen placed, a trapdoor either occupies the top or bottom part of a block, depending on where the player placed the trapdoor.\n\nIf a trapdoor is placed on the top part of a block, it opens downward.\n\nIf placed on the bottom part of a block, it opens upward.\n\nA trapdoor's \"hinge\" is located on the block attached to it.\n\nTrapdoors can be moved by pistons.\n\nTrapdoors block flowing water and lava.\n\nWaterlogged trapdoors release water from all sides apart from the top [Bedrock Edition only ] or all sides apart from the side that is blocked by the trapdoor itself (and the top) [Java Edition only ] Lava can create fire in air blocks next to wooden trapdoors as if they were flammable, but the trapdoors do not burn (and cannot be burned by other methods either).\n\nSingle trapdoors are climbable if they are opened and placed directly above a ladder against a wall.\n\nThis means if an opened trapdoor is placed in the middle of two ladders, players can climb through it directly.\n\nHowever, if there is more than one trapdoor between two ladders, players cannot climb through (they are stopped at the top of the first trapdoor).\n\nTrapdoors can act as a solid block when in the closed position and thus certain items can be placed above or below it.\n\nWhen trapdoors are opened, they act like a non-solid block resulting as a non-placeable area.\n\nLanterns, for example, can be placed on top and below the closed trapdoor.\n\nThe sound of opening and closing of a trapdoor can be heard up to 16 blocks away, like most mob sounds.\n\nTrapdoors can be opened or closed with a player or mob inside.\n\n[1] In Java Edition, closing a trapdoor one block above the ground while standing under it causes the player to crawl, and continue crawling until reaching a block with two empty spaces above, at which time the player stands automatically.\n\nThis can be used to enter small secret tunnels or otherwise inaccessible terrain.\n\nThis functionality is not available in Bedrock Edition unless the \u201cCrawling\u201d experimental feature is enabled.\n\nA trapdoor can be used as a switchable barrier to entity movement.\n\nAlthough primarily used to block movement by mobs and players, a trapdoor can also be used to control the movement of boats (for example, a top trapdoor placed in a two-wide water flow stops a boat when closed (extended out into the water flow), but allow it to move again when open), items and minecarts (a trapdoor can stop a falling item or minecart, then allow it to drop again when the trapdoor opens), etc.\n\nTrapdoors are 0.1875 (3 \u2044 16) blocks thick.\n\nThe rest of a trapdoor's space can be moved through freely and provides a breathable space if placed underwater and not waterlogged.\n\nTo open or close a wooden trapdoor or a copper trapdoor, use the Use Item/Place Block control.\n\nWhen a trapdoor opens or closes, it immediately changes its orientation without affecting anything in the space it \"passes through\".\n\nMoving trapdoors don't push entities the way that pistons do.\n\nIron trapdoors can be opened only with redstone power (a button, a redstone circuit, etc.).\n\nMobs consider all trapdoors closed, resulting in pathfinding mobs falling through open trapdoors.\n\n[2] A player can take advantage of this behavior to construct mob traps.\n\nBoth wooden and iron trapdoors can be controlled with redstone power.\n\nA trapdoor is a redstone mechanism and can be activated by: an adjacent active power component, including above or below: for example, a redstone torch, a block of redstone, a daylight sensor, etc.\n\nan adjacent powered block (for example, a block with an active redstone torch under it), including above or below a powered redstone comparator or redstone repeater facing the trapdoor powered redstone dust configured to point at the trapdoor or a single redstone \"cross\" next to it; a trapdoor is not activated by adjacent powered redstone dust that is configured to point in another direction, or a single redstone \"dot\" next to it.\n\nWhen activated, a trapdoor immediately rotates around its hinge side to its open state.\n\nWhen deactivated, a trapdoor immediately returns to its closed state.\n\nEach change of state takes one game tick.\n\nAn activated wooden trapdoor can still be closed by a player, and does not re-open until it receives a new activation signal (if a trapdoor has been closed \"by hand\", it still needs to be deactivated and then reactivated to open by redstone).\n\nOverworld wooden trapdoors can be used as a fuel in furnaces, smelting 1.5 items per block.\n\nWooden trapdoors can be placed under note blocks to produce \"bass\" sounds.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: Bedrock Edition: \u2191 a b Due to MCPE-168021, this sound sometimes does not play Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 a b c d e f g h i j k l Available with / give command.\n\n\u2191 a b c d e f g h i j k l The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Issues relating to \"Trapdoor\" are maintained on the bug tracker.\n\nReport issues there.\n\nOak Trapdoor Spruce Trapdoor Birch Trapdoor Jungle Trapdoor Acacia Trapdoor Dark Oak Trapdoor Mangrove Trapdoor Cherry Trapdoor Bamboo Trapdoor Crimson Trapdoor Warped Trapdoor Iron Trapdoor Copper Trapdoor Exposed Copper Trapdoor Weathered Copper Trapdoor Oxidized Copper Trapdoor An example of an open trapdoor, shown with its back to a block.\n\nAn example of a closed trapdoor, shown flat against the adjacent block.\n\nTrapdoors on slabs.\n\nIron trapdoors.\n\nAll trapdoor types alongside with their respective door counterparts.\n\nClosed trapdoor.\n\nOpen trapdoor.\n\nFirst image of a mangrove trapdoor.\n\nBamboo trapdoor concept art.\n\nBamboo trapdoor prototype textures.\n\n\u2191 MC-11075 \u2013 \"Trapdoor Colliding With Player\" resolved as \"Won't Fix\" \u2191 MC-50556 \u2014 resolved as \"Works As Intended\".\n\nTaking Inventory: Trapdoor \u2013 Minecraft.net on October 19, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Trapped Chest",
    "url": "https://minecraft.fandom.com/wiki/Trapped_Chest",
    "content": "Trapped Chest Renewable Yes Stackable Yes (64) Tool Blast resistance 2.5 Hardness 2.5 Luminous No Transparent Yes Flammable No Catches fire from lava Yes A trapped chest is a variant of the chest that functions similarly, but has a red-tinted latch (with the default resource pack), and produces redstone power while it is open.\n\nLike normal chests, two trapped chests can combine into a large trapped chest.\n\nTrapped chests can be broken with any tool, but axes are the fastest.\n\nItems contained in the chest are dropped when the chest is broken.\n\nIf one half of a large trapped chest is destroyed, the corresponding items from the destroyed trapped chest are dropped and the remaining trapped chest continues to function as a small trapped chest.\n\n\u2191 Times are for unenchanted tools as wielded by players with no status effects, measured in seconds.\n\nFor more information, see Breaking \u00a7 Speed.\n\nTrapped chests naturally generate in \"fake end portal rooms\" in woodland mansions.\n\nTrapped chests can be used as containers and as redstone components.\n\nTo place a trapped chest, place the face of a block adjacent to the space the trapped chest should occupy.\n\nPlacing two adjacent trapped chests side-by-side typically joins them to create a large trapped chest.\n\nTo avoid them joining and instead place two single trapped chests side by side, the player may sneak while placing the second trapped chest, [Java Edition only ] or place the second trapped chest facing a different direction from the first one. [Bedrock and Java editions only ] Alternately, normal chests do not combine with trapped chests.\n\nTrapped chests can be moved by pistons. [Bedrock Edition only ] Water and lava flow around without affecting them.\n\nLava can create fire in air blocks next to trapped chests as if they were flammable, but the chests do not burn (and cannot be burned by other methods either).\n\nTrapped chests can also activate buried TNT, destroying themselves, their contents and any mobs or players near them.\n\nThey need to be opened twice for the TNT to be activated.\n\nThe GUI of a trapped chest.\n\nThe GUI of a large trapped chest.\n\nA single trapped chest has 27 slots of inventory space, and a large trapped chest has 54 slots of inventory space.\n\nIn a large trapped chest, the top three rows in the interface correspond to the western or northern chest block and the bottom three to the southern or eastern chest block.\n\nTo open the trapped chest GUI, use the Use Item control.\n\nTo move items between the trapped chest inventory and the player inventory or hotbar while the trapped chest GUI is open, drag or shift-click the items.\n\nTo exit the trapped chest GUI, use the Esc control.\n\nBy default, the GUI of a trapped chest is labeled \"Chest\" and the GUI of a large trapped chest is labeled \"Large Chest.\" A trapped chest's GUI label can be changed by naming the trapped chest in an anvil before placing it, or by using the data command [Java Edition only ] (for example, to label a trapped chest at (0, 64, 0) \"Loot!\", use /data merge block 0 64 0 {CustomName:'\"Loot!\"'}).\n\nIf half of a large trapped chest is renamed, that name is used to label the GUI of the entire large trapped chest, but if the named half is destroyed, the other half reverts to the default label.\n\nIf both halves of a large trapped chest have different names, the GUI label takes the name of the northernmost or westernmost half of the large trapped chest depending on its orientation (the half with the lowest coordinate in the appropriate axis).\n\nA trapped chest can be \"locked\" by setting the trapped chest's Lock tag.\n\nIf a trapped chest's Lock tag is not blank, the trapped chest cannot be opened except by players holding an item with the same name as the Lock tag's text.\n\nA trapped chest's Lock tag can be set or unset with the data command.\n\nFor example, to lock a trapped chest at (0, 64, 0) so that only players holding an item named \"Alice's Key\" can open the trapped chest, use data merge block 0 64 0 {Lock:\"Alice's Key\"}.\n\nChests (left) and trapped chests (right) can be placed next to each other.\n\nRedstone dust configures itself to point toward trapped chests, but not toward regular chests.\n\nSee also: Redstone circuit Trapped chests can be used to detect when their inventory is accessed by players.\n\nA trapped chest is inactive while not being accessed, but activates when accessed by a player (see above).\n\nAccessing either part of a large trapped chest activates both halves of the large trapped chest.\n\nMobs cannot access/activate a trapped chest, and a trapped chest is activated by items moving into or out of it by droppers or hoppers.\n\nWhile active, a trapped chest: powers any adjacent redstone dust, including beneath the trapped chest, to a power level equal to the number of players accessing the trapped chest (maximum 15) powers any adjacent redstone repeaters facing away from the trapped chest to power level 15 strongly powers any full solid opaque block (stone, dirt, block of gold, etc.) beneath the trapped chest to a power level equal to the number of players accessing the trapped chest (maximum 15) activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nDue to hoppers being locked by redstone activation, hoppers below a trapped chest do not take items from it while it is open.\n\nAn active trapped chest does not power any adjacent redstone comparators facing away from it.\n\nRedstone comparators can measure the block state of the trapped chest, producing a power level from 0 to 15 proportional to how full the trapped chest is.\n\nAnything else powered by an active trapped chest (including a block beneath it) can power redstone comparators normally.\n\nPiglins become hostile toward players who open, break or interact with trapped chests.\n\nTrapped chests can be used as a fuel in furnaces, smelting 1.5 items per chest.\n\nTrapped chests can be placed under note blocks to produce \"bass\" sound.\n\nThis feature is exclusive to Java Edition.\n\nAs with normal chests, on December 24, 25, and 26, trapped chests and large trapped chests have their textures changed to Christmas chests that look like presents.\n\nChristmas trapped chest and their large version look identical to Christmas chest and their large version respectively.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: Java Edition: \u2191 a b c MC-98316 \u2014 Wrong subtitles caused by missing distinction Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Every trapped chest has a block entity associated with it that holds additional data about the trapped chest.\n\nJava Edition: See also: Block entity format Block entity data Tags common to all block entities CustomName: Optional.\n\nThe name of this container in JSON text component, which appears in its GUI where the default name ordinarily appears.\n\nItems: List of items in this container.: An item, including the slot tag.\n\nChest slots are numbered 0-26, 0 starts in the top left corner.\n\nTags common to all items Lock: Optional.\n\nWhen not blank, prevents the container from being opened unless the opener is holding an item whose name matches this string.\n\nLootTable: Optional.\n\nLoot table to be used to fill the chest when it is next opened, or the items are otherwise interacted with.\n\n[note 1] LootTableSeed: Optional.\n\nSeed for generating the loot table.\n\n0 or omitted use a random seed.\n\n[note 1] gold: Exists only in the april fools snapshot 23w13a_or_b.\n\nOptional.\n\nWhen set to anything but 0, turns the chest into a golden chest.\n\n\u2191 a b Both loot table tags are removed once the items have been generated.\n\nBedrock Edition: See Bedrock Edition level format/Block entity format.\n\nIssues relating to \"Trapped Chest\" are maintained on the bug tracker.\n\nReport issues there.\n\nTrapped chests render as a full block when in the inventory, but not when placed. [Bedrock Edition only ] [1] \u2191 MCPE-7990 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Tripwire Hook",
    "url": "https://minecraft.fandom.com/wiki/Tripwire_Hook",
    "content": "Tripwire Hook Tripwire Hook Powered Attached Powered Attached Renewable Yes Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Yes Flammable No Catches fire from lava No A tripwire hook is a block that emits a redstone signal when it is part of a valid tripwire circuit and it gets triggered by an entity.\n\nTripwire hooks can be broken instantly using any tool, or without a tool.\n\nA tripwire hook is also removed and drops itself as an item if: its attachment block is moved, removed, or destroyed.\n\nwater flows into its space in Java Edition.\n\na piston tries to push it or moves a block into its space.\n\nA tripwire hook is destroyed without dropping itself as an item if lava flows into its space.\n\nFour tripwire hooks are generated naturally in each jungle temple.\n\nTripwire hooks can be obtained as a \"junk\" item from fishing.\n\nTripwire hooks can be used as crafting ingredients or as redstone circuit components.\n\nTripwire hooks can be used to craft trapped chests and crossbows.\n\nSee also: Redstone circuit A tripwire hook can be used to detect mobs, items, and other entities over a large area.\n\nPlacement To place a tripwire hook, use the Place Block control.\n\nIn order to function correctly, a tripwire hook must be part of a \"tripwire circuit\": a straight line of blocks consisting of a block with a tripwire hook attached to it, a \"tripwire line\" (1 to 40 blocks of tripwire), and a second tripwire hook attached to another block, with both tripwire hooks facing the tripwire.\n\nTo place tripwire, use the Place Block control with a string.\n\nTripwire in a valid tripwire circuit has a short hitbox (0.09375 or 3/32 blocks high, with the bottom 0.0625 or 1/16 blocks above the block below), while tripwire not in a valid tripwire circuit has a taller hitbox (0.5 blocks high, bottom not raised).\n\nA tripwire hook in an invalid tripwire circuit appears \"folded\", while a tripwire hook in a valid tripwire circuit appears extended straight.\n\nTripwire lines from separate tripwire circuits can be placed next to each other (in parallel), above each other, and even intersecting each other.\n\nActivation A tripwire hook in a valid tripwire circuit activates when certain entities (players, mobs, items, etc.) intersect the tripwire hook's tripwire line \"hitbox\" (but not the tripwire hook itself), and deactivates when all entities leave or are removed from the tripwire line.\n\nEntities that cannot activate a tripwire circuit include thrown potions, some arrows, fireworks, thrown ender pearls, and thrown eyes of ender.\n\nA tripwire hook also activates for 5 redstone ticks (0.5 seconds, barring lag) when any of its tripwires are destroyed, except when shears are used to destroy the tripwire.\n\nBreaking the tripwire hook, or breaking the block it is attached to, does not generate a pulse.\n\nBehavior The tripwire hooks and the blocks they are attached to provide power, but the tripwire does not.\n\nWhile active, a tripwire hook appears to move downward and it: powers any adjacent redstone dust to power level 15, including beneath the tripwire hook powers any adjacent redstone comparators or redstone repeaters facing away from the tripwire hook to power level 15 strongly powers its attachment block to power level 15 activates any adjacent mechanism components, including above or below, such as pistons, redstone lamps, etc.\n\nTripwire produces no power itself, but its state change can be detected with an observer.\n\nAlthough destroying tripwire with shears cannot activate a tripwire hook, it changes the tripwire hook's block state (its \"attached\" state from true to false), which can be detected with an observer.\n\nMaster-level fletcher villagers have a 2 \u2044 3 chance to buy 8 tripwire hooks for an emerald as part of their trades in Java Edition, and always offer the trade in Bedrock Edition.\n\nJava Edition: \u2191 a b MC-177082 Bedrock Edition: \u2191 MCPE-169612 \u2014 Many blocks make very slightly different sounds to stone Java Edition: Bedrock Edition: Java Edition: Bedrock Edition: \u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nSee also: Block states Java Edition: Bedrock Edition: Note: This video does not show the tripwire hook obtained from fishing, or its crafting usage.\n\nThis section is missing information about Potential ring placement changes between powered and powered attached Check if the string was still dashed directly before 14w11a.\n\nPlease expand the section to include this information.\n\nFurther details may exist on the talk page.\n\nThe first image of tripwires released by Mojang.\n\nThe second image of tripwires released by Mojang.\n\nThe third image of tripwires released by Mojang.\n\nA comparison between a tripwire hook and a lever released by Mojang.\n\nIssues relating to \"Tripwire\" are maintained on the bug tracker.\n\nReport issues there.\n\nFirst location of tripwire hooks in jungle temple, setting of the dispenser trap in the background.\n\nSecond location of tripwire hooks in jungle temple, setting of the dispenser trap in the background.\n\nTripwire hook found in a chest inside pillager outpost.\n\n\u2191 \"I think I'm taking a big liking toward adventure maps.\n\nIt's starting to show in my choice of new blocks.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Experimenting with some new ideas.\n\nPerhaps one day we'll see a pair of shears inside every griefers' toolbox.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"That awkward moment when you realize you just spent the last few days unknowingly designing a coat hanger.\n\nhttps://dl.dropbox.com/u/36087083/ZScreen/2012-05/28-Monday--0196.126866331.png \u2026\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Haha, I kinda see how it looks like a doorbell, too.\n\nMaybe if you pull it a golem should come out and yell \"YOU RANG?\" https://dl.dropbox.com/u/36087083/ZScreen/2012-05/28-Monday--0197.486672066.png \u2026\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Some people have got it right already, so this should clear up all further confusion and spoil the next update for you https://dl.dropbox.com/u/36087083/ZScreen/2012-05/28-Monday--0198.158946456.png \u2026\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"It's a tripwire, yeah.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 \"Tripwire Experiments\" \u2013 Nathan Adams on YouTube, May 28, 3012 \u2191 \"Also, thanks to my wonderful fiancee @MissMarzenia for the idea.\n\nSeriously, all credit goes that way.\" \u2013 @Dinnerbone (Nathan Adams) on X, May 28, 2012 \u2191 MC-50948 \u2191 MC-146824 \u2191 MC-217629 \u2014 \"Tripwire hooks use stone sounds, rather than wood\" \u2014 resolved as \"Fixed\".\n\nTaking Inventory: Tripwire Hook \u2013 Minecraft.net on September 11, 2018 Redstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "Underwater TNT",
    "url": "https://minecraft.fandom.com/wiki/Underwater_TNT",
    "content": "This page describes an education-related feature.\n\nThis feature is available only in Minecraft Education or when enabling the \"Education\" option in Bedrock Edition.\n\nThis feature is exclusive to Bedrock Edition and Minecraft Education.\n\nUnderwater TNT Renewable No Stackable Yes (64) Tool Any tool Blast resistance 0 Hardness 0 Luminous No Transparent Partial Flammable Yes Catches fire from lava Yes Underwater TNT is a block that can be used by the player to initiate a controlled explosion underwater.\n\nUnderwater TNT can be broken instantly using any tool, or without a tool.\n\nHowever, primed underwater TNT cannot be broken, as it is an entity.\n\nMain article: TNT \u00a7 Usage Underwater TNT blocks can be activated the same way as a normal TNT block.\n\nOnce activated, it explodes like a normal TNT block.\n\nHowever, unlike the TNT block, it can destroy blocks underwater.\n\nIt can still explode in the air, although it does not work in lava.\n\nUnderwater TNT has the same delayed detonation rate as normal TNT.\n\n\u2191 ID of block's direct item form, which is used in savegame files and addons.\n\n\u2191 Available with / give command.\n\n\u2191 The block's direct item form has the same id as the block.\n\nThe inclusion of sodium is a reference to elemental sodium's explosive reaction with water.\n\nAll alkaline metals react with water violently to form hydrogen gas and a hydroxide.\n\nThe heat generated often ignites the gas.\n\nIssues relating to \"Underwater TNT\" are maintained on the bug tracker.\n\nReport issues there.\n\nRedstone View at: Template:Redstone/content [edit ] Entities View at: Template:Entities/content [edit ]",
    "category": "Mechanics"
  },
  {
    "title": "USB Charger Block",
    "url": "https://minecraft.fandom.com/wiki/USB_Charger_Block",
    "content": "This article documents an April Fools' joke.\n\nThis feature was exclusively part of a joke version and is not currently planned for addition to regular Minecraft.\n\nIt is documented here on the wiki due to being officially-released content by Mojang Studios, even if not present in a final version.\n\nThis feature is exclusive to Java Edition.\n\nUSB Charger Renewable Yes Stackable Yes (64) Tool Blast resistance 30 Hardness 3 Luminous No Transparent No Flammable No Catches fire from lava No The USB charger block was a joke block introduced in Java Edition 1.RV-Pre1.\n\nIt provided a redstone output like that of a block of redstone.\n\nUSB charger blocks require a pickaxe to mine, otherwise it drops nothing.\n\nUSB charger blocks output a constant signal strength of 15.\n\n\u2191 a b MC-177082 USB Charger Blocks are an unsupported item due to being an April Fools' joke, and therefore such issues relating to them will not be fixed.\n\nRedstone View at: Template:Redstone/content [edit ]",
    "category": "Mechanics"
  }
]